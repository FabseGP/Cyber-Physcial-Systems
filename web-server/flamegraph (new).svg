<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1702" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1685.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1685.00"> </text><svg id="frames" x="10" width="1180" total_samples="2642"><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0000%" y="1589" width="0.0379%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1599.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0000%" y="1573" width="0.0379%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1583.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0000%" y="1557" width="0.0379%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1567.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.04%)</title><rect x="0.0000%" y="1541" width="0.0379%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1551.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0000%" y="1525" width="0.0379%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1535.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0000%" y="1509" width="0.0379%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1519.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0000%" y="1493" width="0.0379%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1503.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0000%" y="1477" width="0.0379%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.0000%" y="1461" width="0.0379%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.0000%" y="1445" width="0.0379%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1455.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.15%)</title><rect x="0.0000%" y="1605" width="0.1514%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1615.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="0.0379%" y="1589" width="0.1136%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="3"/><text x="0.2879%" y="1599.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="0.0757%" y="1573" width="0.0757%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="2"/><text x="0.3257%" y="1583.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="0.0757%" y="1557" width="0.0757%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="2"/><text x="0.3257%" y="1567.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="0.0757%" y="1541" width="0.0757%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="2"/><text x="0.3257%" y="1551.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.23%)</title><rect x="0.0000%" y="1621" width="0.2271%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1631.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="0.1514%" y="1605" width="0.0757%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="2"/><text x="0.4014%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.1893%" y="1589" width="0.0379%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="0.4393%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.1893%" y="1573" width="0.0379%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="0.4393%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.1893%" y="1557" width="0.0379%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="0.4393%" y="1567.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="0.3407%" y="1573" width="0.0379%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="1"/><text x="0.5907%" y="1583.50"></text></g><g><title>__tunable_get_val (1 samples, 0.04%)</title><rect x="0.3407%" y="1557" width="0.0379%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="1"/><text x="0.5907%" y="1567.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="1.2112%" y="1509" width="0.0379%" height="15" fill="rgb(221,5,38)" fg:x="32" fg:w="1"/><text x="1.4612%" y="1519.50"></text></g><g><title>[libc.so.6] (27 samples, 1.02%)</title><rect x="0.2650%" y="1589" width="1.0220%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="27"/><text x="0.5150%" y="1599.50"></text></g><g><title>snprintf (24 samples, 0.91%)</title><rect x="0.3785%" y="1573" width="0.9084%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="24"/><text x="0.6285%" y="1583.50"></text></g><g><title>[libc.so.6] (21 samples, 0.79%)</title><rect x="0.4921%" y="1557" width="0.7949%" height="15" fill="rgb(249,31,29)" fg:x="13" fg:w="21"/><text x="0.7421%" y="1567.50"></text></g><g><title>[libc.so.6] (18 samples, 0.68%)</title><rect x="0.6056%" y="1541" width="0.6813%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="18"/><text x="0.8556%" y="1551.50"></text></g><g><title>[libc.so.6] (8 samples, 0.30%)</title><rect x="0.9841%" y="1525" width="0.3028%" height="15" fill="rgb(238,160,17)" fg:x="26" fg:w="8"/><text x="1.2341%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="1.2491%" y="1509" width="0.0379%" height="15" fill="rgb(214,148,48)" fg:x="33" fg:w="1"/><text x="1.4991%" y="1519.50"></text></g><g><title>[unknown] (17 samples, 0.64%)</title><rect x="1.2869%" y="1589" width="0.6435%" height="15" fill="rgb(232,36,49)" fg:x="34" fg:w="17"/><text x="1.5369%" y="1599.50"></text></g><g><title>[unknown] (15 samples, 0.57%)</title><rect x="1.3626%" y="1573" width="0.5678%" height="15" fill="rgb(209,103,24)" fg:x="36" fg:w="15"/><text x="1.6126%" y="1583.50"></text></g><g><title>[unknown] (11 samples, 0.42%)</title><rect x="1.5140%" y="1557" width="0.4164%" height="15" fill="rgb(229,88,8)" fg:x="40" fg:w="11"/><text x="1.7640%" y="1567.50"></text></g><g><title>[unknown] (7 samples, 0.26%)</title><rect x="1.6654%" y="1541" width="0.2650%" height="15" fill="rgb(213,181,19)" fg:x="44" fg:w="7"/><text x="1.9154%" y="1551.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="1.8547%" y="1525" width="0.0757%" height="15" fill="rgb(254,191,54)" fg:x="49" fg:w="2"/><text x="2.1047%" y="1535.50"></text></g><g><title>__ctype_init (1 samples, 0.04%)</title><rect x="1.9304%" y="1589" width="0.0379%" height="15" fill="rgb(241,83,37)" fg:x="51" fg:w="1"/><text x="2.1804%" y="1599.50"></text></g><g><title>_setjmp (1 samples, 0.04%)</title><rect x="1.9682%" y="1589" width="0.0379%" height="15" fill="rgb(233,36,39)" fg:x="52" fg:w="1"/><text x="2.2182%" y="1599.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.04%)</title><rect x="2.0061%" y="1573" width="0.0379%" height="15" fill="rgb(226,3,54)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1583.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.04%)</title><rect x="2.0061%" y="1557" width="0.0379%" height="15" fill="rgb(245,192,40)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1567.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.04%)</title><rect x="2.0061%" y="1541" width="0.0379%" height="15" fill="rgb(238,167,29)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1551.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (1 samples, 0.04%)</title><rect x="2.0061%" y="1525" width="0.0379%" height="15" fill="rgb(232,182,51)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1535.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::set_name (1 samples, 0.04%)</title><rect x="2.0061%" y="1509" width="0.0379%" height="15" fill="rgb(231,60,39)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1519.50"></text></g><g><title>pthread_setname_np (1 samples, 0.04%)</title><rect x="2.0061%" y="1493" width="0.0379%" height="15" fill="rgb(208,69,12)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1503.50"></text></g><g><title>prctl (1 samples, 0.04%)</title><rect x="2.0061%" y="1477" width="0.0379%" height="15" fill="rgb(235,93,37)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.0061%" y="1461" width="0.0379%" height="15" fill="rgb(213,116,39)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.0061%" y="1445" width="0.0379%" height="15" fill="rgb(222,207,29)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.0061%" y="1429" width="0.0379%" height="15" fill="rgb(206,96,30)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.0061%" y="1413" width="0.0379%" height="15" fill="rgb(218,138,4)" fg:x="53" fg:w="1"/><text x="2.2561%" y="1423.50"></text></g><g><title>sigaltstack (1 samples, 0.04%)</title><rect x="2.0439%" y="1541" width="0.0379%" height="15" fill="rgb(250,191,14)" fg:x="54" fg:w="1"/><text x="2.2939%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.0439%" y="1525" width="0.0379%" height="15" fill="rgb(239,60,40)" fg:x="54" fg:w="1"/><text x="2.2939%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.0439%" y="1509" width="0.0379%" height="15" fill="rgb(206,27,48)" fg:x="54" fg:w="1"/><text x="2.2939%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.0439%" y="1493" width="0.0379%" height="15" fill="rgb(225,35,8)" fg:x="54" fg:w="1"/><text x="2.2939%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.1196%" y="1445" width="0.0379%" height="15" fill="rgb(250,213,24)" fg:x="56" fg:w="1"/><text x="2.3696%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.1196%" y="1429" width="0.0379%" height="15" fill="rgb(247,123,22)" fg:x="56" fg:w="1"/><text x="2.3696%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.1196%" y="1413" width="0.0379%" height="15" fill="rgb(231,138,38)" fg:x="56" fg:w="1"/><text x="2.3696%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.1196%" y="1397" width="0.0379%" height="15" fill="rgb(231,145,46)" fg:x="56" fg:w="1"/><text x="2.3696%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.1196%" y="1381" width="0.0379%" height="15" fill="rgb(251,118,11)" fg:x="56" fg:w="1"/><text x="2.3696%" y="1391.50"></text></g><g><title>malloc (4 samples, 0.15%)</title><rect x="2.0818%" y="1509" width="0.1514%" height="15" fill="rgb(217,147,25)" fg:x="55" fg:w="4"/><text x="2.3318%" y="1519.50"></text></g><g><title>[libc.so.6] (4 samples, 0.15%)</title><rect x="2.0818%" y="1493" width="0.1514%" height="15" fill="rgb(247,81,37)" fg:x="55" fg:w="4"/><text x="2.3318%" y="1503.50"></text></g><g><title>[libc.so.6] (4 samples, 0.15%)</title><rect x="2.0818%" y="1477" width="0.1514%" height="15" fill="rgb(209,12,38)" fg:x="55" fg:w="4"/><text x="2.3318%" y="1487.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="2.1196%" y="1461" width="0.1136%" height="15" fill="rgb(227,1,9)" fg:x="56" fg:w="3"/><text x="2.3696%" y="1471.50"></text></g><g><title>__mmap (2 samples, 0.08%)</title><rect x="2.1575%" y="1445" width="0.0757%" height="15" fill="rgb(248,47,43)" fg:x="57" fg:w="2"/><text x="2.4075%" y="1455.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="2.1575%" y="1429" width="0.0757%" height="15" fill="rgb(221,10,30)" fg:x="57" fg:w="2"/><text x="2.4075%" y="1439.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="2.1575%" y="1413" width="0.0757%" height="15" fill="rgb(210,229,1)" fg:x="57" fg:w="2"/><text x="2.4075%" y="1423.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="2.1575%" y="1397" width="0.0757%" height="15" fill="rgb(222,148,37)" fg:x="57" fg:w="2"/><text x="2.4075%" y="1407.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="2.1575%" y="1381" width="0.0757%" height="15" fill="rgb(234,67,33)" fg:x="57" fg:w="2"/><text x="2.4075%" y="1391.50"></text></g><g><title>pthread_attr_init (1 samples, 0.04%)</title><rect x="2.2332%" y="1509" width="0.0379%" height="15" fill="rgb(247,98,35)" fg:x="59" fg:w="1"/><text x="2.4832%" y="1519.50"></text></g><g><title>__getpagesize (1 samples, 0.04%)</title><rect x="2.2332%" y="1493" width="0.0379%" height="15" fill="rgb(247,138,52)" fg:x="59" fg:w="1"/><text x="2.4832%" y="1503.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (6 samples, 0.23%)</title><rect x="2.0818%" y="1541" width="0.2271%" height="15" fill="rgb(213,79,30)" fg:x="55" fg:w="6"/><text x="2.3318%" y="1551.50"></text></g><g><title>pthread_getattr_np (6 samples, 0.23%)</title><rect x="2.0818%" y="1525" width="0.2271%" height="15" fill="rgb(246,177,23)" fg:x="55" fg:w="6"/><text x="2.3318%" y="1535.50"></text></g><g><title>pthread_getaffinity_np (1 samples, 0.04%)</title><rect x="2.2710%" y="1509" width="0.0379%" height="15" fill="rgb(230,62,27)" fg:x="60" fg:w="1"/><text x="2.5210%" y="1519.50"></text></g><g><title>[libc.so.6] (56 samples, 2.12%)</title><rect x="0.2271%" y="1621" width="2.1196%" height="15" fill="rgb(216,154,8)" fg:x="6" fg:w="56"/><text x="0.4771%" y="1631.50">[..</text></g><g><title>[libc.so.6] (56 samples, 2.12%)</title><rect x="0.2271%" y="1605" width="2.1196%" height="15" fill="rgb(244,35,45)" fg:x="6" fg:w="56"/><text x="0.4771%" y="1615.50">[..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (9 samples, 0.34%)</title><rect x="2.0061%" y="1589" width="0.3407%" height="15" fill="rgb(251,115,12)" fg:x="53" fg:w="9"/><text x="2.2561%" y="1599.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (8 samples, 0.30%)</title><rect x="2.0439%" y="1573" width="0.3028%" height="15" fill="rgb(240,54,50)" fg:x="54" fg:w="8"/><text x="2.2939%" y="1583.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (8 samples, 0.30%)</title><rect x="2.0439%" y="1557" width="0.3028%" height="15" fill="rgb(233,84,52)" fg:x="54" fg:w="8"/><text x="2.2939%" y="1567.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (1 samples, 0.04%)</title><rect x="2.3089%" y="1541" width="0.0379%" height="15" fill="rgb(207,117,47)" fg:x="61" fg:w="1"/><text x="2.5589%" y="1551.50"></text></g><g><title>__mmap (1 samples, 0.04%)</title><rect x="2.3089%" y="1525" width="0.0379%" height="15" fill="rgb(249,43,39)" fg:x="61" fg:w="1"/><text x="2.5589%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.3089%" y="1509" width="0.0379%" height="15" fill="rgb(209,38,44)" fg:x="61" fg:w="1"/><text x="2.5589%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.3089%" y="1493" width="0.0379%" height="15" fill="rgb(236,212,23)" fg:x="61" fg:w="1"/><text x="2.5589%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.3089%" y="1477" width="0.0379%" height="15" fill="rgb(242,79,21)" fg:x="61" fg:w="1"/><text x="2.5589%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.3089%" y="1461" width="0.0379%" height="15" fill="rgb(211,96,35)" fg:x="61" fg:w="1"/><text x="2.5589%" y="1471.50"></text></g><g><title>[unknown] (14 samples, 0.53%)</title><rect x="2.3467%" y="1621" width="0.5299%" height="15" fill="rgb(253,215,40)" fg:x="62" fg:w="14"/><text x="2.5967%" y="1631.50"></text></g><g><title>[unknown] (5 samples, 0.19%)</title><rect x="2.6874%" y="1605" width="0.1893%" height="15" fill="rgb(211,81,21)" fg:x="71" fg:w="5"/><text x="2.9374%" y="1615.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="2.8009%" y="1589" width="0.0757%" height="15" fill="rgb(208,190,38)" fg:x="74" fg:w="2"/><text x="3.0509%" y="1599.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="2.8009%" y="1573" width="0.0757%" height="15" fill="rgb(235,213,38)" fg:x="74" fg:w="2"/><text x="3.0509%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.8388%" y="1557" width="0.0379%" height="15" fill="rgb(237,122,38)" fg:x="75" fg:w="1"/><text x="3.0888%" y="1567.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run::_{{closure}} (1 samples, 0.04%)</title><rect x="2.8766%" y="1189" width="0.0379%" height="15" fill="rgb(244,218,35)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1199.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}} (1 samples, 0.04%)</title><rect x="2.8766%" y="1173" width="0.0379%" height="15" fill="rgb(240,68,47)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1183.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="2.8766%" y="1157" width="0.0379%" height="15" fill="rgb(210,16,53)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1167.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="2.8766%" y="1141" width="0.0379%" height="15" fill="rgb(235,124,12)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::listener::Acceptor&gt;::accept::_{{closure}} (1 samples, 0.04%)</title><rect x="2.8766%" y="1125" width="0.0379%" height="15" fill="rgb(224,169,11)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1135.50"></text></g><g><title>&lt;dyn poem::listener::DynAcceptor as poem::listener::Acceptor&gt;::accept::_{{closure}} (1 samples, 0.04%)</title><rect x="2.8766%" y="1109" width="0.0379%" height="15" fill="rgb(250,166,2)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="2.8766%" y="1093" width="0.0379%" height="15" fill="rgb(242,216,29)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1103.50"></text></g><g><title>&lt;poem::listener::ToDynAcceptor&lt;A&gt; as poem::listener::DynAcceptor&gt;::accept::_{{closure}} (1 samples, 0.04%)</title><rect x="2.8766%" y="1077" width="0.0379%" height="15" fill="rgb(230,116,27)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1087.50"></text></g><g><title>&lt;poem::listener::tcp::TcpAcceptor as poem::listener::Acceptor&gt;::accept::_{{closure}} (1 samples, 0.04%)</title><rect x="2.8766%" y="1061" width="0.0379%" height="15" fill="rgb(228,99,48)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1071.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::_{{closure}} (1 samples, 0.04%)</title><rect x="2.8766%" y="1045" width="0.0379%" height="15" fill="rgb(253,11,6)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1055.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::_{{closure}} (1 samples, 0.04%)</title><rect x="2.8766%" y="1029" width="0.0379%" height="15" fill="rgb(247,143,39)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1039.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="2.8766%" y="1013" width="0.0379%" height="15" fill="rgb(236,97,10)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1023.50"></text></g><g><title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="2.8766%" y="997" width="0.0379%" height="15" fill="rgb(233,208,19)" fg:x="76" fg:w="1"/><text x="3.1266%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="2.8766%" y="981" width="0.0379%" height="15" fill="rgb(216,164,2)" fg:x="76" fg:w="1"/><text x="3.1266%" y="991.50"></text></g><g><title>&lt;core::str::iter::MatchIndices&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.9145%" y="1125" width="0.0379%" height="15" fill="rgb(220,129,5)" fg:x="77" fg:w="1"/><text x="3.1645%" y="1135.50"></text></g><g><title>core::str::iter::MatchIndicesInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="2.9145%" y="1109" width="0.0379%" height="15" fill="rgb(242,17,10)" fg:x="77" fg:w="1"/><text x="3.1645%" y="1119.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="2.9145%" y="1093" width="0.0379%" height="15" fill="rgb(242,107,0)" fg:x="77" fg:w="1"/><text x="3.1645%" y="1103.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="2.9145%" y="1077" width="0.0379%" height="15" fill="rgb(251,28,31)" fg:x="77" fg:w="1"/><text x="3.1645%" y="1087.50"></text></g><g><title>fabseapi (79 samples, 2.99%)</title><rect x="0.0000%" y="1637" width="2.9902%" height="15" fill="rgb(233,223,10)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1647.50">fab..</text></g><g><title>_start (3 samples, 0.11%)</title><rect x="2.8766%" y="1621" width="0.1136%" height="15" fill="rgb(215,21,27)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1631.50"></text></g><g><title>__libc_start_main (3 samples, 0.11%)</title><rect x="2.8766%" y="1605" width="0.1136%" height="15" fill="rgb(232,23,21)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1615.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="2.8766%" y="1589" width="0.1136%" height="15" fill="rgb(244,5,23)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1599.50"></text></g><g><title>main (3 samples, 0.11%)</title><rect x="2.8766%" y="1573" width="0.1136%" height="15" fill="rgb(226,81,46)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1583.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.11%)</title><rect x="2.8766%" y="1557" width="0.1136%" height="15" fill="rgb(247,70,30)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.11%)</title><rect x="2.8766%" y="1541" width="0.1136%" height="15" fill="rgb(212,68,19)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1551.50"></text></g><g><title>std::panicking::try (3 samples, 0.11%)</title><rect x="2.8766%" y="1525" width="0.1136%" height="15" fill="rgb(240,187,13)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.11%)</title><rect x="2.8766%" y="1509" width="0.1136%" height="15" fill="rgb(223,113,26)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1519.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (3 samples, 0.11%)</title><rect x="2.8766%" y="1493" width="0.1136%" height="15" fill="rgb(206,192,2)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.11%)</title><rect x="2.8766%" y="1477" width="0.1136%" height="15" fill="rgb(241,108,4)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1487.50"></text></g><g><title>std::panicking::try (3 samples, 0.11%)</title><rect x="2.8766%" y="1461" width="0.1136%" height="15" fill="rgb(247,173,49)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.11%)</title><rect x="2.8766%" y="1445" width="0.1136%" height="15" fill="rgb(224,114,35)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1455.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.11%)</title><rect x="2.8766%" y="1429" width="0.1136%" height="15" fill="rgb(245,159,27)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1439.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.11%)</title><rect x="2.8766%" y="1413" width="0.1136%" height="15" fill="rgb(245,172,44)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1423.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.11%)</title><rect x="2.8766%" y="1397" width="0.1136%" height="15" fill="rgb(236,23,11)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.11%)</title><rect x="2.8766%" y="1381" width="0.1136%" height="15" fill="rgb(205,117,38)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1391.50"></text></g><g><title>fabseapi::main (3 samples, 0.11%)</title><rect x="2.8766%" y="1365" width="0.1136%" height="15" fill="rgb(237,72,25)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1375.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (3 samples, 0.11%)</title><rect x="2.8766%" y="1349" width="0.1136%" height="15" fill="rgb(244,70,9)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (3 samples, 0.11%)</title><rect x="2.8766%" y="1333" width="0.1136%" height="15" fill="rgb(217,125,39)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1343.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (3 samples, 0.11%)</title><rect x="2.8766%" y="1317" width="0.1136%" height="15" fill="rgb(235,36,10)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (3 samples, 0.11%)</title><rect x="2.8766%" y="1301" width="0.1136%" height="15" fill="rgb(251,123,47)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1311.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (3 samples, 0.11%)</title><rect x="2.8766%" y="1285" width="0.1136%" height="15" fill="rgb(221,13,13)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1295.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (3 samples, 0.11%)</title><rect x="2.8766%" y="1269" width="0.1136%" height="15" fill="rgb(238,131,9)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1279.50"></text></g><g><title>tokio::runtime::coop::budget (3 samples, 0.11%)</title><rect x="2.8766%" y="1253" width="0.1136%" height="15" fill="rgb(211,50,8)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1263.50"></text></g><g><title>tokio::runtime::coop::with_budget (3 samples, 0.11%)</title><rect x="2.8766%" y="1237" width="0.1136%" height="15" fill="rgb(245,182,24)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1247.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (3 samples, 0.11%)</title><rect x="2.8766%" y="1221" width="0.1136%" height="15" fill="rgb(242,14,37)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1231.50"></text></g><g><title>fabseapi::main::_{{closure}} (3 samples, 0.11%)</title><rect x="2.8766%" y="1205" width="0.1136%" height="15" fill="rgb(246,228,12)" fg:x="76" fg:w="3"/><text x="3.1266%" y="1215.50"></text></g><g><title>poem_openapi::openapi::OpenApiService&lt;T,W&gt;::swagger_ui (2 samples, 0.08%)</title><rect x="2.9145%" y="1189" width="0.0757%" height="15" fill="rgb(213,55,15)" fg:x="77" fg:w="2"/><text x="3.1645%" y="1199.50"></text></g><g><title>poem_openapi::ui::swagger_ui::create_endpoint (2 samples, 0.08%)</title><rect x="2.9145%" y="1173" width="0.0757%" height="15" fill="rgb(209,9,3)" fg:x="77" fg:w="2"/><text x="3.1645%" y="1183.50"></text></g><g><title>poem_openapi::ui::swagger_ui::create_html (2 samples, 0.08%)</title><rect x="2.9145%" y="1157" width="0.0757%" height="15" fill="rgb(230,59,30)" fg:x="77" fg:w="2"/><text x="3.1645%" y="1167.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (2 samples, 0.08%)</title><rect x="2.9145%" y="1141" width="0.0757%" height="15" fill="rgb(209,121,21)" fg:x="77" fg:w="2"/><text x="3.1645%" y="1151.50"></text></g><g><title>core::str::&lt;impl str&gt;::match_indices (1 samples, 0.04%)</title><rect x="2.9523%" y="1125" width="0.0379%" height="15" fill="rgb(220,109,13)" fg:x="78" fg:w="1"/><text x="3.2023%" y="1135.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.04%)</title><rect x="2.9523%" y="1109" width="0.0379%" height="15" fill="rgb(232,18,1)" fg:x="78" fg:w="1"/><text x="3.2023%" y="1119.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.04%)</title><rect x="2.9523%" y="1093" width="0.0379%" height="15" fill="rgb(215,41,42)" fg:x="78" fg:w="1"/><text x="3.2023%" y="1103.50"></text></g><g><title>fabseapi::Api::vehicle_insert::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1477" width="0.1136%" height="15" fill="rgb(224,123,36)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1487.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1461" width="0.1136%" height="15" fill="rgb(240,125,3)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1471.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="2.9902%" y="1445" width="0.1136%" height="15" fill="rgb(205,98,50)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1455.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="2.9902%" y="1429" width="0.1136%" height="15" fill="rgb(205,185,37)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1439.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.11%)</title><rect x="2.9902%" y="1413" width="0.1136%" height="15" fill="rgb(238,207,15)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="2.9902%" y="1397" width="0.1136%" height="15" fill="rgb(213,199,42)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="2.9902%" y="1381" width="0.1136%" height="15" fill="rgb(235,201,11)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1391.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.11%)</title><rect x="2.9902%" y="1365" width="0.1136%" height="15" fill="rgb(207,46,11)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="2.9902%" y="1349" width="0.1136%" height="15" fill="rgb(241,35,35)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1359.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="2.9902%" y="1333" width="0.1136%" height="15" fill="rgb(243,32,47)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1343.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (3 samples, 0.11%)</title><rect x="2.9902%" y="1317" width="0.1136%" height="15" fill="rgb(247,202,23)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1327.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="2.9902%" y="1301" width="0.1136%" height="15" fill="rgb(219,102,11)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="2.9902%" y="1285" width="0.1136%" height="15" fill="rgb(243,110,44)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1295.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1269" width="0.1136%" height="15" fill="rgb(222,74,54)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1279.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1253" width="0.1136%" height="15" fill="rgb(216,99,12)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1263.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1237" width="0.1136%" height="15" fill="rgb(226,22,26)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1247.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1221" width="0.1136%" height="15" fill="rgb(217,163,10)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1231.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="2.9902%" y="1205" width="0.1136%" height="15" fill="rgb(213,25,53)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1215.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1189" width="0.1136%" height="15" fill="rgb(252,105,26)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1199.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1173" width="0.1136%" height="15" fill="rgb(220,39,43)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1183.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1157" width="0.1136%" height="15" fill="rgb(229,68,48)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="2.9902%" y="1141" width="0.1136%" height="15" fill="rgb(252,8,32)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1151.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1125" width="0.1136%" height="15" fill="rgb(223,20,43)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1135.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1109" width="0.1136%" height="15" fill="rgb(229,81,49)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1119.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1093" width="0.1136%" height="15" fill="rgb(236,28,36)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1077" width="0.1136%" height="15" fill="rgb(249,185,26)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1087.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1061" width="0.1136%" height="15" fill="rgb(249,174,33)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1071.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1045" width="0.1136%" height="15" fill="rgb(233,201,37)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1055.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1029" width="0.1136%" height="15" fill="rgb(221,78,26)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1039.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (3 samples, 0.11%)</title><rect x="2.9902%" y="1013" width="0.1136%" height="15" fill="rgb(250,127,30)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1023.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="2.9902%" y="997" width="0.1136%" height="15" fill="rgb(230,49,44)" fg:x="79" fg:w="3"/><text x="3.2402%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (3 samples, 0.11%)</title><rect x="2.9902%" y="981" width="0.1136%" height="15" fill="rgb(229,67,23)" fg:x="79" fg:w="3"/><text x="3.2402%" y="991.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (3 samples, 0.11%)</title><rect x="2.9902%" y="965" width="0.1136%" height="15" fill="rgb(249,83,47)" fg:x="79" fg:w="3"/><text x="3.2402%" y="975.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (2 samples, 0.08%)</title><rect x="3.0280%" y="949" width="0.0757%" height="15" fill="rgb(215,43,3)" fg:x="80" fg:w="2"/><text x="3.2780%" y="959.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (2 samples, 0.08%)</title><rect x="3.0280%" y="933" width="0.0757%" height="15" fill="rgb(238,154,13)" fg:x="80" fg:w="2"/><text x="3.2780%" y="943.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (2 samples, 0.08%)</title><rect x="3.0280%" y="917" width="0.0757%" height="15" fill="rgb(219,56,2)" fg:x="80" fg:w="2"/><text x="3.2780%" y="927.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2 samples, 0.08%)</title><rect x="3.0280%" y="901" width="0.0757%" height="15" fill="rgb(233,0,4)" fg:x="80" fg:w="2"/><text x="3.2780%" y="911.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.08%)</title><rect x="3.0280%" y="885" width="0.0757%" height="15" fill="rgb(235,30,7)" fg:x="80" fg:w="2"/><text x="3.2780%" y="895.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2 samples, 0.08%)</title><rect x="3.0280%" y="869" width="0.0757%" height="15" fill="rgb(250,79,13)" fg:x="80" fg:w="2"/><text x="3.2780%" y="879.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (2 samples, 0.08%)</title><rect x="3.0280%" y="853" width="0.0757%" height="15" fill="rgb(211,146,34)" fg:x="80" fg:w="2"/><text x="3.2780%" y="863.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.08%)</title><rect x="3.0280%" y="837" width="0.0757%" height="15" fill="rgb(228,22,38)" fg:x="80" fg:w="2"/><text x="3.2780%" y="847.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.08%)</title><rect x="3.0280%" y="821" width="0.0757%" height="15" fill="rgb(235,168,5)" fg:x="80" fg:w="2"/><text x="3.2780%" y="831.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (2 samples, 0.08%)</title><rect x="3.0280%" y="805" width="0.0757%" height="15" fill="rgb(221,155,16)" fg:x="80" fg:w="2"/><text x="3.2780%" y="815.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (2 samples, 0.08%)</title><rect x="3.0280%" y="789" width="0.0757%" height="15" fill="rgb(215,215,53)" fg:x="80" fg:w="2"/><text x="3.2780%" y="799.50"></text></g><g><title>recv (2 samples, 0.08%)</title><rect x="3.0280%" y="773" width="0.0757%" height="15" fill="rgb(223,4,10)" fg:x="80" fg:w="2"/><text x="3.2780%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="3.0280%" y="757" width="0.0757%" height="15" fill="rgb(234,103,6)" fg:x="80" fg:w="2"/><text x="3.2780%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="3.0280%" y="741" width="0.0757%" height="15" fill="rgb(227,97,0)" fg:x="80" fg:w="2"/><text x="3.2780%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="3.0280%" y="725" width="0.0757%" height="15" fill="rgb(234,150,53)" fg:x="80" fg:w="2"/><text x="3.2780%" y="735.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="3.1037%" y="1253" width="0.0379%" height="15" fill="rgb(228,201,54)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1263.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (1 samples, 0.04%)</title><rect x="3.1037%" y="1237" width="0.0379%" height="15" fill="rgb(222,22,37)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1247.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="3.1037%" y="1221" width="0.0379%" height="15" fill="rgb(237,53,32)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="3.1037%" y="1205" width="0.0379%" height="15" fill="rgb(233,25,53)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1215.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1037%" y="1189" width="0.0379%" height="15" fill="rgb(210,40,34)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1199.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1037%" y="1173" width="0.0379%" height="15" fill="rgb(241,220,44)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1183.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1037%" y="1157" width="0.0379%" height="15" fill="rgb(235,28,35)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1167.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::ok (1 samples, 0.04%)</title><rect x="3.1037%" y="1141" width="0.0379%" height="15" fill="rgb(210,56,17)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1151.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode (1 samples, 0.04%)</title><rect x="3.1037%" y="1125" width="0.0379%" height="15" fill="rgb(224,130,29)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1135.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (1 samples, 0.04%)</title><rect x="3.1037%" y="1109" width="0.0379%" height="15" fill="rgb(235,212,8)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1119.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1037%" y="1093" width="0.0379%" height="15" fill="rgb(223,33,50)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="3.1037%" y="1077" width="0.0379%" height="15" fill="rgb(219,149,13)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1087.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1037%" y="1061" width="0.0379%" height="15" fill="rgb(250,156,29)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.04%)</title><rect x="3.1037%" y="1045" width="0.0379%" height="15" fill="rgb(216,193,19)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1055.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="3.1037%" y="1029" width="0.0379%" height="15" fill="rgb(216,135,14)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1039.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1037%" y="1013" width="0.0379%" height="15" fill="rgb(241,47,5)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1023.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1037%" y="997" width="0.0379%" height="15" fill="rgb(233,42,35)" fg:x="82" fg:w="1"/><text x="3.3537%" y="1007.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1037%" y="981" width="0.0379%" height="15" fill="rgb(231,13,6)" fg:x="82" fg:w="1"/><text x="3.3537%" y="991.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1037%" y="965" width="0.0379%" height="15" fill="rgb(207,181,40)" fg:x="82" fg:w="1"/><text x="3.3537%" y="975.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::drain (1 samples, 0.04%)</title><rect x="3.1037%" y="949" width="0.0379%" height="15" fill="rgb(254,173,49)" fg:x="82" fg:w="1"/><text x="3.3537%" y="959.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (1 samples, 0.04%)</title><rect x="3.1037%" y="933" width="0.0379%" height="15" fill="rgb(221,1,38)" fg:x="82" fg:w="1"/><text x="3.3537%" y="943.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (1 samples, 0.04%)</title><rect x="3.1037%" y="917" width="0.0379%" height="15" fill="rgb(206,124,46)" fg:x="82" fg:w="1"/><text x="3.3537%" y="927.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="3.1037%" y="901" width="0.0379%" height="15" fill="rgb(249,21,11)" fg:x="82" fg:w="1"/><text x="3.3537%" y="911.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1037%" y="885" width="0.0379%" height="15" fill="rgb(222,201,40)" fg:x="82" fg:w="1"/><text x="3.3537%" y="895.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (1 samples, 0.04%)</title><rect x="3.1037%" y="869" width="0.0379%" height="15" fill="rgb(235,61,29)" fg:x="82" fg:w="1"/><text x="3.3537%" y="879.50"></text></g><g><title>recv (1 samples, 0.04%)</title><rect x="3.1037%" y="853" width="0.0379%" height="15" fill="rgb(219,207,3)" fg:x="82" fg:w="1"/><text x="3.3537%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="3.1037%" y="837" width="0.0379%" height="15" fill="rgb(222,56,46)" fg:x="82" fg:w="1"/><text x="3.3537%" y="847.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="3.1416%" y="997" width="0.0379%" height="15" fill="rgb(239,76,54)" fg:x="83" fg:w="1"/><text x="3.3916%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (1 samples, 0.04%)</title><rect x="3.1416%" y="981" width="0.0379%" height="15" fill="rgb(231,124,27)" fg:x="83" fg:w="1"/><text x="3.3916%" y="991.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (1 samples, 0.04%)</title><rect x="3.1416%" y="965" width="0.0379%" height="15" fill="rgb(249,195,6)" fg:x="83" fg:w="1"/><text x="3.3916%" y="975.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (1 samples, 0.04%)</title><rect x="3.1416%" y="949" width="0.0379%" height="15" fill="rgb(237,174,47)" fg:x="83" fg:w="1"/><text x="3.3916%" y="959.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="3.1416%" y="933" width="0.0379%" height="15" fill="rgb(206,201,31)" fg:x="83" fg:w="1"/><text x="3.3916%" y="943.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (1 samples, 0.04%)</title><rect x="3.1416%" y="917" width="0.0379%" height="15" fill="rgb(231,57,52)" fg:x="83" fg:w="1"/><text x="3.3916%" y="927.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.04%)</title><rect x="3.1416%" y="901" width="0.0379%" height="15" fill="rgb(248,177,22)" fg:x="83" fg:w="1"/><text x="3.3916%" y="911.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.04%)</title><rect x="3.1416%" y="885" width="0.0379%" height="15" fill="rgb(215,211,37)" fg:x="83" fg:w="1"/><text x="3.3916%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.23%)</title><rect x="2.9902%" y="1557" width="0.2271%" height="15" fill="rgb(241,128,51)" fg:x="79" fg:w="6"/><text x="3.2402%" y="1567.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.23%)</title><rect x="2.9902%" y="1541" width="0.2271%" height="15" fill="rgb(227,165,31)" fg:x="79" fg:w="6"/><text x="3.2402%" y="1551.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.23%)</title><rect x="2.9902%" y="1525" width="0.2271%" height="15" fill="rgb(228,167,24)" fg:x="79" fg:w="6"/><text x="3.2402%" y="1535.50"></text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.23%)</title><rect x="2.9902%" y="1509" width="0.2271%" height="15" fill="rgb(228,143,12)" fg:x="79" fg:w="6"/><text x="3.2402%" y="1519.50"></text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (6 samples, 0.23%)</title><rect x="2.9902%" y="1493" width="0.2271%" height="15" fill="rgb(249,149,8)" fg:x="79" fg:w="6"/><text x="3.2402%" y="1503.50"></text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (3 samples, 0.11%)</title><rect x="3.1037%" y="1477" width="0.1136%" height="15" fill="rgb(243,35,44)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1487.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="3.1037%" y="1461" width="0.1136%" height="15" fill="rgb(246,89,9)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1471.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="3.1037%" y="1445" width="0.1136%" height="15" fill="rgb(233,213,13)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1455.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="3.1037%" y="1429" width="0.1136%" height="15" fill="rgb(233,141,41)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1439.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="3.1037%" y="1413" width="0.1136%" height="15" fill="rgb(239,167,4)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1423.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.11%)</title><rect x="3.1037%" y="1397" width="0.1136%" height="15" fill="rgb(209,217,16)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1407.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="3.1037%" y="1381" width="0.1136%" height="15" fill="rgb(219,88,35)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1391.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="3.1037%" y="1365" width="0.1136%" height="15" fill="rgb(220,193,23)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="3.1037%" y="1349" width="0.1136%" height="15" fill="rgb(230,90,52)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1359.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="3.1037%" y="1333" width="0.1136%" height="15" fill="rgb(252,106,19)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1343.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (3 samples, 0.11%)</title><rect x="3.1037%" y="1317" width="0.1136%" height="15" fill="rgb(206,74,20)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1327.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="3.1037%" y="1301" width="0.1136%" height="15" fill="rgb(230,138,44)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="3.1037%" y="1285" width="0.1136%" height="15" fill="rgb(235,182,43)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1295.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (3 samples, 0.11%)</title><rect x="3.1037%" y="1269" width="0.1136%" height="15" fill="rgb(242,16,51)" fg:x="82" fg:w="3"/><text x="3.3537%" y="1279.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1253" width="0.0757%" height="15" fill="rgb(248,9,4)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1263.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1237" width="0.0757%" height="15" fill="rgb(210,31,22)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1247.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1221" width="0.0757%" height="15" fill="rgb(239,54,39)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1231.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="3.1416%" y="1205" width="0.0757%" height="15" fill="rgb(230,99,41)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1215.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1189" width="0.0757%" height="15" fill="rgb(253,106,12)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1199.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1173" width="0.0757%" height="15" fill="rgb(213,46,41)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1183.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1157" width="0.0757%" height="15" fill="rgb(215,133,35)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="3.1416%" y="1141" width="0.0757%" height="15" fill="rgb(213,28,5)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1151.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1125" width="0.0757%" height="15" fill="rgb(215,77,49)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1135.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1109" width="0.0757%" height="15" fill="rgb(248,100,22)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1119.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1093" width="0.0757%" height="15" fill="rgb(208,67,9)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1077" width="0.0757%" height="15" fill="rgb(219,133,21)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1087.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1061" width="0.0757%" height="15" fill="rgb(246,46,29)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1071.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1045" width="0.0757%" height="15" fill="rgb(246,185,52)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1055.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1029" width="0.0757%" height="15" fill="rgb(252,136,11)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1039.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (2 samples, 0.08%)</title><rect x="3.1416%" y="1013" width="0.0757%" height="15" fill="rgb(219,138,53)" fg:x="83" fg:w="2"/><text x="3.3916%" y="1023.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::advance (1 samples, 0.04%)</title><rect x="3.1794%" y="997" width="0.0379%" height="15" fill="rgb(211,51,23)" fg:x="84" fg:w="1"/><text x="3.4294%" y="1007.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.04%)</title><rect x="3.1794%" y="981" width="0.0379%" height="15" fill="rgb(247,221,28)" fg:x="84" fg:w="1"/><text x="3.4294%" y="991.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (1 samples, 0.04%)</title><rect x="3.1794%" y="965" width="0.0379%" height="15" fill="rgb(251,222,45)" fg:x="84" fg:w="1"/><text x="3.4294%" y="975.50"></text></g><g><title>bytes::bytes_mut::increment_shared (1 samples, 0.04%)</title><rect x="3.1794%" y="949" width="0.0379%" height="15" fill="rgb(217,162,53)" fg:x="84" fg:w="1"/><text x="3.4294%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::web::json::Json&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt;&gt; (15 samples, 0.57%)</title><rect x="3.2173%" y="1221" width="0.5678%" height="15" fill="rgb(229,93,14)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (15 samples, 0.57%)</title><rect x="3.2173%" y="1205" width="0.5678%" height="15" fill="rgb(209,67,49)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 0.57%)</title><rect x="3.2173%" y="1189" width="0.5678%" height="15" fill="rgb(213,87,29)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (15 samples, 0.57%)</title><rect x="3.2173%" y="1173" width="0.5678%" height="15" fill="rgb(205,151,52)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.57%)</title><rect x="3.2173%" y="1157" width="0.5678%" height="15" fill="rgb(253,215,39)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (15 samples, 0.57%)</title><rect x="3.2173%" y="1141" width="0.5678%" height="15" fill="rgb(221,220,41)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 0.57%)</title><rect x="3.2173%" y="1125" width="0.5678%" height="15" fill="rgb(218,133,21)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 0.57%)</title><rect x="3.2173%" y="1109" width="0.5678%" height="15" fill="rgb(221,193,43)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 0.57%)</title><rect x="3.2173%" y="1093" width="0.5678%" height="15" fill="rgb(240,128,52)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.57%)</title><rect x="3.2173%" y="1077" width="0.5678%" height="15" fill="rgb(253,114,12)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1087.50"></text></g><g><title>core::mem::drop (15 samples, 0.57%)</title><rect x="3.2173%" y="1061" width="0.5678%" height="15" fill="rgb(215,223,47)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 0.57%)</title><rect x="3.2173%" y="1045" width="0.5678%" height="15" fill="rgb(248,225,23)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.57%)</title><rect x="3.2173%" y="1029" width="0.5678%" height="15" fill="rgb(250,108,0)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 samples, 0.57%)</title><rect x="3.2173%" y="1013" width="0.5678%" height="15" fill="rgb(228,208,7)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (15 samples, 0.57%)</title><rect x="3.2173%" y="997" width="0.5678%" height="15" fill="rgb(244,45,10)" fg:x="85" fg:w="15"/><text x="3.4673%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (15 samples, 0.57%)</title><rect x="3.2173%" y="981" width="0.5678%" height="15" fill="rgb(207,125,25)" fg:x="85" fg:w="15"/><text x="3.4673%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (15 samples, 0.57%)</title><rect x="3.2173%" y="965" width="0.5678%" height="15" fill="rgb(210,195,18)" fg:x="85" fg:w="15"/><text x="3.4673%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.57%)</title><rect x="3.2173%" y="949" width="0.5678%" height="15" fill="rgb(249,80,12)" fg:x="85" fg:w="15"/><text x="3.4673%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.57%)</title><rect x="3.2173%" y="933" width="0.5678%" height="15" fill="rgb(221,65,9)" fg:x="85" fg:w="15"/><text x="3.4673%" y="943.50"></text></g><g><title>__rdl_dealloc (15 samples, 0.57%)</title><rect x="3.2173%" y="917" width="0.5678%" height="15" fill="rgb(235,49,36)" fg:x="85" fg:w="15"/><text x="3.4673%" y="927.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (15 samples, 0.57%)</title><rect x="3.2173%" y="901" width="0.5678%" height="15" fill="rgb(225,32,20)" fg:x="85" fg:w="15"/><text x="3.4673%" y="911.50"></text></g><g><title>cfree (15 samples, 0.57%)</title><rect x="3.2173%" y="885" width="0.5678%" height="15" fill="rgb(215,141,46)" fg:x="85" fg:w="15"/><text x="3.4673%" y="895.50"></text></g><g><title>[libc.so.6] (15 samples, 0.57%)</title><rect x="3.2173%" y="869" width="0.5678%" height="15" fill="rgb(250,160,47)" fg:x="85" fg:w="15"/><text x="3.4673%" y="879.50"></text></g><g><title>[libc.so.6] (9 samples, 0.34%)</title><rect x="3.4444%" y="853" width="0.3407%" height="15" fill="rgb(216,222,40)" fg:x="91" fg:w="9"/><text x="3.6944%" y="863.50"></text></g><g><title>[libc.so.6] (8 samples, 0.30%)</title><rect x="3.4822%" y="837" width="0.3028%" height="15" fill="rgb(234,217,39)" fg:x="92" fg:w="8"/><text x="3.7322%" y="847.50"></text></g><g><title>serde_json::ser::Formatter::end_string (3 samples, 0.11%)</title><rect x="3.7850%" y="901" width="0.1136%" height="15" fill="rgb(207,178,40)" fg:x="100" fg:w="3"/><text x="4.0350%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.11%)</title><rect x="3.7850%" y="885" width="0.1136%" height="15" fill="rgb(221,136,13)" fg:x="100" fg:w="3"/><text x="4.0350%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.11%)</title><rect x="3.7850%" y="869" width="0.1136%" height="15" fill="rgb(249,199,10)" fg:x="100" fg:w="3"/><text x="4.0350%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.11%)</title><rect x="3.7850%" y="853" width="0.1136%" height="15" fill="rgb(249,222,13)" fg:x="100" fg:w="3"/><text x="4.0350%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.11%)</title><rect x="3.7850%" y="837" width="0.1136%" height="15" fill="rgb(244,185,38)" fg:x="100" fg:w="3"/><text x="4.0350%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.11%)</title><rect x="3.7850%" y="821" width="0.1136%" height="15" fill="rgb(236,202,9)" fg:x="100" fg:w="3"/><text x="4.0350%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.11%)</title><rect x="3.7850%" y="805" width="0.1136%" height="15" fill="rgb(250,229,37)" fg:x="100" fg:w="3"/><text x="4.0350%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.11%)</title><rect x="3.7850%" y="789" width="0.1136%" height="15" fill="rgb(206,174,23)" fg:x="100" fg:w="3"/><text x="4.0350%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.11%)</title><rect x="3.7850%" y="773" width="0.1136%" height="15" fill="rgb(211,33,43)" fg:x="100" fg:w="3"/><text x="4.0350%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.11%)</title><rect x="3.7850%" y="757" width="0.1136%" height="15" fill="rgb(245,58,50)" fg:x="100" fg:w="3"/><text x="4.0350%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.11%)</title><rect x="3.7850%" y="741" width="0.1136%" height="15" fill="rgb(244,68,36)" fg:x="100" fg:w="3"/><text x="4.0350%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.11%)</title><rect x="3.7850%" y="725" width="0.1136%" height="15" fill="rgb(232,229,15)" fg:x="100" fg:w="3"/><text x="4.0350%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.11%)</title><rect x="3.7850%" y="709" width="0.1136%" height="15" fill="rgb(254,30,23)" fg:x="100" fg:w="3"/><text x="4.0350%" y="719.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.11%)</title><rect x="3.7850%" y="693" width="0.1136%" height="15" fill="rgb(235,160,14)" fg:x="100" fg:w="3"/><text x="4.0350%" y="703.50"></text></g><g><title>__rdl_realloc (3 samples, 0.11%)</title><rect x="3.7850%" y="677" width="0.1136%" height="15" fill="rgb(212,155,44)" fg:x="100" fg:w="3"/><text x="4.0350%" y="687.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.11%)</title><rect x="3.7850%" y="661" width="0.1136%" height="15" fill="rgb(226,2,50)" fg:x="100" fg:w="3"/><text x="4.0350%" y="671.50"></text></g><g><title>realloc (3 samples, 0.11%)</title><rect x="3.7850%" y="645" width="0.1136%" height="15" fill="rgb(234,177,6)" fg:x="100" fg:w="3"/><text x="4.0350%" y="655.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="3.7850%" y="629" width="0.1136%" height="15" fill="rgb(217,24,9)" fg:x="100" fg:w="3"/><text x="4.0350%" y="639.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="3.7850%" y="613" width="0.1136%" height="15" fill="rgb(220,13,46)" fg:x="100" fg:w="3"/><text x="4.0350%" y="623.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (5 samples, 0.19%)</title><rect x="3.7850%" y="981" width="0.1893%" height="15" fill="rgb(239,221,27)" fg:x="100" fg:w="5"/><text x="4.0350%" y="991.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (5 samples, 0.19%)</title><rect x="3.7850%" y="965" width="0.1893%" height="15" fill="rgb(222,198,25)" fg:x="100" fg:w="5"/><text x="4.0350%" y="975.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (5 samples, 0.19%)</title><rect x="3.7850%" y="949" width="0.1893%" height="15" fill="rgb(211,99,13)" fg:x="100" fg:w="5"/><text x="4.0350%" y="959.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (5 samples, 0.19%)</title><rect x="3.7850%" y="933" width="0.1893%" height="15" fill="rgb(232,111,31)" fg:x="100" fg:w="5"/><text x="4.0350%" y="943.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.19%)</title><rect x="3.7850%" y="917" width="0.1893%" height="15" fill="rgb(245,82,37)" fg:x="100" fg:w="5"/><text x="4.0350%" y="927.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (2 samples, 0.08%)</title><rect x="3.8986%" y="901" width="0.0757%" height="15" fill="rgb(227,149,46)" fg:x="103" fg:w="2"/><text x="4.1486%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (2 samples, 0.08%)</title><rect x="3.8986%" y="885" width="0.0757%" height="15" fill="rgb(218,36,50)" fg:x="103" fg:w="2"/><text x="4.1486%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.08%)</title><rect x="3.8986%" y="869" width="0.0757%" height="15" fill="rgb(226,80,48)" fg:x="103" fg:w="2"/><text x="4.1486%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.08%)</title><rect x="3.8986%" y="853" width="0.0757%" height="15" fill="rgb(238,224,15)" fg:x="103" fg:w="2"/><text x="4.1486%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.08%)</title><rect x="3.8986%" y="837" width="0.0757%" height="15" fill="rgb(241,136,10)" fg:x="103" fg:w="2"/><text x="4.1486%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.08%)</title><rect x="3.8986%" y="821" width="0.0757%" height="15" fill="rgb(208,32,45)" fg:x="103" fg:w="2"/><text x="4.1486%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.08%)</title><rect x="3.8986%" y="805" width="0.0757%" height="15" fill="rgb(207,135,9)" fg:x="103" fg:w="2"/><text x="4.1486%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="3.8986%" y="789" width="0.0757%" height="15" fill="rgb(206,86,44)" fg:x="103" fg:w="2"/><text x="4.1486%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="3.8986%" y="773" width="0.0757%" height="15" fill="rgb(245,177,15)" fg:x="103" fg:w="2"/><text x="4.1486%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.08%)</title><rect x="3.8986%" y="757" width="0.0757%" height="15" fill="rgb(206,64,50)" fg:x="103" fg:w="2"/><text x="4.1486%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.08%)</title><rect x="3.8986%" y="741" width="0.0757%" height="15" fill="rgb(234,36,40)" fg:x="103" fg:w="2"/><text x="4.1486%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.08%)</title><rect x="3.8986%" y="725" width="0.0757%" height="15" fill="rgb(213,64,8)" fg:x="103" fg:w="2"/><text x="4.1486%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.08%)</title><rect x="3.8986%" y="709" width="0.0757%" height="15" fill="rgb(210,75,36)" fg:x="103" fg:w="2"/><text x="4.1486%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.08%)</title><rect x="3.8986%" y="693" width="0.0757%" height="15" fill="rgb(229,88,21)" fg:x="103" fg:w="2"/><text x="4.1486%" y="703.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.08%)</title><rect x="3.8986%" y="677" width="0.0757%" height="15" fill="rgb(252,204,47)" fg:x="103" fg:w="2"/><text x="4.1486%" y="687.50"></text></g><g><title>__rdl_realloc (2 samples, 0.08%)</title><rect x="3.8986%" y="661" width="0.0757%" height="15" fill="rgb(208,77,27)" fg:x="103" fg:w="2"/><text x="4.1486%" y="671.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.08%)</title><rect x="3.8986%" y="645" width="0.0757%" height="15" fill="rgb(221,76,26)" fg:x="103" fg:w="2"/><text x="4.1486%" y="655.50"></text></g><g><title>realloc (2 samples, 0.08%)</title><rect x="3.8986%" y="629" width="0.0757%" height="15" fill="rgb(225,139,18)" fg:x="103" fg:w="2"/><text x="4.1486%" y="639.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="3.8986%" y="613" width="0.0757%" height="15" fill="rgb(230,137,11)" fg:x="103" fg:w="2"/><text x="4.1486%" y="623.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="3.8986%" y="597" width="0.0757%" height="15" fill="rgb(212,28,1)" fg:x="103" fg:w="2"/><text x="4.1486%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.04%)</title><rect x="3.9743%" y="965" width="0.0379%" height="15" fill="rgb(248,164,17)" fg:x="105" fg:w="1"/><text x="4.2243%" y="975.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.04%)</title><rect x="3.9743%" y="949" width="0.0379%" height="15" fill="rgb(222,171,42)" fg:x="105" fg:w="1"/><text x="4.2243%" y="959.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.04%)</title><rect x="3.9743%" y="933" width="0.0379%" height="15" fill="rgb(243,84,45)" fg:x="105" fg:w="1"/><text x="4.2243%" y="943.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.04%)</title><rect x="3.9743%" y="917" width="0.0379%" height="15" fill="rgb(252,49,23)" fg:x="105" fg:w="1"/><text x="4.2243%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.04%)</title><rect x="3.9743%" y="901" width="0.0379%" height="15" fill="rgb(215,19,7)" fg:x="105" fg:w="1"/><text x="4.2243%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.04%)</title><rect x="3.9743%" y="885" width="0.0379%" height="15" fill="rgb(238,81,41)" fg:x="105" fg:w="1"/><text x="4.2243%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="3.9743%" y="869" width="0.0379%" height="15" fill="rgb(210,199,37)" fg:x="105" fg:w="1"/><text x="4.2243%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="3.9743%" y="853" width="0.0379%" height="15" fill="rgb(244,192,49)" fg:x="105" fg:w="1"/><text x="4.2243%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="3.9743%" y="837" width="0.0379%" height="15" fill="rgb(226,211,11)" fg:x="105" fg:w="1"/><text x="4.2243%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="3.9743%" y="821" width="0.0379%" height="15" fill="rgb(236,162,54)" fg:x="105" fg:w="1"/><text x="4.2243%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="3.9743%" y="805" width="0.0379%" height="15" fill="rgb(220,229,9)" fg:x="105" fg:w="1"/><text x="4.2243%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="3.9743%" y="789" width="0.0379%" height="15" fill="rgb(250,87,22)" fg:x="105" fg:w="1"/><text x="4.2243%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="3.9743%" y="773" width="0.0379%" height="15" fill="rgb(239,43,17)" fg:x="105" fg:w="1"/><text x="4.2243%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="3.9743%" y="757" width="0.0379%" height="15" fill="rgb(231,177,25)" fg:x="105" fg:w="1"/><text x="4.2243%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="3.9743%" y="741" width="0.0379%" height="15" fill="rgb(219,179,1)" fg:x="105" fg:w="1"/><text x="4.2243%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="3.9743%" y="725" width="0.0379%" height="15" fill="rgb(238,219,53)" fg:x="105" fg:w="1"/><text x="4.2243%" y="735.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="3.9743%" y="709" width="0.0379%" height="15" fill="rgb(232,167,36)" fg:x="105" fg:w="1"/><text x="4.2243%" y="719.50"></text></g><g><title>__rdl_realloc (1 samples, 0.04%)</title><rect x="3.9743%" y="693" width="0.0379%" height="15" fill="rgb(244,19,51)" fg:x="105" fg:w="1"/><text x="4.2243%" y="703.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.04%)</title><rect x="3.9743%" y="677" width="0.0379%" height="15" fill="rgb(224,6,22)" fg:x="105" fg:w="1"/><text x="4.2243%" y="687.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="3.9743%" y="661" width="0.0379%" height="15" fill="rgb(224,145,5)" fg:x="105" fg:w="1"/><text x="4.2243%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="3.9743%" y="645" width="0.0379%" height="15" fill="rgb(234,130,49)" fg:x="105" fg:w="1"/><text x="4.2243%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="3.9743%" y="629" width="0.0379%" height="15" fill="rgb(254,6,2)" fg:x="105" fg:w="1"/><text x="4.2243%" y="639.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.04%)</title><rect x="4.0121%" y="965" width="0.0379%" height="15" fill="rgb(208,96,46)" fg:x="106" fg:w="1"/><text x="4.2621%" y="975.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.04%)</title><rect x="4.0121%" y="949" width="0.0379%" height="15" fill="rgb(239,3,39)" fg:x="106" fg:w="1"/><text x="4.2621%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.04%)</title><rect x="4.0121%" y="933" width="0.0379%" height="15" fill="rgb(233,210,1)" fg:x="106" fg:w="1"/><text x="4.2621%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="4.0121%" y="917" width="0.0379%" height="15" fill="rgb(244,137,37)" fg:x="106" fg:w="1"/><text x="4.2621%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="4.0121%" y="901" width="0.0379%" height="15" fill="rgb(240,136,2)" fg:x="106" fg:w="1"/><text x="4.2621%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="4.0121%" y="885" width="0.0379%" height="15" fill="rgb(239,18,37)" fg:x="106" fg:w="1"/><text x="4.2621%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="4.0121%" y="869" width="0.0379%" height="15" fill="rgb(218,185,22)" fg:x="106" fg:w="1"/><text x="4.2621%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="4.0121%" y="853" width="0.0379%" height="15" fill="rgb(225,218,4)" fg:x="106" fg:w="1"/><text x="4.2621%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="4.0121%" y="837" width="0.0379%" height="15" fill="rgb(230,182,32)" fg:x="106" fg:w="1"/><text x="4.2621%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="4.0121%" y="821" width="0.0379%" height="15" fill="rgb(242,56,43)" fg:x="106" fg:w="1"/><text x="4.2621%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="4.0121%" y="805" width="0.0379%" height="15" fill="rgb(233,99,24)" fg:x="106" fg:w="1"/><text x="4.2621%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="4.0121%" y="789" width="0.0379%" height="15" fill="rgb(234,209,42)" fg:x="106" fg:w="1"/><text x="4.2621%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="4.0121%" y="773" width="0.0379%" height="15" fill="rgb(227,7,12)" fg:x="106" fg:w="1"/><text x="4.2621%" y="783.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="4.0121%" y="757" width="0.0379%" height="15" fill="rgb(245,203,43)" fg:x="106" fg:w="1"/><text x="4.2621%" y="767.50"></text></g><g><title>__rdl_realloc (1 samples, 0.04%)</title><rect x="4.0121%" y="741" width="0.0379%" height="15" fill="rgb(238,205,33)" fg:x="106" fg:w="1"/><text x="4.2621%" y="751.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.04%)</title><rect x="4.0121%" y="725" width="0.0379%" height="15" fill="rgb(231,56,7)" fg:x="106" fg:w="1"/><text x="4.2621%" y="735.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="4.0121%" y="709" width="0.0379%" height="15" fill="rgb(244,186,29)" fg:x="106" fg:w="1"/><text x="4.2621%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="4.0121%" y="693" width="0.0379%" height="15" fill="rgb(234,111,31)" fg:x="106" fg:w="1"/><text x="4.2621%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="4.0121%" y="677" width="0.0379%" height="15" fill="rgb(241,149,10)" fg:x="106" fg:w="1"/><text x="4.2621%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (23 samples, 0.87%)</title><rect x="3.2173%" y="1285" width="0.8706%" height="15" fill="rgb(249,206,44)" fg:x="85" fg:w="23"/><text x="3.4673%" y="1295.50"></text></g><g><title>core::ops::function::FnOnce::call_once (23 samples, 0.87%)</title><rect x="3.2173%" y="1269" width="0.8706%" height="15" fill="rgb(251,153,30)" fg:x="85" fg:w="23"/><text x="3.4673%" y="1279.50"></text></g><g><title>&lt;poem_openapi::payload::json::Json&lt;T&gt; as poem::web::IntoResponse&gt;::into_response (23 samples, 0.87%)</title><rect x="3.2173%" y="1253" width="0.8706%" height="15" fill="rgb(239,152,38)" fg:x="85" fg:w="23"/><text x="3.4673%" y="1263.50"></text></g><g><title>&lt;poem::web::json::Json&lt;T&gt; as poem::web::IntoResponse&gt;::into_response (23 samples, 0.87%)</title><rect x="3.2173%" y="1237" width="0.8706%" height="15" fill="rgb(249,139,47)" fg:x="85" fg:w="23"/><text x="3.4673%" y="1247.50"></text></g><g><title>serde_json::ser::to_vec (8 samples, 0.30%)</title><rect x="3.7850%" y="1221" width="0.3028%" height="15" fill="rgb(244,64,35)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1231.50"></text></g><g><title>serde_json::ser::to_writer (8 samples, 0.30%)</title><rect x="3.7850%" y="1205" width="0.3028%" height="15" fill="rgb(216,46,15)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1215.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (8 samples, 0.30%)</title><rect x="3.7850%" y="1189" width="0.3028%" height="15" fill="rgb(250,74,19)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1199.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (8 samples, 0.30%)</title><rect x="3.7850%" y="1173" width="0.3028%" height="15" fill="rgb(249,42,33)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1183.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.30%)</title><rect x="3.7850%" y="1157" width="0.3028%" height="15" fill="rgb(242,149,17)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1167.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (8 samples, 0.30%)</title><rect x="3.7850%" y="1141" width="0.3028%" height="15" fill="rgb(244,29,21)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1151.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.30%)</title><rect x="3.7850%" y="1125" width="0.3028%" height="15" fill="rgb(220,130,37)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (8 samples, 0.30%)</title><rect x="3.7850%" y="1109" width="0.3028%" height="15" fill="rgb(211,67,2)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.30%)</title><rect x="3.7850%" y="1093" width="0.3028%" height="15" fill="rgb(235,68,52)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (8 samples, 0.30%)</title><rect x="3.7850%" y="1077" width="0.3028%" height="15" fill="rgb(246,142,3)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1087.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (8 samples, 0.30%)</title><rect x="3.7850%" y="1061" width="0.3028%" height="15" fill="rgb(241,25,7)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1071.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (8 samples, 0.30%)</title><rect x="3.7850%" y="1045" width="0.3028%" height="15" fill="rgb(242,119,39)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1055.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.30%)</title><rect x="3.7850%" y="1029" width="0.3028%" height="15" fill="rgb(241,98,45)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1039.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.30%)</title><rect x="3.7850%" y="1013" width="0.3028%" height="15" fill="rgb(254,28,30)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1023.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.30%)</title><rect x="3.7850%" y="997" width="0.3028%" height="15" fill="rgb(241,142,54)" fg:x="100" fg:w="8"/><text x="4.0350%" y="1007.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.11%)</title><rect x="3.9743%" y="981" width="0.1136%" height="15" fill="rgb(222,85,15)" fg:x="105" fg:w="3"/><text x="4.2243%" y="991.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.04%)</title><rect x="4.0500%" y="965" width="0.0379%" height="15" fill="rgb(210,85,47)" fg:x="107" fg:w="1"/><text x="4.3000%" y="975.50"></text></g><g><title>&lt;serde_json::number::Number as serde::ser::Serialize&gt;::serialize (1 samples, 0.04%)</title><rect x="4.0500%" y="949" width="0.0379%" height="15" fill="rgb(224,206,25)" fg:x="107" fg:w="1"/><text x="4.3000%" y="959.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_f64 (1 samples, 0.04%)</title><rect x="4.0500%" y="933" width="0.0379%" height="15" fill="rgb(243,201,19)" fg:x="107" fg:w="1"/><text x="4.3000%" y="943.50"></text></g><g><title>serde_json::ser::Formatter::write_f64 (1 samples, 0.04%)</title><rect x="4.0500%" y="917" width="0.0379%" height="15" fill="rgb(236,59,4)" fg:x="107" fg:w="1"/><text x="4.3000%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.04%)</title><rect x="4.0500%" y="901" width="0.0379%" height="15" fill="rgb(254,179,45)" fg:x="107" fg:w="1"/><text x="4.3000%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.04%)</title><rect x="4.0500%" y="885" width="0.0379%" height="15" fill="rgb(226,14,10)" fg:x="107" fg:w="1"/><text x="4.3000%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="4.0500%" y="869" width="0.0379%" height="15" fill="rgb(244,27,41)" fg:x="107" fg:w="1"/><text x="4.3000%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="4.0500%" y="853" width="0.0379%" height="15" fill="rgb(235,35,32)" fg:x="107" fg:w="1"/><text x="4.3000%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="4.0500%" y="837" width="0.0379%" height="15" fill="rgb(218,68,31)" fg:x="107" fg:w="1"/><text x="4.3000%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="4.0500%" y="821" width="0.0379%" height="15" fill="rgb(207,120,37)" fg:x="107" fg:w="1"/><text x="4.3000%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="4.0500%" y="805" width="0.0379%" height="15" fill="rgb(227,98,0)" fg:x="107" fg:w="1"/><text x="4.3000%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="4.0500%" y="789" width="0.0379%" height="15" fill="rgb(207,7,3)" fg:x="107" fg:w="1"/><text x="4.3000%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="4.0500%" y="773" width="0.0379%" height="15" fill="rgb(206,98,19)" fg:x="107" fg:w="1"/><text x="4.3000%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="4.0500%" y="757" width="0.0379%" height="15" fill="rgb(217,5,26)" fg:x="107" fg:w="1"/><text x="4.3000%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="4.0500%" y="741" width="0.0379%" height="15" fill="rgb(235,190,38)" fg:x="107" fg:w="1"/><text x="4.3000%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="4.0500%" y="725" width="0.0379%" height="15" fill="rgb(247,86,24)" fg:x="107" fg:w="1"/><text x="4.3000%" y="735.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="4.0500%" y="709" width="0.0379%" height="15" fill="rgb(205,101,16)" fg:x="107" fg:w="1"/><text x="4.3000%" y="719.50"></text></g><g><title>__rdl_realloc (1 samples, 0.04%)</title><rect x="4.0500%" y="693" width="0.0379%" height="15" fill="rgb(246,168,33)" fg:x="107" fg:w="1"/><text x="4.3000%" y="703.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.04%)</title><rect x="4.0500%" y="677" width="0.0379%" height="15" fill="rgb(231,114,1)" fg:x="107" fg:w="1"/><text x="4.3000%" y="687.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="4.0500%" y="661" width="0.0379%" height="15" fill="rgb(207,184,53)" fg:x="107" fg:w="1"/><text x="4.3000%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="4.0500%" y="645" width="0.0379%" height="15" fill="rgb(224,95,51)" fg:x="107" fg:w="1"/><text x="4.3000%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="4.0500%" y="629" width="0.0379%" height="15" fill="rgb(212,188,45)" fg:x="107" fg:w="1"/><text x="4.3000%" y="639.50"></text></g><g><title>fabseapi::Api::traffic_light_retrieve::_{{closure}} (1 samples, 0.04%)</title><rect x="4.0878%" y="1285" width="0.0379%" height="15" fill="rgb(223,154,38)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1295.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="4.0878%" y="1269" width="0.0379%" height="15" fill="rgb(251,22,52)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1279.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.0878%" y="1253" width="0.0379%" height="15" fill="rgb(229,209,22)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.0878%" y="1237" width="0.0379%" height="15" fill="rgb(234,138,34)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.0878%" y="1221" width="0.0379%" height="15" fill="rgb(212,95,11)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1231.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="4.0878%" y="1205" width="0.0379%" height="15" fill="rgb(240,179,47)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.0878%" y="1189" width="0.0379%" height="15" fill="rgb(240,163,11)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1199.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.0878%" y="1173" width="0.0379%" height="15" fill="rgb(236,37,12)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="4.0878%" y="1157" width="0.0379%" height="15" fill="rgb(232,164,16)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (1 samples, 0.04%)</title><rect x="4.0878%" y="1141" width="0.0379%" height="15" fill="rgb(244,205,15)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1151.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (1 samples, 0.04%)</title><rect x="4.0878%" y="1125" width="0.0379%" height="15" fill="rgb(223,117,47)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1135.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many::_{{closure}} (1 samples, 0.04%)</title><rect x="4.0878%" y="1109" width="0.0379%" height="15" fill="rgb(244,107,35)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1119.50"></text></g><g><title>&lt;(T1,T2,T3,T4,T5) as sqlx_core::from_row::FromRow&lt;R&gt;&gt;::from_row (1 samples, 0.04%)</title><rect x="4.0878%" y="1093" width="0.0379%" height="15" fill="rgb(205,140,8)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1103.50"></text></g><g><title>sqlx_core::row::Row::try_get (1 samples, 0.04%)</title><rect x="4.0878%" y="1077" width="0.0379%" height="15" fill="rgb(228,84,46)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1087.50"></text></g><g><title>sqlx_mysql::types::str::&lt;impl sqlx_core::decode::Decode&lt;sqlx_mysql::database::MySql&gt; for alloc::string::String&gt;::decode (1 samples, 0.04%)</title><rect x="4.0878%" y="1061" width="0.0379%" height="15" fill="rgb(254,188,9)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="4.0878%" y="1045" width="0.0379%" height="15" fill="rgb(206,112,54)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="4.0878%" y="1029" width="0.0379%" height="15" fill="rgb(216,84,49)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="4.0878%" y="1013" width="0.0379%" height="15" fill="rgb(214,194,35)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="4.0878%" y="997" width="0.0379%" height="15" fill="rgb(249,28,3)" fg:x="108" fg:w="1"/><text x="4.3378%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="4.0878%" y="981" width="0.0379%" height="15" fill="rgb(222,56,52)" fg:x="108" fg:w="1"/><text x="4.3378%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="4.0878%" y="965" width="0.0379%" height="15" fill="rgb(245,217,50)" fg:x="108" fg:w="1"/><text x="4.3378%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="4.0878%" y="949" width="0.0379%" height="15" fill="rgb(213,201,24)" fg:x="108" fg:w="1"/><text x="4.3378%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="4.0878%" y="933" width="0.0379%" height="15" fill="rgb(248,116,28)" fg:x="108" fg:w="1"/><text x="4.3378%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="4.0878%" y="917" width="0.0379%" height="15" fill="rgb(219,72,43)" fg:x="108" fg:w="1"/><text x="4.3378%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="4.0878%" y="901" width="0.0379%" height="15" fill="rgb(209,138,14)" fg:x="108" fg:w="1"/><text x="4.3378%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="4.0878%" y="885" width="0.0379%" height="15" fill="rgb(222,18,33)" fg:x="108" fg:w="1"/><text x="4.3378%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="4.0878%" y="869" width="0.0379%" height="15" fill="rgb(213,199,7)" fg:x="108" fg:w="1"/><text x="4.3378%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="4.0878%" y="853" width="0.0379%" height="15" fill="rgb(250,110,10)" fg:x="108" fg:w="1"/><text x="4.3378%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="4.0878%" y="837" width="0.0379%" height="15" fill="rgb(248,123,6)" fg:x="108" fg:w="1"/><text x="4.3378%" y="847.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="4.0878%" y="821" width="0.0379%" height="15" fill="rgb(206,91,31)" fg:x="108" fg:w="1"/><text x="4.3378%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="4.0878%" y="805" width="0.0379%" height="15" fill="rgb(211,154,13)" fg:x="108" fg:w="1"/><text x="4.3378%" y="815.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="4.0878%" y="789" width="0.0379%" height="15" fill="rgb(225,148,7)" fg:x="108" fg:w="1"/><text x="4.3378%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="4.0878%" y="773" width="0.0379%" height="15" fill="rgb(220,160,43)" fg:x="108" fg:w="1"/><text x="4.3378%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="4.0878%" y="757" width="0.0379%" height="15" fill="rgb(213,52,39)" fg:x="108" fg:w="1"/><text x="4.3378%" y="767.50"></text></g><g><title>&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_uint (10 samples, 0.38%)</title><rect x="4.1635%" y="1013" width="0.3785%" height="15" fill="rgb(243,137,7)" fg:x="110" fg:w="10"/><text x="4.4135%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.30%)</title><rect x="4.2392%" y="997" width="0.3028%" height="15" fill="rgb(230,79,13)" fg:x="112" fg:w="8"/><text x="4.4892%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.30%)</title><rect x="4.2392%" y="981" width="0.3028%" height="15" fill="rgb(247,105,23)" fg:x="112" fg:w="8"/><text x="4.4892%" y="991.50"></text></g><g><title>[libc.so.6] (7 samples, 0.26%)</title><rect x="4.2771%" y="965" width="0.2650%" height="15" fill="rgb(223,179,41)" fg:x="113" fg:w="7"/><text x="4.5271%" y="975.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (75 samples, 2.84%)</title><rect x="2.9902%" y="1573" width="2.8388%" height="15" fill="rgb(218,9,34)" fg:x="79" fg:w="75"/><text x="3.2402%" y="1583.50">&lt;p..</text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1557" width="2.6117%" height="15" fill="rgb(222,106,8)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1567.50">&lt;p..</text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1541" width="2.6117%" height="15" fill="rgb(211,220,0)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1551.50">&lt;p..</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1525" width="2.6117%" height="15" fill="rgb(229,52,16)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1535.50">&lt;p..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1509" width="2.6117%" height="15" fill="rgb(212,155,18)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1519.50">&lt;a..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1493" width="2.6117%" height="15" fill="rgb(242,21,14)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1503.50">&lt;d..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (69 samples, 2.61%)</title><rect x="3.2173%" y="1477" width="2.6117%" height="15" fill="rgb(222,19,48)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1487.50">&lt;c..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1461" width="2.6117%" height="15" fill="rgb(232,45,27)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1471.50">&lt;p..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (69 samples, 2.61%)</title><rect x="3.2173%" y="1445" width="2.6117%" height="15" fill="rgb(249,103,42)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1455.50">&lt;f..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1429" width="2.6117%" height="15" fill="rgb(246,81,33)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1439.50">&lt;a..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1413" width="2.6117%" height="15" fill="rgb(252,33,42)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1423.50">&lt;d..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (69 samples, 2.61%)</title><rect x="3.2173%" y="1397" width="2.6117%" height="15" fill="rgb(209,212,41)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1407.50">&lt;c..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1381" width="2.6117%" height="15" fill="rgb(207,154,6)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1391.50">&lt;p..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1365" width="2.6117%" height="15" fill="rgb(223,64,47)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1375.50">&lt;a..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1349" width="2.6117%" height="15" fill="rgb(211,161,38)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1359.50">&lt;d..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (69 samples, 2.61%)</title><rect x="3.2173%" y="1333" width="2.6117%" height="15" fill="rgb(219,138,40)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1343.50">&lt;c..</text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1317" width="2.6117%" height="15" fill="rgb(241,228,46)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1327.50">&lt;p..</text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (69 samples, 2.61%)</title><rect x="3.2173%" y="1301" width="2.6117%" height="15" fill="rgb(223,209,38)" fg:x="85" fg:w="69"/><text x="3.4673%" y="1311.50">&lt;f..</text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (45 samples, 1.70%)</title><rect x="4.1257%" y="1285" width="1.7033%" height="15" fill="rgb(236,164,45)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1295.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (45 samples, 1.70%)</title><rect x="4.1257%" y="1269" width="1.7033%" height="15" fill="rgb(231,15,5)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1279.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (45 samples, 1.70%)</title><rect x="4.1257%" y="1253" width="1.7033%" height="15" fill="rgb(252,35,15)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (45 samples, 1.70%)</title><rect x="4.1257%" y="1237" width="1.7033%" height="15" fill="rgb(248,181,18)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (45 samples, 1.70%)</title><rect x="4.1257%" y="1221" width="1.7033%" height="15" fill="rgb(233,39,42)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1231.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (45 samples, 1.70%)</title><rect x="4.1257%" y="1205" width="1.7033%" height="15" fill="rgb(238,110,33)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (45 samples, 1.70%)</title><rect x="4.1257%" y="1189" width="1.7033%" height="15" fill="rgb(233,195,10)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1199.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (45 samples, 1.70%)</title><rect x="4.1257%" y="1173" width="1.7033%" height="15" fill="rgb(254,105,3)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45 samples, 1.70%)</title><rect x="4.1257%" y="1157" width="1.7033%" height="15" fill="rgb(221,225,9)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (45 samples, 1.70%)</title><rect x="4.1257%" y="1141" width="1.7033%" height="15" fill="rgb(224,227,45)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1151.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (45 samples, 1.70%)</title><rect x="4.1257%" y="1125" width="1.7033%" height="15" fill="rgb(229,198,43)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1135.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many::_{{closure}} (45 samples, 1.70%)</title><rect x="4.1257%" y="1109" width="1.7033%" height="15" fill="rgb(206,209,35)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1119.50"></text></g><g><title>&lt;(T1,T2,T3,T4,T5,T6) as sqlx_core::from_row::FromRow&lt;R&gt;&gt;::from_row (45 samples, 1.70%)</title><rect x="4.1257%" y="1093" width="1.7033%" height="15" fill="rgb(245,195,53)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1103.50"></text></g><g><title>sqlx_core::row::Row::try_get (45 samples, 1.70%)</title><rect x="4.1257%" y="1077" width="1.7033%" height="15" fill="rgb(240,92,26)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1087.50"></text></g><g><title>sqlx_mysql::types::int::&lt;impl sqlx_core::decode::Decode&lt;sqlx_mysql::database::MySql&gt; for i64&gt;::decode (45 samples, 1.70%)</title><rect x="4.1257%" y="1061" width="1.7033%" height="15" fill="rgb(207,40,23)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1071.50"></text></g><g><title>sqlx_mysql::types::int::int_decode (45 samples, 1.70%)</title><rect x="4.1257%" y="1045" width="1.7033%" height="15" fill="rgb(223,111,35)" fg:x="109" fg:w="45"/><text x="4.3757%" y="1055.50"></text></g><g><title>byteorder::ByteOrder::read_int (44 samples, 1.67%)</title><rect x="4.1635%" y="1029" width="1.6654%" height="15" fill="rgb(229,147,28)" fg:x="110" fg:w="44"/><text x="4.4135%" y="1039.50"></text></g><g><title>byteorder::extend_sign (34 samples, 1.29%)</title><rect x="4.5420%" y="1013" width="1.2869%" height="15" fill="rgb(211,29,28)" fg:x="120" fg:w="34"/><text x="4.7920%" y="1023.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="5.9046%" y="1173" width="0.0379%" height="15" fill="rgb(228,72,33)" fg:x="156" fg:w="1"/><text x="6.1546%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (2 samples, 0.08%)</title><rect x="5.9046%" y="1189" width="0.0757%" height="15" fill="rgb(205,214,31)" fg:x="156" fg:w="2"/><text x="6.1546%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="5.9425%" y="1173" width="0.0379%" height="15" fill="rgb(224,111,15)" fg:x="157" fg:w="1"/><text x="6.1925%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="5.9425%" y="1157" width="0.0379%" height="15" fill="rgb(253,21,26)" fg:x="157" fg:w="1"/><text x="6.1925%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="5.9425%" y="1141" width="0.0379%" height="15" fill="rgb(245,139,43)" fg:x="157" fg:w="1"/><text x="6.1925%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="5.9425%" y="1125" width="0.0379%" height="15" fill="rgb(252,170,7)" fg:x="157" fg:w="1"/><text x="6.1925%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;)&gt;&gt; (1 samples, 0.04%)</title><rect x="5.9425%" y="1109" width="0.0379%" height="15" fill="rgb(231,118,14)" fg:x="157" fg:w="1"/><text x="6.1925%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="5.9425%" y="1093" width="0.0379%" height="15" fill="rgb(238,83,0)" fg:x="157" fg:w="1"/><text x="6.1925%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.04%)</title><rect x="5.9425%" y="1077" width="0.0379%" height="15" fill="rgb(221,39,39)" fg:x="157" fg:w="1"/><text x="6.1925%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::request::Request&gt; (3 samples, 0.11%)</title><rect x="5.9046%" y="1205" width="0.1136%" height="15" fill="rgb(222,119,46)" fg:x="156" fg:w="3"/><text x="6.1546%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::request::RequestState&gt; (1 samples, 0.04%)</title><rect x="5.9803%" y="1189" width="0.0379%" height="15" fill="rgb(222,165,49)" fg:x="158" fg:w="1"/><text x="6.2303%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;poem::web::cookie::CookieJar&gt;&gt; (1 samples, 0.04%)</title><rect x="5.9803%" y="1173" width="0.0379%" height="15" fill="rgb(219,113,52)" fg:x="158" fg:w="1"/><text x="6.2303%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::web::cookie::CookieJar&gt; (1 samples, 0.04%)</title><rect x="5.9803%" y="1157" width="0.0379%" height="15" fill="rgb(214,7,15)" fg:x="158" fg:w="1"/><text x="6.2303%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;cookie::secure::key::Key&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="5.9803%" y="1141" width="0.0379%" height="15" fill="rgb(235,32,4)" fg:x="158" fg:w="1"/><text x="6.2303%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.11%)</title><rect x="6.0560%" y="1013" width="0.1136%" height="15" fill="rgb(238,90,54)" fg:x="160" fg:w="3"/><text x="6.3060%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.11%)</title><rect x="6.0560%" y="997" width="0.1136%" height="15" fill="rgb(213,208,19)" fg:x="160" fg:w="3"/><text x="6.3060%" y="1007.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.11%)</title><rect x="6.0560%" y="981" width="0.1136%" height="15" fill="rgb(233,156,4)" fg:x="160" fg:w="3"/><text x="6.3060%" y="991.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.11%)</title><rect x="6.0560%" y="965" width="0.1136%" height="15" fill="rgb(207,194,5)" fg:x="160" fg:w="3"/><text x="6.3060%" y="975.50"></text></g><g><title>cfree (3 samples, 0.11%)</title><rect x="6.0560%" y="949" width="0.1136%" height="15" fill="rgb(206,111,30)" fg:x="160" fg:w="3"/><text x="6.3060%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem_openapi::payload::json::Json&lt;alloc::vec::Vec&lt;fabseapi::Car&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="6.0182%" y="1157" width="0.1893%" height="15" fill="rgb(243,70,54)" fg:x="159" fg:w="5"/><text x="6.2682%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fabseapi::Car&gt;&gt; (5 samples, 0.19%)</title><rect x="6.0182%" y="1141" width="0.1893%" height="15" fill="rgb(242,28,8)" fg:x="159" fg:w="5"/><text x="6.2682%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.19%)</title><rect x="6.0182%" y="1125" width="0.1893%" height="15" fill="rgb(219,106,18)" fg:x="159" fg:w="5"/><text x="6.2682%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[fabseapi::Car]&gt; (5 samples, 0.19%)</title><rect x="6.0182%" y="1109" width="0.1893%" height="15" fill="rgb(244,222,10)" fg:x="159" fg:w="5"/><text x="6.2682%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;fabseapi::Car&gt; (4 samples, 0.15%)</title><rect x="6.0560%" y="1093" width="0.1514%" height="15" fill="rgb(236,179,52)" fg:x="160" fg:w="4"/><text x="6.3060%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.15%)</title><rect x="6.0560%" y="1077" width="0.1514%" height="15" fill="rgb(213,23,39)" fg:x="160" fg:w="4"/><text x="6.3060%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.15%)</title><rect x="6.0560%" y="1061" width="0.1514%" height="15" fill="rgb(238,48,10)" fg:x="160" fg:w="4"/><text x="6.3060%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.15%)</title><rect x="6.0560%" y="1045" width="0.1514%" height="15" fill="rgb(251,196,23)" fg:x="160" fg:w="4"/><text x="6.3060%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.15%)</title><rect x="6.0560%" y="1029" width="0.1514%" height="15" fill="rgb(250,152,24)" fg:x="160" fg:w="4"/><text x="6.3060%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="6.1696%" y="1013" width="0.0379%" height="15" fill="rgb(209,150,17)" fg:x="163" fg:w="1"/><text x="6.4196%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (67 samples, 2.54%)</title><rect x="6.9266%" y="1077" width="2.5360%" height="15" fill="rgb(234,202,34)" fg:x="183" fg:w="67"/><text x="7.1766%" y="1087.50">al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (67 samples, 2.54%)</title><rect x="6.9266%" y="1061" width="2.5360%" height="15" fill="rgb(253,148,53)" fg:x="183" fg:w="67"/><text x="7.1766%" y="1071.50">al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (67 samples, 2.54%)</title><rect x="6.9266%" y="1045" width="2.5360%" height="15" fill="rgb(218,129,16)" fg:x="183" fg:w="67"/><text x="7.1766%" y="1055.50">al..</text></g><g><title>alloc::slice::hack::to_vec (67 samples, 2.54%)</title><rect x="6.9266%" y="1029" width="2.5360%" height="15" fill="rgb(216,85,19)" fg:x="183" fg:w="67"/><text x="7.1766%" y="1039.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (67 samples, 2.54%)</title><rect x="6.9266%" y="1013" width="2.5360%" height="15" fill="rgb(235,228,7)" fg:x="183" fg:w="67"/><text x="7.1766%" y="1023.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 2.54%)</title><rect x="6.9266%" y="997" width="2.5360%" height="15" fill="rgb(245,175,0)" fg:x="183" fg:w="67"/><text x="7.1766%" y="1007.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (67 samples, 2.54%)</title><rect x="6.9266%" y="981" width="2.5360%" height="15" fill="rgb(208,168,36)" fg:x="183" fg:w="67"/><text x="7.1766%" y="991.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (67 samples, 2.54%)</title><rect x="6.9266%" y="965" width="2.5360%" height="15" fill="rgb(246,171,24)" fg:x="183" fg:w="67"/><text x="7.1766%" y="975.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 2.42%)</title><rect x="7.0401%" y="949" width="2.4224%" height="15" fill="rgb(215,142,24)" fg:x="186" fg:w="64"/><text x="7.2901%" y="959.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 2.42%)</title><rect x="7.0401%" y="933" width="2.4224%" height="15" fill="rgb(250,187,7)" fg:x="186" fg:w="64"/><text x="7.2901%" y="943.50">al..</text></g><g><title>alloc::alloc::alloc (64 samples, 2.42%)</title><rect x="7.0401%" y="917" width="2.4224%" height="15" fill="rgb(228,66,33)" fg:x="186" fg:w="64"/><text x="7.2901%" y="927.50">al..</text></g><g><title>__rdl_alloc (64 samples, 2.42%)</title><rect x="7.0401%" y="901" width="2.4224%" height="15" fill="rgb(234,215,21)" fg:x="186" fg:w="64"/><text x="7.2901%" y="911.50">__..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (64 samples, 2.42%)</title><rect x="7.0401%" y="885" width="2.4224%" height="15" fill="rgb(222,191,20)" fg:x="186" fg:w="64"/><text x="7.2901%" y="895.50">st..</text></g><g><title>malloc (62 samples, 2.35%)</title><rect x="7.1158%" y="869" width="2.3467%" height="15" fill="rgb(245,79,54)" fg:x="188" fg:w="62"/><text x="7.3658%" y="879.50">m..</text></g><g><title>[libc.so.6] (14 samples, 0.53%)</title><rect x="8.9326%" y="853" width="0.5299%" height="15" fill="rgb(240,10,37)" fg:x="236" fg:w="14"/><text x="9.1826%" y="863.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (69 samples, 2.61%)</title><rect x="6.9266%" y="1125" width="2.6117%" height="15" fill="rgb(214,192,32)" fg:x="183" fg:w="69"/><text x="7.1766%" y="1135.50">&lt;s..</text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (69 samples, 2.61%)</title><rect x="6.9266%" y="1109" width="2.6117%" height="15" fill="rgb(209,36,54)" fg:x="183" fg:w="69"/><text x="7.1766%" y="1119.50">&lt;a..</text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (69 samples, 2.61%)</title><rect x="6.9266%" y="1093" width="2.6117%" height="15" fill="rgb(220,10,11)" fg:x="183" fg:w="69"/><text x="7.1766%" y="1103.50">al..</text></g><g><title>alloc::string::String::from_utf8_unchecked (2 samples, 0.08%)</title><rect x="9.4625%" y="1077" width="0.0757%" height="15" fill="rgb(221,106,17)" fg:x="250" fg:w="2"/><text x="9.7125%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.04%)</title><rect x="9.5382%" y="1125" width="0.0379%" height="15" fill="rgb(251,142,44)" fg:x="252" fg:w="1"/><text x="9.7882%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.34%)</title><rect x="9.5761%" y="1029" width="0.3407%" height="15" fill="rgb(238,13,15)" fg:x="253" fg:w="9"/><text x="9.8261%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.34%)</title><rect x="9.5761%" y="1013" width="0.3407%" height="15" fill="rgb(208,107,27)" fg:x="253" fg:w="9"/><text x="9.8261%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (9 samples, 0.34%)</title><rect x="9.5761%" y="997" width="0.3407%" height="15" fill="rgb(205,136,37)" fg:x="253" fg:w="9"/><text x="9.8261%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.34%)</title><rect x="9.5761%" y="981" width="0.3407%" height="15" fill="rgb(250,205,27)" fg:x="253" fg:w="9"/><text x="9.8261%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.34%)</title><rect x="9.5761%" y="965" width="0.3407%" height="15" fill="rgb(210,80,43)" fg:x="253" fg:w="9"/><text x="9.8261%" y="975.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.34%)</title><rect x="9.5761%" y="949" width="0.3407%" height="15" fill="rgb(247,160,36)" fg:x="253" fg:w="9"/><text x="9.8261%" y="959.50"></text></g><g><title>__rdl_alloc (9 samples, 0.34%)</title><rect x="9.5761%" y="933" width="0.3407%" height="15" fill="rgb(234,13,49)" fg:x="253" fg:w="9"/><text x="9.8261%" y="943.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.34%)</title><rect x="9.5761%" y="917" width="0.3407%" height="15" fill="rgb(234,122,0)" fg:x="253" fg:w="9"/><text x="9.8261%" y="927.50"></text></g><g><title>malloc (9 samples, 0.34%)</title><rect x="9.5761%" y="901" width="0.3407%" height="15" fill="rgb(207,146,38)" fg:x="253" fg:w="9"/><text x="9.8261%" y="911.50"></text></g><g><title>poem_openapi::types::external::string::&lt;impl poem_openapi::types::ToJSON for alloc::string::String&gt;::to_json (13 samples, 0.49%)</title><rect x="9.5761%" y="1125" width="0.4921%" height="15" fill="rgb(207,177,25)" fg:x="253" fg:w="13"/><text x="9.8261%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.49%)</title><rect x="9.5761%" y="1109" width="0.4921%" height="15" fill="rgb(211,178,42)" fg:x="253" fg:w="13"/><text x="9.8261%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.49%)</title><rect x="9.5761%" y="1093" width="0.4921%" height="15" fill="rgb(230,69,54)" fg:x="253" fg:w="13"/><text x="9.8261%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.49%)</title><rect x="9.5761%" y="1077" width="0.4921%" height="15" fill="rgb(214,135,41)" fg:x="253" fg:w="13"/><text x="9.8261%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.49%)</title><rect x="9.5761%" y="1061" width="0.4921%" height="15" fill="rgb(237,67,25)" fg:x="253" fg:w="13"/><text x="9.8261%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.49%)</title><rect x="9.5761%" y="1045" width="0.4921%" height="15" fill="rgb(222,189,50)" fg:x="253" fg:w="13"/><text x="9.8261%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.15%)</title><rect x="9.9167%" y="1029" width="0.1514%" height="15" fill="rgb(245,148,34)" fg:x="262" fg:w="4"/><text x="10.1667%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.15%)</title><rect x="9.9167%" y="1013" width="0.1514%" height="15" fill="rgb(222,29,6)" fg:x="262" fg:w="4"/><text x="10.1667%" y="1023.50"></text></g><g><title>[libc.so.6] (4 samples, 0.15%)</title><rect x="9.9167%" y="997" width="0.1514%" height="15" fill="rgb(221,189,43)" fg:x="262" fg:w="4"/><text x="10.1667%" y="1007.50"></text></g><g><title>&lt;fabseapi::Car as poem_openapi::types::ToJSON&gt;::to_json (116 samples, 4.39%)</title><rect x="6.2074%" y="1141" width="4.3906%" height="15" fill="rgb(207,36,27)" fg:x="164" fg:w="116"/><text x="6.4574%" y="1151.50">&lt;fabs..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (14 samples, 0.53%)</title><rect x="10.0681%" y="1125" width="0.5299%" height="15" fill="rgb(217,90,24)" fg:x="266" fg:w="14"/><text x="10.3181%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (12 samples, 0.45%)</title><rect x="10.1438%" y="1109" width="0.4542%" height="15" fill="rgb(224,66,35)" fg:x="268" fg:w="12"/><text x="10.3938%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (7 samples, 0.26%)</title><rect x="10.3331%" y="1093" width="0.2650%" height="15" fill="rgb(221,13,50)" fg:x="273" fg:w="7"/><text x="10.5831%" y="1103.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (130 samples, 4.92%)</title><rect x="6.0182%" y="1205" width="4.9205%" height="15" fill="rgb(236,68,49)" fg:x="159" fg:w="130"/><text x="6.2682%" y="1215.50">core::..</text></g><g><title>core::ops::function::FnOnce::call_once (130 samples, 4.92%)</title><rect x="6.0182%" y="1189" width="4.9205%" height="15" fill="rgb(229,146,28)" fg:x="159" fg:w="130"/><text x="6.2682%" y="1199.50">core::..</text></g><g><title>&lt;poem_openapi::payload::json::Json&lt;T&gt; as poem::web::IntoResponse&gt;::into_response (130 samples, 4.92%)</title><rect x="6.0182%" y="1173" width="4.9205%" height="15" fill="rgb(225,31,38)" fg:x="159" fg:w="130"/><text x="6.2682%" y="1183.50">&lt;poem_..</text></g><g><title>poem_openapi::types::external::vec::&lt;impl poem_openapi::types::ToJSON for alloc::vec::Vec&lt;T&gt;&gt;::to_json (125 samples, 4.73%)</title><rect x="6.2074%" y="1157" width="4.7313%" height="15" fill="rgb(250,208,3)" fg:x="164" fg:w="125"/><text x="6.4574%" y="1167.50">poem_o..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.34%)</title><rect x="10.5980%" y="1141" width="0.3407%" height="15" fill="rgb(246,54,23)" fg:x="280" fg:w="9"/><text x="10.8480%" y="1151.50"></text></g><g><title>core::ptr::write (9 samples, 0.34%)</title><rect x="10.5980%" y="1125" width="0.3407%" height="15" fill="rgb(243,76,11)" fg:x="280" fg:w="9"/><text x="10.8480%" y="1135.50"></text></g><g><title>fabseapi::Api::traffic_light_insert::_{{closure}} (1 samples, 0.04%)</title><rect x="10.9387%" y="1205" width="0.0379%" height="15" fill="rgb(245,21,50)" fg:x="289" fg:w="1"/><text x="11.1887%" y="1215.50"></text></g><g><title>&lt;sqlx_mysql::arguments::MySqlArguments as sqlx_core::arguments::Arguments&gt;::add (1 samples, 0.04%)</title><rect x="10.9387%" y="1189" width="0.0379%" height="15" fill="rgb(228,9,43)" fg:x="289" fg:w="1"/><text x="11.1887%" y="1199.50"></text></g><g><title>sqlx_mysql::arguments::MySqlArguments::add (1 samples, 0.04%)</title><rect x="10.9387%" y="1173" width="0.0379%" height="15" fill="rgb(208,100,47)" fg:x="289" fg:w="1"/><text x="11.1887%" y="1183.50"></text></g><g><title>&lt;&amp;T as sqlx_core::encode::Encode&lt;DB&gt;&gt;::encode (1 samples, 0.04%)</title><rect x="10.9387%" y="1157" width="0.0379%" height="15" fill="rgb(232,26,8)" fg:x="289" fg:w="1"/><text x="11.1887%" y="1167.50"></text></g><g><title>sqlx_mysql::&lt;impl sqlx_core::encode::Encode&lt;sqlx_mysql::database::MySql&gt; for core::option::Option&lt;T&gt;&gt;::encode_by_ref (1 samples, 0.04%)</title><rect x="10.9387%" y="1141" width="0.0379%" height="15" fill="rgb(216,166,38)" fg:x="289" fg:w="1"/><text x="11.1887%" y="1151.50"></text></g><g><title>sqlx_mysql::types::str::&lt;impl sqlx_core::encode::Encode&lt;sqlx_mysql::database::MySql&gt; for &amp;str&gt;::encode_by_ref (1 samples, 0.04%)</title><rect x="10.9387%" y="1125" width="0.0379%" height="15" fill="rgb(251,202,51)" fg:x="289" fg:w="1"/><text x="11.1887%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_mysql::io::buf_mut::MySqlBufMutExt&gt;::put_str_lenenc (1 samples, 0.04%)</title><rect x="10.9387%" y="1109" width="0.0379%" height="15" fill="rgb(254,216,34)" fg:x="289" fg:w="1"/><text x="11.1887%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_mysql::io::buf_mut::MySqlBufMutExt&gt;::put_bytes_lenenc (1 samples, 0.04%)</title><rect x="10.9387%" y="1093" width="0.0379%" height="15" fill="rgb(251,32,27)" fg:x="289" fg:w="1"/><text x="11.1887%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_mysql::io::buf_mut::MySqlBufMutExt&gt;::put_uint_lenenc (1 samples, 0.04%)</title><rect x="10.9387%" y="1077" width="0.0379%" height="15" fill="rgb(208,127,28)" fg:x="289" fg:w="1"/><text x="11.1887%" y="1087.50"></text></g><g><title>&lt;time::time::Time as core::fmt::Display&gt;::fmt (3 samples, 0.11%)</title><rect x="11.3172%" y="1173" width="0.1136%" height="15" fill="rgb(224,137,22)" fg:x="299" fg:w="3"/><text x="11.5672%" y="1183.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (6 samples, 0.23%)</title><rect x="11.2793%" y="1189" width="0.2271%" height="15" fill="rgb(254,70,32)" fg:x="298" fg:w="6"/><text x="11.5293%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (2 samples, 0.08%)</title><rect x="11.4307%" y="1173" width="0.0757%" height="15" fill="rgb(229,75,37)" fg:x="302" fg:w="2"/><text x="11.6807%" y="1183.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="11.5064%" y="1189" width="0.0757%" height="15" fill="rgb(252,64,23)" fg:x="304" fg:w="2"/><text x="11.7564%" y="1199.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.08%)</title><rect x="11.5064%" y="1173" width="0.0757%" height="15" fill="rgb(232,162,48)" fg:x="304" fg:w="2"/><text x="11.7564%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.08%)</title><rect x="11.5064%" y="1157" width="0.0757%" height="15" fill="rgb(246,160,12)" fg:x="304" fg:w="2"/><text x="11.7564%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.08%)</title><rect x="11.5064%" y="1141" width="0.0757%" height="15" fill="rgb(247,166,0)" fg:x="304" fg:w="2"/><text x="11.7564%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.26%)</title><rect x="11.5821%" y="1189" width="0.2650%" height="15" fill="rgb(249,219,21)" fg:x="306" fg:w="7"/><text x="11.8321%" y="1199.50"></text></g><g><title>core::ptr::write (4 samples, 0.15%)</title><rect x="11.6957%" y="1173" width="0.1514%" height="15" fill="rgb(205,209,3)" fg:x="309" fg:w="4"/><text x="11.9457%" y="1183.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.08%)</title><rect x="11.8471%" y="1189" width="0.0757%" height="15" fill="rgb(243,44,1)" fg:x="313" fg:w="2"/><text x="12.0971%" y="1199.50"></text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (161 samples, 6.09%)</title><rect x="5.8668%" y="1221" width="6.0939%" height="15" fill="rgb(206,159,16)" fg:x="155" fg:w="161"/><text x="6.1168%" y="1231.50">&lt;fabseap..</text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (26 samples, 0.98%)</title><rect x="10.9765%" y="1205" width="0.9841%" height="15" fill="rgb(244,77,30)" fg:x="290" fg:w="26"/><text x="11.2265%" y="1215.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch (1 samples, 0.04%)</title><rect x="11.9228%" y="1189" width="0.0379%" height="15" fill="rgb(218,69,12)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1199.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many (1 samples, 0.04%)</title><rect x="11.9228%" y="1173" width="0.0379%" height="15" fill="rgb(212,87,7)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1183.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many (1 samples, 0.04%)</title><rect x="11.9228%" y="1157" width="0.0379%" height="15" fill="rgb(245,114,25)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1167.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="11.9228%" y="1141" width="0.0379%" height="15" fill="rgb(210,61,42)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1151.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="11.9228%" y="1125" width="0.0379%" height="15" fill="rgb(211,52,33)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="11.9228%" y="1109" width="0.0379%" height="15" fill="rgb(234,58,33)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="11.9228%" y="1093" width="0.0379%" height="15" fill="rgb(220,115,36)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="11.9228%" y="1077" width="0.0379%" height="15" fill="rgb(243,153,54)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="11.9228%" y="1061" width="0.0379%" height="15" fill="rgb(251,47,18)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="11.9228%" y="1045" width="0.0379%" height="15" fill="rgb(242,102,42)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="11.9228%" y="1029" width="0.0379%" height="15" fill="rgb(234,31,38)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1039.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.04%)</title><rect x="11.9228%" y="1013" width="0.0379%" height="15" fill="rgb(221,117,51)" fg:x="315" fg:w="1"/><text x="12.1728%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (238 samples, 9.01%)</title><rect x="2.9902%" y="1621" width="9.0083%" height="15" fill="rgb(212,20,18)" fg:x="79" fg:w="238"/><text x="3.2402%" y="1631.50">&lt;alloc::boxed..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (238 samples, 9.01%)</title><rect x="2.9902%" y="1605" width="9.0083%" height="15" fill="rgb(245,133,36)" fg:x="79" fg:w="238"/><text x="3.2402%" y="1615.50">&lt;dyn poem::en..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (238 samples, 9.01%)</title><rect x="2.9902%" y="1589" width="9.0083%" height="15" fill="rgb(212,6,19)" fg:x="79" fg:w="238"/><text x="3.2402%" y="1599.50">&lt;core::pin::P..</text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1573" width="6.1696%" height="15" fill="rgb(218,1,36)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1583.50">&lt;poem::r..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1557" width="6.1696%" height="15" fill="rgb(246,84,54)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1567.50">&lt;alloc::..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1541" width="6.1696%" height="15" fill="rgb(242,110,6)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1551.50">&lt;alloc::..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1525" width="6.1696%" height="15" fill="rgb(214,47,5)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1535.50">&lt;dyn poe..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (163 samples, 6.17%)</title><rect x="5.8289%" y="1509" width="6.1696%" height="15" fill="rgb(218,159,25)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1519.50">&lt;core::p..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1493" width="6.1696%" height="15" fill="rgb(215,211,28)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1503.50">&lt;poem::e..</text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1477" width="6.1696%" height="15" fill="rgb(238,59,32)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1487.50">&lt;poem::e..</text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1461" width="6.1696%" height="15" fill="rgb(226,82,3)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1471.50">&lt;poem::m..</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1445" width="6.1696%" height="15" fill="rgb(240,164,32)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1455.50">&lt;poem::r..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1429" width="6.1696%" height="15" fill="rgb(232,46,7)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1439.50">&lt;alloc::..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1413" width="6.1696%" height="15" fill="rgb(229,129,53)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1423.50">&lt;dyn poe..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (163 samples, 6.17%)</title><rect x="5.8289%" y="1397" width="6.1696%" height="15" fill="rgb(234,188,29)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1407.50">&lt;core::p..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1381" width="6.1696%" height="15" fill="rgb(246,141,4)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1391.50">&lt;poem::e..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (163 samples, 6.17%)</title><rect x="5.8289%" y="1365" width="6.1696%" height="15" fill="rgb(229,23,39)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1375.50">&lt;futures..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1349" width="6.1696%" height="15" fill="rgb(206,12,3)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1359.50">&lt;alloc::..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1333" width="6.1696%" height="15" fill="rgb(252,226,20)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1343.50">&lt;dyn poe..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (163 samples, 6.17%)</title><rect x="5.8289%" y="1317" width="6.1696%" height="15" fill="rgb(216,123,35)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1327.50">&lt;core::p..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1301" width="6.1696%" height="15" fill="rgb(212,68,40)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1311.50">&lt;poem::e..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1285" width="6.1696%" height="15" fill="rgb(254,125,32)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1295.50">&lt;alloc::..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1269" width="6.1696%" height="15" fill="rgb(253,97,22)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1279.50">&lt;dyn poe..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (163 samples, 6.17%)</title><rect x="5.8289%" y="1253" width="6.1696%" height="15" fill="rgb(241,101,14)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1263.50">&lt;core::p..</text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (163 samples, 6.17%)</title><rect x="5.8289%" y="1237" width="6.1696%" height="15" fill="rgb(238,103,29)" fg:x="154" fg:w="163"/><text x="6.0789%" y="1247.50">&lt;poem::e..</text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}} (1 samples, 0.04%)</title><rect x="11.9606%" y="1221" width="0.0379%" height="15" fill="rgb(233,195,47)" fg:x="316" fg:w="1"/><text x="12.2106%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="11.9606%" y="1205" width="0.0379%" height="15" fill="rgb(246,218,30)" fg:x="316" fg:w="1"/><text x="12.2106%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.04%)</title><rect x="11.9606%" y="1189" width="0.0379%" height="15" fill="rgb(219,145,47)" fg:x="316" fg:w="1"/><text x="12.2106%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.04%)</title><rect x="11.9606%" y="1173" width="0.0379%" height="15" fill="rgb(243,12,26)" fg:x="316" fg:w="1"/><text x="12.2106%" y="1183.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (2 samples, 0.08%)</title><rect x="12.0742%" y="1205" width="0.0757%" height="15" fill="rgb(214,87,16)" fg:x="319" fg:w="2"/><text x="12.3242%" y="1215.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="12.0742%" y="1189" width="0.0757%" height="15" fill="rgb(208,99,42)" fg:x="319" fg:w="2"/><text x="12.3242%" y="1199.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.11%)</title><rect x="12.2634%" y="1173" width="0.1136%" height="15" fill="rgb(253,99,2)" fg:x="324" fg:w="3"/><text x="12.5134%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (3 samples, 0.11%)</title><rect x="12.2634%" y="1157" width="0.1136%" height="15" fill="rgb(220,168,23)" fg:x="324" fg:w="3"/><text x="12.5134%" y="1167.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (3 samples, 0.11%)</title><rect x="12.2634%" y="1141" width="0.1136%" height="15" fill="rgb(242,38,24)" fg:x="324" fg:w="3"/><text x="12.5134%" y="1151.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.11%)</title><rect x="12.2634%" y="1125" width="0.1136%" height="15" fill="rgb(225,182,9)" fg:x="324" fg:w="3"/><text x="12.5134%" y="1135.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.08%)</title><rect x="12.3013%" y="1109" width="0.0757%" height="15" fill="rgb(243,178,37)" fg:x="325" fg:w="2"/><text x="12.5513%" y="1119.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2 samples, 0.08%)</title><rect x="12.3013%" y="1093" width="0.0757%" height="15" fill="rgb(232,139,19)" fg:x="325" fg:w="2"/><text x="12.5513%" y="1103.50"></text></g><g><title>core::fmt::write (2 samples, 0.08%)</title><rect x="12.3013%" y="1077" width="0.0757%" height="15" fill="rgb(225,201,24)" fg:x="325" fg:w="2"/><text x="12.5513%" y="1087.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.04%)</title><rect x="12.3391%" y="1061" width="0.0379%" height="15" fill="rgb(221,47,46)" fg:x="326" fg:w="1"/><text x="12.5891%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="12.3391%" y="1045" width="0.0379%" height="15" fill="rgb(249,23,13)" fg:x="326" fg:w="1"/><text x="12.5891%" y="1055.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="12.3391%" y="1029" width="0.0379%" height="15" fill="rgb(219,9,5)" fg:x="326" fg:w="1"/><text x="12.5891%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="12.3391%" y="1013" width="0.0379%" height="15" fill="rgb(254,171,16)" fg:x="326" fg:w="1"/><text x="12.5891%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="12.3391%" y="997" width="0.0379%" height="15" fill="rgb(230,171,20)" fg:x="326" fg:w="1"/><text x="12.5891%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="12.3391%" y="981" width="0.0379%" height="15" fill="rgb(210,71,41)" fg:x="326" fg:w="1"/><text x="12.5891%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="12.3391%" y="965" width="0.0379%" height="15" fill="rgb(206,173,20)" fg:x="326" fg:w="1"/><text x="12.5891%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="12.3391%" y="949" width="0.0379%" height="15" fill="rgb(233,88,34)" fg:x="326" fg:w="1"/><text x="12.5891%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (1 samples, 0.04%)</title><rect x="12.3770%" y="1173" width="0.0379%" height="15" fill="rgb(223,209,46)" fg:x="327" fg:w="1"/><text x="12.6270%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="12.3770%" y="1157" width="0.0379%" height="15" fill="rgb(250,43,18)" fg:x="327" fg:w="1"/><text x="12.6270%" y="1167.50"></text></g><g><title>core::str::&lt;impl str&gt;::strip_suffix (1 samples, 0.04%)</title><rect x="12.4148%" y="1173" width="0.0379%" height="15" fill="rgb(208,13,10)" fg:x="328" fg:w="1"/><text x="12.6648%" y="1183.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_suffix_of (1 samples, 0.04%)</title><rect x="12.4148%" y="1157" width="0.0379%" height="15" fill="rgb(212,200,36)" fg:x="328" fg:w="1"/><text x="12.6648%" y="1167.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (1 samples, 0.04%)</title><rect x="12.4148%" y="1141" width="0.0379%" height="15" fill="rgb(225,90,30)" fg:x="328" fg:w="1"/><text x="12.6648%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (1 samples, 0.04%)</title><rect x="12.4148%" y="1125" width="0.0379%" height="15" fill="rgb(236,182,39)" fg:x="328" fg:w="1"/><text x="12.6648%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="12.4148%" y="1109" width="0.0379%" height="15" fill="rgb(212,144,35)" fg:x="328" fg:w="1"/><text x="12.6648%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1 samples, 0.04%)</title><rect x="12.4148%" y="1093" width="0.0379%" height="15" fill="rgb(228,63,44)" fg:x="328" fg:w="1"/><text x="12.6648%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="12.4148%" y="1077" width="0.0379%" height="15" fill="rgb(228,109,6)" fg:x="328" fg:w="1"/><text x="12.6648%" y="1087.50"></text></g><g><title>poem::request::Request::data (1 samples, 0.04%)</title><rect x="12.4527%" y="1173" width="0.0379%" height="15" fill="rgb(238,117,24)" fg:x="329" fg:w="1"/><text x="12.7027%" y="1183.50"></text></g><g><title>http::extensions::Extensions::get (1 samples, 0.04%)</title><rect x="12.4527%" y="1157" width="0.0379%" height="15" fill="rgb(242,26,26)" fg:x="329" fg:w="1"/><text x="12.7027%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.04%)</title><rect x="12.4527%" y="1141" width="0.0379%" height="15" fill="rgb(221,92,48)" fg:x="329" fg:w="1"/><text x="12.7027%" y="1151.50"></text></g><g><title>http::extensions::Extensions::get::_{{closure}} (1 samples, 0.04%)</title><rect x="12.4527%" y="1125" width="0.0379%" height="15" fill="rgb(209,209,32)" fg:x="329" fg:w="1"/><text x="12.7027%" y="1135.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (1 samples, 0.04%)</title><rect x="12.4527%" y="1109" width="0.0379%" height="15" fill="rgb(221,70,22)" fg:x="329" fg:w="1"/><text x="12.7027%" y="1119.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (1 samples, 0.04%)</title><rect x="12.4527%" y="1093" width="0.0379%" height="15" fill="rgb(248,145,5)" fg:x="329" fg:w="1"/><text x="12.7027%" y="1103.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (1 samples, 0.04%)</title><rect x="12.4527%" y="1077" width="0.0379%" height="15" fill="rgb(226,116,26)" fg:x="329" fg:w="1"/><text x="12.7027%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.04%)</title><rect x="12.4905%" y="1141" width="0.0379%" height="15" fill="rgb(244,5,17)" fg:x="330" fg:w="1"/><text x="12.7405%" y="1151.50"></text></g><g><title>http::extensions::Extensions::insert::_{{closure}} (1 samples, 0.04%)</title><rect x="12.4905%" y="1125" width="0.0379%" height="15" fill="rgb(252,159,33)" fg:x="330" fg:w="1"/><text x="12.7405%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="12.5284%" y="1093" width="0.0757%" height="15" fill="rgb(206,71,0)" fg:x="331" fg:w="2"/><text x="12.7784%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.08%)</title><rect x="12.5284%" y="1077" width="0.0757%" height="15" fill="rgb(233,118,54)" fg:x="331" fg:w="2"/><text x="12.7784%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.08%)</title><rect x="12.5284%" y="1061" width="0.0757%" height="15" fill="rgb(234,83,48)" fg:x="331" fg:w="2"/><text x="12.7784%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.08%)</title><rect x="12.5284%" y="1045" width="0.0757%" height="15" fill="rgb(228,3,54)" fg:x="331" fg:w="2"/><text x="12.7784%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (2 samples, 0.08%)</title><rect x="12.5284%" y="1029" width="0.0757%" height="15" fill="rgb(226,155,13)" fg:x="331" fg:w="2"/><text x="12.7784%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (2 samples, 0.08%)</title><rect x="12.5284%" y="1013" width="0.0757%" height="15" fill="rgb(241,28,37)" fg:x="331" fg:w="2"/><text x="12.7784%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (2 samples, 0.08%)</title><rect x="12.5284%" y="997" width="0.0757%" height="15" fill="rgb(233,93,10)" fg:x="331" fg:w="2"/><text x="12.7784%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.04%)</title><rect x="12.5662%" y="981" width="0.0379%" height="15" fill="rgb(225,113,19)" fg:x="332" fg:w="1"/><text x="12.8162%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.04%)</title><rect x="12.5662%" y="965" width="0.0379%" height="15" fill="rgb(241,2,18)" fg:x="332" fg:w="1"/><text x="12.8162%" y="975.50"></text></g><g><title>poem::request::Request::set_data (4 samples, 0.15%)</title><rect x="12.4905%" y="1173" width="0.1514%" height="15" fill="rgb(228,207,21)" fg:x="330" fg:w="4"/><text x="12.7405%" y="1183.50"></text></g><g><title>http::extensions::Extensions::insert (4 samples, 0.15%)</title><rect x="12.4905%" y="1157" width="0.1514%" height="15" fill="rgb(213,211,35)" fg:x="330" fg:w="4"/><text x="12.7405%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.11%)</title><rect x="12.5284%" y="1141" width="0.1136%" height="15" fill="rgb(209,83,10)" fg:x="331" fg:w="3"/><text x="12.7784%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.11%)</title><rect x="12.5284%" y="1125" width="0.1136%" height="15" fill="rgb(209,164,1)" fg:x="331" fg:w="3"/><text x="12.7784%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3 samples, 0.11%)</title><rect x="12.5284%" y="1109" width="0.1136%" height="15" fill="rgb(213,184,43)" fg:x="331" fg:w="3"/><text x="12.7784%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.04%)</title><rect x="12.6041%" y="1093" width="0.0379%" height="15" fill="rgb(231,61,34)" fg:x="333" fg:w="1"/><text x="12.8541%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="12.6041%" y="1077" width="0.0379%" height="15" fill="rgb(235,75,3)" fg:x="333" fg:w="1"/><text x="12.8541%" y="1087.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.04%)</title><rect x="12.6041%" y="1061" width="0.0379%" height="15" fill="rgb(220,106,47)" fg:x="333" fg:w="1"/><text x="12.8541%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::strip_prefix (1 samples, 0.04%)</title><rect x="12.6419%" y="1141" width="0.0379%" height="15" fill="rgb(210,196,33)" fg:x="334" fg:w="1"/><text x="12.8919%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="12.6419%" y="1125" width="0.0379%" height="15" fill="rgb(229,154,42)" fg:x="334" fg:w="1"/><text x="12.8919%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1 samples, 0.04%)</title><rect x="12.6419%" y="1109" width="0.0379%" height="15" fill="rgb(228,114,26)" fg:x="334" fg:w="1"/><text x="12.8919%" y="1119.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="12.6419%" y="1093" width="0.0379%" height="15" fill="rgb(208,144,1)" fg:x="334" fg:w="1"/><text x="12.8919%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="12.6419%" y="1077" width="0.0379%" height="15" fill="rgb(239,112,37)" fg:x="334" fg:w="1"/><text x="12.8919%" y="1087.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (16 samples, 0.61%)</title><rect x="12.1499%" y="1189" width="0.6056%" height="15" fill="rgb(210,96,50)" fg:x="321" fg:w="16"/><text x="12.3999%" y="1199.50"></text></g><g><title>poem::route::internal::radix_tree::RadixTree&lt;T&gt;::matches (3 samples, 0.11%)</title><rect x="12.6419%" y="1173" width="0.1136%" height="15" fill="rgb(222,178,2)" fg:x="334" fg:w="3"/><text x="12.8919%" y="1183.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::matches (3 samples, 0.11%)</title><rect x="12.6419%" y="1157" width="0.1136%" height="15" fill="rgb(226,74,18)" fg:x="334" fg:w="3"/><text x="12.8919%" y="1167.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::find_static_child (2 samples, 0.08%)</title><rect x="12.6798%" y="1141" width="0.0757%" height="15" fill="rgb(225,67,54)" fg:x="335" fg:w="2"/><text x="12.9298%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.08%)</title><rect x="12.6798%" y="1125" width="0.0757%" height="15" fill="rgb(251,92,32)" fg:x="335" fg:w="2"/><text x="12.9298%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.08%)</title><rect x="12.6798%" y="1109" width="0.0757%" height="15" fill="rgb(228,149,22)" fg:x="335" fg:w="2"/><text x="12.9298%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.04%)</title><rect x="12.7176%" y="1093" width="0.0379%" height="15" fill="rgb(243,54,13)" fg:x="336" fg:w="1"/><text x="12.9676%" y="1103.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::find_static_child::_{{closure}} (1 samples, 0.04%)</title><rect x="12.7176%" y="1077" width="0.0379%" height="15" fill="rgb(243,180,28)" fg:x="336" fg:w="1"/><text x="12.9676%" y="1087.50"></text></g><g><title>poem::web::cookie::CookieJar::append_delta_to_headers (1 samples, 0.04%)</title><rect x="12.7555%" y="1189" width="0.0379%" height="15" fill="rgb(208,167,24)" fg:x="337" fg:w="1"/><text x="13.0055%" y="1199.50"></text></g><g><title>&lt;http::header::map::GetAll&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="12.8312%" y="1173" width="0.0379%" height="15" fill="rgb(245,73,45)" fg:x="339" fg:w="1"/><text x="13.0812%" y="1183.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::value_iter (1 samples, 0.04%)</title><rect x="12.8312%" y="1157" width="0.0379%" height="15" fill="rgb(237,203,48)" fg:x="339" fg:w="1"/><text x="13.0812%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="12.8690%" y="1173" width="0.0379%" height="15" fill="rgb(211,197,16)" fg:x="340" fg:w="1"/><text x="13.1190%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="12.8690%" y="1157" width="0.0379%" height="15" fill="rgb(243,99,51)" fg:x="340" fg:w="1"/><text x="13.1190%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="12.8690%" y="1141" width="0.0379%" height="15" fill="rgb(215,123,29)" fg:x="340" fg:w="1"/><text x="13.1190%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="12.8690%" y="1125" width="0.0379%" height="15" fill="rgb(239,186,37)" fg:x="340" fg:w="1"/><text x="13.1190%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="12.8690%" y="1109" width="0.0379%" height="15" fill="rgb(252,136,39)" fg:x="340" fg:w="1"/><text x="13.1190%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="12.8690%" y="1093" width="0.0379%" height="15" fill="rgb(223,213,32)" fg:x="340" fg:w="1"/><text x="13.1190%" y="1103.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="12.8690%" y="1077" width="0.0379%" height="15" fill="rgb(233,115,5)" fg:x="340" fg:w="1"/><text x="13.1190%" y="1087.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="12.8690%" y="1061" width="0.0379%" height="15" fill="rgb(207,226,44)" fg:x="340" fg:w="1"/><text x="13.1190%" y="1071.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="12.8690%" y="1045" width="0.0379%" height="15" fill="rgb(208,126,0)" fg:x="340" fg:w="1"/><text x="13.1190%" y="1055.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (3 samples, 0.11%)</title><rect x="12.9069%" y="1157" width="0.1136%" height="15" fill="rgb(244,66,21)" fg:x="341" fg:w="3"/><text x="13.1569%" y="1167.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (3 samples, 0.11%)</title><rect x="12.9069%" y="1141" width="0.1136%" height="15" fill="rgb(222,97,12)" fg:x="341" fg:w="3"/><text x="13.1569%" y="1151.50"></text></g><g><title>http::header::map::hash_elem_using (2 samples, 0.08%)</title><rect x="12.9447%" y="1125" width="0.0757%" height="15" fill="rgb(219,213,19)" fg:x="342" fg:w="2"/><text x="13.1947%" y="1135.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (2 samples, 0.08%)</title><rect x="12.9447%" y="1109" width="0.0757%" height="15" fill="rgb(252,169,30)" fg:x="342" fg:w="2"/><text x="13.1947%" y="1119.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (2 samples, 0.08%)</title><rect x="12.9447%" y="1093" width="0.0757%" height="15" fill="rgb(206,32,51)" fg:x="342" fg:w="2"/><text x="13.1947%" y="1103.50"></text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (24 samples, 0.91%)</title><rect x="12.1499%" y="1205" width="0.9084%" height="15" fill="rgb(250,172,42)" fg:x="321" fg:w="24"/><text x="12.3999%" y="1215.50"></text></g><g><title>poem::web::cookie::CookieJar::extract_from_headers (7 samples, 0.26%)</title><rect x="12.7933%" y="1189" width="0.2650%" height="15" fill="rgb(209,34,43)" fg:x="338" fg:w="7"/><text x="13.0433%" y="1199.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get_all (4 samples, 0.15%)</title><rect x="12.9069%" y="1173" width="0.1514%" height="15" fill="rgb(223,11,35)" fg:x="341" fg:w="4"/><text x="13.1569%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::HeaderName&gt; (1 samples, 0.04%)</title><rect x="13.0204%" y="1157" width="0.0379%" height="15" fill="rgb(251,219,26)" fg:x="344" fg:w="1"/><text x="13.2704%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Repr&lt;http::header::name::Custom&gt;&gt; (1 samples, 0.04%)</title><rect x="13.0204%" y="1141" width="0.0379%" height="15" fill="rgb(231,119,3)" fg:x="344" fg:w="1"/><text x="13.2704%" y="1151.50"></text></g><g><title>http::extensions::Extensions::insert (1 samples, 0.04%)</title><rect x="13.0583%" y="1189" width="0.0379%" height="15" fill="rgb(216,97,11)" fg:x="345" fg:w="1"/><text x="13.3083%" y="1199.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="13.0583%" y="1173" width="0.0379%" height="15" fill="rgb(223,59,9)" fg:x="345" fg:w="1"/><text x="13.3083%" y="1183.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="13.0583%" y="1157" width="0.0379%" height="15" fill="rgb(233,93,31)" fg:x="345" fg:w="1"/><text x="13.3083%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="13.0583%" y="1141" width="0.0379%" height="15" fill="rgb(239,81,33)" fg:x="345" fg:w="1"/><text x="13.3083%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="13.0583%" y="1125" width="0.0379%" height="15" fill="rgb(213,120,34)" fg:x="345" fg:w="1"/><text x="13.3083%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="13.0583%" y="1109" width="0.0379%" height="15" fill="rgb(243,49,53)" fg:x="345" fg:w="1"/><text x="13.3083%" y="1119.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="13.0583%" y="1093" width="0.0379%" height="15" fill="rgb(247,216,33)" fg:x="345" fg:w="1"/><text x="13.3083%" y="1103.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="13.0583%" y="1077" width="0.0379%" height="15" fill="rgb(226,26,14)" fg:x="345" fg:w="1"/><text x="13.3083%" y="1087.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="13.0583%" y="1061" width="0.0379%" height="15" fill="rgb(215,49,53)" fg:x="345" fg:w="1"/><text x="13.3083%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="13.0961%" y="1093" width="0.0379%" height="15" fill="rgb(245,162,40)" fg:x="346" fg:w="1"/><text x="13.3461%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.04%)</title><rect x="13.0961%" y="1077" width="0.0379%" height="15" fill="rgb(229,68,17)" fg:x="346" fg:w="1"/><text x="13.3461%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="13.0961%" y="1061" width="0.0379%" height="15" fill="rgb(213,182,10)" fg:x="346" fg:w="1"/><text x="13.3461%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="13.0961%" y="1045" width="0.0379%" height="15" fill="rgb(245,125,30)" fg:x="346" fg:w="1"/><text x="13.3461%" y="1055.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="13.0961%" y="1029" width="0.0379%" height="15" fill="rgb(232,202,2)" fg:x="346" fg:w="1"/><text x="13.3461%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.04%)</title><rect x="13.1340%" y="1061" width="0.0379%" height="15" fill="rgb(237,140,51)" fg:x="347" fg:w="1"/><text x="13.3840%" y="1071.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for (T0,T1)&gt;::deserialize (1 samples, 0.04%)</title><rect x="13.1340%" y="1045" width="0.0379%" height="15" fill="rgb(236,157,25)" fg:x="347" fg:w="1"/><text x="13.3840%" y="1055.50"></text></g><g><title>&lt;serde::de::value::PairDeserializer&lt;A,B,E&gt; as serde::de::Deserializer&gt;::deserialize_tuple (1 samples, 0.04%)</title><rect x="13.1340%" y="1029" width="0.0379%" height="15" fill="rgb(219,209,0)" fg:x="347" fg:w="1"/><text x="13.3840%" y="1039.50"></text></g><g><title>&lt;serde::de::value::PairDeserializer&lt;A,B,E&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.04%)</title><rect x="13.1340%" y="1013" width="0.0379%" height="15" fill="rgb(240,116,54)" fg:x="347" fg:w="1"/><text x="13.3840%" y="1023.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for (T0,T1)&gt;::deserialize::TupleVisitor&lt;T0,T1&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.04%)</title><rect x="13.1340%" y="997" width="0.0379%" height="15" fill="rgb(216,10,36)" fg:x="347" fg:w="1"/><text x="13.3840%" y="1007.50"></text></g><g><title>&lt;&amp;mut A as serde::de::SeqAccess&gt;::next_element (1 samples, 0.04%)</title><rect x="13.1340%" y="981" width="0.0379%" height="15" fill="rgb(222,72,44)" fg:x="347" fg:w="1"/><text x="13.3840%" y="991.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.04%)</title><rect x="13.1340%" y="965" width="0.0379%" height="15" fill="rgb(232,159,9)" fg:x="347" fg:w="1"/><text x="13.3840%" y="975.50"></text></g><g><title>&lt;serde::de::value::PairVisitor&lt;A,B,E&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.04%)</title><rect x="13.1340%" y="949" width="0.0379%" height="15" fill="rgb(210,39,32)" fg:x="347" fg:w="1"/><text x="13.3840%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.04%)</title><rect x="13.1340%" y="933" width="0.0379%" height="15" fill="rgb(216,194,45)" fg:x="347" fg:w="1"/><text x="13.3840%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.04%)</title><rect x="13.1340%" y="917" width="0.0379%" height="15" fill="rgb(218,18,35)" fg:x="347" fg:w="1"/><text x="13.3840%" y="927.50"></text></g><g><title>&lt;serde_urlencoded::de::Part as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.04%)</title><rect x="13.1340%" y="901" width="0.0379%" height="15" fill="rgb(207,83,51)" fg:x="347" fg:w="1"/><text x="13.3840%" y="911.50"></text></g><g><title>&lt;serde_urlencoded::de::Part as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.04%)</title><rect x="13.1340%" y="885" width="0.0379%" height="15" fill="rgb(225,63,43)" fg:x="347" fg:w="1"/><text x="13.3840%" y="895.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.04%)</title><rect x="13.1340%" y="869" width="0.0379%" height="15" fill="rgb(207,57,36)" fg:x="347" fg:w="1"/><text x="13.3840%" y="879.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.04%)</title><rect x="13.1340%" y="853" width="0.0379%" height="15" fill="rgb(216,99,33)" fg:x="347" fg:w="1"/><text x="13.3840%" y="863.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="13.1340%" y="837" width="0.0379%" height="15" fill="rgb(225,42,16)" fg:x="347" fg:w="1"/><text x="13.3840%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="13.1340%" y="821" width="0.0379%" height="15" fill="rgb(220,201,45)" fg:x="347" fg:w="1"/><text x="13.3840%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="13.1340%" y="805" width="0.0379%" height="15" fill="rgb(225,33,4)" fg:x="347" fg:w="1"/><text x="13.3840%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="13.1340%" y="789" width="0.0379%" height="15" fill="rgb(224,33,50)" fg:x="347" fg:w="1"/><text x="13.3840%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="13.1340%" y="773" width="0.0379%" height="15" fill="rgb(246,198,51)" fg:x="347" fg:w="1"/><text x="13.3840%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="13.1340%" y="757" width="0.0379%" height="15" fill="rgb(205,22,4)" fg:x="347" fg:w="1"/><text x="13.3840%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="13.1340%" y="741" width="0.0379%" height="15" fill="rgb(206,3,8)" fg:x="347" fg:w="1"/><text x="13.3840%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="13.1340%" y="725" width="0.0379%" height="15" fill="rgb(251,23,15)" fg:x="347" fg:w="1"/><text x="13.3840%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="13.1340%" y="709" width="0.0379%" height="15" fill="rgb(252,88,28)" fg:x="347" fg:w="1"/><text x="13.3840%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="13.1340%" y="693" width="0.0379%" height="15" fill="rgb(212,127,14)" fg:x="347" fg:w="1"/><text x="13.3840%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="13.1340%" y="677" width="0.0379%" height="15" fill="rgb(247,145,37)" fg:x="347" fg:w="1"/><text x="13.3840%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="13.1340%" y="661" width="0.0379%" height="15" fill="rgb(209,117,53)" fg:x="347" fg:w="1"/><text x="13.3840%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="13.1340%" y="645" width="0.0379%" height="15" fill="rgb(212,90,42)" fg:x="347" fg:w="1"/><text x="13.3840%" y="655.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="13.1340%" y="629" width="0.0379%" height="15" fill="rgb(218,164,37)" fg:x="347" fg:w="1"/><text x="13.3840%" y="639.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="13.1340%" y="613" width="0.0379%" height="15" fill="rgb(246,65,34)" fg:x="347" fg:w="1"/><text x="13.3840%" y="623.50"></text></g><g><title>&lt;core::slice::iter::SplitN&lt;T,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="13.1718%" y="949" width="0.0379%" height="15" fill="rgb(231,100,33)" fg:x="348" fg:w="1"/><text x="13.4218%" y="959.50"></text></g><g><title>&lt;core::slice::iter::GenericSplitN&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="13.1718%" y="933" width="0.0379%" height="15" fill="rgb(228,126,14)" fg:x="348" fg:w="1"/><text x="13.4218%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Split&lt;T,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="13.1718%" y="917" width="0.0379%" height="15" fill="rgb(215,173,21)" fg:x="348" fg:w="1"/><text x="13.4218%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.04%)</title><rect x="13.1718%" y="901" width="0.0379%" height="15" fill="rgb(210,6,40)" fg:x="348" fg:w="1"/><text x="13.4218%" y="911.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.08%)</title><rect x="13.2097%" y="949" width="0.0757%" height="15" fill="rgb(212,48,18)" fg:x="349" fg:w="2"/><text x="13.4597%" y="959.50"></text></g><g><title>&lt;poem_openapi::openapi::OpenApiService&lt;T,W&gt; as poem::endpoint::endpoint::IntoEndpoint&gt;::into_endpoint::extract_query::_{{closure}} (8 samples, 0.30%)</title><rect x="13.0583%" y="1205" width="0.3028%" height="15" fill="rgb(230,214,11)" fg:x="345" fg:w="8"/><text x="13.3083%" y="1215.50"></text></g><g><title>poem::request::Request::params (7 samples, 0.26%)</title><rect x="13.0961%" y="1189" width="0.2650%" height="15" fill="rgb(254,105,39)" fg:x="346" fg:w="7"/><text x="13.3461%" y="1199.50"></text></g><g><title>serde_urlencoded::de::from_str (7 samples, 0.26%)</title><rect x="13.0961%" y="1173" width="0.2650%" height="15" fill="rgb(245,158,5)" fg:x="346" fg:w="7"/><text x="13.3461%" y="1183.50"></text></g><g><title>serde_urlencoded::de::from_bytes (7 samples, 0.26%)</title><rect x="13.0961%" y="1157" width="0.2650%" height="15" fill="rgb(249,208,11)" fg:x="346" fg:w="7"/><text x="13.3461%" y="1167.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (7 samples, 0.26%)</title><rect x="13.0961%" y="1141" width="0.2650%" height="15" fill="rgb(210,39,28)" fg:x="346" fg:w="7"/><text x="13.3461%" y="1151.50"></text></g><g><title>&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (7 samples, 0.26%)</title><rect x="13.0961%" y="1125" width="0.2650%" height="15" fill="rgb(211,56,53)" fg:x="346" fg:w="7"/><text x="13.3461%" y="1135.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.26%)</title><rect x="13.0961%" y="1109" width="0.2650%" height="15" fill="rgb(226,201,30)" fg:x="346" fg:w="7"/><text x="13.3461%" y="1119.50"></text></g><g><title>serde::de::SeqAccess::next_element (6 samples, 0.23%)</title><rect x="13.1340%" y="1093" width="0.2271%" height="15" fill="rgb(239,101,34)" fg:x="347" fg:w="6"/><text x="13.3840%" y="1103.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::SeqAccess&gt;::next_element_seed (6 samples, 0.23%)</title><rect x="13.1340%" y="1077" width="0.2271%" height="15" fill="rgb(226,209,5)" fg:x="347" fg:w="6"/><text x="13.3840%" y="1087.50"></text></g><g><title>serde::de::value::MapDeserializer&lt;I,E&gt;::next_pair (5 samples, 0.19%)</title><rect x="13.1718%" y="1061" width="0.1893%" height="15" fill="rgb(250,105,47)" fg:x="348" fg:w="5"/><text x="13.4218%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.19%)</title><rect x="13.1718%" y="1045" width="0.1893%" height="15" fill="rgb(230,72,3)" fg:x="348" fg:w="5"/><text x="13.4218%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (5 samples, 0.19%)</title><rect x="13.1718%" y="1029" width="0.1893%" height="15" fill="rgb(232,218,39)" fg:x="348" fg:w="5"/><text x="13.4218%" y="1039.50"></text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (5 samples, 0.19%)</title><rect x="13.1718%" y="1013" width="0.1893%" height="15" fill="rgb(248,166,6)" fg:x="348" fg:w="5"/><text x="13.4218%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.19%)</title><rect x="13.1718%" y="997" width="0.1893%" height="15" fill="rgb(247,89,20)" fg:x="348" fg:w="5"/><text x="13.4218%" y="1007.50"></text></g><g><title>&lt;serde_urlencoded::de::PartIterator as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.19%)</title><rect x="13.1718%" y="981" width="0.1893%" height="15" fill="rgb(248,130,54)" fg:x="348" fg:w="5"/><text x="13.4218%" y="991.50"></text></g><g><title>&lt;form_urlencoded::Parse as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.19%)</title><rect x="13.1718%" y="965" width="0.1893%" height="15" fill="rgb(234,196,4)" fg:x="348" fg:w="5"/><text x="13.4218%" y="975.50"></text></g><g><title>form_urlencoded::decode (2 samples, 0.08%)</title><rect x="13.2854%" y="949" width="0.0757%" height="15" fill="rgb(250,143,31)" fg:x="351" fg:w="2"/><text x="13.5354%" y="959.50"></text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (36 samples, 1.36%)</title><rect x="12.0363%" y="1221" width="1.3626%" height="15" fill="rgb(211,110,34)" fg:x="318" fg:w="36"/><text x="12.2863%" y="1231.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="13.3611%" y="1205" width="0.0379%" height="15" fill="rgb(215,124,48)" fg:x="353" fg:w="1"/><text x="13.6111%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (39 samples, 1.48%)</title><rect x="11.9985%" y="1621" width="1.4762%" height="15" fill="rgb(216,46,13)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1631.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (39 samples, 1.48%)</title><rect x="11.9985%" y="1605" width="1.4762%" height="15" fill="rgb(205,184,25)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1615.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (39 samples, 1.48%)</title><rect x="11.9985%" y="1589" width="1.4762%" height="15" fill="rgb(228,1,10)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1599.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (39 samples, 1.48%)</title><rect x="11.9985%" y="1573" width="1.4762%" height="15" fill="rgb(213,116,27)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1583.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (39 samples, 1.48%)</title><rect x="11.9985%" y="1557" width="1.4762%" height="15" fill="rgb(241,95,50)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1567.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (39 samples, 1.48%)</title><rect x="11.9985%" y="1541" width="1.4762%" height="15" fill="rgb(238,48,32)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1551.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (39 samples, 1.48%)</title><rect x="11.9985%" y="1525" width="1.4762%" height="15" fill="rgb(235,113,49)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1535.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (39 samples, 1.48%)</title><rect x="11.9985%" y="1509" width="1.4762%" height="15" fill="rgb(205,127,43)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1519.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (39 samples, 1.48%)</title><rect x="11.9985%" y="1493" width="1.4762%" height="15" fill="rgb(250,162,2)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1503.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1477" width="1.4762%" height="15" fill="rgb(220,13,41)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1487.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1461" width="1.4762%" height="15" fill="rgb(249,221,25)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1471.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1445" width="1.4762%" height="15" fill="rgb(215,208,19)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1455.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1429" width="1.4762%" height="15" fill="rgb(236,175,2)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1439.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (39 samples, 1.48%)</title><rect x="11.9985%" y="1413" width="1.4762%" height="15" fill="rgb(241,52,2)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1423.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1397" width="1.4762%" height="15" fill="rgb(248,140,14)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1407.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1381" width="1.4762%" height="15" fill="rgb(253,22,42)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1391.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1365" width="1.4762%" height="15" fill="rgb(234,61,47)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1375.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1349" width="1.4762%" height="15" fill="rgb(208,226,15)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1359.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (39 samples, 1.48%)</title><rect x="11.9985%" y="1333" width="1.4762%" height="15" fill="rgb(217,221,4)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1343.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1317" width="1.4762%" height="15" fill="rgb(212,174,34)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1301" width="1.4762%" height="15" fill="rgb(253,83,4)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1285" width="1.4762%" height="15" fill="rgb(250,195,49)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1295.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1269" width="1.4762%" height="15" fill="rgb(241,192,25)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (39 samples, 1.48%)</title><rect x="11.9985%" y="1253" width="1.4762%" height="15" fill="rgb(208,124,10)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1263.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (39 samples, 1.48%)</title><rect x="11.9985%" y="1237" width="1.4762%" height="15" fill="rgb(222,33,0)" fg:x="317" fg:w="39"/><text x="12.2485%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;poem::endpoint::before::Before&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;poem::route::router::Route&gt;,&lt;poem_openapi::openapi::OpenApiService&lt;T,W&gt; as poem::endpoint::endpoint::IntoEndpoint&gt;::into_endpoint::extract_query&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}&gt; (2 samples, 0.08%)</title><rect x="13.3989%" y="1221" width="0.0757%" height="15" fill="rgb(234,209,28)" fg:x="354" fg:w="2"/><text x="13.6489%" y="1231.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1 samples, 0.04%)</title><rect x="13.4746%" y="1173" width="0.0379%" height="15" fill="rgb(224,11,23)" fg:x="356" fg:w="1"/><text x="13.7246%" y="1183.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="13.4746%" y="1157" width="0.0379%" height="15" fill="rgb(232,99,1)" fg:x="356" fg:w="1"/><text x="13.7246%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="13.5125%" y="1141" width="0.0379%" height="15" fill="rgb(237,95,45)" fg:x="357" fg:w="1"/><text x="13.7625%" y="1151.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::pop_idle (1 samples, 0.04%)</title><rect x="13.5503%" y="1141" width="0.0379%" height="15" fill="rgb(208,109,11)" fg:x="358" fg:w="1"/><text x="13.8003%" y="1151.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="13.7017%" y="1061" width="0.0379%" height="15" fill="rgb(216,190,48)" fg:x="362" fg:w="1"/><text x="13.9517%" y="1071.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (2 samples, 0.08%)</title><rect x="13.7017%" y="1077" width="0.0757%" height="15" fill="rgb(251,171,36)" fg:x="362" fg:w="2"/><text x="13.9517%" y="1087.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::ok (1 samples, 0.04%)</title><rect x="13.7396%" y="1061" width="0.0379%" height="15" fill="rgb(230,62,22)" fg:x="363" fg:w="1"/><text x="13.9896%" y="1071.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode (1 samples, 0.04%)</title><rect x="13.7396%" y="1045" width="0.0379%" height="15" fill="rgb(225,114,35)" fg:x="363" fg:w="1"/><text x="13.9896%" y="1055.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (1 samples, 0.04%)</title><rect x="13.7396%" y="1029" width="0.0379%" height="15" fill="rgb(215,118,42)" fg:x="363" fg:w="1"/><text x="13.9896%" y="1039.50"></text></g><g><title>&lt;sqlx_mysql::protocol::response::ok::OkPacket as sqlx_core::io::decode::Decode&gt;::decode_with (1 samples, 0.04%)</title><rect x="13.7396%" y="1013" width="0.0379%" height="15" fill="rgb(243,119,21)" fg:x="363" fg:w="1"/><text x="13.9896%" y="1023.50"></text></g><g><title>fabseapi::Api::traffic_light_insert::_{{closure}} (10 samples, 0.38%)</title><rect x="13.4746%" y="1445" width="0.3785%" height="15" fill="rgb(252,177,53)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1455.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (10 samples, 0.38%)</title><rect x="13.4746%" y="1429" width="0.3785%" height="15" fill="rgb(237,209,29)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1439.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10 samples, 0.38%)</title><rect x="13.4746%" y="1413" width="0.3785%" height="15" fill="rgb(212,65,23)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1423.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (10 samples, 0.38%)</title><rect x="13.4746%" y="1397" width="0.3785%" height="15" fill="rgb(230,222,46)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1407.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (10 samples, 0.38%)</title><rect x="13.4746%" y="1381" width="0.3785%" height="15" fill="rgb(215,135,32)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1391.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.4746%" y="1365" width="0.3785%" height="15" fill="rgb(246,101,22)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1375.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.4746%" y="1349" width="0.3785%" height="15" fill="rgb(206,107,13)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1359.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (10 samples, 0.38%)</title><rect x="13.4746%" y="1333" width="0.3785%" height="15" fill="rgb(250,100,44)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.4746%" y="1317" width="0.3785%" height="15" fill="rgb(231,147,38)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1327.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.4746%" y="1301" width="0.3785%" height="15" fill="rgb(229,8,40)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1311.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (10 samples, 0.38%)</title><rect x="13.4746%" y="1285" width="0.3785%" height="15" fill="rgb(221,135,30)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (10 samples, 0.38%)</title><rect x="13.4746%" y="1269" width="0.3785%" height="15" fill="rgb(249,193,18)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10 samples, 0.38%)</title><rect x="13.4746%" y="1253" width="0.3785%" height="15" fill="rgb(209,133,39)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1263.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (10 samples, 0.38%)</title><rect x="13.4746%" y="1237" width="0.3785%" height="15" fill="rgb(232,100,14)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1247.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (10 samples, 0.38%)</title><rect x="13.4746%" y="1221" width="0.3785%" height="15" fill="rgb(224,185,1)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1231.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (10 samples, 0.38%)</title><rect x="13.4746%" y="1205" width="0.3785%" height="15" fill="rgb(223,139,8)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1215.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (10 samples, 0.38%)</title><rect x="13.4746%" y="1189" width="0.3785%" height="15" fill="rgb(232,213,38)" fg:x="356" fg:w="10"/><text x="13.7246%" y="1199.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.34%)</title><rect x="13.5125%" y="1173" width="0.3407%" height="15" fill="rgb(207,94,22)" fg:x="357" fg:w="9"/><text x="13.7625%" y="1183.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (9 samples, 0.34%)</title><rect x="13.5125%" y="1157" width="0.3407%" height="15" fill="rgb(219,183,54)" fg:x="357" fg:w="9"/><text x="13.7625%" y="1167.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (7 samples, 0.26%)</title><rect x="13.5882%" y="1141" width="0.2650%" height="15" fill="rgb(216,185,54)" fg:x="359" fg:w="7"/><text x="13.8382%" y="1151.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (5 samples, 0.19%)</title><rect x="13.6639%" y="1125" width="0.1893%" height="15" fill="rgb(254,217,39)" fg:x="361" fg:w="5"/><text x="13.9139%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="13.6639%" y="1109" width="0.1893%" height="15" fill="rgb(240,178,23)" fg:x="361" fg:w="5"/><text x="13.9139%" y="1119.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (5 samples, 0.19%)</title><rect x="13.6639%" y="1093" width="0.1893%" height="15" fill="rgb(218,11,47)" fg:x="361" fg:w="5"/><text x="13.9139%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::send_packet::_{{closure}} (2 samples, 0.08%)</title><rect x="13.7774%" y="1077" width="0.0757%" height="15" fill="rgb(218,51,51)" fg:x="364" fg:w="2"/><text x="14.0274%" y="1087.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::flush::_{{closure}} (2 samples, 0.08%)</title><rect x="13.7774%" y="1061" width="0.0757%" height="15" fill="rgb(238,126,27)" fg:x="364" fg:w="2"/><text x="14.0274%" y="1071.50"></text></g><g><title>sqlx_core::net::socket::buffered::WriteBuffer::consume (1 samples, 0.04%)</title><rect x="13.8153%" y="1045" width="0.0379%" height="15" fill="rgb(249,202,22)" fg:x="365" fg:w="1"/><text x="14.0653%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::rt::timeout&lt;sqlx_core::pool::inner::PoolInner&lt;sqlx_mysql::database::MySql&gt;::acquire::{{closure}}::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="13.8531%" y="1189" width="0.0379%" height="15" fill="rgb(254,195,49)" fg:x="366" fg:w="1"/><text x="14.1031%" y="1199.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="13.8910%" y="1157" width="0.0379%" height="15" fill="rgb(208,123,14)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1167.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="13.8910%" y="1141" width="0.0379%" height="15" fill="rgb(224,200,8)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1151.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (1 samples, 0.04%)</title><rect x="13.8910%" y="1125" width="0.0379%" height="15" fill="rgb(217,61,36)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1135.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (1 samples, 0.04%)</title><rect x="13.8910%" y="1109" width="0.0379%" height="15" fill="rgb(206,35,45)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1119.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (1 samples, 0.04%)</title><rect x="13.8910%" y="1093" width="0.0379%" height="15" fill="rgb(217,65,33)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1103.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1 samples, 0.04%)</title><rect x="13.8910%" y="1077" width="0.0379%" height="15" fill="rgb(222,158,48)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1087.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1 samples, 0.04%)</title><rect x="13.8910%" y="1061" width="0.0379%" height="15" fill="rgb(254,2,54)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1071.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (1 samples, 0.04%)</title><rect x="13.8910%" y="1045" width="0.0379%" height="15" fill="rgb(250,143,38)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1055.50"></text></g><g><title>mio::waker::Waker::wake (1 samples, 0.04%)</title><rect x="13.8910%" y="1029" width="0.0379%" height="15" fill="rgb(248,25,0)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1039.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (1 samples, 0.04%)</title><rect x="13.8910%" y="1013" width="0.0379%" height="15" fill="rgb(206,152,27)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1023.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (1 samples, 0.04%)</title><rect x="13.8910%" y="997" width="0.0379%" height="15" fill="rgb(240,77,30)" fg:x="367" fg:w="1"/><text x="14.1410%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="13.8910%" y="981" width="0.0379%" height="15" fill="rgb(231,5,3)" fg:x="367" fg:w="1"/><text x="14.1410%" y="991.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1 samples, 0.04%)</title><rect x="13.8910%" y="965" width="0.0379%" height="15" fill="rgb(207,226,32)" fg:x="367" fg:w="1"/><text x="14.1410%" y="975.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1 samples, 0.04%)</title><rect x="13.8910%" y="949" width="0.0379%" height="15" fill="rgb(222,207,47)" fg:x="367" fg:w="1"/><text x="14.1410%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::inner::check_idle_conn&lt;sqlx_mysql::database::MySql&gt;::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="13.9288%" y="1141" width="0.0379%" height="15" fill="rgb(229,115,45)" fg:x="368" fg:w="1"/><text x="14.1788%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::connection::stream::MySqlStream&lt;alloc::boxed::Box&lt;dyn sqlx_core::net::socket::Socket&gt;&gt;::wait_until_ready::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="14.0045%" y="1077" width="0.0379%" height="15" fill="rgb(224,191,6)" fg:x="370" fg:w="1"/><text x="14.2545%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="14.0045%" y="1109" width="0.0757%" height="15" fill="rgb(230,227,24)" fg:x="370" fg:w="2"/><text x="14.2545%" y="1119.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (2 samples, 0.08%)</title><rect x="14.0045%" y="1093" width="0.0757%" height="15" fill="rgb(228,80,19)" fg:x="370" fg:w="2"/><text x="14.2545%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (1 samples, 0.04%)</title><rect x="14.0424%" y="1077" width="0.0379%" height="15" fill="rgb(247,229,0)" fg:x="371" fg:w="1"/><text x="14.2924%" y="1087.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="14.0424%" y="1061" width="0.0379%" height="15" fill="rgb(237,194,15)" fg:x="371" fg:w="1"/><text x="14.2924%" y="1071.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (1 samples, 0.04%)</title><rect x="14.0424%" y="1045" width="0.0379%" height="15" fill="rgb(219,203,20)" fg:x="371" fg:w="1"/><text x="14.2924%" y="1055.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="14.0424%" y="1029" width="0.0379%" height="15" fill="rgb(234,128,8)" fg:x="371" fg:w="1"/><text x="14.2924%" y="1039.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (1 samples, 0.04%)</title><rect x="14.0424%" y="1013" width="0.0379%" height="15" fill="rgb(248,202,8)" fg:x="371" fg:w="1"/><text x="14.2924%" y="1023.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (1 samples, 0.04%)</title><rect x="14.0424%" y="997" width="0.0379%" height="15" fill="rgb(206,104,37)" fg:x="371" fg:w="1"/><text x="14.2924%" y="1007.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (1 samples, 0.04%)</title><rect x="14.0424%" y="981" width="0.0379%" height="15" fill="rgb(223,8,27)" fg:x="371" fg:w="1"/><text x="14.2924%" y="991.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.0424%" y="965" width="0.0379%" height="15" fill="rgb(216,217,28)" fg:x="371" fg:w="1"/><text x="14.2924%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (1 samples, 0.04%)</title><rect x="14.0424%" y="949" width="0.0379%" height="15" fill="rgb(249,199,1)" fg:x="371" fg:w="1"/><text x="14.2924%" y="959.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (1 samples, 0.04%)</title><rect x="14.0424%" y="933" width="0.0379%" height="15" fill="rgb(240,85,17)" fg:x="371" fg:w="1"/><text x="14.2924%" y="943.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (1 samples, 0.04%)</title><rect x="14.0424%" y="917" width="0.0379%" height="15" fill="rgb(206,108,45)" fg:x="371" fg:w="1"/><text x="14.2924%" y="927.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="14.0424%" y="901" width="0.0379%" height="15" fill="rgb(245,210,41)" fg:x="371" fg:w="1"/><text x="14.2924%" y="911.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (1 samples, 0.04%)</title><rect x="14.0424%" y="885" width="0.0379%" height="15" fill="rgb(206,13,37)" fg:x="371" fg:w="1"/><text x="14.2924%" y="895.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="14.0424%" y="869" width="0.0379%" height="15" fill="rgb(250,61,18)" fg:x="371" fg:w="1"/><text x="14.2924%" y="879.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="14.0424%" y="853" width="0.0379%" height="15" fill="rgb(235,172,48)" fg:x="371" fg:w="1"/><text x="14.2924%" y="863.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="14.0424%" y="837" width="0.0379%" height="15" fill="rgb(249,201,17)" fg:x="371" fg:w="1"/><text x="14.2924%" y="847.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="14.0424%" y="821" width="0.0379%" height="15" fill="rgb(219,208,6)" fg:x="371" fg:w="1"/><text x="14.2924%" y="831.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="14.0424%" y="805" width="0.0379%" height="15" fill="rgb(248,31,23)" fg:x="371" fg:w="1"/><text x="14.2924%" y="815.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.04%)</title><rect x="14.0424%" y="789" width="0.0379%" height="15" fill="rgb(245,15,42)" fg:x="371" fg:w="1"/><text x="14.2924%" y="799.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1 samples, 0.04%)</title><rect x="14.0424%" y="773" width="0.0379%" height="15" fill="rgb(222,217,39)" fg:x="371" fg:w="1"/><text x="14.2924%" y="783.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1 samples, 0.04%)</title><rect x="14.0424%" y="757" width="0.0379%" height="15" fill="rgb(210,219,27)" fg:x="371" fg:w="1"/><text x="14.2924%" y="767.50"></text></g><g><title>recv (1 samples, 0.04%)</title><rect x="14.0424%" y="741" width="0.0379%" height="15" fill="rgb(252,166,36)" fg:x="371" fg:w="1"/><text x="14.2924%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="14.0424%" y="725" width="0.0379%" height="15" fill="rgb(245,132,34)" fg:x="371" fg:w="1"/><text x="14.2924%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="14.0424%" y="709" width="0.0379%" height="15" fill="rgb(236,54,3)" fg:x="371" fg:w="1"/><text x="14.2924%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="14.0424%" y="693" width="0.0379%" height="15" fill="rgb(241,173,43)" fg:x="371" fg:w="1"/><text x="14.2924%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="14.0424%" y="677" width="0.0379%" height="15" fill="rgb(215,190,9)" fg:x="371" fg:w="1"/><text x="14.2924%" y="687.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.23%)</title><rect x="13.8910%" y="1173" width="0.2271%" height="15" fill="rgb(242,101,16)" fg:x="367" fg:w="6"/><text x="14.1410%" y="1183.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (5 samples, 0.19%)</title><rect x="13.9288%" y="1157" width="0.1893%" height="15" fill="rgb(223,190,21)" fg:x="368" fg:w="5"/><text x="14.1788%" y="1167.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (4 samples, 0.15%)</title><rect x="13.9667%" y="1141" width="0.1514%" height="15" fill="rgb(215,228,25)" fg:x="369" fg:w="4"/><text x="14.2167%" y="1151.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (4 samples, 0.15%)</title><rect x="13.9667%" y="1125" width="0.1514%" height="15" fill="rgb(225,36,22)" fg:x="369" fg:w="4"/><text x="14.2167%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="14.0802%" y="1109" width="0.0379%" height="15" fill="rgb(251,106,46)" fg:x="372" fg:w="1"/><text x="14.3302%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="14.0802%" y="1093" width="0.0379%" height="15" fill="rgb(208,90,1)" fg:x="372" fg:w="1"/><text x="14.3302%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="14.0802%" y="1077" width="0.0379%" height="15" fill="rgb(243,10,4)" fg:x="372" fg:w="1"/><text x="14.3302%" y="1087.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (1 samples, 0.04%)</title><rect x="14.1181%" y="1157" width="0.0379%" height="15" fill="rgb(212,137,27)" fg:x="373" fg:w="1"/><text x="14.3681%" y="1167.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (8 samples, 0.30%)</title><rect x="13.8910%" y="1189" width="0.3028%" height="15" fill="rgb(231,220,49)" fg:x="367" fg:w="8"/><text x="14.1410%" y="1199.50"></text></g><g><title>tokio::time::timeout::timeout (2 samples, 0.08%)</title><rect x="14.1181%" y="1173" width="0.0757%" height="15" fill="rgb(237,96,20)" fg:x="373" fg:w="2"/><text x="14.3681%" y="1183.50"></text></g><g><title>tokio::time::timeout::Timeout&lt;T&gt;::new_with_delay (1 samples, 0.04%)</title><rect x="14.1559%" y="1157" width="0.0379%" height="15" fill="rgb(239,229,30)" fg:x="374" fg:w="1"/><text x="14.4059%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="14.1559%" y="1141" width="0.0379%" height="15" fill="rgb(219,65,33)" fg:x="374" fg:w="1"/><text x="14.4059%" y="1151.50"></text></g><g><title>fabseapi::Api::traffic_light_retrieve::_{{closure}} (10 samples, 0.38%)</title><rect x="13.8531%" y="1445" width="0.3785%" height="15" fill="rgb(243,134,7)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1455.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (10 samples, 0.38%)</title><rect x="13.8531%" y="1429" width="0.3785%" height="15" fill="rgb(216,177,54)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1439.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.8531%" y="1413" width="0.3785%" height="15" fill="rgb(211,160,20)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.8531%" y="1397" width="0.3785%" height="15" fill="rgb(239,85,39)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.8531%" y="1381" width="0.3785%" height="15" fill="rgb(232,125,22)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1391.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (10 samples, 0.38%)</title><rect x="13.8531%" y="1365" width="0.3785%" height="15" fill="rgb(244,57,34)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.8531%" y="1349" width="0.3785%" height="15" fill="rgb(214,203,32)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1359.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.8531%" y="1333" width="0.3785%" height="15" fill="rgb(207,58,43)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.8531%" y="1317" width="0.3785%" height="15" fill="rgb(215,193,15)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1327.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="13.8531%" y="1301" width="0.3785%" height="15" fill="rgb(232,15,44)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1311.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (10 samples, 0.38%)</title><rect x="13.8531%" y="1285" width="0.3785%" height="15" fill="rgb(212,3,48)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (10 samples, 0.38%)</title><rect x="13.8531%" y="1269" width="0.3785%" height="15" fill="rgb(218,128,7)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10 samples, 0.38%)</title><rect x="13.8531%" y="1253" width="0.3785%" height="15" fill="rgb(226,216,39)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1263.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (10 samples, 0.38%)</title><rect x="13.8531%" y="1237" width="0.3785%" height="15" fill="rgb(243,47,51)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1247.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (10 samples, 0.38%)</title><rect x="13.8531%" y="1221" width="0.3785%" height="15" fill="rgb(241,183,40)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1231.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (10 samples, 0.38%)</title><rect x="13.8531%" y="1205" width="0.3785%" height="15" fill="rgb(231,217,32)" fg:x="366" fg:w="10"/><text x="14.1031%" y="1215.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="14.1938%" y="1189" width="0.0379%" height="15" fill="rgb(229,61,38)" fg:x="375" fg:w="1"/><text x="14.4438%" y="1199.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.04%)</title><rect x="14.1938%" y="1173" width="0.0379%" height="15" fill="rgb(225,210,5)" fg:x="375" fg:w="1"/><text x="14.4438%" y="1183.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="14.1938%" y="1157" width="0.0379%" height="15" fill="rgb(231,79,45)" fg:x="375" fg:w="1"/><text x="14.4438%" y="1167.50"></text></g><g><title>clock_gettime (1 samples, 0.04%)</title><rect x="14.1938%" y="1141" width="0.0379%" height="15" fill="rgb(224,100,7)" fg:x="375" fg:w="1"/><text x="14.4438%" y="1151.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="14.1938%" y="1125" width="0.0379%" height="15" fill="rgb(241,198,18)" fg:x="375" fg:w="1"/><text x="14.4438%" y="1135.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="14.2316%" y="1157" width="0.0379%" height="15" fill="rgb(252,97,53)" fg:x="376" fg:w="1"/><text x="14.4816%" y="1167.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.2316%" y="1141" width="0.0379%" height="15" fill="rgb(220,88,7)" fg:x="376" fg:w="1"/><text x="14.4816%" y="1151.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (1 samples, 0.04%)</title><rect x="14.2316%" y="1125" width="0.0379%" height="15" fill="rgb(213,176,14)" fg:x="376" fg:w="1"/><text x="14.4816%" y="1135.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (1 samples, 0.04%)</title><rect x="14.2316%" y="1109" width="0.0379%" height="15" fill="rgb(246,73,7)" fg:x="376" fg:w="1"/><text x="14.4816%" y="1119.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (1 samples, 0.04%)</title><rect x="14.2316%" y="1093" width="0.0379%" height="15" fill="rgb(245,64,36)" fg:x="376" fg:w="1"/><text x="14.4816%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::inner::PoolInner&lt;sqlx_mysql::database::MySql&gt;::acquire_permit::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="14.2695%" y="1141" width="0.0379%" height="15" fill="rgb(245,80,10)" fg:x="377" fg:w="1"/><text x="14.5195%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::inner::check_idle_conn&lt;sqlx_mysql::database::MySql&gt;::{{closure}}&gt; (3 samples, 0.11%)</title><rect x="14.3073%" y="1141" width="0.1136%" height="15" fill="rgb(232,107,50)" fg:x="378" fg:w="3"/><text x="14.5573%" y="1151.50"></text></g><g><title>sqlx_core::pool::CloseEvent::do_until::_{{closure}} (1 samples, 0.04%)</title><rect x="14.4209%" y="1125" width="0.0379%" height="15" fill="rgb(253,3,0)" fg:x="381" fg:w="1"/><text x="14.6709%" y="1135.50"></text></g><g><title>&lt;futures_util::future::poll_immediate::PollImmediate&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.4209%" y="1109" width="0.0379%" height="15" fill="rgb(212,99,53)" fg:x="381" fg:w="1"/><text x="14.6709%" y="1119.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.4209%" y="1093" width="0.0379%" height="15" fill="rgb(249,111,54)" fg:x="381" fg:w="1"/><text x="14.6709%" y="1103.50"></text></g><g><title>&lt;sqlx_core::pool::CloseEvent as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.4209%" y="1077" width="0.0379%" height="15" fill="rgb(249,55,30)" fg:x="381" fg:w="1"/><text x="14.6709%" y="1087.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.04%)</title><rect x="14.4209%" y="1061" width="0.0379%" height="15" fill="rgb(237,47,42)" fg:x="381" fg:w="1"/><text x="14.6709%" y="1071.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.4209%" y="1045" width="0.0379%" height="15" fill="rgb(211,20,18)" fg:x="381" fg:w="1"/><text x="14.6709%" y="1055.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="14.4209%" y="1029" width="0.0379%" height="15" fill="rgb(231,203,46)" fg:x="381" fg:w="1"/><text x="14.6709%" y="1039.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.04%)</title><rect x="14.4209%" y="1013" width="0.0379%" height="15" fill="rgb(237,142,3)" fg:x="381" fg:w="1"/><text x="14.6709%" y="1023.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire_permit::_{{closure}} (2 samples, 0.08%)</title><rect x="14.4209%" y="1141" width="0.0757%" height="15" fill="rgb(241,107,1)" fg:x="381" fg:w="2"/><text x="14.6709%" y="1151.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::close_event (1 samples, 0.04%)</title><rect x="14.4587%" y="1125" width="0.0379%" height="15" fill="rgb(229,83,13)" fg:x="382" fg:w="1"/><text x="14.7087%" y="1135.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.04%)</title><rect x="14.4587%" y="1109" width="0.0379%" height="15" fill="rgb(241,91,40)" fg:x="382" fg:w="1"/><text x="14.7087%" y="1119.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::close_event::_{{closure}} (1 samples, 0.04%)</title><rect x="14.4587%" y="1093" width="0.0379%" height="15" fill="rgb(225,3,45)" fg:x="382" fg:w="1"/><text x="14.7087%" y="1103.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.04%)</title><rect x="14.4587%" y="1077" width="0.0379%" height="15" fill="rgb(244,223,14)" fg:x="382" fg:w="1"/><text x="14.7087%" y="1087.50"></text></g><g><title>event_listener::List::insert (1 samples, 0.04%)</title><rect x="14.4587%" y="1061" width="0.0379%" height="15" fill="rgb(224,124,37)" fg:x="382" fg:w="1"/><text x="14.7087%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="14.4587%" y="1045" width="0.0379%" height="15" fill="rgb(251,171,30)" fg:x="382" fg:w="1"/><text x="14.7087%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="14.4587%" y="1029" width="0.0379%" height="15" fill="rgb(236,46,54)" fg:x="382" fg:w="1"/><text x="14.7087%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="14.4587%" y="1013" width="0.0379%" height="15" fill="rgb(245,213,5)" fg:x="382" fg:w="1"/><text x="14.7087%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="14.4587%" y="997" width="0.0379%" height="15" fill="rgb(230,144,27)" fg:x="382" fg:w="1"/><text x="14.7087%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="14.4587%" y="981" width="0.0379%" height="15" fill="rgb(220,86,6)" fg:x="382" fg:w="1"/><text x="14.7087%" y="991.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="14.4587%" y="965" width="0.0379%" height="15" fill="rgb(240,20,13)" fg:x="382" fg:w="1"/><text x="14.7087%" y="975.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="14.4587%" y="949" width="0.0379%" height="15" fill="rgb(217,89,34)" fg:x="382" fg:w="1"/><text x="14.7087%" y="959.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="14.4587%" y="933" width="0.0379%" height="15" fill="rgb(229,13,5)" fg:x="382" fg:w="1"/><text x="14.7087%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="14.4966%" y="1077" width="0.0379%" height="15" fill="rgb(244,67,35)" fg:x="383" fg:w="1"/><text x="14.7466%" y="1087.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="14.5344%" y="1061" width="0.0379%" height="15" fill="rgb(221,40,2)" fg:x="384" fg:w="1"/><text x="14.7844%" y="1071.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="14.5344%" y="1045" width="0.0379%" height="15" fill="rgb(237,157,21)" fg:x="384" fg:w="1"/><text x="14.7844%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="14.5344%" y="1029" width="0.0379%" height="15" fill="rgb(222,94,11)" fg:x="384" fg:w="1"/><text x="14.7844%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="14.5344%" y="1013" width="0.0379%" height="15" fill="rgb(249,113,6)" fg:x="384" fg:w="1"/><text x="14.7844%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="14.5344%" y="997" width="0.0379%" height="15" fill="rgb(238,137,36)" fg:x="384" fg:w="1"/><text x="14.7844%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="14.5344%" y="981" width="0.0379%" height="15" fill="rgb(210,102,26)" fg:x="384" fg:w="1"/><text x="14.7844%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="14.5344%" y="965" width="0.0379%" height="15" fill="rgb(218,30,30)" fg:x="384" fg:w="1"/><text x="14.7844%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="14.5344%" y="949" width="0.0379%" height="15" fill="rgb(214,67,26)" fg:x="384" fg:w="1"/><text x="14.7844%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="14.5344%" y="933" width="0.0379%" height="15" fill="rgb(251,9,53)" fg:x="384" fg:w="1"/><text x="14.7844%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="14.5344%" y="917" width="0.0379%" height="15" fill="rgb(228,204,25)" fg:x="384" fg:w="1"/><text x="14.7844%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="14.5344%" y="901" width="0.0379%" height="15" fill="rgb(207,153,8)" fg:x="384" fg:w="1"/><text x="14.7844%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="14.5344%" y="885" width="0.0379%" height="15" fill="rgb(242,9,16)" fg:x="384" fg:w="1"/><text x="14.7844%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="14.5344%" y="869" width="0.0379%" height="15" fill="rgb(217,211,10)" fg:x="384" fg:w="1"/><text x="14.7844%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="14.5344%" y="853" width="0.0379%" height="15" fill="rgb(219,228,52)" fg:x="384" fg:w="1"/><text x="14.7844%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="14.5344%" y="837" width="0.0379%" height="15" fill="rgb(231,92,29)" fg:x="384" fg:w="1"/><text x="14.7844%" y="847.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="14.5344%" y="821" width="0.0379%" height="15" fill="rgb(232,8,23)" fg:x="384" fg:w="1"/><text x="14.7844%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="14.5344%" y="805" width="0.0379%" height="15" fill="rgb(216,211,34)" fg:x="384" fg:w="1"/><text x="14.7844%" y="815.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="14.5344%" y="789" width="0.0379%" height="15" fill="rgb(236,151,0)" fg:x="384" fg:w="1"/><text x="14.7844%" y="799.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.38%)</title><rect x="14.2316%" y="1173" width="0.3785%" height="15" fill="rgb(209,168,3)" fg:x="376" fg:w="10"/><text x="14.4816%" y="1183.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (9 samples, 0.34%)</title><rect x="14.2695%" y="1157" width="0.3407%" height="15" fill="rgb(208,129,28)" fg:x="377" fg:w="9"/><text x="14.5195%" y="1167.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (3 samples, 0.11%)</title><rect x="14.4966%" y="1141" width="0.1136%" height="15" fill="rgb(229,78,22)" fg:x="383" fg:w="3"/><text x="14.7466%" y="1151.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (3 samples, 0.11%)</title><rect x="14.4966%" y="1125" width="0.1136%" height="15" fill="rgb(228,187,13)" fg:x="383" fg:w="3"/><text x="14.7466%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="14.4966%" y="1109" width="0.1136%" height="15" fill="rgb(240,119,24)" fg:x="383" fg:w="3"/><text x="14.7466%" y="1119.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (3 samples, 0.11%)</title><rect x="14.4966%" y="1093" width="0.1136%" height="15" fill="rgb(209,194,42)" fg:x="383" fg:w="3"/><text x="14.7466%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (2 samples, 0.08%)</title><rect x="14.5344%" y="1077" width="0.0757%" height="15" fill="rgb(247,200,46)" fg:x="384" fg:w="2"/><text x="14.7844%" y="1087.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::ok (1 samples, 0.04%)</title><rect x="14.5723%" y="1061" width="0.0379%" height="15" fill="rgb(218,76,16)" fg:x="385" fg:w="1"/><text x="14.8223%" y="1071.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode (1 samples, 0.04%)</title><rect x="14.5723%" y="1045" width="0.0379%" height="15" fill="rgb(225,21,48)" fg:x="385" fg:w="1"/><text x="14.8223%" y="1055.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (1 samples, 0.04%)</title><rect x="14.5723%" y="1029" width="0.0379%" height="15" fill="rgb(239,223,50)" fg:x="385" fg:w="1"/><text x="14.8223%" y="1039.50"></text></g><g><title>&lt;sqlx_mysql::protocol::response::ok::OkPacket as sqlx_core::io::decode::Decode&gt;::decode_with (1 samples, 0.04%)</title><rect x="14.5723%" y="1013" width="0.0379%" height="15" fill="rgb(244,45,21)" fg:x="385" fg:w="1"/><text x="14.8223%" y="1023.50"></text></g><g><title>&lt;bytes::bytes::Bytes as sqlx_mysql::io::buf::MySqlBufExt&gt;::get_uint_lenenc (1 samples, 0.04%)</title><rect x="14.5723%" y="997" width="0.0379%" height="15" fill="rgb(232,33,43)" fg:x="385" fg:w="1"/><text x="14.8223%" y="1007.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (1 samples, 0.04%)</title><rect x="14.5723%" y="981" width="0.0379%" height="15" fill="rgb(209,8,3)" fg:x="385" fg:w="1"/><text x="14.8223%" y="991.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (1 samples, 0.04%)</title><rect x="14.5723%" y="965" width="0.0379%" height="15" fill="rgb(214,25,53)" fg:x="385" fg:w="1"/><text x="14.8223%" y="975.50"></text></g><g><title>fabseapi::Api::vehicle_insert::_{{closure}} (11 samples, 0.42%)</title><rect x="14.2316%" y="1445" width="0.4164%" height="15" fill="rgb(254,186,54)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1455.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (11 samples, 0.42%)</title><rect x="14.2316%" y="1429" width="0.4164%" height="15" fill="rgb(208,174,49)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1439.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 0.42%)</title><rect x="14.2316%" y="1413" width="0.4164%" height="15" fill="rgb(233,191,51)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1423.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (11 samples, 0.42%)</title><rect x="14.2316%" y="1397" width="0.4164%" height="15" fill="rgb(222,134,10)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1407.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (11 samples, 0.42%)</title><rect x="14.2316%" y="1381" width="0.4164%" height="15" fill="rgb(230,226,20)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1391.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.42%)</title><rect x="14.2316%" y="1365" width="0.4164%" height="15" fill="rgb(251,111,25)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1375.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.42%)</title><rect x="14.2316%" y="1349" width="0.4164%" height="15" fill="rgb(224,40,46)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1359.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (11 samples, 0.42%)</title><rect x="14.2316%" y="1333" width="0.4164%" height="15" fill="rgb(236,108,47)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.42%)</title><rect x="14.2316%" y="1317" width="0.4164%" height="15" fill="rgb(234,93,0)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1327.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.42%)</title><rect x="14.2316%" y="1301" width="0.4164%" height="15" fill="rgb(224,213,32)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1311.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (11 samples, 0.42%)</title><rect x="14.2316%" y="1285" width="0.4164%" height="15" fill="rgb(251,11,48)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (11 samples, 0.42%)</title><rect x="14.2316%" y="1269" width="0.4164%" height="15" fill="rgb(236,173,5)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 0.42%)</title><rect x="14.2316%" y="1253" width="0.4164%" height="15" fill="rgb(230,95,12)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1263.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (11 samples, 0.42%)</title><rect x="14.2316%" y="1237" width="0.4164%" height="15" fill="rgb(232,209,1)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1247.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (11 samples, 0.42%)</title><rect x="14.2316%" y="1221" width="0.4164%" height="15" fill="rgb(232,6,1)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1231.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (11 samples, 0.42%)</title><rect x="14.2316%" y="1205" width="0.4164%" height="15" fill="rgb(210,224,50)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1215.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (11 samples, 0.42%)</title><rect x="14.2316%" y="1189" width="0.4164%" height="15" fill="rgb(228,127,35)" fg:x="376" fg:w="11"/><text x="14.4816%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="14.6101%" y="1173" width="0.0379%" height="15" fill="rgb(245,102,45)" fg:x="386" fg:w="1"/><text x="14.8601%" y="1183.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire_permit::_{{closure}} (1 samples, 0.04%)</title><rect x="14.6480%" y="1141" width="0.0379%" height="15" fill="rgb(214,1,49)" fg:x="387" fg:w="1"/><text x="14.8980%" y="1151.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::pop_idle (1 samples, 0.04%)</title><rect x="14.6858%" y="1141" width="0.0379%" height="15" fill="rgb(226,163,40)" fg:x="388" fg:w="1"/><text x="14.9358%" y="1151.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (1 samples, 0.04%)</title><rect x="14.7237%" y="1077" width="0.0379%" height="15" fill="rgb(239,212,28)" fg:x="389" fg:w="1"/><text x="14.9737%" y="1087.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="14.7237%" y="1061" width="0.0379%" height="15" fill="rgb(220,20,13)" fg:x="389" fg:w="1"/><text x="14.9737%" y="1071.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="14.7237%" y="1045" width="0.0379%" height="15" fill="rgb(210,164,35)" fg:x="389" fg:w="1"/><text x="14.9737%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="14.7237%" y="1029" width="0.0379%" height="15" fill="rgb(248,109,41)" fg:x="389" fg:w="1"/><text x="14.9737%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="14.7237%" y="1013" width="0.0379%" height="15" fill="rgb(238,23,50)" fg:x="389" fg:w="1"/><text x="14.9737%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="14.7237%" y="997" width="0.0379%" height="15" fill="rgb(211,48,49)" fg:x="389" fg:w="1"/><text x="14.9737%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="14.7237%" y="981" width="0.0379%" height="15" fill="rgb(223,36,21)" fg:x="389" fg:w="1"/><text x="14.9737%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="14.7237%" y="965" width="0.0379%" height="15" fill="rgb(207,123,46)" fg:x="389" fg:w="1"/><text x="14.9737%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="14.7237%" y="949" width="0.0379%" height="15" fill="rgb(240,218,32)" fg:x="389" fg:w="1"/><text x="14.9737%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="14.7237%" y="933" width="0.0379%" height="15" fill="rgb(252,5,43)" fg:x="389" fg:w="1"/><text x="14.9737%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="14.7237%" y="917" width="0.0379%" height="15" fill="rgb(252,84,19)" fg:x="389" fg:w="1"/><text x="14.9737%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="14.7237%" y="901" width="0.0379%" height="15" fill="rgb(243,152,39)" fg:x="389" fg:w="1"/><text x="14.9737%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="14.7237%" y="885" width="0.0379%" height="15" fill="rgb(234,160,15)" fg:x="389" fg:w="1"/><text x="14.9737%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="14.7237%" y="869" width="0.0379%" height="15" fill="rgb(237,34,20)" fg:x="389" fg:w="1"/><text x="14.9737%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="14.7237%" y="853" width="0.0379%" height="15" fill="rgb(229,97,13)" fg:x="389" fg:w="1"/><text x="14.9737%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="14.7237%" y="837" width="0.0379%" height="15" fill="rgb(234,71,50)" fg:x="389" fg:w="1"/><text x="14.9737%" y="847.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="14.7237%" y="821" width="0.0379%" height="15" fill="rgb(253,155,4)" fg:x="389" fg:w="1"/><text x="14.9737%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="14.7237%" y="805" width="0.0379%" height="15" fill="rgb(222,185,37)" fg:x="389" fg:w="1"/><text x="14.9737%" y="815.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="14.7237%" y="789" width="0.0379%" height="15" fill="rgb(251,177,13)" fg:x="389" fg:w="1"/><text x="14.9737%" y="799.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (35 samples, 1.32%)</title><rect x="13.4746%" y="1605" width="1.3248%" height="15" fill="rgb(250,179,40)" fg:x="356" fg:w="35"/><text x="13.7246%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (35 samples, 1.32%)</title><rect x="13.4746%" y="1589" width="1.3248%" height="15" fill="rgb(242,44,2)" fg:x="356" fg:w="35"/><text x="13.7246%" y="1599.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (35 samples, 1.32%)</title><rect x="13.4746%" y="1573" width="1.3248%" height="15" fill="rgb(216,177,13)" fg:x="356" fg:w="35"/><text x="13.7246%" y="1583.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (35 samples, 1.32%)</title><rect x="13.4746%" y="1557" width="1.3248%" height="15" fill="rgb(216,106,43)" fg:x="356" fg:w="35"/><text x="13.7246%" y="1567.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (35 samples, 1.32%)</title><rect x="13.4746%" y="1541" width="1.3248%" height="15" fill="rgb(216,183,2)" fg:x="356" fg:w="35"/><text x="13.7246%" y="1551.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (35 samples, 1.32%)</title><rect x="13.4746%" y="1525" width="1.3248%" height="15" fill="rgb(249,75,3)" fg:x="356" fg:w="35"/><text x="13.7246%" y="1535.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (35 samples, 1.32%)</title><rect x="13.4746%" y="1509" width="1.3248%" height="15" fill="rgb(219,67,39)" fg:x="356" fg:w="35"/><text x="13.7246%" y="1519.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (35 samples, 1.32%)</title><rect x="13.4746%" y="1493" width="1.3248%" height="15" fill="rgb(253,228,2)" fg:x="356" fg:w="35"/><text x="13.7246%" y="1503.50"></text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (35 samples, 1.32%)</title><rect x="13.4746%" y="1477" width="1.3248%" height="15" fill="rgb(235,138,27)" fg:x="356" fg:w="35"/><text x="13.7246%" y="1487.50"></text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (35 samples, 1.32%)</title><rect x="13.4746%" y="1461" width="1.3248%" height="15" fill="rgb(236,97,51)" fg:x="356" fg:w="35"/><text x="13.7246%" y="1471.50"></text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (4 samples, 0.15%)</title><rect x="14.6480%" y="1445" width="0.1514%" height="15" fill="rgb(240,80,30)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1455.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (4 samples, 0.15%)</title><rect x="14.6480%" y="1429" width="0.1514%" height="15" fill="rgb(230,178,19)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1439.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.15%)</title><rect x="14.6480%" y="1413" width="0.1514%" height="15" fill="rgb(210,190,27)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.15%)</title><rect x="14.6480%" y="1397" width="0.1514%" height="15" fill="rgb(222,107,31)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.15%)</title><rect x="14.6480%" y="1381" width="0.1514%" height="15" fill="rgb(216,127,34)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1391.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (4 samples, 0.15%)</title><rect x="14.6480%" y="1365" width="0.1514%" height="15" fill="rgb(234,116,52)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.15%)</title><rect x="14.6480%" y="1349" width="0.1514%" height="15" fill="rgb(222,124,15)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1359.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.15%)</title><rect x="14.6480%" y="1333" width="0.1514%" height="15" fill="rgb(231,179,28)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.15%)</title><rect x="14.6480%" y="1317" width="0.1514%" height="15" fill="rgb(226,93,45)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1327.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.15%)</title><rect x="14.6480%" y="1301" width="0.1514%" height="15" fill="rgb(215,8,51)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1311.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (4 samples, 0.15%)</title><rect x="14.6480%" y="1285" width="0.1514%" height="15" fill="rgb(223,106,5)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (4 samples, 0.15%)</title><rect x="14.6480%" y="1269" width="0.1514%" height="15" fill="rgb(250,191,5)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.15%)</title><rect x="14.6480%" y="1253" width="0.1514%" height="15" fill="rgb(242,132,44)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1263.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (4 samples, 0.15%)</title><rect x="14.6480%" y="1237" width="0.1514%" height="15" fill="rgb(251,152,29)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1247.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (4 samples, 0.15%)</title><rect x="14.6480%" y="1221" width="0.1514%" height="15" fill="rgb(218,179,5)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1231.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (4 samples, 0.15%)</title><rect x="14.6480%" y="1205" width="0.1514%" height="15" fill="rgb(227,67,19)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1215.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (4 samples, 0.15%)</title><rect x="14.6480%" y="1189" width="0.1514%" height="15" fill="rgb(233,119,31)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1199.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.15%)</title><rect x="14.6480%" y="1173" width="0.1514%" height="15" fill="rgb(241,120,22)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1183.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (4 samples, 0.15%)</title><rect x="14.6480%" y="1157" width="0.1514%" height="15" fill="rgb(224,102,30)" fg:x="387" fg:w="4"/><text x="14.8980%" y="1167.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (2 samples, 0.08%)</title><rect x="14.7237%" y="1141" width="0.0757%" height="15" fill="rgb(210,164,37)" fg:x="389" fg:w="2"/><text x="14.9737%" y="1151.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (2 samples, 0.08%)</title><rect x="14.7237%" y="1125" width="0.0757%" height="15" fill="rgb(226,191,16)" fg:x="389" fg:w="2"/><text x="14.9737%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="14.7237%" y="1109" width="0.0757%" height="15" fill="rgb(214,40,45)" fg:x="389" fg:w="2"/><text x="14.9737%" y="1119.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (2 samples, 0.08%)</title><rect x="14.7237%" y="1093" width="0.0757%" height="15" fill="rgb(244,29,26)" fg:x="389" fg:w="2"/><text x="14.9737%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::wait_until_ready::_{{closure}} (1 samples, 0.04%)</title><rect x="14.7615%" y="1077" width="0.0379%" height="15" fill="rgb(216,16,5)" fg:x="390" fg:w="1"/><text x="15.0115%" y="1087.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="14.7994%" y="1093" width="0.0379%" height="15" fill="rgb(249,76,35)" fg:x="391" fg:w="1"/><text x="15.0494%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;ahash::hash_map::AHashMap&lt;sqlx_core::ext::ustr::UStr,usize&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="15.0265%" y="805" width="0.0379%" height="15" fill="rgb(207,11,44)" fg:x="397" fg:w="1"/><text x="15.2765%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.0265%" y="789" width="0.0379%" height="15" fill="rgb(228,190,49)" fg:x="397" fg:w="1"/><text x="15.2765%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.04%)</title><rect x="15.0265%" y="773" width="0.0379%" height="15" fill="rgb(214,173,12)" fg:x="397" fg:w="1"/><text x="15.2765%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.04%)</title><rect x="15.0265%" y="757" width="0.0379%" height="15" fill="rgb(218,26,35)" fg:x="397" fg:w="1"/><text x="15.2765%" y="767.50"></text></g><g><title>sqlx_core::logger::private_level_filter_to_levels (1 samples, 0.04%)</title><rect x="15.0643%" y="757" width="0.0379%" height="15" fill="rgb(220,200,19)" fg:x="398" fg:w="1"/><text x="15.3143%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::logger::QueryLogger&gt; (3 samples, 0.11%)</title><rect x="15.0643%" y="805" width="0.1136%" height="15" fill="rgb(239,95,49)" fg:x="398" fg:w="3"/><text x="15.3143%" y="815.50"></text></g><g><title>&lt;sqlx_core::logger::QueryLogger as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="15.0643%" y="789" width="0.1136%" height="15" fill="rgb(235,85,53)" fg:x="398" fg:w="3"/><text x="15.3143%" y="799.50"></text></g><g><title>sqlx_core::logger::QueryLogger::finish (3 samples, 0.11%)</title><rect x="15.0643%" y="773" width="0.1136%" height="15" fill="rgb(233,133,31)" fg:x="398" fg:w="3"/><text x="15.3143%" y="783.50"></text></g><g><title>std::time::Instant::elapsed (2 samples, 0.08%)</title><rect x="15.1022%" y="757" width="0.0757%" height="15" fill="rgb(218,25,20)" fg:x="399" fg:w="2"/><text x="15.3522%" y="767.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="15.1400%" y="741" width="0.0379%" height="15" fill="rgb(252,210,38)" fg:x="400" fg:w="1"/><text x="15.3900%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.04%)</title><rect x="15.1400%" y="725" width="0.0379%" height="15" fill="rgb(242,134,21)" fg:x="400" fg:w="1"/><text x="15.3900%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="15.1400%" y="709" width="0.0379%" height="15" fill="rgb(213,28,48)" fg:x="400" fg:w="1"/><text x="15.3900%" y="719.50"></text></g><g><title>clock_gettime (1 samples, 0.04%)</title><rect x="15.1400%" y="693" width="0.0379%" height="15" fill="rgb(250,196,2)" fg:x="400" fg:w="1"/><text x="15.3900%" y="703.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="15.1400%" y="677" width="0.0379%" height="15" fill="rgb(227,5,17)" fg:x="400" fg:w="1"/><text x="15.3900%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::arguments::MySqlArguments&gt; (1 samples, 0.04%)</title><rect x="15.1779%" y="805" width="0.0379%" height="15" fill="rgb(221,226,24)" fg:x="401" fg:w="1"/><text x="15.4279%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sqlx_mysql::type_info::MySqlTypeInfo&gt;&gt; (1 samples, 0.04%)</title><rect x="15.1779%" y="789" width="0.0379%" height="15" fill="rgb(211,5,48)" fg:x="401" fg:w="1"/><text x="15.4279%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sqlx_mysql::type_info::MySqlTypeInfo&gt;&gt; (1 samples, 0.04%)</title><rect x="15.1779%" y="773" width="0.0379%" height="15" fill="rgb(219,150,6)" fg:x="401" fg:w="1"/><text x="15.4279%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.1779%" y="757" width="0.0379%" height="15" fill="rgb(251,46,16)" fg:x="401" fg:w="1"/><text x="15.4279%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="15.1779%" y="741" width="0.0379%" height="15" fill="rgb(220,204,40)" fg:x="401" fg:w="1"/><text x="15.4279%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="15.1779%" y="725" width="0.0379%" height="15" fill="rgb(211,85,2)" fg:x="401" fg:w="1"/><text x="15.4279%" y="735.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="15.1779%" y="709" width="0.0379%" height="15" fill="rgb(229,17,7)" fg:x="401" fg:w="1"/><text x="15.4279%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="15.1779%" y="693" width="0.0379%" height="15" fill="rgb(239,72,28)" fg:x="401" fg:w="1"/><text x="15.4279%" y="703.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="15.1779%" y="677" width="0.0379%" height="15" fill="rgb(230,47,54)" fg:x="401" fg:w="1"/><text x="15.4279%" y="687.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::get_or_prepare_statement::_{{closure}} (1 samples, 0.04%)</title><rect x="15.2157%" y="805" width="0.0379%" height="15" fill="rgb(214,50,8)" fg:x="402" fg:w="1"/><text x="15.4657%" y="815.50"></text></g><g><title>sqlx_core::common::statement_cache::StatementCache&lt;T&gt;::get_mut (1 samples, 0.04%)</title><rect x="15.2157%" y="789" width="0.0379%" height="15" fill="rgb(216,198,43)" fg:x="402" fg:w="1"/><text x="15.4657%" y="799.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::get_mut (1 samples, 0.04%)</title><rect x="15.2157%" y="773" width="0.0379%" height="15" fill="rgb(234,20,35)" fg:x="402" fg:w="1"/><text x="15.4657%" y="783.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (1 samples, 0.04%)</title><rect x="15.2157%" y="757" width="0.0379%" height="15" fill="rgb(254,45,19)" fg:x="402" fg:w="1"/><text x="15.4657%" y="767.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (1 samples, 0.04%)</title><rect x="15.2157%" y="741" width="0.0379%" height="15" fill="rgb(219,14,44)" fg:x="402" fg:w="1"/><text x="15.4657%" y="751.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (1 samples, 0.04%)</title><rect x="15.2157%" y="725" width="0.0379%" height="15" fill="rgb(217,220,26)" fg:x="402" fg:w="1"/><text x="15.4657%" y="735.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (1 samples, 0.04%)</title><rect x="15.2157%" y="709" width="0.0379%" height="15" fill="rgb(213,158,28)" fg:x="402" fg:w="1"/><text x="15.4657%" y="719.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (1 samples, 0.04%)</title><rect x="15.2157%" y="693" width="0.0379%" height="15" fill="rgb(252,51,52)" fg:x="402" fg:w="1"/><text x="15.4657%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="15.2157%" y="677" width="0.0379%" height="15" fill="rgb(246,89,16)" fg:x="402" fg:w="1"/><text x="15.4657%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_inner (1 samples, 0.04%)</title><rect x="15.2157%" y="661" width="0.0379%" height="15" fill="rgb(216,158,49)" fg:x="402" fg:w="1"/><text x="15.4657%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::probe_seq (1 samples, 0.04%)</title><rect x="15.2157%" y="645" width="0.0379%" height="15" fill="rgb(236,107,19)" fg:x="402" fg:w="1"/><text x="15.4657%" y="655.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="15.2536%" y="805" width="0.0379%" height="15" fill="rgb(228,185,30)" fg:x="403" fg:w="1"/><text x="15.5036%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="15.2536%" y="789" width="0.0379%" height="15" fill="rgb(246,134,8)" fg:x="403" fg:w="1"/><text x="15.5036%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="15.2536%" y="773" width="0.0379%" height="15" fill="rgb(214,143,50)" fg:x="403" fg:w="1"/><text x="15.5036%" y="783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="15.2536%" y="757" width="0.0379%" height="15" fill="rgb(228,75,8)" fg:x="403" fg:w="1"/><text x="15.5036%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="15.2536%" y="741" width="0.0379%" height="15" fill="rgb(207,175,4)" fg:x="403" fg:w="1"/><text x="15.5036%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="15.2536%" y="725" width="0.0379%" height="15" fill="rgb(205,108,24)" fg:x="403" fg:w="1"/><text x="15.5036%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="15.2536%" y="709" width="0.0379%" height="15" fill="rgb(244,120,49)" fg:x="403" fg:w="1"/><text x="15.5036%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="15.2536%" y="693" width="0.0379%" height="15" fill="rgb(223,47,38)" fg:x="403" fg:w="1"/><text x="15.5036%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="15.2536%" y="677" width="0.0379%" height="15" fill="rgb(229,179,11)" fg:x="403" fg:w="1"/><text x="15.5036%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="15.2536%" y="661" width="0.0379%" height="15" fill="rgb(231,122,1)" fg:x="403" fg:w="1"/><text x="15.5036%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="15.2536%" y="645" width="0.0379%" height="15" fill="rgb(245,119,9)" fg:x="403" fg:w="1"/><text x="15.5036%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="15.2536%" y="629" width="0.0379%" height="15" fill="rgb(241,163,25)" fg:x="403" fg:w="1"/><text x="15.5036%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="15.2536%" y="613" width="0.0379%" height="15" fill="rgb(217,214,3)" fg:x="403" fg:w="1"/><text x="15.5036%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="15.2536%" y="597" width="0.0379%" height="15" fill="rgb(240,86,28)" fg:x="403" fg:w="1"/><text x="15.5036%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="15.2536%" y="581" width="0.0379%" height="15" fill="rgb(215,47,9)" fg:x="403" fg:w="1"/><text x="15.5036%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="15.2536%" y="565" width="0.0379%" height="15" fill="rgb(252,25,45)" fg:x="403" fg:w="1"/><text x="15.5036%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="15.2536%" y="549" width="0.0379%" height="15" fill="rgb(251,164,9)" fg:x="403" fg:w="1"/><text x="15.5036%" y="559.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="15.2536%" y="533" width="0.0379%" height="15" fill="rgb(233,194,0)" fg:x="403" fg:w="1"/><text x="15.5036%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="15.2536%" y="517" width="0.0379%" height="15" fill="rgb(249,111,24)" fg:x="403" fg:w="1"/><text x="15.5036%" y="527.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::flush::_{{closure}} (1 samples, 0.04%)</title><rect x="15.2914%" y="789" width="0.0379%" height="15" fill="rgb(250,223,3)" fg:x="404" fg:w="1"/><text x="15.5414%" y="799.50"></text></g><g><title>&lt;sqlx_core::net::socket::Write&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="15.2914%" y="773" width="0.0379%" height="15" fill="rgb(236,178,37)" fg:x="404" fg:w="1"/><text x="15.5414%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_write (1 samples, 0.04%)</title><rect x="15.2914%" y="757" width="0.0379%" height="15" fill="rgb(241,158,50)" fg:x="404" fg:w="1"/><text x="15.5414%" y="767.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write (1 samples, 0.04%)</title><rect x="15.2914%" y="741" width="0.0379%" height="15" fill="rgb(213,121,41)" fg:x="404" fg:w="1"/><text x="15.5414%" y="751.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="15.2914%" y="725" width="0.0379%" height="15" fill="rgb(240,92,3)" fg:x="404" fg:w="1"/><text x="15.5414%" y="735.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write::_{{closure}} (1 samples, 0.04%)</title><rect x="15.2914%" y="709" width="0.0379%" height="15" fill="rgb(205,123,3)" fg:x="404" fg:w="1"/><text x="15.5414%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="15.2914%" y="693" width="0.0379%" height="15" fill="rgb(205,97,47)" fg:x="404" fg:w="1"/><text x="15.5414%" y="703.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="15.2914%" y="677" width="0.0379%" height="15" fill="rgb(247,152,14)" fg:x="404" fg:w="1"/><text x="15.5414%" y="687.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="15.2914%" y="661" width="0.0379%" height="15" fill="rgb(248,195,53)" fg:x="404" fg:w="1"/><text x="15.5414%" y="671.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1 samples, 0.04%)</title><rect x="15.2914%" y="645" width="0.0379%" height="15" fill="rgb(226,201,16)" fg:x="404" fg:w="1"/><text x="15.5414%" y="655.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="15.2914%" y="629" width="0.0379%" height="15" fill="rgb(205,98,0)" fg:x="404" fg:w="1"/><text x="15.5414%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.04%)</title><rect x="15.2914%" y="613" width="0.0379%" height="15" fill="rgb(214,191,48)" fg:x="404" fg:w="1"/><text x="15.5414%" y="623.50"></text></g><g><title>__send (1 samples, 0.04%)</title><rect x="15.2914%" y="597" width="0.0379%" height="15" fill="rgb(237,112,39)" fg:x="404" fg:w="1"/><text x="15.5414%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.2914%" y="581" width="0.0379%" height="15" fill="rgb(247,203,27)" fg:x="404" fg:w="1"/><text x="15.5414%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.2914%" y="565" width="0.0379%" height="15" fill="rgb(235,124,28)" fg:x="404" fg:w="1"/><text x="15.5414%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.2914%" y="549" width="0.0379%" height="15" fill="rgb(208,207,46)" fg:x="404" fg:w="1"/><text x="15.5414%" y="559.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (15 samples, 0.57%)</title><rect x="14.7994%" y="1109" width="0.5678%" height="15" fill="rgb(234,176,4)" fg:x="391" fg:w="15"/><text x="15.0494%" y="1119.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (14 samples, 0.53%)</title><rect x="14.8372%" y="1093" width="0.5299%" height="15" fill="rgb(230,133,28)" fg:x="392" fg:w="14"/><text x="15.0872%" y="1103.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (14 samples, 0.53%)</title><rect x="14.8372%" y="1077" width="0.5299%" height="15" fill="rgb(211,137,40)" fg:x="392" fg:w="14"/><text x="15.0872%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.53%)</title><rect x="14.8372%" y="1061" width="0.5299%" height="15" fill="rgb(254,35,13)" fg:x="392" fg:w="14"/><text x="15.0872%" y="1071.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.53%)</title><rect x="14.8372%" y="1045" width="0.5299%" height="15" fill="rgb(225,49,51)" fg:x="392" fg:w="14"/><text x="15.0872%" y="1055.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (14 samples, 0.53%)</title><rect x="14.8372%" y="1029" width="0.5299%" height="15" fill="rgb(251,10,15)" fg:x="392" fg:w="14"/><text x="15.0872%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (14 samples, 0.53%)</title><rect x="14.8372%" y="1013" width="0.5299%" height="15" fill="rgb(228,207,15)" fg:x="392" fg:w="14"/><text x="15.0872%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 0.53%)</title><rect x="14.8372%" y="997" width="0.5299%" height="15" fill="rgb(241,99,19)" fg:x="392" fg:w="14"/><text x="15.0872%" y="1007.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many::_{{closure}}::_{{closure}} (14 samples, 0.53%)</title><rect x="14.8372%" y="981" width="0.5299%" height="15" fill="rgb(207,104,49)" fg:x="392" fg:w="14"/><text x="15.0872%" y="991.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (11 samples, 0.42%)</title><rect x="14.9508%" y="965" width="0.4164%" height="15" fill="rgb(234,99,18)" fg:x="395" fg:w="11"/><text x="15.2008%" y="975.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (10 samples, 0.38%)</title><rect x="14.9886%" y="949" width="0.3785%" height="15" fill="rgb(213,191,49)" fg:x="396" fg:w="10"/><text x="15.2386%" y="959.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (10 samples, 0.38%)</title><rect x="14.9886%" y="933" width="0.3785%" height="15" fill="rgb(210,226,19)" fg:x="396" fg:w="10"/><text x="15.2386%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="14.9886%" y="917" width="0.3785%" height="15" fill="rgb(229,97,18)" fg:x="396" fg:w="10"/><text x="15.2386%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="14.9886%" y="901" width="0.3785%" height="15" fill="rgb(211,167,15)" fg:x="396" fg:w="10"/><text x="15.2386%" y="911.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (10 samples, 0.38%)</title><rect x="14.9886%" y="885" width="0.3785%" height="15" fill="rgb(210,169,34)" fg:x="396" fg:w="10"/><text x="15.2386%" y="895.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (10 samples, 0.38%)</title><rect x="14.9886%" y="869" width="0.3785%" height="15" fill="rgb(241,121,31)" fg:x="396" fg:w="10"/><text x="15.2386%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (10 samples, 0.38%)</title><rect x="14.9886%" y="853" width="0.3785%" height="15" fill="rgb(232,40,11)" fg:x="396" fg:w="10"/><text x="15.2386%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10 samples, 0.38%)</title><rect x="14.9886%" y="837" width="0.3785%" height="15" fill="rgb(205,86,26)" fg:x="396" fg:w="10"/><text x="15.2386%" y="847.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}}::_{{closure}}::_{{closure}} (10 samples, 0.38%)</title><rect x="14.9886%" y="821" width="0.3785%" height="15" fill="rgb(231,126,28)" fg:x="396" fg:w="10"/><text x="15.2386%" y="831.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::send_packet::_{{closure}} (2 samples, 0.08%)</title><rect x="15.2914%" y="805" width="0.0757%" height="15" fill="rgb(219,221,18)" fg:x="404" fg:w="2"/><text x="15.5414%" y="815.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::write_packet (1 samples, 0.04%)</title><rect x="15.3293%" y="789" width="0.0379%" height="15" fill="rgb(211,40,0)" fg:x="405" fg:w="1"/><text x="15.5793%" y="799.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::write_with (1 samples, 0.04%)</title><rect x="15.3293%" y="773" width="0.0379%" height="15" fill="rgb(239,85,43)" fg:x="405" fg:w="1"/><text x="15.5793%" y="783.50"></text></g><g><title>&lt;sqlx_mysql::protocol::packet::Packet&lt;T&gt; as sqlx_core::io::encode::Encode&lt;(sqlx_mysql::protocol::capabilities::Capabilities,&amp;mut u8)&gt;&gt;::encode_with (1 samples, 0.04%)</title><rect x="15.3293%" y="757" width="0.0379%" height="15" fill="rgb(231,55,21)" fg:x="405" fg:w="1"/><text x="15.5793%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="15.3293%" y="741" width="0.0379%" height="15" fill="rgb(225,184,43)" fg:x="405" fg:w="1"/><text x="15.5793%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="15.3293%" y="725" width="0.0379%" height="15" fill="rgb(251,158,41)" fg:x="405" fg:w="1"/><text x="15.5793%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="15.3293%" y="709" width="0.0379%" height="15" fill="rgb(234,159,37)" fg:x="405" fg:w="1"/><text x="15.5793%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="15.3293%" y="693" width="0.0379%" height="15" fill="rgb(216,204,22)" fg:x="405" fg:w="1"/><text x="15.5793%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="15.3293%" y="677" width="0.0379%" height="15" fill="rgb(214,17,3)" fg:x="405" fg:w="1"/><text x="15.5793%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="15.3671%" y="1109" width="0.0379%" height="15" fill="rgb(212,111,17)" fg:x="406" fg:w="1"/><text x="15.6171%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="15.3671%" y="1093" width="0.0379%" height="15" fill="rgb(221,157,24)" fg:x="406" fg:w="1"/><text x="15.6171%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="15.3671%" y="1077" width="0.0379%" height="15" fill="rgb(252,16,13)" fg:x="406" fg:w="1"/><text x="15.6171%" y="1087.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (1 samples, 0.04%)</title><rect x="15.4050%" y="965" width="0.0379%" height="15" fill="rgb(221,62,2)" fg:x="407" fg:w="1"/><text x="15.6550%" y="975.50"></text></g><g><title>fabseapi::Api::traffic_light_insert::_{{closure}} (18 samples, 0.68%)</title><rect x="14.7994%" y="1333" width="0.6813%" height="15" fill="rgb(247,87,22)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1343.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (18 samples, 0.68%)</title><rect x="14.7994%" y="1317" width="0.6813%" height="15" fill="rgb(215,73,9)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1327.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18 samples, 0.68%)</title><rect x="14.7994%" y="1301" width="0.6813%" height="15" fill="rgb(207,175,33)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (18 samples, 0.68%)</title><rect x="14.7994%" y="1285" width="0.6813%" height="15" fill="rgb(243,129,54)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1295.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (18 samples, 0.68%)</title><rect x="14.7994%" y="1269" width="0.6813%" height="15" fill="rgb(227,119,45)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (18 samples, 0.68%)</title><rect x="14.7994%" y="1253" width="0.6813%" height="15" fill="rgb(205,109,36)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (18 samples, 0.68%)</title><rect x="14.7994%" y="1237" width="0.6813%" height="15" fill="rgb(205,6,39)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1247.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (18 samples, 0.68%)</title><rect x="14.7994%" y="1221" width="0.6813%" height="15" fill="rgb(221,32,16)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (18 samples, 0.68%)</title><rect x="14.7994%" y="1205" width="0.6813%" height="15" fill="rgb(228,144,50)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1215.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (18 samples, 0.68%)</title><rect x="14.7994%" y="1189" width="0.6813%" height="15" fill="rgb(229,201,53)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1199.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (18 samples, 0.68%)</title><rect x="14.7994%" y="1173" width="0.6813%" height="15" fill="rgb(249,153,27)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (18 samples, 0.68%)</title><rect x="14.7994%" y="1157" width="0.6813%" height="15" fill="rgb(227,106,25)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18 samples, 0.68%)</title><rect x="14.7994%" y="1141" width="0.6813%" height="15" fill="rgb(230,65,29)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1151.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (18 samples, 0.68%)</title><rect x="14.7994%" y="1125" width="0.6813%" height="15" fill="rgb(221,57,46)" fg:x="391" fg:w="18"/><text x="15.0494%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_mysql::database::MySql&gt;&gt; (2 samples, 0.08%)</title><rect x="15.4050%" y="1109" width="0.0757%" height="15" fill="rgb(229,161,17)" fg:x="407" fg:w="2"/><text x="15.6550%" y="1119.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="15.4050%" y="1093" width="0.0757%" height="15" fill="rgb(222,213,11)" fg:x="407" fg:w="2"/><text x="15.6550%" y="1103.50"></text></g><g><title>sqlx_core::rt::spawn (2 samples, 0.08%)</title><rect x="15.4050%" y="1077" width="0.0757%" height="15" fill="rgb(235,35,13)" fg:x="407" fg:w="2"/><text x="15.6550%" y="1087.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (2 samples, 0.08%)</title><rect x="15.4050%" y="1061" width="0.0757%" height="15" fill="rgb(233,158,34)" fg:x="407" fg:w="2"/><text x="15.6550%" y="1071.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_named (2 samples, 0.08%)</title><rect x="15.4050%" y="1045" width="0.0757%" height="15" fill="rgb(215,151,48)" fg:x="407" fg:w="2"/><text x="15.6550%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (2 samples, 0.08%)</title><rect x="15.4050%" y="1029" width="0.0757%" height="15" fill="rgb(229,84,14)" fg:x="407" fg:w="2"/><text x="15.6550%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (2 samples, 0.08%)</title><rect x="15.4050%" y="1013" width="0.0757%" height="15" fill="rgb(229,68,14)" fg:x="407" fg:w="2"/><text x="15.6550%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (2 samples, 0.08%)</title><rect x="15.4050%" y="997" width="0.0757%" height="15" fill="rgb(243,106,26)" fg:x="407" fg:w="2"/><text x="15.6550%" y="1007.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (2 samples, 0.08%)</title><rect x="15.4050%" y="981" width="0.0757%" height="15" fill="rgb(206,45,38)" fg:x="407" fg:w="2"/><text x="15.6550%" y="991.50"></text></g><g><title>tokio::runtime::task::new_task (1 samples, 0.04%)</title><rect x="15.4428%" y="965" width="0.0379%" height="15" fill="rgb(226,6,15)" fg:x="408" fg:w="1"/><text x="15.6928%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (1 samples, 0.04%)</title><rect x="15.4428%" y="949" width="0.0379%" height="15" fill="rgb(232,22,54)" fg:x="408" fg:w="1"/><text x="15.6928%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.04%)</title><rect x="15.4428%" y="933" width="0.0379%" height="15" fill="rgb(229,222,32)" fg:x="408" fg:w="1"/><text x="15.6928%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="15.4428%" y="917" width="0.0379%" height="15" fill="rgb(228,62,29)" fg:x="408" fg:w="1"/><text x="15.6928%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="15.4428%" y="901" width="0.0379%" height="15" fill="rgb(251,103,34)" fg:x="408" fg:w="1"/><text x="15.6928%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="15.4428%" y="885" width="0.0379%" height="15" fill="rgb(233,12,30)" fg:x="408" fg:w="1"/><text x="15.6928%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="15.4428%" y="869" width="0.0379%" height="15" fill="rgb(238,52,0)" fg:x="408" fg:w="1"/><text x="15.6928%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="15.4428%" y="853" width="0.0379%" height="15" fill="rgb(223,98,5)" fg:x="408" fg:w="1"/><text x="15.6928%" y="863.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="15.4428%" y="837" width="0.0379%" height="15" fill="rgb(228,75,37)" fg:x="408" fg:w="1"/><text x="15.6928%" y="847.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="15.4428%" y="821" width="0.0379%" height="15" fill="rgb(205,115,49)" fg:x="408" fg:w="1"/><text x="15.6928%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (1 samples, 0.04%)</title><rect x="15.4428%" y="805" width="0.0379%" height="15" fill="rgb(250,154,43)" fg:x="408" fg:w="1"/><text x="15.6928%" y="815.50"></text></g><g><title>posix_memalign (1 samples, 0.04%)</title><rect x="15.4428%" y="789" width="0.0379%" height="15" fill="rgb(226,43,29)" fg:x="408" fg:w="1"/><text x="15.6928%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="15.4428%" y="773" width="0.0379%" height="15" fill="rgb(249,228,39)" fg:x="408" fg:w="1"/><text x="15.6928%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="15.4428%" y="757" width="0.0379%" height="15" fill="rgb(216,79,43)" fg:x="408" fg:w="1"/><text x="15.6928%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="15.4428%" y="741" width="0.0379%" height="15" fill="rgb(228,95,12)" fg:x="408" fg:w="1"/><text x="15.6928%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.04%)</title><rect x="15.5185%" y="869" width="0.0379%" height="15" fill="rgb(249,221,15)" fg:x="410" fg:w="1"/><text x="15.7685%" y="879.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (1 samples, 0.04%)</title><rect x="15.5185%" y="853" width="0.0379%" height="15" fill="rgb(233,34,13)" fg:x="410" fg:w="1"/><text x="15.7685%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::logger::QueryLogger&gt; (1 samples, 0.04%)</title><rect x="15.5564%" y="805" width="0.0379%" height="15" fill="rgb(214,103,39)" fg:x="411" fg:w="1"/><text x="15.8064%" y="815.50"></text></g><g><title>&lt;sqlx_core::logger::QueryLogger as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.5564%" y="789" width="0.0379%" height="15" fill="rgb(251,126,39)" fg:x="411" fg:w="1"/><text x="15.8064%" y="799.50"></text></g><g><title>sqlx_core::logger::QueryLogger::finish (1 samples, 0.04%)</title><rect x="15.5564%" y="773" width="0.0379%" height="15" fill="rgb(214,216,36)" fg:x="411" fg:w="1"/><text x="15.8064%" y="783.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.04%)</title><rect x="15.5564%" y="757" width="0.0379%" height="15" fill="rgb(220,221,8)" fg:x="411" fg:w="1"/><text x="15.8064%" y="767.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="15.5564%" y="741" width="0.0379%" height="15" fill="rgb(240,216,3)" fg:x="411" fg:w="1"/><text x="15.8064%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.04%)</title><rect x="15.5564%" y="725" width="0.0379%" height="15" fill="rgb(232,218,17)" fg:x="411" fg:w="1"/><text x="15.8064%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="15.5564%" y="709" width="0.0379%" height="15" fill="rgb(229,163,45)" fg:x="411" fg:w="1"/><text x="15.8064%" y="719.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::get_or_prepare_statement::_{{closure}} (1 samples, 0.04%)</title><rect x="15.5942%" y="805" width="0.0379%" height="15" fill="rgb(231,110,42)" fg:x="412" fg:w="1"/><text x="15.8442%" y="815.50"></text></g><g><title>sqlx_core::common::statement_cache::StatementCache&lt;T&gt;::get_mut (1 samples, 0.04%)</title><rect x="15.5942%" y="789" width="0.0379%" height="15" fill="rgb(208,170,48)" fg:x="412" fg:w="1"/><text x="15.8442%" y="799.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::get_mut (1 samples, 0.04%)</title><rect x="15.5942%" y="773" width="0.0379%" height="15" fill="rgb(239,116,25)" fg:x="412" fg:w="1"/><text x="15.8442%" y="783.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (1 samples, 0.04%)</title><rect x="15.5942%" y="757" width="0.0379%" height="15" fill="rgb(219,200,50)" fg:x="412" fg:w="1"/><text x="15.8442%" y="767.50"></text></g><g><title>hashlink::linked_hash_map::hash_key (1 samples, 0.04%)</title><rect x="15.5942%" y="741" width="0.0379%" height="15" fill="rgb(245,200,0)" fg:x="412" fg:w="1"/><text x="15.8442%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="15.5942%" y="725" width="0.0379%" height="15" fill="rgb(245,119,33)" fg:x="412" fg:w="1"/><text x="15.8442%" y="735.50"></text></g><g><title>core::hash::Hasher::write_str (1 samples, 0.04%)</title><rect x="15.5942%" y="709" width="0.0379%" height="15" fill="rgb(231,125,12)" fg:x="412" fg:w="1"/><text x="15.8442%" y="719.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="15.5942%" y="693" width="0.0379%" height="15" fill="rgb(216,96,41)" fg:x="412" fg:w="1"/><text x="15.8442%" y="703.50"></text></g><g><title>ahash::aes_hash::AHasher::hash_in_2 (1 samples, 0.04%)</title><rect x="15.5942%" y="677" width="0.0379%" height="15" fill="rgb(248,43,45)" fg:x="412" fg:w="1"/><text x="15.8442%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::protocol::text::column::ColumnDefinition&gt; (1 samples, 0.04%)</title><rect x="15.6321%" y="789" width="0.0379%" height="15" fill="rgb(217,222,7)" fg:x="413" fg:w="1"/><text x="15.8821%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.04%)</title><rect x="15.6321%" y="773" width="0.0379%" height="15" fill="rgb(233,28,6)" fg:x="413" fg:w="1"/><text x="15.8821%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.6321%" y="757" width="0.0379%" height="15" fill="rgb(231,218,15)" fg:x="413" fg:w="1"/><text x="15.8821%" y="767.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.04%)</title><rect x="15.6321%" y="741" width="0.0379%" height="15" fill="rgb(226,171,48)" fg:x="413" fg:w="1"/><text x="15.8821%" y="751.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.04%)</title><rect x="15.6321%" y="725" width="0.0379%" height="15" fill="rgb(235,201,9)" fg:x="413" fg:w="1"/><text x="15.8821%" y="735.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (1 samples, 0.04%)</title><rect x="15.6321%" y="709" width="0.0379%" height="15" fill="rgb(217,80,15)" fg:x="413" fg:w="1"/><text x="15.8821%" y="719.50"></text></g><g><title>bytes::bytes_mut::release_shared (1 samples, 0.04%)</title><rect x="15.6321%" y="693" width="0.0379%" height="15" fill="rgb(219,152,8)" fg:x="413" fg:w="1"/><text x="15.8821%" y="703.50"></text></g><g><title>sqlx_mysql::connection::executor::recv_next_result_column (3 samples, 0.11%)</title><rect x="15.6699%" y="789" width="0.1136%" height="15" fill="rgb(243,107,38)" fg:x="414" fg:w="3"/><text x="15.9199%" y="799.50"></text></g><g><title>sqlx_core::ext::ustr::UStr::new (3 samples, 0.11%)</title><rect x="15.6699%" y="773" width="0.1136%" height="15" fill="rgb(231,17,5)" fg:x="414" fg:w="3"/><text x="15.9199%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;alloc::string::String&gt;&gt;::from (2 samples, 0.08%)</title><rect x="15.7078%" y="757" width="0.0757%" height="15" fill="rgb(209,25,54)" fg:x="415" fg:w="2"/><text x="15.9578%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.08%)</title><rect x="15.7078%" y="741" width="0.0757%" height="15" fill="rgb(219,0,2)" fg:x="415" fg:w="2"/><text x="15.9578%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (2 samples, 0.08%)</title><rect x="15.7078%" y="725" width="0.0757%" height="15" fill="rgb(246,9,5)" fg:x="415" fg:w="2"/><text x="15.9578%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as alloc::sync::ArcFromSlice&lt;T&gt;&gt;::from_slice (2 samples, 0.08%)</title><rect x="15.7078%" y="709" width="0.0757%" height="15" fill="rgb(226,159,4)" fg:x="415" fg:w="2"/><text x="15.9578%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::copy_from_slice (2 samples, 0.08%)</title><rect x="15.7078%" y="693" width="0.0757%" height="15" fill="rgb(219,175,34)" fg:x="415" fg:w="2"/><text x="15.9578%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice (2 samples, 0.08%)</title><rect x="15.7078%" y="677" width="0.0757%" height="15" fill="rgb(236,10,46)" fg:x="415" fg:w="2"/><text x="15.9578%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (2 samples, 0.08%)</title><rect x="15.7078%" y="661" width="0.0757%" height="15" fill="rgb(240,211,16)" fg:x="415" fg:w="2"/><text x="15.9578%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice::_{{closure}} (2 samples, 0.08%)</title><rect x="15.7078%" y="645" width="0.0757%" height="15" fill="rgb(205,3,43)" fg:x="415" fg:w="2"/><text x="15.9578%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="15.7078%" y="629" width="0.0757%" height="15" fill="rgb(245,7,22)" fg:x="415" fg:w="2"/><text x="15.9578%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="15.7078%" y="613" width="0.0757%" height="15" fill="rgb(239,132,32)" fg:x="415" fg:w="2"/><text x="15.9578%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="15.7078%" y="597" width="0.0757%" height="15" fill="rgb(228,202,34)" fg:x="415" fg:w="2"/><text x="15.9578%" y="607.50"></text></g><g><title>__rdl_alloc (2 samples, 0.08%)</title><rect x="15.7078%" y="581" width="0.0757%" height="15" fill="rgb(254,200,22)" fg:x="415" fg:w="2"/><text x="15.9578%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.08%)</title><rect x="15.7078%" y="565" width="0.0757%" height="15" fill="rgb(219,10,39)" fg:x="415" fg:w="2"/><text x="15.9578%" y="575.50"></text></g><g><title>malloc (2 samples, 0.08%)</title><rect x="15.7078%" y="549" width="0.0757%" height="15" fill="rgb(226,210,39)" fg:x="415" fg:w="2"/><text x="15.9578%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="15.7456%" y="533" width="0.0379%" height="15" fill="rgb(208,219,16)" fg:x="416" fg:w="1"/><text x="15.9956%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as sqlx_mysql::io::buf::MySqlBufExt&gt;::get_bytes_lenenc (1 samples, 0.04%)</title><rect x="15.8213%" y="741" width="0.0379%" height="15" fill="rgb(216,158,51)" fg:x="418" fg:w="1"/><text x="16.0713%" y="751.50"></text></g><g><title>&lt;bytes::bytes::Bytes as sqlx_mysql::io::buf::MySqlBufExt&gt;::get_uint_lenenc (1 samples, 0.04%)</title><rect x="15.8213%" y="725" width="0.0379%" height="15" fill="rgb(233,14,44)" fg:x="418" fg:w="1"/><text x="16.0713%" y="735.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (1 samples, 0.04%)</title><rect x="15.8213%" y="709" width="0.0379%" height="15" fill="rgb(237,97,39)" fg:x="418" fg:w="1"/><text x="16.0713%" y="719.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (1 samples, 0.04%)</title><rect x="15.8213%" y="693" width="0.0379%" height="15" fill="rgb(218,198,43)" fg:x="418" fg:w="1"/><text x="16.0713%" y="703.50"></text></g><g><title>sqlx_mysql::connection::executor::recv_result_columns::_{{closure}} (7 samples, 0.26%)</title><rect x="15.6321%" y="805" width="0.2650%" height="15" fill="rgb(231,104,20)" fg:x="413" fg:w="7"/><text x="15.8821%" y="815.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv::_{{closure}} (3 samples, 0.11%)</title><rect x="15.7835%" y="789" width="0.1136%" height="15" fill="rgb(254,36,13)" fg:x="417" fg:w="3"/><text x="16.0335%" y="799.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (3 samples, 0.11%)</title><rect x="15.7835%" y="773" width="0.1136%" height="15" fill="rgb(248,14,50)" fg:x="417" fg:w="3"/><text x="16.0335%" y="783.50"></text></g><g><title>&lt;sqlx_mysql::protocol::text::column::ColumnDefinition as sqlx_core::io::decode::Decode&lt;sqlx_mysql::protocol::capabilities::Capabilities&gt;&gt;::decode_with (3 samples, 0.11%)</title><rect x="15.7835%" y="757" width="0.1136%" height="15" fill="rgb(217,107,29)" fg:x="417" fg:w="3"/><text x="16.0335%" y="767.50"></text></g><g><title>&lt;bytes::bytes::Bytes as sqlx_mysql::io::buf::MySqlBufExt&gt;::get_uint_lenenc (1 samples, 0.04%)</title><rect x="15.8592%" y="741" width="0.0379%" height="15" fill="rgb(251,169,33)" fg:x="419" fg:w="1"/><text x="16.1092%" y="751.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (1 samples, 0.04%)</title><rect x="15.8592%" y="725" width="0.0379%" height="15" fill="rgb(217,108,32)" fg:x="419" fg:w="1"/><text x="16.1092%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="15.9349%" y="789" width="0.0379%" height="15" fill="rgb(219,66,42)" fg:x="421" fg:w="1"/><text x="16.1849%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="15.9349%" y="773" width="0.0379%" height="15" fill="rgb(206,180,7)" fg:x="421" fg:w="1"/><text x="16.1849%" y="783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="15.9349%" y="757" width="0.0379%" height="15" fill="rgb(208,226,31)" fg:x="421" fg:w="1"/><text x="16.1849%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="15.9349%" y="741" width="0.0379%" height="15" fill="rgb(218,26,49)" fg:x="421" fg:w="1"/><text x="16.1849%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="15.9349%" y="725" width="0.0379%" height="15" fill="rgb(233,197,48)" fg:x="421" fg:w="1"/><text x="16.1849%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="15.9349%" y="709" width="0.0379%" height="15" fill="rgb(252,181,51)" fg:x="421" fg:w="1"/><text x="16.1849%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="15.9349%" y="693" width="0.0379%" height="15" fill="rgb(253,90,19)" fg:x="421" fg:w="1"/><text x="16.1849%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="15.9349%" y="677" width="0.0379%" height="15" fill="rgb(215,171,30)" fg:x="421" fg:w="1"/><text x="16.1849%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="15.9349%" y="661" width="0.0379%" height="15" fill="rgb(214,222,9)" fg:x="421" fg:w="1"/><text x="16.1849%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="15.9349%" y="645" width="0.0379%" height="15" fill="rgb(223,3,22)" fg:x="421" fg:w="1"/><text x="16.1849%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="15.9349%" y="629" width="0.0379%" height="15" fill="rgb(225,196,46)" fg:x="421" fg:w="1"/><text x="16.1849%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="15.9349%" y="613" width="0.0379%" height="15" fill="rgb(209,110,37)" fg:x="421" fg:w="1"/><text x="16.1849%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="15.9349%" y="597" width="0.0379%" height="15" fill="rgb(249,89,12)" fg:x="421" fg:w="1"/><text x="16.1849%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="15.9349%" y="581" width="0.0379%" height="15" fill="rgb(226,27,33)" fg:x="421" fg:w="1"/><text x="16.1849%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="15.9349%" y="565" width="0.0379%" height="15" fill="rgb(213,82,22)" fg:x="421" fg:w="1"/><text x="16.1849%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="15.9349%" y="549" width="0.0379%" height="15" fill="rgb(248,140,0)" fg:x="421" fg:w="1"/><text x="16.1849%" y="559.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="15.9349%" y="533" width="0.0379%" height="15" fill="rgb(228,106,3)" fg:x="421" fg:w="1"/><text x="16.1849%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="15.9349%" y="517" width="0.0379%" height="15" fill="rgb(209,23,37)" fg:x="421" fg:w="1"/><text x="16.1849%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="15.9727%" y="773" width="0.0379%" height="15" fill="rgb(241,93,50)" fg:x="422" fg:w="1"/><text x="16.2227%" y="783.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="16.0484%" y="613" width="0.0379%" height="15" fill="rgb(253,46,43)" fg:x="424" fg:w="1"/><text x="16.2984%" y="623.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="16.0484%" y="597" width="0.0379%" height="15" fill="rgb(226,206,43)" fg:x="424" fg:w="1"/><text x="16.2984%" y="607.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="16.0484%" y="581" width="0.0379%" height="15" fill="rgb(217,54,7)" fg:x="424" fg:w="1"/><text x="16.2984%" y="591.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="16.0484%" y="565" width="0.0379%" height="15" fill="rgb(223,5,52)" fg:x="424" fg:w="1"/><text x="16.2984%" y="575.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="16.0484%" y="549" width="0.0379%" height="15" fill="rgb(206,52,46)" fg:x="424" fg:w="1"/><text x="16.2984%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.04%)</title><rect x="16.0484%" y="533" width="0.0379%" height="15" fill="rgb(253,136,11)" fg:x="424" fg:w="1"/><text x="16.2984%" y="543.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1 samples, 0.04%)</title><rect x="16.0484%" y="517" width="0.0379%" height="15" fill="rgb(208,106,33)" fg:x="424" fg:w="1"/><text x="16.2984%" y="527.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1 samples, 0.04%)</title><rect x="16.0484%" y="501" width="0.0379%" height="15" fill="rgb(206,54,4)" fg:x="424" fg:w="1"/><text x="16.2984%" y="511.50"></text></g><g><title>recv (1 samples, 0.04%)</title><rect x="16.0484%" y="485" width="0.0379%" height="15" fill="rgb(213,3,15)" fg:x="424" fg:w="1"/><text x="16.2984%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.0484%" y="469" width="0.0379%" height="15" fill="rgb(252,211,39)" fg:x="424" fg:w="1"/><text x="16.2984%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.0484%" y="453" width="0.0379%" height="15" fill="rgb(223,6,36)" fg:x="424" fg:w="1"/><text x="16.2984%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.0484%" y="437" width="0.0379%" height="15" fill="rgb(252,169,45)" fg:x="424" fg:w="1"/><text x="16.2984%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.0484%" y="421" width="0.0379%" height="15" fill="rgb(212,48,26)" fg:x="424" fg:w="1"/><text x="16.2984%" y="431.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (17 samples, 0.64%)</title><rect x="15.4807%" y="1029" width="0.6435%" height="15" fill="rgb(251,102,48)" fg:x="409" fg:w="17"/><text x="15.7307%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (17 samples, 0.64%)</title><rect x="15.4807%" y="1013" width="0.6435%" height="15" fill="rgb(243,208,16)" fg:x="409" fg:w="17"/><text x="15.7307%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17 samples, 0.64%)</title><rect x="15.4807%" y="997" width="0.6435%" height="15" fill="rgb(219,96,24)" fg:x="409" fg:w="17"/><text x="15.7307%" y="1007.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many::_{{closure}}::_{{closure}} (17 samples, 0.64%)</title><rect x="15.4807%" y="981" width="0.6435%" height="15" fill="rgb(219,33,29)" fg:x="409" fg:w="17"/><text x="15.7307%" y="991.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (16 samples, 0.61%)</title><rect x="15.5185%" y="965" width="0.6056%" height="15" fill="rgb(223,176,5)" fg:x="410" fg:w="16"/><text x="15.7685%" y="975.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (16 samples, 0.61%)</title><rect x="15.5185%" y="949" width="0.6056%" height="15" fill="rgb(228,140,14)" fg:x="410" fg:w="16"/><text x="15.7685%" y="959.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (16 samples, 0.61%)</title><rect x="15.5185%" y="933" width="0.6056%" height="15" fill="rgb(217,179,31)" fg:x="410" fg:w="16"/><text x="15.7685%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.61%)</title><rect x="15.5185%" y="917" width="0.6056%" height="15" fill="rgb(230,9,30)" fg:x="410" fg:w="16"/><text x="15.7685%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.61%)</title><rect x="15.5185%" y="901" width="0.6056%" height="15" fill="rgb(230,136,20)" fg:x="410" fg:w="16"/><text x="15.7685%" y="911.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.61%)</title><rect x="15.5185%" y="885" width="0.6056%" height="15" fill="rgb(215,210,22)" fg:x="410" fg:w="16"/><text x="15.7685%" y="895.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (15 samples, 0.57%)</title><rect x="15.5564%" y="869" width="0.5678%" height="15" fill="rgb(218,43,5)" fg:x="411" fg:w="15"/><text x="15.8064%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (15 samples, 0.57%)</title><rect x="15.5564%" y="853" width="0.5678%" height="15" fill="rgb(216,11,5)" fg:x="411" fg:w="15"/><text x="15.8064%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15 samples, 0.57%)</title><rect x="15.5564%" y="837" width="0.5678%" height="15" fill="rgb(209,82,29)" fg:x="411" fg:w="15"/><text x="15.8064%" y="847.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}}::_{{closure}}::_{{closure}} (15 samples, 0.57%)</title><rect x="15.5564%" y="821" width="0.5678%" height="15" fill="rgb(244,115,12)" fg:x="411" fg:w="15"/><text x="15.8064%" y="831.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (6 samples, 0.23%)</title><rect x="15.8970%" y="805" width="0.2271%" height="15" fill="rgb(222,82,18)" fg:x="420" fg:w="6"/><text x="16.1470%" y="815.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (4 samples, 0.15%)</title><rect x="15.9727%" y="789" width="0.1514%" height="15" fill="rgb(249,227,8)" fg:x="422" fg:w="4"/><text x="16.2227%" y="799.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (3 samples, 0.11%)</title><rect x="16.0106%" y="773" width="0.1136%" height="15" fill="rgb(253,141,45)" fg:x="423" fg:w="3"/><text x="16.2606%" y="783.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (3 samples, 0.11%)</title><rect x="16.0106%" y="757" width="0.1136%" height="15" fill="rgb(234,184,4)" fg:x="423" fg:w="3"/><text x="16.2606%" y="767.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (3 samples, 0.11%)</title><rect x="16.0106%" y="741" width="0.1136%" height="15" fill="rgb(218,194,23)" fg:x="423" fg:w="3"/><text x="16.2606%" y="751.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (3 samples, 0.11%)</title><rect x="16.0106%" y="725" width="0.1136%" height="15" fill="rgb(235,66,41)" fg:x="423" fg:w="3"/><text x="16.2606%" y="735.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="16.0106%" y="709" width="0.1136%" height="15" fill="rgb(245,217,1)" fg:x="423" fg:w="3"/><text x="16.2606%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (2 samples, 0.08%)</title><rect x="16.0484%" y="693" width="0.0757%" height="15" fill="rgb(229,91,1)" fg:x="424" fg:w="2"/><text x="16.2984%" y="703.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (2 samples, 0.08%)</title><rect x="16.0484%" y="677" width="0.0757%" height="15" fill="rgb(207,101,30)" fg:x="424" fg:w="2"/><text x="16.2984%" y="687.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (2 samples, 0.08%)</title><rect x="16.0484%" y="661" width="0.0757%" height="15" fill="rgb(223,82,49)" fg:x="424" fg:w="2"/><text x="16.2984%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (2 samples, 0.08%)</title><rect x="16.0484%" y="645" width="0.0757%" height="15" fill="rgb(218,167,17)" fg:x="424" fg:w="2"/><text x="16.2984%" y="655.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (2 samples, 0.08%)</title><rect x="16.0484%" y="629" width="0.0757%" height="15" fill="rgb(208,103,14)" fg:x="424" fg:w="2"/><text x="16.2984%" y="639.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.04%)</title><rect x="16.0863%" y="613" width="0.0379%" height="15" fill="rgb(238,20,8)" fg:x="425" fg:w="1"/><text x="16.3363%" y="623.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.04%)</title><rect x="16.0863%" y="597" width="0.0379%" height="15" fill="rgb(218,80,54)" fg:x="425" fg:w="1"/><text x="16.3363%" y="607.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (1 samples, 0.04%)</title><rect x="16.0863%" y="581" width="0.0379%" height="15" fill="rgb(240,144,17)" fg:x="425" fg:w="1"/><text x="16.3363%" y="591.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (18 samples, 0.68%)</title><rect x="15.4807%" y="1109" width="0.6813%" height="15" fill="rgb(245,27,50)" fg:x="409" fg:w="18"/><text x="15.7307%" y="1119.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (18 samples, 0.68%)</title><rect x="15.4807%" y="1093" width="0.6813%" height="15" fill="rgb(251,51,7)" fg:x="409" fg:w="18"/><text x="15.7307%" y="1103.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (18 samples, 0.68%)</title><rect x="15.4807%" y="1077" width="0.6813%" height="15" fill="rgb(245,217,29)" fg:x="409" fg:w="18"/><text x="15.7307%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (18 samples, 0.68%)</title><rect x="15.4807%" y="1061" width="0.6813%" height="15" fill="rgb(221,176,29)" fg:x="409" fg:w="18"/><text x="15.7307%" y="1071.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (18 samples, 0.68%)</title><rect x="15.4807%" y="1045" width="0.6813%" height="15" fill="rgb(212,180,24)" fg:x="409" fg:w="18"/><text x="15.7307%" y="1055.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="16.1241%" y="1029" width="0.0379%" height="15" fill="rgb(254,24,2)" fg:x="426" fg:w="1"/><text x="16.3741%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="16.1241%" y="1013" width="0.0379%" height="15" fill="rgb(230,100,2)" fg:x="426" fg:w="1"/><text x="16.3741%" y="1023.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="16.1241%" y="997" width="0.0379%" height="15" fill="rgb(219,142,25)" fg:x="426" fg:w="1"/><text x="16.3741%" y="1007.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="16.1241%" y="981" width="0.0379%" height="15" fill="rgb(240,73,43)" fg:x="426" fg:w="1"/><text x="16.3741%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_mysql::database::MySql&gt;&gt; (2 samples, 0.08%)</title><rect x="16.1620%" y="1109" width="0.0757%" height="15" fill="rgb(214,114,15)" fg:x="427" fg:w="2"/><text x="16.4120%" y="1119.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="16.1620%" y="1093" width="0.0757%" height="15" fill="rgb(207,130,4)" fg:x="427" fg:w="2"/><text x="16.4120%" y="1103.50"></text></g><g><title>sqlx_core::rt::spawn (2 samples, 0.08%)</title><rect x="16.1620%" y="1077" width="0.0757%" height="15" fill="rgb(221,25,40)" fg:x="427" fg:w="2"/><text x="16.4120%" y="1087.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (2 samples, 0.08%)</title><rect x="16.1620%" y="1061" width="0.0757%" height="15" fill="rgb(241,184,7)" fg:x="427" fg:w="2"/><text x="16.4120%" y="1071.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_named (2 samples, 0.08%)</title><rect x="16.1620%" y="1045" width="0.0757%" height="15" fill="rgb(235,159,4)" fg:x="427" fg:w="2"/><text x="16.4120%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (2 samples, 0.08%)</title><rect x="16.1620%" y="1029" width="0.0757%" height="15" fill="rgb(214,87,48)" fg:x="427" fg:w="2"/><text x="16.4120%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (2 samples, 0.08%)</title><rect x="16.1620%" y="1013" width="0.0757%" height="15" fill="rgb(246,198,24)" fg:x="427" fg:w="2"/><text x="16.4120%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (2 samples, 0.08%)</title><rect x="16.1620%" y="997" width="0.0757%" height="15" fill="rgb(209,66,40)" fg:x="427" fg:w="2"/><text x="16.4120%" y="1007.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (2 samples, 0.08%)</title><rect x="16.1620%" y="981" width="0.0757%" height="15" fill="rgb(233,147,39)" fg:x="427" fg:w="2"/><text x="16.4120%" y="991.50"></text></g><g><title>tokio::runtime::task::new_task (2 samples, 0.08%)</title><rect x="16.1620%" y="965" width="0.0757%" height="15" fill="rgb(231,145,52)" fg:x="427" fg:w="2"/><text x="16.4120%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (2 samples, 0.08%)</title><rect x="16.1620%" y="949" width="0.0757%" height="15" fill="rgb(206,20,26)" fg:x="427" fg:w="2"/><text x="16.4120%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (2 samples, 0.08%)</title><rect x="16.1620%" y="933" width="0.0757%" height="15" fill="rgb(238,220,4)" fg:x="427" fg:w="2"/><text x="16.4120%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="16.1620%" y="917" width="0.0757%" height="15" fill="rgb(252,195,42)" fg:x="427" fg:w="2"/><text x="16.4120%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="16.1998%" y="901" width="0.0379%" height="15" fill="rgb(209,10,6)" fg:x="428" fg:w="1"/><text x="16.4498%" y="911.50"></text></g><g><title>fabseapi::Api::traffic_light_retrieve::_{{closure}} (21 samples, 0.79%)</title><rect x="15.4807%" y="1333" width="0.7949%" height="15" fill="rgb(229,3,52)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1343.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (21 samples, 0.79%)</title><rect x="15.4807%" y="1317" width="0.7949%" height="15" fill="rgb(253,49,37)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1327.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.79%)</title><rect x="15.4807%" y="1301" width="0.7949%" height="15" fill="rgb(240,103,49)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.79%)</title><rect x="15.4807%" y="1285" width="0.7949%" height="15" fill="rgb(250,182,30)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.79%)</title><rect x="15.4807%" y="1269" width="0.7949%" height="15" fill="rgb(248,8,30)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1279.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (21 samples, 0.79%)</title><rect x="15.4807%" y="1253" width="0.7949%" height="15" fill="rgb(237,120,30)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.79%)</title><rect x="15.4807%" y="1237" width="0.7949%" height="15" fill="rgb(221,146,34)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.79%)</title><rect x="15.4807%" y="1221" width="0.7949%" height="15" fill="rgb(242,55,13)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.79%)</title><rect x="15.4807%" y="1205" width="0.7949%" height="15" fill="rgb(242,112,31)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1215.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.79%)</title><rect x="15.4807%" y="1189" width="0.7949%" height="15" fill="rgb(249,192,27)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1199.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (21 samples, 0.79%)</title><rect x="15.4807%" y="1173" width="0.7949%" height="15" fill="rgb(208,204,44)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (21 samples, 0.79%)</title><rect x="15.4807%" y="1157" width="0.7949%" height="15" fill="rgb(208,93,54)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (21 samples, 0.79%)</title><rect x="15.4807%" y="1141" width="0.7949%" height="15" fill="rgb(242,1,31)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1151.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (21 samples, 0.79%)</title><rect x="15.4807%" y="1125" width="0.7949%" height="15" fill="rgb(241,83,25)" fg:x="409" fg:w="21"/><text x="15.7307%" y="1135.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}} (1 samples, 0.04%)</title><rect x="16.2377%" y="1109" width="0.0379%" height="15" fill="rgb(205,169,50)" fg:x="429" fg:w="1"/><text x="16.4877%" y="1119.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::get_or_prepare_statement::_{{closure}} (1 samples, 0.04%)</title><rect x="16.3891%" y="805" width="0.0379%" height="15" fill="rgb(239,186,37)" fg:x="433" fg:w="1"/><text x="16.6391%" y="815.50"></text></g><g><title>sqlx_core::common::statement_cache::StatementCache&lt;T&gt;::get_mut (1 samples, 0.04%)</title><rect x="16.3891%" y="789" width="0.0379%" height="15" fill="rgb(205,221,10)" fg:x="433" fg:w="1"/><text x="16.6391%" y="799.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::get_mut (1 samples, 0.04%)</title><rect x="16.3891%" y="773" width="0.0379%" height="15" fill="rgb(218,196,15)" fg:x="433" fg:w="1"/><text x="16.6391%" y="783.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (1 samples, 0.04%)</title><rect x="16.3891%" y="757" width="0.0379%" height="15" fill="rgb(218,196,35)" fg:x="433" fg:w="1"/><text x="16.6391%" y="767.50"></text></g><g><title>hashlink::linked_hash_map::hash_key (1 samples, 0.04%)</title><rect x="16.3891%" y="741" width="0.0379%" height="15" fill="rgb(233,63,24)" fg:x="433" fg:w="1"/><text x="16.6391%" y="751.50"></text></g><g><title>&lt;core::hash::BuildHasherDefault&lt;H&gt; as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="16.3891%" y="725" width="0.0379%" height="15" fill="rgb(225,8,4)" fg:x="433" fg:w="1"/><text x="16.6391%" y="735.50"></text></g><g><title>ahash::&lt;impl core::default::Default for ahash::aes_hash::AHasher&gt;::default (1 samples, 0.04%)</title><rect x="16.3891%" y="709" width="0.0379%" height="15" fill="rgb(234,105,35)" fg:x="433" fg:w="1"/><text x="16.6391%" y="719.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="16.3891%" y="693" width="0.0379%" height="15" fill="rgb(236,21,32)" fg:x="433" fg:w="1"/><text x="16.6391%" y="703.50"></text></g><g><title>ahash::aes_hash::AHasher::from_random_state (1 samples, 0.04%)</title><rect x="16.3891%" y="677" width="0.0379%" height="15" fill="rgb(228,109,6)" fg:x="433" fg:w="1"/><text x="16.6391%" y="687.50"></text></g><g><title>&lt;[u64: 2] as ahash::convert::Convert&lt;u128&gt;&gt;::convert (1 samples, 0.04%)</title><rect x="16.3891%" y="661" width="0.0379%" height="15" fill="rgb(229,215,31)" fg:x="433" fg:w="1"/><text x="16.6391%" y="671.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (4 samples, 0.15%)</title><rect x="16.5026%" y="709" width="0.1514%" height="15" fill="rgb(221,52,54)" fg:x="436" fg:w="4"/><text x="16.7526%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (3 samples, 0.11%)</title><rect x="16.5405%" y="693" width="0.1136%" height="15" fill="rgb(252,129,43)" fg:x="437" fg:w="3"/><text x="16.7905%" y="703.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (3 samples, 0.11%)</title><rect x="16.5405%" y="677" width="0.1136%" height="15" fill="rgb(248,183,27)" fg:x="437" fg:w="3"/><text x="16.7905%" y="687.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (2 samples, 0.08%)</title><rect x="16.5783%" y="661" width="0.0757%" height="15" fill="rgb(250,0,22)" fg:x="438" fg:w="2"/><text x="16.8283%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (2 samples, 0.08%)</title><rect x="16.5783%" y="645" width="0.0757%" height="15" fill="rgb(213,166,10)" fg:x="438" fg:w="2"/><text x="16.8283%" y="655.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (2 samples, 0.08%)</title><rect x="16.5783%" y="629" width="0.0757%" height="15" fill="rgb(207,163,36)" fg:x="438" fg:w="2"/><text x="16.8283%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2 samples, 0.08%)</title><rect x="16.5783%" y="613" width="0.0757%" height="15" fill="rgb(208,122,22)" fg:x="438" fg:w="2"/><text x="16.8283%" y="623.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.08%)</title><rect x="16.5783%" y="597" width="0.0757%" height="15" fill="rgb(207,104,49)" fg:x="438" fg:w="2"/><text x="16.8283%" y="607.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2 samples, 0.08%)</title><rect x="16.5783%" y="581" width="0.0757%" height="15" fill="rgb(248,211,50)" fg:x="438" fg:w="2"/><text x="16.8283%" y="591.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (2 samples, 0.08%)</title><rect x="16.5783%" y="565" width="0.0757%" height="15" fill="rgb(217,13,45)" fg:x="438" fg:w="2"/><text x="16.8283%" y="575.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.08%)</title><rect x="16.5783%" y="549" width="0.0757%" height="15" fill="rgb(211,216,49)" fg:x="438" fg:w="2"/><text x="16.8283%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.08%)</title><rect x="16.5783%" y="533" width="0.0757%" height="15" fill="rgb(221,58,53)" fg:x="438" fg:w="2"/><text x="16.8283%" y="543.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (2 samples, 0.08%)</title><rect x="16.5783%" y="517" width="0.0757%" height="15" fill="rgb(220,112,41)" fg:x="438" fg:w="2"/><text x="16.8283%" y="527.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (2 samples, 0.08%)</title><rect x="16.5783%" y="501" width="0.0757%" height="15" fill="rgb(236,38,28)" fg:x="438" fg:w="2"/><text x="16.8283%" y="511.50"></text></g><g><title>recv (2 samples, 0.08%)</title><rect x="16.5783%" y="485" width="0.0757%" height="15" fill="rgb(227,195,22)" fg:x="438" fg:w="2"/><text x="16.8283%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="16.5783%" y="469" width="0.0757%" height="15" fill="rgb(214,55,33)" fg:x="438" fg:w="2"/><text x="16.8283%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="16.5783%" y="453" width="0.0757%" height="15" fill="rgb(248,80,13)" fg:x="438" fg:w="2"/><text x="16.8283%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.6162%" y="437" width="0.0379%" height="15" fill="rgb(238,52,6)" fg:x="439" fg:w="1"/><text x="16.8662%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.6162%" y="421" width="0.0379%" height="15" fill="rgb(224,198,47)" fg:x="439" fg:w="1"/><text x="16.8662%" y="431.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (8 samples, 0.30%)</title><rect x="16.4269%" y="805" width="0.3028%" height="15" fill="rgb(233,171,20)" fg:x="434" fg:w="8"/><text x="16.6769%" y="815.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (7 samples, 0.26%)</title><rect x="16.4648%" y="789" width="0.2650%" height="15" fill="rgb(241,30,25)" fg:x="435" fg:w="7"/><text x="16.7148%" y="799.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (7 samples, 0.26%)</title><rect x="16.4648%" y="773" width="0.2650%" height="15" fill="rgb(207,171,38)" fg:x="435" fg:w="7"/><text x="16.7148%" y="783.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (6 samples, 0.23%)</title><rect x="16.5026%" y="757" width="0.2271%" height="15" fill="rgb(234,70,1)" fg:x="436" fg:w="6"/><text x="16.7526%" y="767.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (6 samples, 0.23%)</title><rect x="16.5026%" y="741" width="0.2271%" height="15" fill="rgb(232,178,18)" fg:x="436" fg:w="6"/><text x="16.7526%" y="751.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (6 samples, 0.23%)</title><rect x="16.5026%" y="725" width="0.2271%" height="15" fill="rgb(241,78,40)" fg:x="436" fg:w="6"/><text x="16.7526%" y="735.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::reserve (2 samples, 0.08%)</title><rect x="16.6540%" y="709" width="0.0757%" height="15" fill="rgb(222,35,25)" fg:x="440" fg:w="2"/><text x="16.9040%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (2 samples, 0.08%)</title><rect x="16.6540%" y="693" width="0.0757%" height="15" fill="rgb(207,92,16)" fg:x="440" fg:w="2"/><text x="16.9040%" y="703.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (11 samples, 0.42%)</title><rect x="16.3512%" y="869" width="0.4164%" height="15" fill="rgb(216,59,51)" fg:x="432" fg:w="11"/><text x="16.6012%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (11 samples, 0.42%)</title><rect x="16.3512%" y="853" width="0.4164%" height="15" fill="rgb(213,80,28)" fg:x="432" fg:w="11"/><text x="16.6012%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 0.42%)</title><rect x="16.3512%" y="837" width="0.4164%" height="15" fill="rgb(220,93,7)" fg:x="432" fg:w="11"/><text x="16.6012%" y="847.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}}::_{{closure}}::_{{closure}} (11 samples, 0.42%)</title><rect x="16.3512%" y="821" width="0.4164%" height="15" fill="rgb(225,24,44)" fg:x="432" fg:w="11"/><text x="16.6012%" y="831.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::send_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="16.7298%" y="805" width="0.0379%" height="15" fill="rgb(243,74,40)" fg:x="442" fg:w="1"/><text x="16.9798%" y="815.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::flush::_{{closure}} (1 samples, 0.04%)</title><rect x="16.7298%" y="789" width="0.0379%" height="15" fill="rgb(228,39,7)" fg:x="442" fg:w="1"/><text x="16.9798%" y="799.50"></text></g><g><title>&lt;sqlx_core::net::socket::Write&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="16.7298%" y="773" width="0.0379%" height="15" fill="rgb(227,79,8)" fg:x="442" fg:w="1"/><text x="16.9798%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_write (1 samples, 0.04%)</title><rect x="16.7298%" y="757" width="0.0379%" height="15" fill="rgb(236,58,11)" fg:x="442" fg:w="1"/><text x="16.9798%" y="767.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write (1 samples, 0.04%)</title><rect x="16.7298%" y="741" width="0.0379%" height="15" fill="rgb(249,63,35)" fg:x="442" fg:w="1"/><text x="16.9798%" y="751.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="16.7298%" y="725" width="0.0379%" height="15" fill="rgb(252,114,16)" fg:x="442" fg:w="1"/><text x="16.9798%" y="735.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write::_{{closure}} (1 samples, 0.04%)</title><rect x="16.7298%" y="709" width="0.0379%" height="15" fill="rgb(254,151,24)" fg:x="442" fg:w="1"/><text x="16.9798%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="16.7298%" y="693" width="0.0379%" height="15" fill="rgb(253,54,39)" fg:x="442" fg:w="1"/><text x="16.9798%" y="703.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="16.7298%" y="677" width="0.0379%" height="15" fill="rgb(243,25,45)" fg:x="442" fg:w="1"/><text x="16.9798%" y="687.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="16.7298%" y="661" width="0.0379%" height="15" fill="rgb(234,134,9)" fg:x="442" fg:w="1"/><text x="16.9798%" y="671.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1 samples, 0.04%)</title><rect x="16.7298%" y="645" width="0.0379%" height="15" fill="rgb(227,166,31)" fg:x="442" fg:w="1"/><text x="16.9798%" y="655.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="16.7298%" y="629" width="0.0379%" height="15" fill="rgb(245,143,41)" fg:x="442" fg:w="1"/><text x="16.9798%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.04%)</title><rect x="16.7298%" y="613" width="0.0379%" height="15" fill="rgb(238,181,32)" fg:x="442" fg:w="1"/><text x="16.9798%" y="623.50"></text></g><g><title>__send (1 samples, 0.04%)</title><rect x="16.7298%" y="597" width="0.0379%" height="15" fill="rgb(224,113,18)" fg:x="442" fg:w="1"/><text x="16.9798%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.7298%" y="581" width="0.0379%" height="15" fill="rgb(240,229,28)" fg:x="442" fg:w="1"/><text x="16.9798%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.7298%" y="565" width="0.0379%" height="15" fill="rgb(250,185,3)" fg:x="442" fg:w="1"/><text x="16.9798%" y="575.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (12 samples, 0.45%)</title><rect x="16.3512%" y="965" width="0.4542%" height="15" fill="rgb(212,59,25)" fg:x="432" fg:w="12"/><text x="16.6012%" y="975.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (12 samples, 0.45%)</title><rect x="16.3512%" y="949" width="0.4542%" height="15" fill="rgb(221,87,20)" fg:x="432" fg:w="12"/><text x="16.6012%" y="959.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (12 samples, 0.45%)</title><rect x="16.3512%" y="933" width="0.4542%" height="15" fill="rgb(213,74,28)" fg:x="432" fg:w="12"/><text x="16.6012%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.45%)</title><rect x="16.3512%" y="917" width="0.4542%" height="15" fill="rgb(224,132,34)" fg:x="432" fg:w="12"/><text x="16.6012%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.45%)</title><rect x="16.3512%" y="901" width="0.4542%" height="15" fill="rgb(222,101,24)" fg:x="432" fg:w="12"/><text x="16.6012%" y="911.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.45%)</title><rect x="16.3512%" y="885" width="0.4542%" height="15" fill="rgb(254,142,4)" fg:x="432" fg:w="12"/><text x="16.6012%" y="895.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="16.7676%" y="869" width="0.0379%" height="15" fill="rgb(230,229,49)" fg:x="443" fg:w="1"/><text x="17.0176%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="16.7676%" y="853" width="0.0379%" height="15" fill="rgb(238,70,47)" fg:x="443" fg:w="1"/><text x="17.0176%" y="863.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="16.7676%" y="837" width="0.0379%" height="15" fill="rgb(231,160,17)" fg:x="443" fg:w="1"/><text x="17.0176%" y="847.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="16.7676%" y="821" width="0.0379%" height="15" fill="rgb(218,68,53)" fg:x="443" fg:w="1"/><text x="17.0176%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="16.8055%" y="949" width="0.0379%" height="15" fill="rgb(236,111,10)" fg:x="444" fg:w="1"/><text x="17.0555%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.8055%" y="933" width="0.0379%" height="15" fill="rgb(224,34,41)" fg:x="444" fg:w="1"/><text x="17.0555%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="16.8055%" y="917" width="0.0379%" height="15" fill="rgb(241,118,19)" fg:x="444" fg:w="1"/><text x="17.0555%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="16.8055%" y="901" width="0.0379%" height="15" fill="rgb(238,129,25)" fg:x="444" fg:w="1"/><text x="17.0555%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="16.8055%" y="885" width="0.0379%" height="15" fill="rgb(238,22,31)" fg:x="444" fg:w="1"/><text x="17.0555%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="16.8055%" y="869" width="0.0379%" height="15" fill="rgb(222,174,48)" fg:x="444" fg:w="1"/><text x="17.0555%" y="879.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="16.8055%" y="853" width="0.0379%" height="15" fill="rgb(206,152,40)" fg:x="444" fg:w="1"/><text x="17.0555%" y="863.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="16.8055%" y="837" width="0.0379%" height="15" fill="rgb(218,99,54)" fg:x="444" fg:w="1"/><text x="17.0555%" y="847.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="16.8055%" y="821" width="0.0379%" height="15" fill="rgb(220,174,26)" fg:x="444" fg:w="1"/><text x="17.0555%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="16.8055%" y="805" width="0.0379%" height="15" fill="rgb(245,116,9)" fg:x="444" fg:w="1"/><text x="17.0555%" y="815.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (14 samples, 0.53%)</title><rect x="16.3512%" y="1109" width="0.5299%" height="15" fill="rgb(209,72,35)" fg:x="432" fg:w="14"/><text x="16.6012%" y="1119.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (14 samples, 0.53%)</title><rect x="16.3512%" y="1093" width="0.5299%" height="15" fill="rgb(226,126,21)" fg:x="432" fg:w="14"/><text x="16.6012%" y="1103.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (14 samples, 0.53%)</title><rect x="16.3512%" y="1077" width="0.5299%" height="15" fill="rgb(227,192,1)" fg:x="432" fg:w="14"/><text x="16.6012%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.53%)</title><rect x="16.3512%" y="1061" width="0.5299%" height="15" fill="rgb(237,180,29)" fg:x="432" fg:w="14"/><text x="16.6012%" y="1071.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.53%)</title><rect x="16.3512%" y="1045" width="0.5299%" height="15" fill="rgb(230,197,35)" fg:x="432" fg:w="14"/><text x="16.6012%" y="1055.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (14 samples, 0.53%)</title><rect x="16.3512%" y="1029" width="0.5299%" height="15" fill="rgb(246,193,31)" fg:x="432" fg:w="14"/><text x="16.6012%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (14 samples, 0.53%)</title><rect x="16.3512%" y="1013" width="0.5299%" height="15" fill="rgb(241,36,4)" fg:x="432" fg:w="14"/><text x="16.6012%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 0.53%)</title><rect x="16.3512%" y="997" width="0.5299%" height="15" fill="rgb(241,130,17)" fg:x="432" fg:w="14"/><text x="16.6012%" y="1007.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many::_{{closure}}::_{{closure}} (14 samples, 0.53%)</title><rect x="16.3512%" y="981" width="0.5299%" height="15" fill="rgb(206,137,32)" fg:x="432" fg:w="14"/><text x="16.6012%" y="991.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}} (2 samples, 0.08%)</title><rect x="16.8055%" y="965" width="0.0757%" height="15" fill="rgb(237,228,51)" fg:x="444" fg:w="2"/><text x="17.0555%" y="975.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.8433%" y="949" width="0.0379%" height="15" fill="rgb(243,6,42)" fg:x="445" fg:w="1"/><text x="17.0933%" y="959.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="16.8433%" y="933" width="0.0379%" height="15" fill="rgb(251,74,28)" fg:x="445" fg:w="1"/><text x="17.0933%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="16.8433%" y="917" width="0.0379%" height="15" fill="rgb(218,20,49)" fg:x="445" fg:w="1"/><text x="17.0933%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.8433%" y="901" width="0.0379%" height="15" fill="rgb(238,28,14)" fg:x="445" fg:w="1"/><text x="17.0933%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="16.8433%" y="885" width="0.0379%" height="15" fill="rgb(229,40,46)" fg:x="445" fg:w="1"/><text x="17.0933%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="16.8433%" y="869" width="0.0379%" height="15" fill="rgb(244,195,20)" fg:x="445" fg:w="1"/><text x="17.0933%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="16.8433%" y="853" width="0.0379%" height="15" fill="rgb(253,56,35)" fg:x="445" fg:w="1"/><text x="17.0933%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="16.8433%" y="837" width="0.0379%" height="15" fill="rgb(210,149,44)" fg:x="445" fg:w="1"/><text x="17.0933%" y="847.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="16.8433%" y="821" width="0.0379%" height="15" fill="rgb(240,135,12)" fg:x="445" fg:w="1"/><text x="17.0933%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="16.8433%" y="805" width="0.0379%" height="15" fill="rgb(251,24,50)" fg:x="445" fg:w="1"/><text x="17.0933%" y="815.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="16.8433%" y="789" width="0.0379%" height="15" fill="rgb(243,200,47)" fg:x="445" fg:w="1"/><text x="17.0933%" y="799.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (1 samples, 0.04%)</title><rect x="16.8812%" y="965" width="0.0379%" height="15" fill="rgb(224,166,26)" fg:x="446" fg:w="1"/><text x="17.1312%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_mysql::database::MySql&gt;&gt; (2 samples, 0.08%)</title><rect x="16.8812%" y="1109" width="0.0757%" height="15" fill="rgb(233,0,47)" fg:x="446" fg:w="2"/><text x="17.1312%" y="1119.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="16.8812%" y="1093" width="0.0757%" height="15" fill="rgb(253,80,5)" fg:x="446" fg:w="2"/><text x="17.1312%" y="1103.50"></text></g><g><title>sqlx_core::rt::spawn (2 samples, 0.08%)</title><rect x="16.8812%" y="1077" width="0.0757%" height="15" fill="rgb(214,133,25)" fg:x="446" fg:w="2"/><text x="17.1312%" y="1087.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (2 samples, 0.08%)</title><rect x="16.8812%" y="1061" width="0.0757%" height="15" fill="rgb(209,27,14)" fg:x="446" fg:w="2"/><text x="17.1312%" y="1071.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_named (2 samples, 0.08%)</title><rect x="16.8812%" y="1045" width="0.0757%" height="15" fill="rgb(219,102,51)" fg:x="446" fg:w="2"/><text x="17.1312%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (2 samples, 0.08%)</title><rect x="16.8812%" y="1029" width="0.0757%" height="15" fill="rgb(237,18,16)" fg:x="446" fg:w="2"/><text x="17.1312%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (2 samples, 0.08%)</title><rect x="16.8812%" y="1013" width="0.0757%" height="15" fill="rgb(241,85,17)" fg:x="446" fg:w="2"/><text x="17.1312%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (2 samples, 0.08%)</title><rect x="16.8812%" y="997" width="0.0757%" height="15" fill="rgb(236,90,42)" fg:x="446" fg:w="2"/><text x="17.1312%" y="1007.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (2 samples, 0.08%)</title><rect x="16.8812%" y="981" width="0.0757%" height="15" fill="rgb(249,57,21)" fg:x="446" fg:w="2"/><text x="17.1312%" y="991.50"></text></g><g><title>tokio::runtime::task::new_task (1 samples, 0.04%)</title><rect x="16.9190%" y="965" width="0.0379%" height="15" fill="rgb(243,12,36)" fg:x="447" fg:w="1"/><text x="17.1690%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (1 samples, 0.04%)</title><rect x="16.9190%" y="949" width="0.0379%" height="15" fill="rgb(253,128,47)" fg:x="447" fg:w="1"/><text x="17.1690%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.04%)</title><rect x="16.9190%" y="933" width="0.0379%" height="15" fill="rgb(207,33,20)" fg:x="447" fg:w="1"/><text x="17.1690%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.9190%" y="917" width="0.0379%" height="15" fill="rgb(233,215,35)" fg:x="447" fg:w="1"/><text x="17.1690%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="16.9190%" y="901" width="0.0379%" height="15" fill="rgb(249,188,52)" fg:x="447" fg:w="1"/><text x="17.1690%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="16.9190%" y="885" width="0.0379%" height="15" fill="rgb(225,12,32)" fg:x="447" fg:w="1"/><text x="17.1690%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="16.9190%" y="869" width="0.0379%" height="15" fill="rgb(247,98,14)" fg:x="447" fg:w="1"/><text x="17.1690%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="16.9190%" y="853" width="0.0379%" height="15" fill="rgb(247,219,48)" fg:x="447" fg:w="1"/><text x="17.1690%" y="863.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="16.9190%" y="837" width="0.0379%" height="15" fill="rgb(253,60,48)" fg:x="447" fg:w="1"/><text x="17.1690%" y="847.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="16.9190%" y="821" width="0.0379%" height="15" fill="rgb(245,15,52)" fg:x="447" fg:w="1"/><text x="17.1690%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (1 samples, 0.04%)</title><rect x="16.9190%" y="805" width="0.0379%" height="15" fill="rgb(220,133,28)" fg:x="447" fg:w="1"/><text x="17.1690%" y="815.50"></text></g><g><title>posix_memalign (1 samples, 0.04%)</title><rect x="16.9190%" y="789" width="0.0379%" height="15" fill="rgb(217,180,4)" fg:x="447" fg:w="1"/><text x="17.1690%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="16.9190%" y="773" width="0.0379%" height="15" fill="rgb(251,24,1)" fg:x="447" fg:w="1"/><text x="17.1690%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="16.9190%" y="757" width="0.0379%" height="15" fill="rgb(212,185,49)" fg:x="447" fg:w="1"/><text x="17.1690%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="16.9190%" y="741" width="0.0379%" height="15" fill="rgb(215,175,22)" fg:x="447" fg:w="1"/><text x="17.1690%" y="751.50"></text></g><g><title>fabseapi::Api::vehicle_insert::_{{closure}} (19 samples, 0.72%)</title><rect x="16.2755%" y="1333" width="0.7192%" height="15" fill="rgb(250,205,14)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1343.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (19 samples, 0.72%)</title><rect x="16.2755%" y="1317" width="0.7192%" height="15" fill="rgb(225,211,22)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1327.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (19 samples, 0.72%)</title><rect x="16.2755%" y="1301" width="0.7192%" height="15" fill="rgb(251,179,42)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (19 samples, 0.72%)</title><rect x="16.2755%" y="1285" width="0.7192%" height="15" fill="rgb(208,216,51)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1295.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (19 samples, 0.72%)</title><rect x="16.2755%" y="1269" width="0.7192%" height="15" fill="rgb(235,36,11)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (19 samples, 0.72%)</title><rect x="16.2755%" y="1253" width="0.7192%" height="15" fill="rgb(213,189,28)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (19 samples, 0.72%)</title><rect x="16.2755%" y="1237" width="0.7192%" height="15" fill="rgb(227,203,42)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1247.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (19 samples, 0.72%)</title><rect x="16.2755%" y="1221" width="0.7192%" height="15" fill="rgb(244,72,36)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (19 samples, 0.72%)</title><rect x="16.2755%" y="1205" width="0.7192%" height="15" fill="rgb(213,53,17)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1215.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (19 samples, 0.72%)</title><rect x="16.2755%" y="1189" width="0.7192%" height="15" fill="rgb(207,167,3)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1199.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (19 samples, 0.72%)</title><rect x="16.2755%" y="1173" width="0.7192%" height="15" fill="rgb(216,98,30)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (19 samples, 0.72%)</title><rect x="16.2755%" y="1157" width="0.7192%" height="15" fill="rgb(236,123,15)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (19 samples, 0.72%)</title><rect x="16.2755%" y="1141" width="0.7192%" height="15" fill="rgb(248,81,50)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1151.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (19 samples, 0.72%)</title><rect x="16.2755%" y="1125" width="0.7192%" height="15" fill="rgb(214,120,4)" fg:x="430" fg:w="19"/><text x="16.5255%" y="1135.50"></text></g><g><title>sqlx_mysql::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many (1 samples, 0.04%)</title><rect x="16.9569%" y="1109" width="0.0379%" height="15" fill="rgb(208,179,34)" fg:x="448" fg:w="1"/><text x="17.2069%" y="1119.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.9569%" y="1093" width="0.0379%" height="15" fill="rgb(227,140,7)" fg:x="448" fg:w="1"/><text x="17.2069%" y="1103.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="16.9569%" y="1077" width="0.0379%" height="15" fill="rgb(214,22,6)" fg:x="448" fg:w="1"/><text x="17.2069%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="16.9569%" y="1061" width="0.0379%" height="15" fill="rgb(207,137,27)" fg:x="448" fg:w="1"/><text x="17.2069%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.9569%" y="1045" width="0.0379%" height="15" fill="rgb(210,8,46)" fg:x="448" fg:w="1"/><text x="17.2069%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="16.9569%" y="1029" width="0.0379%" height="15" fill="rgb(240,16,54)" fg:x="448" fg:w="1"/><text x="17.2069%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="16.9569%" y="1013" width="0.0379%" height="15" fill="rgb(211,209,29)" fg:x="448" fg:w="1"/><text x="17.2069%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="16.9569%" y="997" width="0.0379%" height="15" fill="rgb(226,228,24)" fg:x="448" fg:w="1"/><text x="17.2069%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="16.9569%" y="981" width="0.0379%" height="15" fill="rgb(222,84,9)" fg:x="448" fg:w="1"/><text x="17.2069%" y="991.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="16.9569%" y="965" width="0.0379%" height="15" fill="rgb(234,203,30)" fg:x="448" fg:w="1"/><text x="17.2069%" y="975.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="16.9569%" y="949" width="0.0379%" height="15" fill="rgb(238,109,14)" fg:x="448" fg:w="1"/><text x="17.2069%" y="959.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="16.9569%" y="933" width="0.0379%" height="15" fill="rgb(233,206,34)" fg:x="448" fg:w="1"/><text x="17.2069%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.30%)</title><rect x="17.5246%" y="1109" width="0.3028%" height="15" fill="rgb(220,167,47)" fg:x="463" fg:w="8"/><text x="17.7746%" y="1119.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="17.8274%" y="1093" width="0.0379%" height="15" fill="rgb(238,105,10)" fg:x="471" fg:w="1"/><text x="18.0774%" y="1103.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (5 samples, 0.19%)</title><rect x="17.8653%" y="1093" width="0.1893%" height="15" fill="rgb(213,227,17)" fg:x="472" fg:w="5"/><text x="18.1153%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (7 samples, 0.26%)</title><rect x="18.1681%" y="1029" width="0.2650%" height="15" fill="rgb(217,132,38)" fg:x="480" fg:w="7"/><text x="18.4181%" y="1039.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (7 samples, 0.26%)</title><rect x="18.1681%" y="1013" width="0.2650%" height="15" fill="rgb(242,146,4)" fg:x="480" fg:w="7"/><text x="18.4181%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.15%)</title><rect x="19.0386%" y="965" width="0.1514%" height="15" fill="rgb(212,61,9)" fg:x="503" fg:w="4"/><text x="19.2886%" y="975.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.11%)</title><rect x="19.1900%" y="949" width="0.1136%" height="15" fill="rgb(247,126,22)" fg:x="507" fg:w="3"/><text x="19.4400%" y="959.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (3 samples, 0.11%)</title><rect x="19.3036%" y="949" width="0.1136%" height="15" fill="rgb(220,196,2)" fg:x="510" fg:w="3"/><text x="19.5536%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as futures_core::future::FusedFuture&gt;::is_terminated (3 samples, 0.11%)</title><rect x="19.4171%" y="869" width="0.1136%" height="15" fill="rgb(208,46,4)" fg:x="513" fg:w="3"/><text x="19.6671%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (3 samples, 0.11%)</title><rect x="19.4171%" y="853" width="0.1136%" height="15" fill="rgb(252,104,46)" fg:x="513" fg:w="3"/><text x="19.6671%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.11%)</title><rect x="19.4171%" y="837" width="0.1136%" height="15" fill="rgb(237,152,48)" fg:x="513" fg:w="3"/><text x="19.6671%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (10 samples, 0.38%)</title><rect x="19.5307%" y="869" width="0.3785%" height="15" fill="rgb(221,59,37)" fg:x="516" fg:w="10"/><text x="19.7807%" y="879.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (9 samples, 0.34%)</title><rect x="19.5685%" y="853" width="0.3407%" height="15" fill="rgb(209,202,51)" fg:x="517" fg:w="9"/><text x="19.8185%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.42%)</title><rect x="20.5905%" y="805" width="0.4164%" height="15" fill="rgb(228,81,30)" fg:x="544" fg:w="11"/><text x="20.8405%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::Yielder&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;::yield::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="21.0068%" y="805" width="0.0379%" height="15" fill="rgb(227,42,39)" fg:x="555" fg:w="1"/><text x="21.2568%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::logger::QueryLogger&gt; (1 samples, 0.04%)</title><rect x="21.0447%" y="805" width="0.0379%" height="15" fill="rgb(221,26,2)" fg:x="556" fg:w="1"/><text x="21.2947%" y="815.50"></text></g><g><title>&lt;sqlx_core::logger::QueryLogger as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="21.0447%" y="789" width="0.0379%" height="15" fill="rgb(254,61,31)" fg:x="556" fg:w="1"/><text x="21.2947%" y="799.50"></text></g><g><title>sqlx_core::logger::QueryLogger::finish (1 samples, 0.04%)</title><rect x="21.0447%" y="773" width="0.0379%" height="15" fill="rgb(222,173,38)" fg:x="556" fg:w="1"/><text x="21.2947%" y="783.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.04%)</title><rect x="21.0447%" y="757" width="0.0379%" height="15" fill="rgb(218,50,12)" fg:x="556" fg:w="1"/><text x="21.2947%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::connection::stream::MySqlStream&lt;alloc::boxed::Box&lt;dyn sqlx_core::net::socket::Socket&gt;&gt;::recv_packet::{{closure}}&gt; (2 samples, 0.08%)</title><rect x="21.0825%" y="805" width="0.0757%" height="15" fill="rgb(223,88,40)" fg:x="557" fg:w="2"/><text x="21.3325%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="21.7260%" y="789" width="0.0379%" height="15" fill="rgb(237,54,19)" fg:x="574" fg:w="1"/><text x="21.9760%" y="799.50"></text></g><g><title>core::ptr::read (8 samples, 0.30%)</title><rect x="21.7638%" y="757" width="0.3028%" height="15" fill="rgb(251,129,25)" fg:x="575" fg:w="8"/><text x="22.0138%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::replace (9 samples, 0.34%)</title><rect x="21.7638%" y="789" width="0.3407%" height="15" fill="rgb(238,97,19)" fg:x="575" fg:w="9"/><text x="22.0138%" y="799.50"></text></g><g><title>core::mem::replace (9 samples, 0.34%)</title><rect x="21.7638%" y="773" width="0.3407%" height="15" fill="rgb(240,169,18)" fg:x="575" fg:w="9"/><text x="22.0138%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="22.0666%" y="757" width="0.0379%" height="15" fill="rgb(230,187,49)" fg:x="583" fg:w="1"/><text x="22.3166%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="22.1045%" y="789" width="0.0379%" height="15" fill="rgb(209,44,26)" fg:x="584" fg:w="1"/><text x="22.3545%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="22.1045%" y="773" width="0.0379%" height="15" fill="rgb(244,0,6)" fg:x="584" fg:w="1"/><text x="22.3545%" y="783.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.04%)</title><rect x="22.1045%" y="757" width="0.0379%" height="15" fill="rgb(248,18,21)" fg:x="584" fg:w="1"/><text x="22.3545%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.04%)</title><rect x="22.1045%" y="741" width="0.0379%" height="15" fill="rgb(245,180,19)" fg:x="584" fg:w="1"/><text x="22.3545%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.04%)</title><rect x="22.1045%" y="725" width="0.0379%" height="15" fill="rgb(252,118,36)" fg:x="584" fg:w="1"/><text x="22.3545%" y="735.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}} (27 samples, 1.02%)</title><rect x="21.1582%" y="805" width="1.0220%" height="15" fill="rgb(210,224,19)" fg:x="559" fg:w="27"/><text x="21.4082%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="22.1423%" y="789" width="0.0379%" height="15" fill="rgb(218,30,24)" fg:x="585" fg:w="1"/><text x="22.3923%" y="799.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="22.1423%" y="773" width="0.0379%" height="15" fill="rgb(219,75,50)" fg:x="585" fg:w="1"/><text x="22.3923%" y="783.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.04%)</title><rect x="22.1423%" y="757" width="0.0379%" height="15" fill="rgb(234,72,50)" fg:x="585" fg:w="1"/><text x="22.3923%" y="767.50"></text></g><g><title>std::thread::panicking (1 samples, 0.04%)</title><rect x="22.1423%" y="741" width="0.0379%" height="15" fill="rgb(219,100,48)" fg:x="585" fg:w="1"/><text x="22.3923%" y="751.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.04%)</title><rect x="22.1423%" y="725" width="0.0379%" height="15" fill="rgb(253,5,41)" fg:x="585" fg:w="1"/><text x="22.3923%" y="735.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="22.1423%" y="709" width="0.0379%" height="15" fill="rgb(247,181,11)" fg:x="585" fg:w="1"/><text x="22.3923%" y="719.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (1 samples, 0.04%)</title><rect x="22.2180%" y="741" width="0.0379%" height="15" fill="rgb(222,223,25)" fg:x="587" fg:w="1"/><text x="22.4680%" y="751.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (1 samples, 0.04%)</title><rect x="22.2180%" y="725" width="0.0379%" height="15" fill="rgb(214,198,28)" fg:x="587" fg:w="1"/><text x="22.4680%" y="735.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (1 samples, 0.04%)</title><rect x="22.2180%" y="709" width="0.0379%" height="15" fill="rgb(230,46,43)" fg:x="587" fg:w="1"/><text x="22.4680%" y="719.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (1 samples, 0.04%)</title><rect x="22.2180%" y="693" width="0.0379%" height="15" fill="rgb(233,65,53)" fg:x="587" fg:w="1"/><text x="22.4680%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="22.2180%" y="677" width="0.0379%" height="15" fill="rgb(221,121,27)" fg:x="587" fg:w="1"/><text x="22.4680%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_inner (1 samples, 0.04%)</title><rect x="22.2180%" y="661" width="0.0379%" height="15" fill="rgb(247,70,47)" fg:x="587" fg:w="1"/><text x="22.4680%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.04%)</title><rect x="22.2180%" y="645" width="0.0379%" height="15" fill="rgb(228,85,35)" fg:x="587" fg:w="1"/><text x="22.4680%" y="655.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search::_{{closure}} (1 samples, 0.04%)</title><rect x="22.2180%" y="629" width="0.0379%" height="15" fill="rgb(209,50,18)" fg:x="587" fg:w="1"/><text x="22.4680%" y="639.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash::_{{closure}} (1 samples, 0.04%)</title><rect x="22.2180%" y="613" width="0.0379%" height="15" fill="rgb(250,19,35)" fg:x="587" fg:w="1"/><text x="22.4680%" y="623.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::_{{closure}} (1 samples, 0.04%)</title><rect x="22.2180%" y="597" width="0.0379%" height="15" fill="rgb(253,107,29)" fg:x="587" fg:w="1"/><text x="22.4680%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="22.2180%" y="581" width="0.0379%" height="15" fill="rgb(252,179,29)" fg:x="587" fg:w="1"/><text x="22.4680%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="22.2180%" y="565" width="0.0379%" height="15" fill="rgb(238,194,6)" fg:x="587" fg:w="1"/><text x="22.4680%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1 samples, 0.04%)</title><rect x="22.2180%" y="549" width="0.0379%" height="15" fill="rgb(238,164,29)" fg:x="587" fg:w="1"/><text x="22.4680%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="22.2180%" y="533" width="0.0379%" height="15" fill="rgb(224,25,9)" fg:x="587" fg:w="1"/><text x="22.4680%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="22.2180%" y="517" width="0.0379%" height="15" fill="rgb(244,153,23)" fg:x="587" fg:w="1"/><text x="22.4680%" y="527.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::get_or_prepare_statement::_{{closure}} (3 samples, 0.11%)</title><rect x="22.1802%" y="805" width="0.1136%" height="15" fill="rgb(212,203,14)" fg:x="586" fg:w="3"/><text x="22.4302%" y="815.50"></text></g><g><title>sqlx_core::common::statement_cache::StatementCache&lt;T&gt;::get_mut (3 samples, 0.11%)</title><rect x="22.1802%" y="789" width="0.1136%" height="15" fill="rgb(220,164,20)" fg:x="586" fg:w="3"/><text x="22.4302%" y="799.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::get_mut (3 samples, 0.11%)</title><rect x="22.1802%" y="773" width="0.1136%" height="15" fill="rgb(222,203,48)" fg:x="586" fg:w="3"/><text x="22.4302%" y="783.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (2 samples, 0.08%)</title><rect x="22.2180%" y="757" width="0.0757%" height="15" fill="rgb(215,159,22)" fg:x="587" fg:w="2"/><text x="22.4680%" y="767.50"></text></g><g><title>hashlink::linked_hash_map::hash_key (1 samples, 0.04%)</title><rect x="22.2559%" y="741" width="0.0379%" height="15" fill="rgb(216,183,47)" fg:x="588" fg:w="1"/><text x="22.5059%" y="751.50"></text></g><g><title>&lt;core::hash::BuildHasherDefault&lt;H&gt; as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="22.2559%" y="725" width="0.0379%" height="15" fill="rgb(229,195,25)" fg:x="588" fg:w="1"/><text x="22.5059%" y="735.50"></text></g><g><title>ahash::&lt;impl core::default::Default for ahash::aes_hash::AHasher&gt;::default (1 samples, 0.04%)</title><rect x="22.2559%" y="709" width="0.0379%" height="15" fill="rgb(224,132,51)" fg:x="588" fg:w="1"/><text x="22.5059%" y="719.50"></text></g><g><title>ahash::random_state::RandomState::with_fixed_keys (1 samples, 0.04%)</title><rect x="22.2559%" y="693" width="0.0379%" height="15" fill="rgb(240,63,7)" fg:x="588" fg:w="1"/><text x="22.5059%" y="703.50"></text></g><g><title>ahash::random_state::get_fixed_seeds (1 samples, 0.04%)</title><rect x="22.2559%" y="677" width="0.0379%" height="15" fill="rgb(249,182,41)" fg:x="588" fg:w="1"/><text x="22.5059%" y="687.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.04%)</title><rect x="22.2559%" y="661" width="0.0379%" height="15" fill="rgb(243,47,26)" fg:x="588" fg:w="1"/><text x="22.5059%" y="671.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.04%)</title><rect x="22.2559%" y="645" width="0.0379%" height="15" fill="rgb(233,48,2)" fg:x="588" fg:w="1"/><text x="22.5059%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.04%)</title><rect x="22.2559%" y="629" width="0.0379%" height="15" fill="rgb(244,165,34)" fg:x="588" fg:w="1"/><text x="22.5059%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="22.2559%" y="613" width="0.0379%" height="15" fill="rgb(207,89,7)" fg:x="588" fg:w="1"/><text x="22.5059%" y="623.50"></text></g><g><title>sqlx_mysql::connection::executor::recv_result_columns::_{{closure}} (1 samples, 0.04%)</title><rect x="22.2937%" y="805" width="0.0379%" height="15" fill="rgb(244,117,36)" fg:x="589" fg:w="1"/><text x="22.5437%" y="815.50"></text></g><g><title>sqlx_mysql::connection::executor::recv_next_result_column (1 samples, 0.04%)</title><rect x="22.2937%" y="789" width="0.0379%" height="15" fill="rgb(226,144,34)" fg:x="589" fg:w="1"/><text x="22.5437%" y="799.50"></text></g><g><title>sqlx_core::ext::ustr::UStr::new (1 samples, 0.04%)</title><rect x="22.2937%" y="773" width="0.0379%" height="15" fill="rgb(213,23,19)" fg:x="589" fg:w="1"/><text x="22.5437%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;alloc::string::String&gt;&gt;::from (1 samples, 0.04%)</title><rect x="22.2937%" y="757" width="0.0379%" height="15" fill="rgb(217,75,12)" fg:x="589" fg:w="1"/><text x="22.5437%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="22.2937%" y="741" width="0.0379%" height="15" fill="rgb(224,159,17)" fg:x="589" fg:w="1"/><text x="22.5437%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="22.2937%" y="725" width="0.0379%" height="15" fill="rgb(217,118,1)" fg:x="589" fg:w="1"/><text x="22.5437%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="22.2937%" y="709" width="0.0379%" height="15" fill="rgb(232,180,48)" fg:x="589" fg:w="1"/><text x="22.5437%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="22.2937%" y="693" width="0.0379%" height="15" fill="rgb(230,27,33)" fg:x="589" fg:w="1"/><text x="22.5437%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="22.2937%" y="677" width="0.0379%" height="15" fill="rgb(205,31,21)" fg:x="589" fg:w="1"/><text x="22.5437%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="22.2937%" y="661" width="0.0379%" height="15" fill="rgb(253,59,4)" fg:x="589" fg:w="1"/><text x="22.5437%" y="671.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="22.2937%" y="645" width="0.0379%" height="15" fill="rgb(224,201,9)" fg:x="589" fg:w="1"/><text x="22.5437%" y="655.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="22.2937%" y="629" width="0.0379%" height="15" fill="rgb(229,206,30)" fg:x="589" fg:w="1"/><text x="22.5437%" y="639.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="22.2937%" y="613" width="0.0379%" height="15" fill="rgb(212,67,47)" fg:x="589" fg:w="1"/><text x="22.5437%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="22.2937%" y="597" width="0.0379%" height="15" fill="rgb(211,96,50)" fg:x="589" fg:w="1"/><text x="22.5437%" y="607.50"></text></g><g><title>__rdl_alloc (26 samples, 0.98%)</title><rect x="23.1643%" y="565" width="0.9841%" height="15" fill="rgb(252,114,18)" fg:x="612" fg:w="26"/><text x="23.4143%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (26 samples, 0.98%)</title><rect x="23.1643%" y="549" width="0.9841%" height="15" fill="rgb(223,58,37)" fg:x="612" fg:w="26"/><text x="23.4143%" y="559.50"></text></g><g><title>malloc (25 samples, 0.95%)</title><rect x="23.2021%" y="533" width="0.9463%" height="15" fill="rgb(237,70,4)" fg:x="613" fg:w="25"/><text x="23.4521%" y="543.50"></text></g><g><title>[libc.so.6] (12 samples, 0.45%)</title><rect x="23.6942%" y="517" width="0.4542%" height="15" fill="rgb(244,85,46)" fg:x="626" fg:w="12"/><text x="23.9442%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (33 samples, 1.25%)</title><rect x="23.1643%" y="789" width="1.2491%" height="15" fill="rgb(223,39,52)" fg:x="612" fg:w="33"/><text x="23.4143%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (33 samples, 1.25%)</title><rect x="23.1643%" y="773" width="1.2491%" height="15" fill="rgb(218,200,14)" fg:x="612" fg:w="33"/><text x="23.4143%" y="783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (33 samples, 1.25%)</title><rect x="23.1643%" y="757" width="1.2491%" height="15" fill="rgb(208,171,16)" fg:x="612" fg:w="33"/><text x="23.4143%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (33 samples, 1.25%)</title><rect x="23.1643%" y="741" width="1.2491%" height="15" fill="rgb(234,200,18)" fg:x="612" fg:w="33"/><text x="23.4143%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (33 samples, 1.25%)</title><rect x="23.1643%" y="725" width="1.2491%" height="15" fill="rgb(228,45,11)" fg:x="612" fg:w="33"/><text x="23.4143%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 1.25%)</title><rect x="23.1643%" y="709" width="1.2491%" height="15" fill="rgb(237,182,11)" fg:x="612" fg:w="33"/><text x="23.4143%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 1.25%)</title><rect x="23.1643%" y="693" width="1.2491%" height="15" fill="rgb(241,175,49)" fg:x="612" fg:w="33"/><text x="23.4143%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 1.25%)</title><rect x="23.1643%" y="677" width="1.2491%" height="15" fill="rgb(247,38,35)" fg:x="612" fg:w="33"/><text x="23.4143%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (33 samples, 1.25%)</title><rect x="23.1643%" y="661" width="1.2491%" height="15" fill="rgb(228,39,49)" fg:x="612" fg:w="33"/><text x="23.4143%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (33 samples, 1.25%)</title><rect x="23.1643%" y="645" width="1.2491%" height="15" fill="rgb(226,101,26)" fg:x="612" fg:w="33"/><text x="23.4143%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (33 samples, 1.25%)</title><rect x="23.1643%" y="629" width="1.2491%" height="15" fill="rgb(206,141,19)" fg:x="612" fg:w="33"/><text x="23.4143%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 1.25%)</title><rect x="23.1643%" y="613" width="1.2491%" height="15" fill="rgb(211,200,13)" fg:x="612" fg:w="33"/><text x="23.4143%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 1.25%)</title><rect x="23.1643%" y="597" width="1.2491%" height="15" fill="rgb(241,121,6)" fg:x="612" fg:w="33"/><text x="23.4143%" y="607.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 1.25%)</title><rect x="23.1643%" y="581" width="1.2491%" height="15" fill="rgb(234,221,29)" fg:x="612" fg:w="33"/><text x="23.4143%" y="591.50"></text></g><g><title>core::ptr::read_volatile (7 samples, 0.26%)</title><rect x="24.1484%" y="565" width="0.2650%" height="15" fill="rgb(229,136,5)" fg:x="638" fg:w="7"/><text x="24.3984%" y="575.50"></text></g><g><title>cfree (6 samples, 0.23%)</title><rect x="24.4512%" y="773" width="0.2271%" height="15" fill="rgb(238,36,11)" fg:x="646" fg:w="6"/><text x="24.7012%" y="783.50"></text></g><g><title>[libc.so.6] (5 samples, 0.19%)</title><rect x="24.4890%" y="757" width="0.1893%" height="15" fill="rgb(251,55,41)" fg:x="647" fg:w="5"/><text x="24.7390%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (8 samples, 0.30%)</title><rect x="24.4133%" y="789" width="0.3028%" height="15" fill="rgb(242,34,40)" fg:x="645" fg:w="8"/><text x="24.6633%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::error::Error&gt; (1 samples, 0.04%)</title><rect x="24.6783%" y="773" width="0.0379%" height="15" fill="rgb(215,42,17)" fg:x="652" fg:w="1"/><text x="24.9283%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (23 samples, 0.87%)</title><rect x="25.4353%" y="773" width="0.8706%" height="15" fill="rgb(207,44,46)" fg:x="672" fg:w="23"/><text x="25.6853%" y="783.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_uint_le (2 samples, 0.08%)</title><rect x="26.3058%" y="773" width="0.0757%" height="15" fill="rgb(211,206,28)" fg:x="695" fg:w="2"/><text x="26.5558%" y="783.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (2 samples, 0.08%)</title><rect x="26.3058%" y="757" width="0.0757%" height="15" fill="rgb(237,167,16)" fg:x="695" fg:w="2"/><text x="26.5558%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.04%)</title><rect x="26.3437%" y="741" width="0.0379%" height="15" fill="rgb(233,66,6)" fg:x="696" fg:w="1"/><text x="26.5937%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="26.3437%" y="725" width="0.0379%" height="15" fill="rgb(246,123,29)" fg:x="696" fg:w="1"/><text x="26.5937%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (4 samples, 0.15%)</title><rect x="26.3815%" y="773" width="0.1514%" height="15" fill="rgb(209,62,40)" fg:x="697" fg:w="4"/><text x="26.6315%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (4 samples, 0.15%)</title><rect x="26.3815%" y="757" width="0.1514%" height="15" fill="rgb(218,4,25)" fg:x="697" fg:w="4"/><text x="26.6315%" y="767.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (4 samples, 0.15%)</title><rect x="26.3815%" y="741" width="0.1514%" height="15" fill="rgb(253,91,49)" fg:x="697" fg:w="4"/><text x="26.6315%" y="751.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (4 samples, 0.15%)</title><rect x="26.3815%" y="725" width="0.1514%" height="15" fill="rgb(228,155,29)" fg:x="697" fg:w="4"/><text x="26.6315%" y="735.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (4 samples, 0.15%)</title><rect x="26.3815%" y="709" width="0.1514%" height="15" fill="rgb(243,57,37)" fg:x="697" fg:w="4"/><text x="26.6315%" y="719.50"></text></g><g><title>bytes::bytes_mut::release_shared (2 samples, 0.08%)</title><rect x="26.4572%" y="693" width="0.0757%" height="15" fill="rgb(244,167,17)" fg:x="699" fg:w="2"/><text x="26.7072%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="26.8736%" y="741" width="0.0379%" height="15" fill="rgb(207,181,38)" fg:x="710" fg:w="1"/><text x="27.1236%" y="751.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="27.1764%" y="709" width="0.0757%" height="15" fill="rgb(211,8,23)" fg:x="718" fg:w="2"/><text x="27.4264%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (2 samples, 0.08%)</title><rect x="27.1764%" y="693" width="0.0757%" height="15" fill="rgb(235,11,44)" fg:x="718" fg:w="2"/><text x="27.4264%" y="703.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (2 samples, 0.08%)</title><rect x="27.1764%" y="677" width="0.0757%" height="15" fill="rgb(248,18,52)" fg:x="718" fg:w="2"/><text x="27.4264%" y="687.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (2 samples, 0.08%)</title><rect x="27.1764%" y="661" width="0.0757%" height="15" fill="rgb(208,4,7)" fg:x="718" fg:w="2"/><text x="27.4264%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (2 samples, 0.08%)</title><rect x="27.1764%" y="645" width="0.0757%" height="15" fill="rgb(240,17,39)" fg:x="718" fg:w="2"/><text x="27.4264%" y="655.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (2 samples, 0.08%)</title><rect x="27.1764%" y="629" width="0.0757%" height="15" fill="rgb(207,170,3)" fg:x="718" fg:w="2"/><text x="27.4264%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2 samples, 0.08%)</title><rect x="27.1764%" y="613" width="0.0757%" height="15" fill="rgb(236,100,52)" fg:x="718" fg:w="2"/><text x="27.4264%" y="623.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.08%)</title><rect x="27.1764%" y="597" width="0.0757%" height="15" fill="rgb(246,78,51)" fg:x="718" fg:w="2"/><text x="27.4264%" y="607.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2 samples, 0.08%)</title><rect x="27.1764%" y="581" width="0.0757%" height="15" fill="rgb(211,17,15)" fg:x="718" fg:w="2"/><text x="27.4264%" y="591.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (2 samples, 0.08%)</title><rect x="27.1764%" y="565" width="0.0757%" height="15" fill="rgb(209,59,46)" fg:x="718" fg:w="2"/><text x="27.4264%" y="575.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.08%)</title><rect x="27.1764%" y="549" width="0.0757%" height="15" fill="rgb(210,92,25)" fg:x="718" fg:w="2"/><text x="27.4264%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.08%)</title><rect x="27.1764%" y="533" width="0.0757%" height="15" fill="rgb(238,174,52)" fg:x="718" fg:w="2"/><text x="27.4264%" y="543.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (2 samples, 0.08%)</title><rect x="27.1764%" y="517" width="0.0757%" height="15" fill="rgb(230,73,7)" fg:x="718" fg:w="2"/><text x="27.4264%" y="527.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (2 samples, 0.08%)</title><rect x="27.1764%" y="501" width="0.0757%" height="15" fill="rgb(243,124,40)" fg:x="718" fg:w="2"/><text x="27.4264%" y="511.50"></text></g><g><title>recv (2 samples, 0.08%)</title><rect x="27.1764%" y="485" width="0.0757%" height="15" fill="rgb(244,170,11)" fg:x="718" fg:w="2"/><text x="27.4264%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="27.1764%" y="469" width="0.0757%" height="15" fill="rgb(207,114,54)" fg:x="718" fg:w="2"/><text x="27.4264%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="27.1764%" y="453" width="0.0757%" height="15" fill="rgb(205,42,20)" fg:x="718" fg:w="2"/><text x="27.4264%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="27.1764%" y="437" width="0.0757%" height="15" fill="rgb(230,30,28)" fg:x="718" fg:w="2"/><text x="27.4264%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="27.1764%" y="421" width="0.0757%" height="15" fill="rgb(205,73,54)" fg:x="718" fg:w="2"/><text x="27.4264%" y="431.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::advance (3 samples, 0.11%)</title><rect x="27.2521%" y="709" width="0.1136%" height="15" fill="rgb(254,227,23)" fg:x="720" fg:w="3"/><text x="27.5021%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::unsplit (3 samples, 0.11%)</title><rect x="27.2521%" y="693" width="0.1136%" height="15" fill="rgb(228,202,34)" fg:x="720" fg:w="3"/><text x="27.5021%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (3 samples, 0.11%)</title><rect x="27.2521%" y="677" width="0.1136%" height="15" fill="rgb(222,225,37)" fg:x="720" fg:w="3"/><text x="27.5021%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.11%)</title><rect x="27.2521%" y="661" width="0.1136%" height="15" fill="rgb(221,14,54)" fg:x="720" fg:w="3"/><text x="27.5021%" y="671.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="27.2521%" y="645" width="0.1136%" height="15" fill="rgb(254,102,2)" fg:x="720" fg:w="3"/><text x="27.5021%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (1 samples, 0.04%)</title><rect x="27.6684%" y="677" width="0.0379%" height="15" fill="rgb(232,104,17)" fg:x="731" fg:w="1"/><text x="27.9184%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (1 samples, 0.04%)</title><rect x="27.6684%" y="661" width="0.0379%" height="15" fill="rgb(250,220,14)" fg:x="731" fg:w="1"/><text x="27.9184%" y="671.50"></text></g><g><title>bytes::bytes_mut::increment_shared (7 samples, 0.26%)</title><rect x="27.7063%" y="661" width="0.2650%" height="15" fill="rgb(241,158,9)" fg:x="732" fg:w="7"/><text x="27.9563%" y="671.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::drain (17 samples, 0.64%)</title><rect x="27.3656%" y="709" width="0.6435%" height="15" fill="rgb(246,9,43)" fg:x="723" fg:w="17"/><text x="27.6156%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (17 samples, 0.64%)</title><rect x="27.3656%" y="693" width="0.6435%" height="15" fill="rgb(206,73,33)" fg:x="723" fg:w="17"/><text x="27.6156%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (8 samples, 0.30%)</title><rect x="27.7063%" y="677" width="0.3028%" height="15" fill="rgb(222,79,8)" fg:x="732" fg:w="8"/><text x="27.9563%" y="687.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="27.9712%" y="661" width="0.0379%" height="15" fill="rgb(234,8,54)" fg:x="739" fg:w="1"/><text x="28.2212%" y="671.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (151 samples, 5.72%)</title><rect x="22.3316%" y="805" width="5.7154%" height="15" fill="rgb(209,134,38)" fg:x="590" fg:w="151"/><text x="22.5816%" y="815.50">sqlx_my..</text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (88 samples, 3.33%)</title><rect x="24.7161%" y="789" width="3.3308%" height="15" fill="rgb(230,127,29)" fg:x="653" fg:w="88"/><text x="24.9661%" y="799.50">sql..</text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (40 samples, 1.51%)</title><rect x="26.5329%" y="773" width="1.5140%" height="15" fill="rgb(242,44,41)" fg:x="701" fg:w="40"/><text x="26.7829%" y="783.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (32 samples, 1.21%)</title><rect x="26.8357%" y="757" width="1.2112%" height="15" fill="rgb(222,56,43)" fg:x="709" fg:w="32"/><text x="27.0857%" y="767.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (30 samples, 1.14%)</title><rect x="26.9114%" y="741" width="1.1355%" height="15" fill="rgb(238,39,47)" fg:x="711" fg:w="30"/><text x="27.1614%" y="751.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (28 samples, 1.06%)</title><rect x="26.9871%" y="725" width="1.0598%" height="15" fill="rgb(226,79,43)" fg:x="713" fg:w="28"/><text x="27.2371%" y="735.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::reserve (1 samples, 0.04%)</title><rect x="28.0091%" y="709" width="0.0379%" height="15" fill="rgb(242,105,53)" fg:x="740" fg:w="1"/><text x="28.2591%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (1 samples, 0.04%)</title><rect x="28.0091%" y="693" width="0.0379%" height="15" fill="rgb(251,132,46)" fg:x="740" fg:w="1"/><text x="28.2591%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.04%)</title><rect x="28.0091%" y="677" width="0.0379%" height="15" fill="rgb(231,77,14)" fg:x="740" fg:w="1"/><text x="28.2591%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="28.0091%" y="661" width="0.0379%" height="15" fill="rgb(240,135,9)" fg:x="740" fg:w="1"/><text x="28.2591%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="28.0091%" y="645" width="0.0379%" height="15" fill="rgb(248,109,14)" fg:x="740" fg:w="1"/><text x="28.2591%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="28.0091%" y="629" width="0.0379%" height="15" fill="rgb(227,146,52)" fg:x="740" fg:w="1"/><text x="28.2591%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="28.0091%" y="613" width="0.0379%" height="15" fill="rgb(232,54,3)" fg:x="740" fg:w="1"/><text x="28.2591%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="28.0091%" y="597" width="0.0379%" height="15" fill="rgb(229,201,43)" fg:x="740" fg:w="1"/><text x="28.2591%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="28.0091%" y="581" width="0.0379%" height="15" fill="rgb(252,161,33)" fg:x="740" fg:w="1"/><text x="28.2591%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="28.0091%" y="565" width="0.0379%" height="15" fill="rgb(226,146,40)" fg:x="740" fg:w="1"/><text x="28.2591%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="28.0091%" y="549" width="0.0379%" height="15" fill="rgb(219,47,25)" fg:x="740" fg:w="1"/><text x="28.2591%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="28.0091%" y="533" width="0.0379%" height="15" fill="rgb(250,135,13)" fg:x="740" fg:w="1"/><text x="28.2591%" y="543.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="28.0091%" y="517" width="0.0379%" height="15" fill="rgb(219,229,18)" fg:x="740" fg:w="1"/><text x="28.2591%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="28.0091%" y="501" width="0.0379%" height="15" fill="rgb(217,152,27)" fg:x="740" fg:w="1"/><text x="28.2591%" y="511.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::advance (3 samples, 0.11%)</title><rect x="28.5011%" y="773" width="0.1136%" height="15" fill="rgb(225,71,47)" fg:x="753" fg:w="3"/><text x="28.7511%" y="783.50"></text></g><g><title>bytes::bytes::Bytes::inc_start (2 samples, 0.08%)</title><rect x="28.5390%" y="757" width="0.0757%" height="15" fill="rgb(220,139,14)" fg:x="754" fg:w="2"/><text x="28.7890%" y="767.50"></text></g><g><title>bytes::bytes::Bytes::with_vtable (1 samples, 0.04%)</title><rect x="28.6147%" y="741" width="0.0379%" height="15" fill="rgb(247,54,32)" fg:x="756" fg:w="1"/><text x="28.8647%" y="751.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (5 samples, 0.19%)</title><rect x="28.6147%" y="773" width="0.1893%" height="15" fill="rgb(252,131,39)" fg:x="756" fg:w="5"/><text x="28.8647%" y="783.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (5 samples, 0.19%)</title><rect x="28.6147%" y="757" width="0.1893%" height="15" fill="rgb(210,108,39)" fg:x="756" fg:w="5"/><text x="28.8647%" y="767.50"></text></g><g><title>bytes::bytes_mut::increment_shared (4 samples, 0.15%)</title><rect x="28.6525%" y="741" width="0.1514%" height="15" fill="rgb(205,23,29)" fg:x="757" fg:w="4"/><text x="28.9025%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.08%)</title><rect x="28.7282%" y="725" width="0.0757%" height="15" fill="rgb(246,139,46)" fg:x="759" fg:w="2"/><text x="28.9782%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.08%)</title><rect x="28.7282%" y="709" width="0.0757%" height="15" fill="rgb(250,81,26)" fg:x="759" fg:w="2"/><text x="28.9782%" y="719.50"></text></g><g><title>bytes::bytes_mut::increment_shared (1 samples, 0.04%)</title><rect x="29.1446%" y="709" width="0.0379%" height="15" fill="rgb(214,104,7)" fg:x="770" fg:w="1"/><text x="29.3946%" y="719.50"></text></g><g><title>&lt;bytes::bytes::Bytes as sqlx_core::io::buf::BufExt&gt;::get_bytes (11 samples, 0.42%)</title><rect x="28.8039%" y="773" width="0.4164%" height="15" fill="rgb(233,189,8)" fg:x="761" fg:w="11"/><text x="29.0539%" y="783.50"></text></g><g><title>bytes::bytes::Bytes::slice (11 samples, 0.42%)</title><rect x="28.8039%" y="757" width="0.4164%" height="15" fill="rgb(228,141,17)" fg:x="761" fg:w="11"/><text x="29.0539%" y="767.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="29.1446%" y="741" width="0.0757%" height="15" fill="rgb(247,157,1)" fg:x="770" fg:w="2"/><text x="29.3946%" y="751.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (2 samples, 0.08%)</title><rect x="29.1446%" y="725" width="0.0757%" height="15" fill="rgb(249,225,5)" fg:x="770" fg:w="2"/><text x="29.3946%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.04%)</title><rect x="29.1824%" y="709" width="0.0379%" height="15" fill="rgb(242,55,13)" fg:x="771" fg:w="1"/><text x="29.4324%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="29.1824%" y="693" width="0.0379%" height="15" fill="rgb(230,49,50)" fg:x="771" fg:w="1"/><text x="29.4324%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.30%)</title><rect x="29.2203%" y="773" width="0.3028%" height="15" fill="rgb(241,111,38)" fg:x="772" fg:w="8"/><text x="29.4703%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="29.4852%" y="757" width="0.0379%" height="15" fill="rgb(252,155,4)" fg:x="779" fg:w="1"/><text x="29.7352%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.26%)</title><rect x="29.5231%" y="773" width="0.2650%" height="15" fill="rgb(212,69,32)" fg:x="780" fg:w="7"/><text x="29.7731%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.26%)</title><rect x="29.5231%" y="757" width="0.2650%" height="15" fill="rgb(243,107,47)" fg:x="780" fg:w="7"/><text x="29.7731%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.19%)</title><rect x="29.5988%" y="741" width="0.1893%" height="15" fill="rgb(247,130,12)" fg:x="782" fg:w="5"/><text x="29.8488%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (5 samples, 0.19%)</title><rect x="29.5988%" y="725" width="0.1893%" height="15" fill="rgb(233,74,16)" fg:x="782" fg:w="5"/><text x="29.8488%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.15%)</title><rect x="29.6366%" y="709" width="0.1514%" height="15" fill="rgb(208,58,18)" fg:x="783" fg:w="4"/><text x="29.8866%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.15%)</title><rect x="29.6366%" y="693" width="0.1514%" height="15" fill="rgb(242,225,1)" fg:x="783" fg:w="4"/><text x="29.8866%" y="703.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.15%)</title><rect x="29.6366%" y="677" width="0.1514%" height="15" fill="rgb(249,39,40)" fg:x="783" fg:w="4"/><text x="29.8866%" y="687.50"></text></g><g><title>__rdl_alloc (4 samples, 0.15%)</title><rect x="29.6366%" y="661" width="0.1514%" height="15" fill="rgb(207,72,44)" fg:x="783" fg:w="4"/><text x="29.8866%" y="671.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.15%)</title><rect x="29.6366%" y="645" width="0.1514%" height="15" fill="rgb(215,193,12)" fg:x="783" fg:w="4"/><text x="29.8866%" y="655.50"></text></g><g><title>malloc (3 samples, 0.11%)</title><rect x="29.6745%" y="629" width="0.1136%" height="15" fill="rgb(248,41,39)" fg:x="784" fg:w="3"/><text x="29.9245%" y="639.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (4 samples, 0.15%)</title><rect x="29.8259%" y="757" width="0.1514%" height="15" fill="rgb(253,85,4)" fg:x="788" fg:w="4"/><text x="30.0759%" y="767.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (8 samples, 0.30%)</title><rect x="29.7880%" y="773" width="0.3028%" height="15" fill="rgb(243,70,31)" fg:x="787" fg:w="8"/><text x="30.0380%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::advance (3 samples, 0.11%)</title><rect x="29.9773%" y="757" width="0.1136%" height="15" fill="rgb(253,195,26)" fg:x="792" fg:w="3"/><text x="30.2273%" y="767.50"></text></g><g><title>bytes::bytes::Bytes::inc_start (3 samples, 0.11%)</title><rect x="29.9773%" y="741" width="0.1136%" height="15" fill="rgb(243,42,11)" fg:x="792" fg:w="3"/><text x="30.2273%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.11%)</title><rect x="29.9773%" y="725" width="0.1136%" height="15" fill="rgb(239,66,17)" fg:x="792" fg:w="3"/><text x="30.2273%" y="735.50"></text></g><g><title>bytes::bytes::Bytes::len (1 samples, 0.04%)</title><rect x="30.0908%" y="773" width="0.0379%" height="15" fill="rgb(217,132,21)" fg:x="795" fg:w="1"/><text x="30.3408%" y="783.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (60 samples, 2.27%)</title><rect x="28.0469%" y="805" width="2.2710%" height="15" fill="rgb(252,202,21)" fg:x="741" fg:w="60"/><text x="28.2969%" y="815.50">s..</text></g><g><title>&lt;sqlx_mysql::protocol::statement::row::BinaryRow as sqlx_core::io::decode::Decode&lt;&amp;[sqlx_mysql::column::MySqlColumn]&gt;&gt;::decode_with (60 samples, 2.27%)</title><rect x="28.0469%" y="789" width="2.2710%" height="15" fill="rgb(233,98,36)" fg:x="741" fg:w="60"/><text x="28.2969%" y="799.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (5 samples, 0.19%)</title><rect x="30.1287%" y="773" width="0.1893%" height="15" fill="rgb(216,153,54)" fg:x="796" fg:w="5"/><text x="30.3787%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (5 samples, 0.19%)</title><rect x="30.1287%" y="757" width="0.1893%" height="15" fill="rgb(250,99,7)" fg:x="796" fg:w="5"/><text x="30.3787%" y="767.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (5 samples, 0.19%)</title><rect x="30.1287%" y="741" width="0.1893%" height="15" fill="rgb(207,56,50)" fg:x="796" fg:w="5"/><text x="30.3787%" y="751.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5 samples, 0.19%)</title><rect x="30.1287%" y="725" width="0.1893%" height="15" fill="rgb(244,61,34)" fg:x="796" fg:w="5"/><text x="30.3787%" y="735.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (5 samples, 0.19%)</title><rect x="30.1287%" y="709" width="0.1893%" height="15" fill="rgb(241,50,38)" fg:x="796" fg:w="5"/><text x="30.3787%" y="719.50"></text></g><g><title>bytes::bytes_mut::release_shared (4 samples, 0.15%)</title><rect x="30.1665%" y="693" width="0.1514%" height="15" fill="rgb(212,166,30)" fg:x="797" fg:w="4"/><text x="30.4165%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (276 samples, 10.45%)</title><rect x="19.9092%" y="837" width="10.4466%" height="15" fill="rgb(249,127,32)" fg:x="526" fg:w="276"/><text x="20.1592%" y="847.50">&lt;core::pin::Pin..</text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}}::_{{closure}}::_{{closure}} (276 samples, 10.45%)</title><rect x="19.9092%" y="821" width="10.4466%" height="15" fill="rgb(209,103,0)" fg:x="526" fg:w="276"/><text x="20.1592%" y="831.50">sqlx_mysql::con..</text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::eof (1 samples, 0.04%)</title><rect x="30.3179%" y="805" width="0.0379%" height="15" fill="rgb(238,209,51)" fg:x="801" fg:w="1"/><text x="30.5679%" y="815.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::ok (1 samples, 0.04%)</title><rect x="30.3179%" y="789" width="0.0379%" height="15" fill="rgb(237,56,23)" fg:x="801" fg:w="1"/><text x="30.5679%" y="799.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode (1 samples, 0.04%)</title><rect x="30.3179%" y="773" width="0.0379%" height="15" fill="rgb(215,153,46)" fg:x="801" fg:w="1"/><text x="30.5679%" y="783.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (1 samples, 0.04%)</title><rect x="30.3179%" y="757" width="0.0379%" height="15" fill="rgb(224,49,31)" fg:x="801" fg:w="1"/><text x="30.5679%" y="767.50"></text></g><g><title>&lt;sqlx_mysql::protocol::response::ok::OkPacket as sqlx_core::io::decode::Decode&gt;::decode_with (1 samples, 0.04%)</title><rect x="30.3179%" y="741" width="0.0379%" height="15" fill="rgb(250,18,42)" fg:x="801" fg:w="1"/><text x="30.5679%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.04%)</title><rect x="30.3179%" y="725" width="0.0379%" height="15" fill="rgb(215,176,39)" fg:x="801" fg:w="1"/><text x="30.5679%" y="735.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="30.3179%" y="709" width="0.0379%" height="15" fill="rgb(223,77,29)" fg:x="801" fg:w="1"/><text x="30.5679%" y="719.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.04%)</title><rect x="30.3179%" y="693" width="0.0379%" height="15" fill="rgb(234,94,52)" fg:x="801" fg:w="1"/><text x="30.5679%" y="703.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.04%)</title><rect x="30.3179%" y="677" width="0.0379%" height="15" fill="rgb(220,154,50)" fg:x="801" fg:w="1"/><text x="30.5679%" y="687.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (1 samples, 0.04%)</title><rect x="30.3179%" y="661" width="0.0379%" height="15" fill="rgb(212,11,10)" fg:x="801" fg:w="1"/><text x="30.5679%" y="671.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (277 samples, 10.48%)</title><rect x="19.9092%" y="869" width="10.4845%" height="15" fill="rgb(205,166,19)" fg:x="526" fg:w="277"/><text x="20.1592%" y="879.50">futures_util::f..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (277 samples, 10.48%)</title><rect x="19.9092%" y="853" width="10.4845%" height="15" fill="rgb(244,198,16)" fg:x="526" fg:w="277"/><text x="20.1592%" y="863.50">&lt;futures_util::..</text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="30.3558%" y="837" width="0.0379%" height="15" fill="rgb(219,69,12)" fg:x="802" fg:w="1"/><text x="30.6058%" y="847.50"></text></g><g><title>core::ptr::read (15 samples, 0.57%)</title><rect x="30.5450%" y="821" width="0.5678%" height="15" fill="rgb(245,30,7)" fg:x="807" fg:w="15"/><text x="30.7950%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (16 samples, 0.61%)</title><rect x="30.5450%" y="853" width="0.6056%" height="15" fill="rgb(218,221,48)" fg:x="807" fg:w="16"/><text x="30.7950%" y="863.50"></text></g><g><title>core::mem::replace (16 samples, 0.61%)</title><rect x="30.5450%" y="837" width="0.6056%" height="15" fill="rgb(216,66,15)" fg:x="807" fg:w="16"/><text x="30.7950%" y="847.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="31.1128%" y="821" width="0.0379%" height="15" fill="rgb(226,122,50)" fg:x="822" fg:w="1"/><text x="31.3628%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (3 samples, 0.11%)</title><rect x="31.1506%" y="853" width="0.1136%" height="15" fill="rgb(239,156,16)" fg:x="823" fg:w="3"/><text x="31.4006%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="31.1506%" y="837" width="0.1136%" height="15" fill="rgb(224,27,38)" fg:x="823" fg:w="3"/><text x="31.4006%" y="847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (3 samples, 0.11%)</title><rect x="31.1506%" y="821" width="0.1136%" height="15" fill="rgb(224,39,27)" fg:x="823" fg:w="3"/><text x="31.4006%" y="831.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (320 samples, 12.11%)</title><rect x="19.1900%" y="965" width="12.1120%" height="15" fill="rgb(215,92,29)" fg:x="507" fg:w="320"/><text x="19.4400%" y="975.50">&lt;futures_util::str..</text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (314 samples, 11.88%)</title><rect x="19.4171%" y="949" width="11.8849%" height="15" fill="rgb(207,159,16)" fg:x="513" fg:w="314"/><text x="19.6671%" y="959.50">futures_util::stre..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (314 samples, 11.88%)</title><rect x="19.4171%" y="933" width="11.8849%" height="15" fill="rgb(238,163,47)" fg:x="513" fg:w="314"/><text x="19.6671%" y="943.50">&lt;S as futures_core..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (314 samples, 11.88%)</title><rect x="19.4171%" y="917" width="11.8849%" height="15" fill="rgb(219,91,49)" fg:x="513" fg:w="314"/><text x="19.6671%" y="927.50">&lt;core::pin::Pin&lt;P&gt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (314 samples, 11.88%)</title><rect x="19.4171%" y="901" width="11.8849%" height="15" fill="rgb(227,167,31)" fg:x="513" fg:w="314"/><text x="19.6671%" y="911.50">&lt;core::pin::Pin&lt;P&gt;..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (314 samples, 11.88%)</title><rect x="19.4171%" y="885" width="11.8849%" height="15" fill="rgb(234,80,54)" fg:x="513" fg:w="314"/><text x="19.6671%" y="895.50">&lt;sqlx_core::ext::a..</text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::take (24 samples, 0.91%)</title><rect x="30.3936%" y="869" width="0.9084%" height="15" fill="rgb(212,114,2)" fg:x="803" fg:w="24"/><text x="30.6436%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="31.2642%" y="853" width="0.0379%" height="15" fill="rgb(234,50,24)" fg:x="826" fg:w="1"/><text x="31.5142%" y="863.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.04%)</title><rect x="31.2642%" y="837" width="0.0379%" height="15" fill="rgb(221,68,8)" fg:x="826" fg:w="1"/><text x="31.5142%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.04%)</title><rect x="31.2642%" y="821" width="0.0379%" height="15" fill="rgb(254,180,31)" fg:x="826" fg:w="1"/><text x="31.5142%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.04%)</title><rect x="31.2642%" y="805" width="0.0379%" height="15" fill="rgb(247,130,50)" fg:x="826" fg:w="1"/><text x="31.5142%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::Yielder&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;::yield::{{closure}}&gt; (2 samples, 0.08%)</title><rect x="31.3020%" y="965" width="0.0757%" height="15" fill="rgb(211,109,4)" fg:x="827" fg:w="2"/><text x="31.5520%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.23%)</title><rect x="32.0969%" y="949" width="0.2271%" height="15" fill="rgb(238,50,21)" fg:x="848" fg:w="6"/><text x="32.3469%" y="959.50"></text></g><g><title>core::ptr::read (7 samples, 0.26%)</title><rect x="32.3240%" y="917" width="0.2650%" height="15" fill="rgb(225,57,45)" fg:x="854" fg:w="7"/><text x="32.5740%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::replace (8 samples, 0.30%)</title><rect x="32.3240%" y="949" width="0.3028%" height="15" fill="rgb(209,196,50)" fg:x="854" fg:w="8"/><text x="32.5740%" y="959.50"></text></g><g><title>core::mem::replace (8 samples, 0.30%)</title><rect x="32.3240%" y="933" width="0.3028%" height="15" fill="rgb(242,140,13)" fg:x="854" fg:w="8"/><text x="32.5740%" y="943.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="32.5889%" y="917" width="0.0379%" height="15" fill="rgb(217,111,7)" fg:x="861" fg:w="1"/><text x="32.8389%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="32.6268%" y="949" width="0.0379%" height="15" fill="rgb(253,193,51)" fg:x="862" fg:w="1"/><text x="32.8768%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (8 samples, 0.30%)</title><rect x="32.6646%" y="949" width="0.3028%" height="15" fill="rgb(252,70,29)" fg:x="863" fg:w="8"/><text x="32.9146%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.30%)</title><rect x="32.6646%" y="933" width="0.3028%" height="15" fill="rgb(232,127,12)" fg:x="863" fg:w="8"/><text x="32.9146%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (8 samples, 0.30%)</title><rect x="32.6646%" y="917" width="0.3028%" height="15" fill="rgb(211,180,21)" fg:x="863" fg:w="8"/><text x="32.9146%" y="927.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}} (43 samples, 1.63%)</title><rect x="31.3777%" y="965" width="1.6276%" height="15" fill="rgb(229,72,13)" fg:x="829" fg:w="43"/><text x="31.6277%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="32.9674%" y="949" width="0.0379%" height="15" fill="rgb(240,211,49)" fg:x="871" fg:w="1"/><text x="33.2174%" y="959.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="32.9674%" y="933" width="0.0379%" height="15" fill="rgb(219,149,40)" fg:x="871" fg:w="1"/><text x="33.2174%" y="943.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.04%)</title><rect x="32.9674%" y="917" width="0.0379%" height="15" fill="rgb(210,127,46)" fg:x="871" fg:w="1"/><text x="33.2174%" y="927.50"></text></g><g><title>std::thread::panicking (1 samples, 0.04%)</title><rect x="32.9674%" y="901" width="0.0379%" height="15" fill="rgb(220,106,7)" fg:x="871" fg:w="1"/><text x="33.2174%" y="911.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.04%)</title><rect x="32.9674%" y="885" width="0.0379%" height="15" fill="rgb(249,31,22)" fg:x="871" fg:w="1"/><text x="33.2174%" y="895.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="32.9674%" y="869" width="0.0379%" height="15" fill="rgb(253,1,49)" fg:x="871" fg:w="1"/><text x="33.2174%" y="879.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (386 samples, 14.61%)</title><rect x="18.4330%" y="1029" width="14.6101%" height="15" fill="rgb(227,144,33)" fg:x="487" fg:w="386"/><text x="18.6830%" y="1039.50">futures_util::future::..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (386 samples, 14.61%)</title><rect x="18.4330%" y="1013" width="14.6101%" height="15" fill="rgb(249,163,44)" fg:x="487" fg:w="386"/><text x="18.6830%" y="1023.50">&lt;futures_util::future:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (386 samples, 14.61%)</title><rect x="18.4330%" y="997" width="14.6101%" height="15" fill="rgb(234,15,39)" fg:x="487" fg:w="386"/><text x="18.6830%" y="1007.50">&lt;core::pin::Pin&lt;P&gt; as ..</text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many::_{{closure}}::_{{closure}} (386 samples, 14.61%)</title><rect x="18.4330%" y="981" width="14.6101%" height="15" fill="rgb(207,66,16)" fg:x="487" fg:w="386"/><text x="18.6830%" y="991.50">sqlx_mysql::connection..</text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}} (1 samples, 0.04%)</title><rect x="33.0053%" y="965" width="0.0379%" height="15" fill="rgb(233,112,24)" fg:x="872" fg:w="1"/><text x="33.2553%" y="975.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="33.0053%" y="949" width="0.0379%" height="15" fill="rgb(230,90,22)" fg:x="872" fg:w="1"/><text x="33.2553%" y="959.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="33.0053%" y="933" width="0.0379%" height="15" fill="rgb(229,61,13)" fg:x="872" fg:w="1"/><text x="33.2553%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="33.0053%" y="917" width="0.0379%" height="15" fill="rgb(225,57,24)" fg:x="872" fg:w="1"/><text x="33.2553%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="33.0053%" y="901" width="0.0379%" height="15" fill="rgb(208,169,48)" fg:x="872" fg:w="1"/><text x="33.2553%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="33.0053%" y="885" width="0.0379%" height="15" fill="rgb(244,218,51)" fg:x="872" fg:w="1"/><text x="33.2553%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="33.0053%" y="869" width="0.0379%" height="15" fill="rgb(214,148,10)" fg:x="872" fg:w="1"/><text x="33.2553%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="33.0053%" y="853" width="0.0379%" height="15" fill="rgb(225,174,27)" fg:x="872" fg:w="1"/><text x="33.2553%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="33.0053%" y="837" width="0.0379%" height="15" fill="rgb(230,96,26)" fg:x="872" fg:w="1"/><text x="33.2553%" y="847.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="33.0053%" y="821" width="0.0379%" height="15" fill="rgb(232,10,30)" fg:x="872" fg:w="1"/><text x="33.2553%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="33.0053%" y="805" width="0.0379%" height="15" fill="rgb(222,8,50)" fg:x="872" fg:w="1"/><text x="33.2553%" y="815.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="33.0053%" y="789" width="0.0379%" height="15" fill="rgb(213,81,27)" fg:x="872" fg:w="1"/><text x="33.2553%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.15%)</title><rect x="33.1188%" y="1013" width="0.1514%" height="15" fill="rgb(245,50,10)" fg:x="875" fg:w="4"/><text x="33.3688%" y="1023.50"></text></g><g><title>core::mem::replace (4 samples, 0.15%)</title><rect x="33.1188%" y="997" width="0.1514%" height="15" fill="rgb(216,100,18)" fg:x="875" fg:w="4"/><text x="33.3688%" y="1007.50"></text></g><g><title>core::ptr::read (4 samples, 0.15%)</title><rect x="33.1188%" y="981" width="0.1514%" height="15" fill="rgb(236,147,54)" fg:x="875" fg:w="4"/><text x="33.3688%" y="991.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (409 samples, 15.48%)</title><rect x="17.8274%" y="1109" width="15.4807%" height="15" fill="rgb(205,143,26)" fg:x="471" fg:w="409"/><text x="18.0774%" y="1119.50">&lt;futures_util::stream::t..</text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (403 samples, 15.25%)</title><rect x="18.0545%" y="1093" width="15.2536%" height="15" fill="rgb(236,26,9)" fg:x="477" fg:w="403"/><text x="18.3045%" y="1103.50">futures_util::stream::t..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (403 samples, 15.25%)</title><rect x="18.0545%" y="1077" width="15.2536%" height="15" fill="rgb(221,165,53)" fg:x="477" fg:w="403"/><text x="18.3045%" y="1087.50">&lt;S as futures_core::str..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (403 samples, 15.25%)</title><rect x="18.0545%" y="1061" width="15.2536%" height="15" fill="rgb(214,110,17)" fg:x="477" fg:w="403"/><text x="18.3045%" y="1071.50">&lt;core::pin::Pin&lt;P&gt; as f..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (402 samples, 15.22%)</title><rect x="18.0924%" y="1045" width="15.2157%" height="15" fill="rgb(237,197,12)" fg:x="478" fg:w="402"/><text x="18.3424%" y="1055.50">&lt;sqlx_core::ext::async_..</text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::take (7 samples, 0.26%)</title><rect x="33.0431%" y="1029" width="0.2650%" height="15" fill="rgb(205,84,17)" fg:x="873" fg:w="7"/><text x="33.2931%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="33.2702%" y="1013" width="0.0379%" height="15" fill="rgb(237,18,45)" fg:x="879" fg:w="1"/><text x="33.5202%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="33.2702%" y="997" width="0.0379%" height="15" fill="rgb(221,87,14)" fg:x="879" fg:w="1"/><text x="33.5202%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.04%)</title><rect x="33.2702%" y="981" width="0.0379%" height="15" fill="rgb(238,186,15)" fg:x="879" fg:w="1"/><text x="33.5202%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::Yielder&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;::yield::{{closure}}&gt; (7 samples, 0.26%)</title><rect x="33.3081%" y="1109" width="0.2650%" height="15" fill="rgb(208,115,11)" fg:x="880" fg:w="7"/><text x="33.5581%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_mysql::database::MySql&gt;&gt; (3 samples, 0.11%)</title><rect x="33.5731%" y="1109" width="0.1136%" height="15" fill="rgb(254,175,0)" fg:x="887" fg:w="3"/><text x="33.8231%" y="1119.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="33.5731%" y="1093" width="0.1136%" height="15" fill="rgb(227,24,42)" fg:x="887" fg:w="3"/><text x="33.8231%" y="1103.50"></text></g><g><title>sqlx_core::rt::spawn (3 samples, 0.11%)</title><rect x="33.5731%" y="1077" width="0.1136%" height="15" fill="rgb(223,211,37)" fg:x="887" fg:w="3"/><text x="33.8231%" y="1087.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (3 samples, 0.11%)</title><rect x="33.5731%" y="1061" width="0.1136%" height="15" fill="rgb(235,49,27)" fg:x="887" fg:w="3"/><text x="33.8231%" y="1071.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_named (3 samples, 0.11%)</title><rect x="33.5731%" y="1045" width="0.1136%" height="15" fill="rgb(254,97,51)" fg:x="887" fg:w="3"/><text x="33.8231%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (3 samples, 0.11%)</title><rect x="33.5731%" y="1029" width="0.1136%" height="15" fill="rgb(249,51,40)" fg:x="887" fg:w="3"/><text x="33.8231%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (3 samples, 0.11%)</title><rect x="33.5731%" y="1013" width="0.1136%" height="15" fill="rgb(210,128,45)" fg:x="887" fg:w="3"/><text x="33.8231%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (3 samples, 0.11%)</title><rect x="33.5731%" y="997" width="0.1136%" height="15" fill="rgb(224,137,50)" fg:x="887" fg:w="3"/><text x="33.8231%" y="1007.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (3 samples, 0.11%)</title><rect x="33.5731%" y="981" width="0.1136%" height="15" fill="rgb(242,15,9)" fg:x="887" fg:w="3"/><text x="33.8231%" y="991.50"></text></g><g><title>tokio::runtime::task::new_task (3 samples, 0.11%)</title><rect x="33.5731%" y="965" width="0.1136%" height="15" fill="rgb(233,187,41)" fg:x="887" fg:w="3"/><text x="33.8231%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (3 samples, 0.11%)</title><rect x="33.5731%" y="949" width="0.1136%" height="15" fill="rgb(227,2,29)" fg:x="887" fg:w="3"/><text x="33.8231%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (3 samples, 0.11%)</title><rect x="33.5731%" y="933" width="0.1136%" height="15" fill="rgb(222,70,3)" fg:x="887" fg:w="3"/><text x="33.8231%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.11%)</title><rect x="33.5731%" y="917" width="0.1136%" height="15" fill="rgb(213,11,42)" fg:x="887" fg:w="3"/><text x="33.8231%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.11%)</title><rect x="33.5731%" y="901" width="0.1136%" height="15" fill="rgb(225,150,9)" fg:x="887" fg:w="3"/><text x="33.8231%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.11%)</title><rect x="33.5731%" y="885" width="0.1136%" height="15" fill="rgb(230,162,45)" fg:x="887" fg:w="3"/><text x="33.8231%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.11%)</title><rect x="33.5731%" y="869" width="0.1136%" height="15" fill="rgb(222,14,52)" fg:x="887" fg:w="3"/><text x="33.8231%" y="879.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.11%)</title><rect x="33.5731%" y="853" width="0.1136%" height="15" fill="rgb(254,198,14)" fg:x="887" fg:w="3"/><text x="33.8231%" y="863.50"></text></g><g><title>__rdl_alloc (3 samples, 0.11%)</title><rect x="33.5731%" y="837" width="0.1136%" height="15" fill="rgb(220,217,30)" fg:x="887" fg:w="3"/><text x="33.8231%" y="847.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.11%)</title><rect x="33.5731%" y="821" width="0.1136%" height="15" fill="rgb(215,146,41)" fg:x="887" fg:w="3"/><text x="33.8231%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (3 samples, 0.11%)</title><rect x="33.5731%" y="805" width="0.1136%" height="15" fill="rgb(217,27,36)" fg:x="887" fg:w="3"/><text x="33.8231%" y="815.50"></text></g><g><title>posix_memalign (3 samples, 0.11%)</title><rect x="33.5731%" y="789" width="0.1136%" height="15" fill="rgb(219,218,39)" fg:x="887" fg:w="3"/><text x="33.8231%" y="799.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="33.5731%" y="773" width="0.1136%" height="15" fill="rgb(219,4,42)" fg:x="887" fg:w="3"/><text x="33.8231%" y="783.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="33.5731%" y="757" width="0.1136%" height="15" fill="rgb(249,119,36)" fg:x="887" fg:w="3"/><text x="33.8231%" y="767.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="33.5731%" y="741" width="0.1136%" height="15" fill="rgb(209,23,33)" fg:x="887" fg:w="3"/><text x="33.8231%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="34.2544%" y="1093" width="0.0757%" height="15" fill="rgb(211,10,0)" fg:x="905" fg:w="2"/><text x="34.5044%" y="1103.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="34.3301%" y="1093" width="0.0379%" height="15" fill="rgb(208,99,37)" fg:x="907" fg:w="1"/><text x="34.5801%" y="1103.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="34.3301%" y="1077" width="0.0379%" height="15" fill="rgb(213,132,31)" fg:x="907" fg:w="1"/><text x="34.5801%" y="1087.50"></text></g><g><title>core::ptr::read (5 samples, 0.19%)</title><rect x="34.3679%" y="1061" width="0.1893%" height="15" fill="rgb(243,129,40)" fg:x="908" fg:w="5"/><text x="34.6179%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::replace (7 samples, 0.26%)</title><rect x="34.3679%" y="1093" width="0.2650%" height="15" fill="rgb(210,66,33)" fg:x="908" fg:w="7"/><text x="34.6179%" y="1103.50"></text></g><g><title>core::mem::replace (7 samples, 0.26%)</title><rect x="34.3679%" y="1077" width="0.2650%" height="15" fill="rgb(209,189,4)" fg:x="908" fg:w="7"/><text x="34.6179%" y="1087.50"></text></g><g><title>core::ptr::write (2 samples, 0.08%)</title><rect x="34.5572%" y="1061" width="0.0757%" height="15" fill="rgb(214,107,37)" fg:x="913" fg:w="2"/><text x="34.8072%" y="1071.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (560 samples, 21.20%)</title><rect x="13.4746%" y="1621" width="21.1961%" height="15" fill="rgb(245,88,54)" fg:x="356" fg:w="560"/><text x="13.7246%" y="1631.50">&lt;poem::endpoint::map_to_response:..</text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1605" width="19.8713%" height="15" fill="rgb(205,146,20)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1615.50">&lt;poem::endpoint::before::Before..</text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1589" width="19.8713%" height="15" fill="rgb(220,161,25)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1599.50">&lt;poem::middleware::cookie_jar_m..</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1573" width="19.8713%" height="15" fill="rgb(215,152,15)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1583.50">&lt;poem::route::router::Route as ..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1557" width="19.8713%" height="15" fill="rgb(233,192,44)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1567.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1541" width="19.8713%" height="15" fill="rgb(240,170,46)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1551.50">&lt;dyn poem::endpoint::endpoint::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (525 samples, 19.87%)</title><rect x="14.7994%" y="1525" width="19.8713%" height="15" fill="rgb(207,104,33)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1535.50">&lt;core::pin::Pin&lt;P&gt; as core::fut..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1509" width="19.8713%" height="15" fill="rgb(219,21,39)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1519.50">&lt;poem::endpoint::map_to_respons..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (525 samples, 19.87%)</title><rect x="14.7994%" y="1493" width="19.8713%" height="15" fill="rgb(214,133,29)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1503.50">&lt;futures_util::future::either::..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1477" width="19.8713%" height="15" fill="rgb(226,93,6)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1487.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1461" width="19.8713%" height="15" fill="rgb(252,222,34)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1471.50">&lt;dyn poem::endpoint::endpoint::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (525 samples, 19.87%)</title><rect x="14.7994%" y="1445" width="19.8713%" height="15" fill="rgb(252,92,48)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1455.50">&lt;core::pin::Pin&lt;P&gt; as core::fut..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1429" width="19.8713%" height="15" fill="rgb(245,223,24)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1439.50">&lt;poem::endpoint::map_to_respons..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1413" width="19.8713%" height="15" fill="rgb(205,176,3)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1423.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1397" width="19.8713%" height="15" fill="rgb(235,151,15)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1407.50">&lt;dyn poem::endpoint::endpoint::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (525 samples, 19.87%)</title><rect x="14.7994%" y="1381" width="19.8713%" height="15" fill="rgb(237,209,11)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1391.50">&lt;core::pin::Pin&lt;P&gt; as core::fut..</text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1365" width="19.8713%" height="15" fill="rgb(243,227,24)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1375.50">&lt;poem::endpoint::endpoint::Asyn..</text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (525 samples, 19.87%)</title><rect x="14.7994%" y="1349" width="19.8713%" height="15" fill="rgb(239,193,16)" fg:x="391" fg:w="525"/><text x="15.0494%" y="1359.50">&lt;fabseapi::Api as poem_openapi:..</text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (467 samples, 17.68%)</title><rect x="16.9947%" y="1333" width="17.6760%" height="15" fill="rgb(231,27,9)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1343.50">fabseapi::Api::vehicle_retr..</text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (467 samples, 17.68%)</title><rect x="16.9947%" y="1317" width="17.6760%" height="15" fill="rgb(219,169,10)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1327.50">&lt;tokio_stream::stream_ext::..</text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (467 samples, 17.68%)</title><rect x="16.9947%" y="1301" width="17.6760%" height="15" fill="rgb(244,229,43)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1311.50">&lt;&amp;mut S as futures_core::st..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (467 samples, 17.68%)</title><rect x="16.9947%" y="1285" width="17.6760%" height="15" fill="rgb(254,38,20)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1295.50">&lt;core::pin::Pin&lt;P&gt; as futur..</text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (467 samples, 17.68%)</title><rect x="16.9947%" y="1269" width="17.6760%" height="15" fill="rgb(250,47,30)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1279.50">&lt;futures_util::stream::try_..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (467 samples, 17.68%)</title><rect x="16.9947%" y="1253" width="17.6760%" height="15" fill="rgb(224,124,36)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1263.50">&lt;S as futures_core::stream:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (467 samples, 17.68%)</title><rect x="16.9947%" y="1237" width="17.6760%" height="15" fill="rgb(246,68,51)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1247.50">&lt;core::pin::Pin&lt;P&gt; as futur..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (467 samples, 17.68%)</title><rect x="16.9947%" y="1221" width="17.6760%" height="15" fill="rgb(253,43,49)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1231.50">&lt;futures_util::stream::stre..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (467 samples, 17.68%)</title><rect x="16.9947%" y="1205" width="17.6760%" height="15" fill="rgb(219,54,36)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1215.50">&lt;core::pin::Pin&lt;P&gt; as futur..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (467 samples, 17.68%)</title><rect x="16.9947%" y="1189" width="17.6760%" height="15" fill="rgb(227,133,34)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1199.50">&lt;sqlx_core::ext::async_stre..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (467 samples, 17.68%)</title><rect x="16.9947%" y="1173" width="17.6760%" height="15" fill="rgb(247,227,15)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1183.50">futures_util::future::futur..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (467 samples, 17.68%)</title><rect x="16.9947%" y="1157" width="17.6760%" height="15" fill="rgb(229,96,14)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1167.50">&lt;futures_util::future::futu..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (467 samples, 17.68%)</title><rect x="16.9947%" y="1141" width="17.6760%" height="15" fill="rgb(220,79,17)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1151.50">&lt;core::pin::Pin&lt;P&gt; as core:..</text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (467 samples, 17.68%)</title><rect x="16.9947%" y="1125" width="17.6760%" height="15" fill="rgb(205,131,53)" fg:x="449" fg:w="467"/><text x="17.2447%" y="1135.50">sqlx_core::pool::executor::..</text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}} (26 samples, 0.98%)</title><rect x="33.6866%" y="1109" width="0.9841%" height="15" fill="rgb(209,50,29)" fg:x="890" fg:w="26"/><text x="33.9366%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="34.6329%" y="1093" width="0.0379%" height="15" fill="rgb(245,86,46)" fg:x="915" fg:w="1"/><text x="34.8829%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.15%)</title><rect x="34.7464%" y="1237" width="0.1514%" height="15" fill="rgb(235,66,46)" fg:x="918" fg:w="4"/><text x="34.9964%" y="1247.50"></text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (4 samples, 0.15%)</title><rect x="34.7464%" y="1221" width="0.1514%" height="15" fill="rgb(232,148,31)" fg:x="918" fg:w="4"/><text x="34.9964%" y="1231.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1621" width="0.2650%" height="15" fill="rgb(217,149,8)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1605" width="0.2650%" height="15" fill="rgb(209,183,11)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1615.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1589" width="0.2650%" height="15" fill="rgb(208,55,20)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1599.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="34.6707%" y="1573" width="0.2650%" height="15" fill="rgb(218,39,14)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1583.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1557" width="0.2650%" height="15" fill="rgb(216,169,33)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1541" width="0.2650%" height="15" fill="rgb(233,80,24)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1551.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1525" width="0.2650%" height="15" fill="rgb(213,179,31)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1535.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1509" width="0.2650%" height="15" fill="rgb(209,19,5)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1519.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="34.6707%" y="1493" width="0.2650%" height="15" fill="rgb(219,18,35)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1503.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1477" width="0.2650%" height="15" fill="rgb(209,169,16)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1487.50"></text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1461" width="0.2650%" height="15" fill="rgb(245,90,51)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1471.50"></text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1445" width="0.2650%" height="15" fill="rgb(220,99,45)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1455.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1429" width="0.2650%" height="15" fill="rgb(249,89,25)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1413" width="0.2650%" height="15" fill="rgb(239,193,0)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1423.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1397" width="0.2650%" height="15" fill="rgb(231,126,1)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1407.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="34.6707%" y="1381" width="0.2650%" height="15" fill="rgb(243,166,3)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1391.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1365" width="0.2650%" height="15" fill="rgb(223,22,34)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1375.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="34.6707%" y="1349" width="0.2650%" height="15" fill="rgb(251,52,51)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1359.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1333" width="0.2650%" height="15" fill="rgb(221,165,28)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1343.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1317" width="0.2650%" height="15" fill="rgb(218,121,47)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1327.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="34.6707%" y="1301" width="0.2650%" height="15" fill="rgb(209,120,9)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1311.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1285" width="0.2650%" height="15" fill="rgb(236,68,12)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1269" width="0.2650%" height="15" fill="rgb(225,194,26)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1279.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="34.6707%" y="1253" width="0.2650%" height="15" fill="rgb(231,84,39)" fg:x="916" fg:w="7"/><text x="34.9207%" y="1263.50"></text></g><g><title>&lt;poem::endpoint::endpoint::ToDynEndpoint&lt;E&gt; as poem::endpoint::endpoint::DynEndpoint&gt;::call (1 samples, 0.04%)</title><rect x="34.8978%" y="1237" width="0.0379%" height="15" fill="rgb(210,11,45)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1247.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="34.8978%" y="1221" width="0.0379%" height="15" fill="rgb(224,54,52)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="34.8978%" y="1205" width="0.0379%" height="15" fill="rgb(238,102,14)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1215.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="34.8978%" y="1189" width="0.0379%" height="15" fill="rgb(243,160,52)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1199.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="34.8978%" y="1173" width="0.0379%" height="15" fill="rgb(216,114,19)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="34.8978%" y="1157" width="0.0379%" height="15" fill="rgb(244,166,37)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="34.8978%" y="1141" width="0.0379%" height="15" fill="rgb(246,29,44)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="34.8978%" y="1125" width="0.0379%" height="15" fill="rgb(215,56,53)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1135.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="34.8978%" y="1109" width="0.0379%" height="15" fill="rgb(217,60,2)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1119.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="34.8978%" y="1093" width="0.0379%" height="15" fill="rgb(207,26,24)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1103.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="34.8978%" y="1077" width="0.0379%" height="15" fill="rgb(252,210,15)" fg:x="922" fg:w="1"/><text x="35.1478%" y="1087.50"></text></g><g><title>http::extensions::Extensions::get (1 samples, 0.04%)</title><rect x="35.0492%" y="1237" width="0.0379%" height="15" fill="rgb(253,209,26)" fg:x="926" fg:w="1"/><text x="35.2992%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.04%)</title><rect x="35.0492%" y="1221" width="0.0379%" height="15" fill="rgb(238,170,14)" fg:x="926" fg:w="1"/><text x="35.2992%" y="1231.50"></text></g><g><title>http::extensions::Extensions::get::_{{closure}} (1 samples, 0.04%)</title><rect x="35.0492%" y="1205" width="0.0379%" height="15" fill="rgb(216,178,15)" fg:x="926" fg:w="1"/><text x="35.2992%" y="1215.50"></text></g><g><title>&lt;T as http::extensions::AnyClone&gt;::as_any (1 samples, 0.04%)</title><rect x="35.0492%" y="1189" width="0.0379%" height="15" fill="rgb(250,197,2)" fg:x="926" fg:w="1"/><text x="35.2992%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="35.0871%" y="1109" width="0.0379%" height="15" fill="rgb(212,70,42)" fg:x="927" fg:w="1"/><text x="35.3371%" y="1119.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="35.0871%" y="1093" width="0.0379%" height="15" fill="rgb(227,213,9)" fg:x="927" fg:w="1"/><text x="35.3371%" y="1103.50"></text></g><g><title>&lt;poem_openapi::param::query::Query&lt;T&gt; as poem_openapi::base::ApiExtractor&gt;::from_request::_{{closure}} (3 samples, 0.11%)</title><rect x="35.0492%" y="1253" width="0.1136%" height="15" fill="rgb(245,99,25)" fg:x="926" fg:w="3"/><text x="35.2992%" y="1263.50"></text></g><g><title>poem_openapi::types::external::optional::&lt;impl poem_openapi::types::ParseFromParameter for core::option::Option&lt;T&gt;&gt;::parse_from_parameters (2 samples, 0.08%)</title><rect x="35.0871%" y="1237" width="0.0757%" height="15" fill="rgb(250,82,29)" fg:x="927" fg:w="2"/><text x="35.3371%" y="1247.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (2 samples, 0.08%)</title><rect x="35.0871%" y="1221" width="0.0757%" height="15" fill="rgb(241,226,54)" fg:x="927" fg:w="2"/><text x="35.3371%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.08%)</title><rect x="35.0871%" y="1205" width="0.0757%" height="15" fill="rgb(221,99,41)" fg:x="927" fg:w="2"/><text x="35.3371%" y="1215.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::_{{closure}} (2 samples, 0.08%)</title><rect x="35.0871%" y="1189" width="0.0757%" height="15" fill="rgb(213,90,21)" fg:x="927" fg:w="2"/><text x="35.3371%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="35.0871%" y="1173" width="0.0757%" height="15" fill="rgb(205,208,24)" fg:x="927" fg:w="2"/><text x="35.3371%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="35.0871%" y="1157" width="0.0757%" height="15" fill="rgb(246,31,12)" fg:x="927" fg:w="2"/><text x="35.3371%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="35.0871%" y="1141" width="0.0757%" height="15" fill="rgb(213,154,6)" fg:x="927" fg:w="2"/><text x="35.3371%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.08%)</title><rect x="35.0871%" y="1125" width="0.0757%" height="15" fill="rgb(222,163,29)" fg:x="927" fg:w="2"/><text x="35.3371%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="35.1249%" y="1109" width="0.0379%" height="15" fill="rgb(227,201,8)" fg:x="928" fg:w="1"/><text x="35.3749%" y="1119.50"></text></g><g><title>poem_openapi::base::UrlQuery::get_all::_{{closure}} (1 samples, 0.04%)</title><rect x="35.1249%" y="1093" width="0.0379%" height="15" fill="rgb(233,9,32)" fg:x="928" fg:w="1"/><text x="35.3749%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="35.1249%" y="1077" width="0.0379%" height="15" fill="rgb(217,54,24)" fg:x="928" fg:w="1"/><text x="35.3749%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.04%)</title><rect x="35.1249%" y="1061" width="0.0379%" height="15" fill="rgb(235,192,0)" fg:x="928" fg:w="1"/><text x="35.3749%" y="1071.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="35.1249%" y="1045" width="0.0379%" height="15" fill="rgb(235,45,9)" fg:x="928" fg:w="1"/><text x="35.3749%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="35.1249%" y="1029" width="0.0379%" height="15" fill="rgb(246,42,40)" fg:x="928" fg:w="1"/><text x="35.3749%" y="1039.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1 samples, 0.04%)</title><rect x="35.1249%" y="1013" width="0.0379%" height="15" fill="rgb(248,111,24)" fg:x="928" fg:w="1"/><text x="35.3749%" y="1023.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="35.1249%" y="997" width="0.0379%" height="15" fill="rgb(249,65,22)" fg:x="928" fg:w="1"/><text x="35.3749%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="35.1249%" y="981" width="0.0379%" height="15" fill="rgb(238,111,51)" fg:x="928" fg:w="1"/><text x="35.3749%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="35.1628%" y="1029" width="0.0757%" height="15" fill="rgb(250,118,22)" fg:x="929" fg:w="2"/><text x="35.4128%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="35.2006%" y="1013" width="0.0379%" height="15" fill="rgb(234,84,26)" fg:x="930" fg:w="1"/><text x="35.4506%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="35.2006%" y="997" width="0.0379%" height="15" fill="rgb(243,172,12)" fg:x="930" fg:w="1"/><text x="35.4506%" y="1007.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="35.2006%" y="981" width="0.0379%" height="15" fill="rgb(236,150,49)" fg:x="930" fg:w="1"/><text x="35.4506%" y="991.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="35.2006%" y="965" width="0.0379%" height="15" fill="rgb(225,197,26)" fg:x="930" fg:w="1"/><text x="35.4506%" y="975.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="35.2006%" y="949" width="0.0379%" height="15" fill="rgb(214,17,42)" fg:x="930" fg:w="1"/><text x="35.4506%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="35.2006%" y="933" width="0.0379%" height="15" fill="rgb(224,165,40)" fg:x="930" fg:w="1"/><text x="35.4506%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (4 samples, 0.15%)</title><rect x="35.1628%" y="1109" width="0.1514%" height="15" fill="rgb(246,100,4)" fg:x="929" fg:w="4"/><text x="35.4128%" y="1119.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.15%)</title><rect x="35.1628%" y="1093" width="0.1514%" height="15" fill="rgb(222,103,0)" fg:x="929" fg:w="4"/><text x="35.4128%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (4 samples, 0.15%)</title><rect x="35.1628%" y="1077" width="0.1514%" height="15" fill="rgb(227,189,26)" fg:x="929" fg:w="4"/><text x="35.4128%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;)&gt; (4 samples, 0.15%)</title><rect x="35.1628%" y="1061" width="0.1514%" height="15" fill="rgb(214,202,17)" fg:x="929" fg:w="4"/><text x="35.4128%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;&gt; (4 samples, 0.15%)</title><rect x="35.1628%" y="1045" width="0.1514%" height="15" fill="rgb(229,111,3)" fg:x="929" fg:w="4"/><text x="35.4128%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem_openapi::base::UrlQuery&gt; (2 samples, 0.08%)</title><rect x="35.2385%" y="1029" width="0.0757%" height="15" fill="rgb(229,172,15)" fg:x="931" fg:w="2"/><text x="35.4885%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (1 samples, 0.04%)</title><rect x="35.2763%" y="1013" width="0.0379%" height="15" fill="rgb(230,224,35)" fg:x="932" fg:w="1"/><text x="35.5263%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="35.2763%" y="997" width="0.0379%" height="15" fill="rgb(251,141,6)" fg:x="932" fg:w="1"/><text x="35.5263%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::string::String,alloc::string::String)]&gt; (1 samples, 0.04%)</title><rect x="35.2763%" y="981" width="0.0379%" height="15" fill="rgb(225,208,6)" fg:x="932" fg:w="1"/><text x="35.5263%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (1 samples, 0.04%)</title><rect x="35.2763%" y="965" width="0.0379%" height="15" fill="rgb(246,181,16)" fg:x="932" fg:w="1"/><text x="35.5263%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="35.2763%" y="949" width="0.0379%" height="15" fill="rgb(227,129,36)" fg:x="932" fg:w="1"/><text x="35.5263%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="35.2763%" y="933" width="0.0379%" height="15" fill="rgb(248,117,24)" fg:x="932" fg:w="1"/><text x="35.5263%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="35.2763%" y="917" width="0.0379%" height="15" fill="rgb(214,185,35)" fg:x="932" fg:w="1"/><text x="35.5263%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="35.2763%" y="901" width="0.0379%" height="15" fill="rgb(236,150,34)" fg:x="932" fg:w="1"/><text x="35.5263%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="35.2763%" y="885" width="0.0379%" height="15" fill="rgb(243,228,27)" fg:x="932" fg:w="1"/><text x="35.5263%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="35.2763%" y="869" width="0.0379%" height="15" fill="rgb(245,77,44)" fg:x="932" fg:w="1"/><text x="35.5263%" y="879.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="35.2763%" y="853" width="0.0379%" height="15" fill="rgb(235,214,42)" fg:x="932" fg:w="1"/><text x="35.5263%" y="863.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="35.2763%" y="837" width="0.0379%" height="15" fill="rgb(221,74,3)" fg:x="932" fg:w="1"/><text x="35.5263%" y="847.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="35.2763%" y="821" width="0.0379%" height="15" fill="rgb(206,121,29)" fg:x="932" fg:w="1"/><text x="35.5263%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="35.2763%" y="805" width="0.0379%" height="15" fill="rgb(249,131,53)" fg:x="932" fg:w="1"/><text x="35.5263%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (5 samples, 0.19%)</title><rect x="35.1628%" y="1237" width="0.1893%" height="15" fill="rgb(236,170,29)" fg:x="929" fg:w="5"/><text x="35.4128%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="35.1628%" y="1221" width="0.1893%" height="15" fill="rgb(247,96,15)" fg:x="929" fg:w="5"/><text x="35.4128%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="35.1628%" y="1205" width="0.1893%" height="15" fill="rgb(211,210,7)" fg:x="929" fg:w="5"/><text x="35.4128%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="35.1628%" y="1189" width="0.1893%" height="15" fill="rgb(240,88,50)" fg:x="929" fg:w="5"/><text x="35.4128%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="35.1628%" y="1173" width="0.1893%" height="15" fill="rgb(209,229,26)" fg:x="929" fg:w="5"/><text x="35.4128%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;)&gt;&gt; (5 samples, 0.19%)</title><rect x="35.1628%" y="1157" width="0.1893%" height="15" fill="rgb(210,68,23)" fg:x="929" fg:w="5"/><text x="35.4128%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.19%)</title><rect x="35.1628%" y="1141" width="0.1893%" height="15" fill="rgb(229,180,13)" fg:x="929" fg:w="5"/><text x="35.4128%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (5 samples, 0.19%)</title><rect x="35.1628%" y="1125" width="0.1893%" height="15" fill="rgb(236,53,44)" fg:x="929" fg:w="5"/><text x="35.4128%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.04%)</title><rect x="35.3142%" y="1109" width="0.0379%" height="15" fill="rgb(244,214,29)" fg:x="933" fg:w="1"/><text x="35.5642%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="35.3142%" y="1093" width="0.0379%" height="15" fill="rgb(220,75,29)" fg:x="933" fg:w="1"/><text x="35.5642%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="35.3142%" y="1077" width="0.0379%" height="15" fill="rgb(214,183,37)" fg:x="933" fg:w="1"/><text x="35.5642%" y="1087.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="35.3142%" y="1061" width="0.0379%" height="15" fill="rgb(239,117,29)" fg:x="933" fg:w="1"/><text x="35.5642%" y="1071.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="35.3142%" y="1045" width="0.0379%" height="15" fill="rgb(237,171,35)" fg:x="933" fg:w="1"/><text x="35.5642%" y="1055.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="35.3142%" y="1029" width="0.0379%" height="15" fill="rgb(229,178,53)" fg:x="933" fg:w="1"/><text x="35.5642%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[http::header::map::Pos]&gt;&gt; (1 samples, 0.04%)</title><rect x="35.3520%" y="1221" width="0.0379%" height="15" fill="rgb(210,102,19)" fg:x="934" fg:w="1"/><text x="35.6020%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="35.3520%" y="1205" width="0.0379%" height="15" fill="rgb(235,127,22)" fg:x="934" fg:w="1"/><text x="35.6020%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="35.3520%" y="1189" width="0.0379%" height="15" fill="rgb(244,31,31)" fg:x="934" fg:w="1"/><text x="35.6020%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="35.3520%" y="1173" width="0.0379%" height="15" fill="rgb(231,43,21)" fg:x="934" fg:w="1"/><text x="35.6020%" y="1183.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="35.3520%" y="1157" width="0.0379%" height="15" fill="rgb(217,131,35)" fg:x="934" fg:w="1"/><text x="35.6020%" y="1167.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="35.3520%" y="1141" width="0.0379%" height="15" fill="rgb(221,149,4)" fg:x="934" fg:w="1"/><text x="35.6020%" y="1151.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="35.3520%" y="1125" width="0.0379%" height="15" fill="rgb(232,170,28)" fg:x="934" fg:w="1"/><text x="35.6020%" y="1135.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="35.3520%" y="1109" width="0.0379%" height="15" fill="rgb(238,56,10)" fg:x="934" fg:w="1"/><text x="35.6020%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (3 samples, 0.11%)</title><rect x="35.3520%" y="1237" width="0.1136%" height="15" fill="rgb(235,196,14)" fg:x="934" fg:w="3"/><text x="35.6020%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="35.3899%" y="1221" width="0.0757%" height="15" fill="rgb(216,45,48)" fg:x="935" fg:w="2"/><text x="35.6399%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="35.3899%" y="1205" width="0.0757%" height="15" fill="rgb(238,213,17)" fg:x="935" fg:w="2"/><text x="35.6399%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="35.3899%" y="1189" width="0.0757%" height="15" fill="rgb(212,13,2)" fg:x="935" fg:w="2"/><text x="35.6399%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="35.3899%" y="1173" width="0.0757%" height="15" fill="rgb(240,114,20)" fg:x="935" fg:w="2"/><text x="35.6399%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="35.3899%" y="1157" width="0.0757%" height="15" fill="rgb(228,41,40)" fg:x="935" fg:w="2"/><text x="35.6399%" y="1167.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.08%)</title><rect x="35.3899%" y="1141" width="0.0757%" height="15" fill="rgb(244,132,35)" fg:x="935" fg:w="2"/><text x="35.6399%" y="1151.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.08%)</title><rect x="35.3899%" y="1125" width="0.0757%" height="15" fill="rgb(253,189,4)" fg:x="935" fg:w="2"/><text x="35.6399%" y="1135.50"></text></g><g><title>cfree (2 samples, 0.08%)</title><rect x="35.3899%" y="1109" width="0.0757%" height="15" fill="rgb(224,37,19)" fg:x="935" fg:w="2"/><text x="35.6399%" y="1119.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="35.3899%" y="1093" width="0.0757%" height="15" fill="rgb(235,223,18)" fg:x="935" fg:w="2"/><text x="35.6399%" y="1103.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="35.3899%" y="1077" width="0.0757%" height="15" fill="rgb(235,163,25)" fg:x="935" fg:w="2"/><text x="35.6399%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::request::Request&gt; (9 samples, 0.34%)</title><rect x="35.1628%" y="1253" width="0.3407%" height="15" fill="rgb(217,145,28)" fg:x="929" fg:w="9"/><text x="35.4128%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::request::RequestState&gt; (1 samples, 0.04%)</title><rect x="35.4656%" y="1237" width="0.0379%" height="15" fill="rgb(223,223,32)" fg:x="937" fg:w="1"/><text x="35.7156%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.04%)</title><rect x="35.4656%" y="1221" width="0.0379%" height="15" fill="rgb(227,189,39)" fg:x="937" fg:w="1"/><text x="35.7156%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::path::PathAndQuery&gt; (1 samples, 0.04%)</title><rect x="35.4656%" y="1205" width="0.0379%" height="15" fill="rgb(248,10,22)" fg:x="937" fg:w="1"/><text x="35.7156%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (1 samples, 0.04%)</title><rect x="35.4656%" y="1189" width="0.0379%" height="15" fill="rgb(248,46,39)" fg:x="937" fg:w="1"/><text x="35.7156%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.04%)</title><rect x="35.4656%" y="1173" width="0.0379%" height="15" fill="rgb(248,113,48)" fg:x="937" fg:w="1"/><text x="35.7156%" y="1183.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="35.4656%" y="1157" width="0.0379%" height="15" fill="rgb(245,16,25)" fg:x="937" fg:w="1"/><text x="35.7156%" y="1167.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="35.4656%" y="1141" width="0.0379%" height="15" fill="rgb(249,152,16)" fg:x="937" fg:w="1"/><text x="35.7156%" y="1151.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="35.4656%" y="1125" width="0.0379%" height="15" fill="rgb(250,16,1)" fg:x="937" fg:w="1"/><text x="35.7156%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::web::RequestBody&gt; (1 samples, 0.04%)</title><rect x="35.5034%" y="1253" width="0.0379%" height="15" fill="rgb(249,138,3)" fg:x="938" fg:w="1"/><text x="35.7534%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;poem::body::Body&gt;&gt; (1 samples, 0.04%)</title><rect x="35.5034%" y="1237" width="0.0379%" height="15" fill="rgb(227,71,41)" fg:x="938" fg:w="1"/><text x="35.7534%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::body::Body&gt; (1 samples, 0.04%)</title><rect x="35.5034%" y="1221" width="0.0379%" height="15" fill="rgb(209,184,23)" fg:x="938" fg:w="1"/><text x="35.7534%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::box_body::BoxBody&lt;bytes::bytes::Bytes,std::io::error::Error&gt;&gt; (1 samples, 0.04%)</title><rect x="35.5034%" y="1205" width="0.0379%" height="15" fill="rgb(223,215,31)" fg:x="938" fg:w="1"/><text x="35.7534%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn http_body::Body+Data = bytes::bytes::Bytes+Error = std::io::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="35.5034%" y="1189" width="0.0379%" height="15" fill="rgb(210,146,28)" fg:x="938" fg:w="1"/><text x="35.7534%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http_body::Body+Data = bytes::bytes::Bytes+Error = std::io::error::Error+core::marker::Sync+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="35.5034%" y="1173" width="0.0379%" height="15" fill="rgb(209,183,41)" fg:x="938" fg:w="1"/><text x="35.7534%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::map_err::MapErr&lt;hyper::body::incoming::Incoming,std::io::error::Error::other&lt;hyper::error::Error&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="35.5034%" y="1157" width="0.0379%" height="15" fill="rgb(209,224,45)" fg:x="938" fg:w="1"/><text x="35.7534%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="35.6548%" y="1029" width="0.0379%" height="15" fill="rgb(224,209,51)" fg:x="942" fg:w="1"/><text x="35.9048%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (7 samples, 0.26%)</title><rect x="36.2983%" y="949" width="0.2650%" height="15" fill="rgb(223,17,39)" fg:x="959" fg:w="7"/><text x="36.5483%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (7 samples, 0.26%)</title><rect x="36.2983%" y="933" width="0.2650%" height="15" fill="rgb(234,204,37)" fg:x="959" fg:w="7"/><text x="36.5483%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.26%)</title><rect x="36.2983%" y="917" width="0.2650%" height="15" fill="rgb(236,120,5)" fg:x="959" fg:w="7"/><text x="36.5483%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.26%)</title><rect x="36.2983%" y="901" width="0.2650%" height="15" fill="rgb(248,97,27)" fg:x="959" fg:w="7"/><text x="36.5483%" y="911.50"></text></g><g><title>__rdl_dealloc (7 samples, 0.26%)</title><rect x="36.2983%" y="885" width="0.2650%" height="15" fill="rgb(240,66,17)" fg:x="959" fg:w="7"/><text x="36.5483%" y="895.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (7 samples, 0.26%)</title><rect x="36.2983%" y="869" width="0.2650%" height="15" fill="rgb(210,79,3)" fg:x="959" fg:w="7"/><text x="36.5483%" y="879.50"></text></g><g><title>cfree (7 samples, 0.26%)</title><rect x="36.2983%" y="853" width="0.2650%" height="15" fill="rgb(214,176,27)" fg:x="959" fg:w="7"/><text x="36.5483%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="36.5254%" y="837" width="0.0379%" height="15" fill="rgb(235,185,3)" fg:x="965" fg:w="1"/><text x="36.7754%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (8 samples, 0.30%)</title><rect x="36.2983%" y="965" width="0.3028%" height="15" fill="rgb(227,24,12)" fg:x="959" fg:w="8"/><text x="36.5483%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (1 samples, 0.04%)</title><rect x="36.5632%" y="949" width="0.0379%" height="15" fill="rgb(252,169,48)" fg:x="966" fg:w="1"/><text x="36.8132%" y="959.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="36.5632%" y="933" width="0.0379%" height="15" fill="rgb(212,65,1)" fg:x="966" fg:w="1"/><text x="36.8132%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (1 samples, 0.04%)</title><rect x="36.6389%" y="885" width="0.0379%" height="15" fill="rgb(242,39,24)" fg:x="968" fg:w="1"/><text x="36.8889%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (4 samples, 0.15%)</title><rect x="36.6389%" y="949" width="0.1514%" height="15" fill="rgb(249,32,23)" fg:x="968" fg:w="4"/><text x="36.8889%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (4 samples, 0.15%)</title><rect x="36.6389%" y="933" width="0.1514%" height="15" fill="rgb(251,195,23)" fg:x="968" fg:w="4"/><text x="36.8889%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (4 samples, 0.15%)</title><rect x="36.6389%" y="917" width="0.1514%" height="15" fill="rgb(236,174,8)" fg:x="968" fg:w="4"/><text x="36.8889%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (4 samples, 0.15%)</title><rect x="36.6389%" y="901" width="0.1514%" height="15" fill="rgb(220,197,8)" fg:x="968" fg:w="4"/><text x="36.8889%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (3 samples, 0.11%)</title><rect x="36.6768%" y="885" width="0.1136%" height="15" fill="rgb(240,108,37)" fg:x="969" fg:w="3"/><text x="36.9268%" y="895.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (32 samples, 1.21%)</title><rect x="35.7684%" y="981" width="1.2112%" height="15" fill="rgb(232,176,24)" fg:x="945" fg:w="32"/><text x="36.0184%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (10 samples, 0.38%)</title><rect x="36.6011%" y="965" width="0.3785%" height="15" fill="rgb(243,35,29)" fg:x="967" fg:w="10"/><text x="36.8511%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (5 samples, 0.19%)</title><rect x="36.7903%" y="949" width="0.1893%" height="15" fill="rgb(210,37,18)" fg:x="972" fg:w="5"/><text x="37.0403%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (1 samples, 0.04%)</title><rect x="36.9417%" y="933" width="0.0379%" height="15" fill="rgb(224,184,40)" fg:x="976" fg:w="1"/><text x="37.1917%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1 samples, 0.04%)</title><rect x="36.9417%" y="917" width="0.0379%" height="15" fill="rgb(236,39,29)" fg:x="976" fg:w="1"/><text x="37.1917%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (80 samples, 3.03%)</title><rect x="37.0931%" y="885" width="3.0280%" height="15" fill="rgb(232,48,39)" fg:x="980" fg:w="80"/><text x="37.3431%" y="895.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (80 samples, 3.03%)</title><rect x="37.0931%" y="869" width="3.0280%" height="15" fill="rgb(236,34,42)" fg:x="980" fg:w="80"/><text x="37.3431%" y="879.50">all..</text></g><g><title>__rdl_dealloc (80 samples, 3.03%)</title><rect x="37.0931%" y="853" width="3.0280%" height="15" fill="rgb(243,106,37)" fg:x="980" fg:w="80"/><text x="37.3431%" y="863.50">__r..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (80 samples, 3.03%)</title><rect x="37.0931%" y="837" width="3.0280%" height="15" fill="rgb(218,96,6)" fg:x="980" fg:w="80"/><text x="37.3431%" y="847.50">std..</text></g><g><title>cfree (77 samples, 2.91%)</title><rect x="37.2067%" y="821" width="2.9145%" height="15" fill="rgb(235,130,12)" fg:x="983" fg:w="77"/><text x="37.4567%" y="831.50">cf..</text></g><g><title>[libc.so.6] (57 samples, 2.16%)</title><rect x="37.9637%" y="805" width="2.1575%" height="15" fill="rgb(231,95,0)" fg:x="1003" fg:w="57"/><text x="38.2137%" y="815.50">[..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (88 samples, 3.33%)</title><rect x="37.0931%" y="949" width="3.3308%" height="15" fill="rgb(228,12,23)" fg:x="980" fg:w="88"/><text x="37.3431%" y="959.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (88 samples, 3.33%)</title><rect x="37.0931%" y="933" width="3.3308%" height="15" fill="rgb(216,12,1)" fg:x="980" fg:w="88"/><text x="37.3431%" y="943.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (88 samples, 3.33%)</title><rect x="37.0931%" y="917" width="3.3308%" height="15" fill="rgb(219,59,3)" fg:x="980" fg:w="88"/><text x="37.3431%" y="927.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 3.33%)</title><rect x="37.0931%" y="901" width="3.3308%" height="15" fill="rgb(215,208,46)" fg:x="980" fg:w="88"/><text x="37.3431%" y="911.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.30%)</title><rect x="40.1211%" y="885" width="0.3028%" height="15" fill="rgb(254,224,29)" fg:x="1060" fg:w="8"/><text x="40.3711%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (99 samples, 3.75%)</title><rect x="37.0931%" y="965" width="3.7472%" height="15" fill="rgb(232,14,29)" fg:x="980" fg:w="99"/><text x="37.3431%" y="975.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.42%)</title><rect x="40.4239%" y="949" width="0.4164%" height="15" fill="rgb(208,45,52)" fg:x="1068" fg:w="11"/><text x="40.6739%" y="959.50"></text></g><g><title>cfree (7 samples, 0.26%)</title><rect x="40.5753%" y="933" width="0.2650%" height="15" fill="rgb(234,191,28)" fg:x="1072" fg:w="7"/><text x="40.8253%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="40.8024%" y="917" width="0.0379%" height="15" fill="rgb(244,67,43)" fg:x="1078" fg:w="1"/><text x="41.0524%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::web::json::Json&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt;&gt; (143 samples, 5.41%)</title><rect x="35.5413%" y="1189" width="5.4126%" height="15" fill="rgb(236,189,24)" fg:x="939" fg:w="143"/><text x="35.7913%" y="1199.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (143 samples, 5.41%)</title><rect x="35.5413%" y="1173" width="5.4126%" height="15" fill="rgb(239,214,33)" fg:x="939" fg:w="143"/><text x="35.7913%" y="1183.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (143 samples, 5.41%)</title><rect x="35.5413%" y="1157" width="5.4126%" height="15" fill="rgb(226,176,41)" fg:x="939" fg:w="143"/><text x="35.7913%" y="1167.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (143 samples, 5.41%)</title><rect x="35.5413%" y="1141" width="5.4126%" height="15" fill="rgb(248,47,8)" fg:x="939" fg:w="143"/><text x="35.7913%" y="1151.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (143 samples, 5.41%)</title><rect x="35.5413%" y="1125" width="5.4126%" height="15" fill="rgb(218,81,44)" fg:x="939" fg:w="143"/><text x="35.7913%" y="1135.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (143 samples, 5.41%)</title><rect x="35.5413%" y="1109" width="5.4126%" height="15" fill="rgb(213,98,6)" fg:x="939" fg:w="143"/><text x="35.7913%" y="1119.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (143 samples, 5.41%)</title><rect x="35.5413%" y="1093" width="5.4126%" height="15" fill="rgb(222,85,22)" fg:x="939" fg:w="143"/><text x="35.7913%" y="1103.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (140 samples, 5.30%)</title><rect x="35.6548%" y="1077" width="5.2990%" height="15" fill="rgb(239,46,39)" fg:x="942" fg:w="140"/><text x="35.9048%" y="1087.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (140 samples, 5.30%)</title><rect x="35.6548%" y="1061" width="5.2990%" height="15" fill="rgb(237,12,29)" fg:x="942" fg:w="140"/><text x="35.9048%" y="1071.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (140 samples, 5.30%)</title><rect x="35.6548%" y="1045" width="5.2990%" height="15" fill="rgb(214,77,8)" fg:x="942" fg:w="140"/><text x="35.9048%" y="1055.50">&lt;alloc..</text></g><g><title>core::mem::drop (139 samples, 5.26%)</title><rect x="35.6927%" y="1029" width="5.2612%" height="15" fill="rgb(217,168,37)" fg:x="943" fg:w="139"/><text x="35.9427%" y="1039.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (139 samples, 5.26%)</title><rect x="35.6927%" y="1013" width="5.2612%" height="15" fill="rgb(221,217,23)" fg:x="943" fg:w="139"/><text x="35.9427%" y="1023.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (139 samples, 5.26%)</title><rect x="35.6927%" y="997" width="5.2612%" height="15" fill="rgb(243,229,36)" fg:x="943" fg:w="139"/><text x="35.9427%" y="1007.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (105 samples, 3.97%)</title><rect x="36.9796%" y="981" width="3.9743%" height="15" fill="rgb(251,163,40)" fg:x="977" fg:w="105"/><text x="37.2296%" y="991.50">allo..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (3 samples, 0.11%)</title><rect x="40.8403%" y="965" width="0.1136%" height="15" fill="rgb(237,222,12)" fg:x="1079" fg:w="3"/><text x="41.0903%" y="975.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3 samples, 0.11%)</title><rect x="40.8403%" y="949" width="0.1136%" height="15" fill="rgb(248,132,6)" fg:x="1079" fg:w="3"/><text x="41.0903%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.11%)</title><rect x="40.8403%" y="933" width="0.1136%" height="15" fill="rgb(227,167,50)" fg:x="1079" fg:w="3"/><text x="41.0903%" y="943.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.08%)</title><rect x="40.9538%" y="1173" width="0.0757%" height="15" fill="rgb(242,84,37)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1183.50"></text></g><g><title>&lt;http::header::value::HeaderValue as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (2 samples, 0.08%)</title><rect x="40.9538%" y="1157" width="0.0757%" height="15" fill="rgb(212,4,50)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1167.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.08%)</title><rect x="40.9538%" y="1141" width="0.0757%" height="15" fill="rgb(230,228,32)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1151.50"></text></g><g><title>&lt;http::header::value::HeaderValue as core::str::traits::FromStr&gt;::from_str (2 samples, 0.08%)</title><rect x="40.9538%" y="1125" width="0.0757%" height="15" fill="rgb(248,217,23)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1135.50"></text></g><g><title>http::header::value::HeaderValue::from_str (2 samples, 0.08%)</title><rect x="40.9538%" y="1109" width="0.0757%" height="15" fill="rgb(238,197,32)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1119.50"></text></g><g><title>http::header::value::HeaderValue::try_from_generic (2 samples, 0.08%)</title><rect x="40.9538%" y="1093" width="0.0757%" height="15" fill="rgb(236,106,1)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1103.50"></text></g><g><title>http::header::value::HeaderValue::from_str::_{{closure}} (2 samples, 0.08%)</title><rect x="40.9538%" y="1077" width="0.0757%" height="15" fill="rgb(219,228,13)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1087.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (2 samples, 0.08%)</title><rect x="40.9538%" y="1061" width="0.0757%" height="15" fill="rgb(238,30,35)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.08%)</title><rect x="40.9538%" y="1045" width="0.0757%" height="15" fill="rgb(236,70,23)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.08%)</title><rect x="40.9538%" y="1029" width="0.0757%" height="15" fill="rgb(249,104,48)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.08%)</title><rect x="40.9538%" y="1013" width="0.0757%" height="15" fill="rgb(254,117,50)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.08%)</title><rect x="40.9538%" y="997" width="0.0757%" height="15" fill="rgb(223,152,4)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="40.9538%" y="981" width="0.0757%" height="15" fill="rgb(245,6,2)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="40.9538%" y="965" width="0.0757%" height="15" fill="rgb(249,150,24)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.08%)</title><rect x="40.9538%" y="949" width="0.0757%" height="15" fill="rgb(228,185,42)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="40.9538%" y="933" width="0.0757%" height="15" fill="rgb(226,39,33)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="40.9538%" y="917" width="0.0757%" height="15" fill="rgb(221,166,19)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="927.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="40.9538%" y="901" width="0.0757%" height="15" fill="rgb(209,109,2)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="911.50"></text></g><g><title>__rdl_alloc (2 samples, 0.08%)</title><rect x="40.9538%" y="885" width="0.0757%" height="15" fill="rgb(252,216,26)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="895.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.08%)</title><rect x="40.9538%" y="869" width="0.0757%" height="15" fill="rgb(227,173,36)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="879.50"></text></g><g><title>malloc (2 samples, 0.08%)</title><rect x="40.9538%" y="853" width="0.0757%" height="15" fill="rgb(209,90,7)" fg:x="1082" fg:w="2"/><text x="41.2038%" y="863.50"></text></g><g><title>poem::response::ResponseBuilder::header (3 samples, 0.11%)</title><rect x="40.9538%" y="1189" width="0.1136%" height="15" fill="rgb(250,194,11)" fg:x="1082" fg:w="3"/><text x="41.2038%" y="1199.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (1 samples, 0.04%)</title><rect x="41.0295%" y="1173" width="0.0379%" height="15" fill="rgb(220,72,50)" fg:x="1084" fg:w="1"/><text x="41.2795%" y="1183.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append (1 samples, 0.04%)</title><rect x="41.0295%" y="1157" width="0.0379%" height="15" fill="rgb(222,106,48)" fg:x="1084" fg:w="1"/><text x="41.2795%" y="1167.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append (1 samples, 0.04%)</title><rect x="41.0295%" y="1141" width="0.0379%" height="15" fill="rgb(216,220,45)" fg:x="1084" fg:w="1"/><text x="41.2795%" y="1151.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (1 samples, 0.04%)</title><rect x="41.0295%" y="1125" width="0.0379%" height="15" fill="rgb(234,112,18)" fg:x="1084" fg:w="1"/><text x="41.2795%" y="1135.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (1 samples, 0.04%)</title><rect x="41.0295%" y="1109" width="0.0379%" height="15" fill="rgb(206,179,9)" fg:x="1084" fg:w="1"/><text x="41.2795%" y="1119.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.04%)</title><rect x="41.0295%" y="1093" width="0.0379%" height="15" fill="rgb(215,115,40)" fg:x="1084" fg:w="1"/><text x="41.2795%" y="1103.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.04%)</title><rect x="41.0295%" y="1077" width="0.0379%" height="15" fill="rgb(222,69,34)" fg:x="1084" fg:w="1"/><text x="41.2795%" y="1087.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (4 samples, 0.15%)</title><rect x="41.2945%" y="869" width="0.1514%" height="15" fill="rgb(209,161,10)" fg:x="1091" fg:w="4"/><text x="41.5445%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (4 samples, 0.15%)</title><rect x="41.2945%" y="853" width="0.1514%" height="15" fill="rgb(217,6,38)" fg:x="1091" fg:w="4"/><text x="41.5445%" y="863.50"></text></g><g><title>&lt;serde_json::map::Iter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.23%)</title><rect x="41.2566%" y="965" width="0.2271%" height="15" fill="rgb(229,229,48)" fg:x="1090" fg:w="6"/><text x="41.5066%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.23%)</title><rect x="41.2566%" y="949" width="0.2271%" height="15" fill="rgb(225,21,28)" fg:x="1090" fg:w="6"/><text x="41.5066%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (6 samples, 0.23%)</title><rect x="41.2566%" y="933" width="0.2271%" height="15" fill="rgb(206,33,13)" fg:x="1090" fg:w="6"/><text x="41.5066%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (6 samples, 0.23%)</title><rect x="41.2566%" y="917" width="0.2271%" height="15" fill="rgb(242,178,17)" fg:x="1090" fg:w="6"/><text x="41.5066%" y="927.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.23%)</title><rect x="41.2566%" y="901" width="0.2271%" height="15" fill="rgb(220,162,5)" fg:x="1090" fg:w="6"/><text x="41.5066%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (6 samples, 0.23%)</title><rect x="41.2566%" y="885" width="0.2271%" height="15" fill="rgb(210,33,43)" fg:x="1090" fg:w="6"/><text x="41.5066%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (1 samples, 0.04%)</title><rect x="41.4459%" y="869" width="0.0379%" height="15" fill="rgb(216,116,54)" fg:x="1095" fg:w="1"/><text x="41.6959%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1 samples, 0.04%)</title><rect x="41.4459%" y="853" width="0.0379%" height="15" fill="rgb(249,92,24)" fg:x="1095" fg:w="1"/><text x="41.6959%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1 samples, 0.04%)</title><rect x="41.4459%" y="837" width="0.0379%" height="15" fill="rgb(231,189,14)" fg:x="1095" fg:w="1"/><text x="41.6959%" y="847.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (2 samples, 0.08%)</title><rect x="41.4837%" y="965" width="0.0757%" height="15" fill="rgb(230,8,41)" fg:x="1096" fg:w="2"/><text x="41.7337%" y="975.50"></text></g><g><title>serde_json::ser::Formatter::end_object (2 samples, 0.08%)</title><rect x="41.4837%" y="949" width="0.0757%" height="15" fill="rgb(249,7,27)" fg:x="1096" fg:w="2"/><text x="41.7337%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.08%)</title><rect x="41.4837%" y="933" width="0.0757%" height="15" fill="rgb(232,86,5)" fg:x="1096" fg:w="2"/><text x="41.7337%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.08%)</title><rect x="41.4837%" y="917" width="0.0757%" height="15" fill="rgb(224,175,18)" fg:x="1096" fg:w="2"/><text x="41.7337%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.08%)</title><rect x="41.4837%" y="901" width="0.0757%" height="15" fill="rgb(220,129,12)" fg:x="1096" fg:w="2"/><text x="41.7337%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.08%)</title><rect x="41.4837%" y="885" width="0.0757%" height="15" fill="rgb(210,19,36)" fg:x="1096" fg:w="2"/><text x="41.7337%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.08%)</title><rect x="41.4837%" y="869" width="0.0757%" height="15" fill="rgb(219,96,14)" fg:x="1096" fg:w="2"/><text x="41.7337%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="41.4837%" y="853" width="0.0757%" height="15" fill="rgb(249,106,1)" fg:x="1096" fg:w="2"/><text x="41.7337%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="41.4837%" y="837" width="0.0757%" height="15" fill="rgb(249,155,20)" fg:x="1096" fg:w="2"/><text x="41.7337%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.08%)</title><rect x="41.4837%" y="821" width="0.0757%" height="15" fill="rgb(244,168,9)" fg:x="1096" fg:w="2"/><text x="41.7337%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="42.4300%" y="773" width="0.0379%" height="15" fill="rgb(216,23,50)" fg:x="1121" fg:w="1"/><text x="42.6800%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="42.4300%" y="757" width="0.0379%" height="15" fill="rgb(224,219,20)" fg:x="1121" fg:w="1"/><text x="42.6800%" y="767.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (6 samples, 0.23%)</title><rect x="42.3921%" y="869" width="0.2271%" height="15" fill="rgb(222,156,15)" fg:x="1120" fg:w="6"/><text x="42.6421%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.23%)</title><rect x="42.3921%" y="853" width="0.2271%" height="15" fill="rgb(231,97,17)" fg:x="1120" fg:w="6"/><text x="42.6421%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.23%)</title><rect x="42.3921%" y="837" width="0.2271%" height="15" fill="rgb(218,70,48)" fg:x="1120" fg:w="6"/><text x="42.6421%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.23%)</title><rect x="42.3921%" y="821" width="0.2271%" height="15" fill="rgb(212,196,52)" fg:x="1120" fg:w="6"/><text x="42.6421%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.23%)</title><rect x="42.3921%" y="805" width="0.2271%" height="15" fill="rgb(243,203,18)" fg:x="1120" fg:w="6"/><text x="42.6421%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.23%)</title><rect x="42.3921%" y="789" width="0.2271%" height="15" fill="rgb(252,125,41)" fg:x="1120" fg:w="6"/><text x="42.6421%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.15%)</title><rect x="42.4678%" y="773" width="0.1514%" height="15" fill="rgb(223,180,33)" fg:x="1122" fg:w="4"/><text x="42.7178%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="42.5435%" y="757" width="0.0757%" height="15" fill="rgb(254,159,46)" fg:x="1124" fg:w="2"/><text x="42.7935%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.08%)</title><rect x="42.5435%" y="741" width="0.0757%" height="15" fill="rgb(254,38,10)" fg:x="1124" fg:w="2"/><text x="42.7935%" y="751.50"></text></g><g><title>serde_json::ser::Formatter::end_string (8 samples, 0.30%)</title><rect x="42.6192%" y="869" width="0.3028%" height="15" fill="rgb(208,217,32)" fg:x="1126" fg:w="8"/><text x="42.8692%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.30%)</title><rect x="42.6192%" y="853" width="0.3028%" height="15" fill="rgb(221,120,13)" fg:x="1126" fg:w="8"/><text x="42.8692%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.30%)</title><rect x="42.6192%" y="837" width="0.3028%" height="15" fill="rgb(246,54,52)" fg:x="1126" fg:w="8"/><text x="42.8692%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.30%)</title><rect x="42.6192%" y="821" width="0.3028%" height="15" fill="rgb(242,34,25)" fg:x="1126" fg:w="8"/><text x="42.8692%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.30%)</title><rect x="42.6192%" y="805" width="0.3028%" height="15" fill="rgb(247,209,9)" fg:x="1126" fg:w="8"/><text x="42.8692%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.30%)</title><rect x="42.6192%" y="789" width="0.3028%" height="15" fill="rgb(228,71,26)" fg:x="1126" fg:w="8"/><text x="42.8692%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="42.8463%" y="773" width="0.0757%" height="15" fill="rgb(222,145,49)" fg:x="1132" fg:w="2"/><text x="43.0963%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="42.8463%" y="757" width="0.0757%" height="15" fill="rgb(218,121,17)" fg:x="1132" fg:w="2"/><text x="43.0963%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.08%)</title><rect x="42.8463%" y="741" width="0.0757%" height="15" fill="rgb(244,50,7)" fg:x="1132" fg:w="2"/><text x="43.0963%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.34%)</title><rect x="44.3603%" y="853" width="0.3407%" height="15" fill="rgb(246,229,37)" fg:x="1172" fg:w="9"/><text x="44.6103%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.34%)</title><rect x="44.3603%" y="837" width="0.3407%" height="15" fill="rgb(225,18,5)" fg:x="1172" fg:w="9"/><text x="44.6103%" y="847.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.15%)</title><rect x="44.5496%" y="821" width="0.1514%" height="15" fill="rgb(213,204,8)" fg:x="1177" fg:w="4"/><text x="44.7996%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="44.8524%" y="757" width="0.0379%" height="15" fill="rgb(238,103,6)" fg:x="1185" fg:w="1"/><text x="45.1024%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="44.8524%" y="741" width="0.0379%" height="15" fill="rgb(222,25,35)" fg:x="1185" fg:w="1"/><text x="45.1024%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.04%)</title><rect x="44.8524%" y="725" width="0.0379%" height="15" fill="rgb(213,203,35)" fg:x="1185" fg:w="1"/><text x="45.1024%" y="735.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (100 samples, 3.79%)</title><rect x="41.7865%" y="933" width="3.7850%" height="15" fill="rgb(221,79,53)" fg:x="1104" fg:w="100"/><text x="42.0365%" y="943.50">serd..</text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (100 samples, 3.79%)</title><rect x="41.7865%" y="917" width="3.7850%" height="15" fill="rgb(243,200,35)" fg:x="1104" fg:w="100"/><text x="42.0365%" y="927.50">&lt;ser..</text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (100 samples, 3.79%)</title><rect x="41.7865%" y="901" width="3.7850%" height="15" fill="rgb(248,60,25)" fg:x="1104" fg:w="100"/><text x="42.0365%" y="911.50">&lt;&amp;mu..</text></g><g><title>serde_json::ser::format_escaped_str (85 samples, 3.22%)</title><rect x="42.3543%" y="885" width="3.2173%" height="15" fill="rgb(227,53,46)" fg:x="1119" fg:w="85"/><text x="42.6043%" y="895.50">ser..</text></g><g><title>serde_json::ser::format_escaped_str_contents (70 samples, 2.65%)</title><rect x="42.9220%" y="869" width="2.6495%" height="15" fill="rgb(216,120,32)" fg:x="1134" fg:w="70"/><text x="43.1720%" y="879.50">se..</text></g><g><title>serde_json::ser::Formatter::write_string_fragment (23 samples, 0.87%)</title><rect x="44.7010%" y="853" width="0.8706%" height="15" fill="rgb(220,134,1)" fg:x="1181" fg:w="23"/><text x="44.9510%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (23 samples, 0.87%)</title><rect x="44.7010%" y="837" width="0.8706%" height="15" fill="rgb(237,168,5)" fg:x="1181" fg:w="23"/><text x="44.9510%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (23 samples, 0.87%)</title><rect x="44.7010%" y="821" width="0.8706%" height="15" fill="rgb(231,100,33)" fg:x="1181" fg:w="23"/><text x="44.9510%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.87%)</title><rect x="44.7010%" y="805" width="0.8706%" height="15" fill="rgb(236,177,47)" fg:x="1181" fg:w="23"/><text x="44.9510%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.87%)</title><rect x="44.7010%" y="789" width="0.8706%" height="15" fill="rgb(235,7,49)" fg:x="1181" fg:w="23"/><text x="44.9510%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.87%)</title><rect x="44.7010%" y="773" width="0.8706%" height="15" fill="rgb(232,119,22)" fg:x="1181" fg:w="23"/><text x="44.9510%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.68%)</title><rect x="44.8902%" y="757" width="0.6813%" height="15" fill="rgb(254,73,53)" fg:x="1186" fg:w="18"/><text x="45.1402%" y="767.50"></text></g><g><title>[libc.so.6] (11 samples, 0.42%)</title><rect x="45.1552%" y="741" width="0.4164%" height="15" fill="rgb(251,35,20)" fg:x="1193" fg:w="11"/><text x="45.4052%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.15%)</title><rect x="45.7608%" y="837" width="0.1514%" height="15" fill="rgb(241,119,20)" fg:x="1209" fg:w="4"/><text x="46.0108%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.15%)</title><rect x="45.7608%" y="821" width="0.1514%" height="15" fill="rgb(207,102,14)" fg:x="1209" fg:w="4"/><text x="46.0108%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.15%)</title><rect x="45.7608%" y="805" width="0.1514%" height="15" fill="rgb(248,201,50)" fg:x="1209" fg:w="4"/><text x="46.0108%" y="815.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (112 samples, 4.24%)</title><rect x="41.7487%" y="949" width="4.2392%" height="15" fill="rgb(222,185,44)" fg:x="1103" fg:w="112"/><text x="41.9987%" y="959.50">&lt;serd..</text></g><g><title>serde_json::ser::Formatter::begin_object_key (11 samples, 0.42%)</title><rect x="45.5715%" y="933" width="0.4164%" height="15" fill="rgb(218,107,18)" fg:x="1204" fg:w="11"/><text x="45.8215%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (11 samples, 0.42%)</title><rect x="45.5715%" y="917" width="0.4164%" height="15" fill="rgb(237,177,39)" fg:x="1204" fg:w="11"/><text x="45.8215%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.42%)</title><rect x="45.5715%" y="901" width="0.4164%" height="15" fill="rgb(246,69,6)" fg:x="1204" fg:w="11"/><text x="45.8215%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.42%)</title><rect x="45.5715%" y="885" width="0.4164%" height="15" fill="rgb(234,208,37)" fg:x="1204" fg:w="11"/><text x="45.8215%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.42%)</title><rect x="45.5715%" y="869" width="0.4164%" height="15" fill="rgb(225,4,6)" fg:x="1204" fg:w="11"/><text x="45.8215%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.42%)</title><rect x="45.5715%" y="853" width="0.4164%" height="15" fill="rgb(233,45,0)" fg:x="1204" fg:w="11"/><text x="45.8215%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.08%)</title><rect x="45.9122%" y="837" width="0.0757%" height="15" fill="rgb(226,136,5)" fg:x="1213" fg:w="2"/><text x="46.1622%" y="847.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (2 samples, 0.08%)</title><rect x="46.4042%" y="901" width="0.0757%" height="15" fill="rgb(211,91,47)" fg:x="1226" fg:w="2"/><text x="46.6542%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.08%)</title><rect x="46.4042%" y="885" width="0.0757%" height="15" fill="rgb(242,88,51)" fg:x="1226" fg:w="2"/><text x="46.6542%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.08%)</title><rect x="46.4042%" y="869" width="0.0757%" height="15" fill="rgb(230,91,28)" fg:x="1226" fg:w="2"/><text x="46.6542%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.08%)</title><rect x="46.4042%" y="853" width="0.0757%" height="15" fill="rgb(254,186,29)" fg:x="1226" fg:w="2"/><text x="46.6542%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.08%)</title><rect x="46.4042%" y="837" width="0.0757%" height="15" fill="rgb(238,6,4)" fg:x="1226" fg:w="2"/><text x="46.6542%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.08%)</title><rect x="46.4042%" y="821" width="0.0757%" height="15" fill="rgb(221,151,16)" fg:x="1226" fg:w="2"/><text x="46.6542%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="46.4421%" y="805" width="0.0379%" height="15" fill="rgb(251,143,52)" fg:x="1227" fg:w="1"/><text x="46.6921%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="46.4421%" y="789" width="0.0379%" height="15" fill="rgb(206,90,15)" fg:x="1227" fg:w="1"/><text x="46.6921%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.04%)</title><rect x="46.4421%" y="773" width="0.0379%" height="15" fill="rgb(218,35,8)" fg:x="1227" fg:w="1"/><text x="46.6921%" y="783.50"></text></g><g><title>serde_json::ser::Formatter::end_string (1 samples, 0.04%)</title><rect x="46.4799%" y="901" width="0.0379%" height="15" fill="rgb(239,215,6)" fg:x="1228" fg:w="1"/><text x="46.7299%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.04%)</title><rect x="46.4799%" y="885" width="0.0379%" height="15" fill="rgb(245,116,39)" fg:x="1228" fg:w="1"/><text x="46.7299%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.04%)</title><rect x="46.4799%" y="869" width="0.0379%" height="15" fill="rgb(242,65,28)" fg:x="1228" fg:w="1"/><text x="46.7299%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="46.4799%" y="853" width="0.0379%" height="15" fill="rgb(252,132,53)" fg:x="1228" fg:w="1"/><text x="46.7299%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="46.4799%" y="837" width="0.0379%" height="15" fill="rgb(224,159,50)" fg:x="1228" fg:w="1"/><text x="46.7299%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="46.4799%" y="821" width="0.0379%" height="15" fill="rgb(224,93,4)" fg:x="1228" fg:w="1"/><text x="46.7299%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="46.7827%" y="885" width="0.0379%" height="15" fill="rgb(208,81,34)" fg:x="1236" fg:w="1"/><text x="47.0327%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="46.7827%" y="869" width="0.0379%" height="15" fill="rgb(233,92,54)" fg:x="1236" fg:w="1"/><text x="47.0327%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.26%)</title><rect x="46.8206%" y="789" width="0.2650%" height="15" fill="rgb(237,21,14)" fg:x="1237" fg:w="7"/><text x="47.0706%" y="799.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="47.0098%" y="773" width="0.0757%" height="15" fill="rgb(249,128,51)" fg:x="1242" fg:w="2"/><text x="47.2598%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (22 samples, 0.83%)</title><rect x="46.2907%" y="933" width="0.8327%" height="15" fill="rgb(223,129,24)" fg:x="1223" fg:w="22"/><text x="46.5407%" y="943.50"></text></g><g><title>serde_json::ser::format_escaped_str (20 samples, 0.76%)</title><rect x="46.3664%" y="917" width="0.7570%" height="15" fill="rgb(231,168,25)" fg:x="1225" fg:w="20"/><text x="46.6164%" y="927.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (16 samples, 0.61%)</title><rect x="46.5178%" y="901" width="0.6056%" height="15" fill="rgb(224,39,20)" fg:x="1229" fg:w="16"/><text x="46.7678%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (8 samples, 0.30%)</title><rect x="46.8206%" y="885" width="0.3028%" height="15" fill="rgb(225,152,53)" fg:x="1237" fg:w="8"/><text x="47.0706%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.30%)</title><rect x="46.8206%" y="869" width="0.3028%" height="15" fill="rgb(252,17,24)" fg:x="1237" fg:w="8"/><text x="47.0706%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.30%)</title><rect x="46.8206%" y="853" width="0.3028%" height="15" fill="rgb(250,114,30)" fg:x="1237" fg:w="8"/><text x="47.0706%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.30%)</title><rect x="46.8206%" y="837" width="0.3028%" height="15" fill="rgb(229,5,4)" fg:x="1237" fg:w="8"/><text x="47.0706%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.30%)</title><rect x="46.8206%" y="821" width="0.3028%" height="15" fill="rgb(225,176,49)" fg:x="1237" fg:w="8"/><text x="47.0706%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.30%)</title><rect x="46.8206%" y="805" width="0.3028%" height="15" fill="rgb(224,221,49)" fg:x="1237" fg:w="8"/><text x="47.0706%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="47.0855%" y="789" width="0.0379%" height="15" fill="rgb(253,169,27)" fg:x="1244" fg:w="1"/><text x="47.3355%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.11%)</title><rect x="47.3126%" y="837" width="0.1136%" height="15" fill="rgb(211,206,16)" fg:x="1250" fg:w="3"/><text x="47.5626%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="47.3505%" y="821" width="0.0757%" height="15" fill="rgb(244,87,35)" fg:x="1251" fg:w="2"/><text x="47.6005%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.08%)</title><rect x="47.3505%" y="805" width="0.0757%" height="15" fill="rgb(246,28,10)" fg:x="1251" fg:w="2"/><text x="47.6005%" y="815.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (9 samples, 0.34%)</title><rect x="47.1234%" y="933" width="0.3407%" height="15" fill="rgb(229,12,44)" fg:x="1245" fg:w="9"/><text x="47.3734%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (9 samples, 0.34%)</title><rect x="47.1234%" y="917" width="0.3407%" height="15" fill="rgb(210,145,37)" fg:x="1245" fg:w="9"/><text x="47.3734%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.34%)</title><rect x="47.1234%" y="901" width="0.3407%" height="15" fill="rgb(227,112,52)" fg:x="1245" fg:w="9"/><text x="47.3734%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.34%)</title><rect x="47.1234%" y="885" width="0.3407%" height="15" fill="rgb(238,155,34)" fg:x="1245" fg:w="9"/><text x="47.3734%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.34%)</title><rect x="47.1234%" y="869" width="0.3407%" height="15" fill="rgb(239,226,36)" fg:x="1245" fg:w="9"/><text x="47.3734%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.34%)</title><rect x="47.1234%" y="853" width="0.3407%" height="15" fill="rgb(230,16,23)" fg:x="1245" fg:w="9"/><text x="47.3734%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="47.4262%" y="837" width="0.0379%" height="15" fill="rgb(236,171,36)" fg:x="1253" fg:w="1"/><text x="47.6762%" y="847.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::classify (2 samples, 0.08%)</title><rect x="48.1453%" y="885" width="0.0757%" height="15" fill="rgb(221,22,14)" fg:x="1272" fg:w="2"/><text x="48.3953%" y="895.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::partial_classify (2 samples, 0.08%)</title><rect x="48.1453%" y="869" width="0.0757%" height="15" fill="rgb(242,43,11)" fg:x="1272" fg:w="2"/><text x="48.3953%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="48.2210%" y="789" width="0.0757%" height="15" fill="rgb(232,69,23)" fg:x="1274" fg:w="2"/><text x="48.4710%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="48.2210%" y="773" width="0.0757%" height="15" fill="rgb(216,180,54)" fg:x="1274" fg:w="2"/><text x="48.4710%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.04%)</title><rect x="48.2589%" y="757" width="0.0379%" height="15" fill="rgb(216,5,24)" fg:x="1275" fg:w="1"/><text x="48.5089%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_f64 (11 samples, 0.42%)</title><rect x="48.1453%" y="901" width="0.4164%" height="15" fill="rgb(225,89,9)" fg:x="1272" fg:w="11"/><text x="48.3953%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::write_f64 (9 samples, 0.34%)</title><rect x="48.2210%" y="885" width="0.3407%" height="15" fill="rgb(243,75,33)" fg:x="1274" fg:w="9"/><text x="48.4710%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (9 samples, 0.34%)</title><rect x="48.2210%" y="869" width="0.3407%" height="15" fill="rgb(247,141,45)" fg:x="1274" fg:w="9"/><text x="48.4710%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.34%)</title><rect x="48.2210%" y="853" width="0.3407%" height="15" fill="rgb(232,177,36)" fg:x="1274" fg:w="9"/><text x="48.4710%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.34%)</title><rect x="48.2210%" y="837" width="0.3407%" height="15" fill="rgb(219,125,36)" fg:x="1274" fg:w="9"/><text x="48.4710%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.34%)</title><rect x="48.2210%" y="821" width="0.3407%" height="15" fill="rgb(227,94,9)" fg:x="1274" fg:w="9"/><text x="48.4710%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.34%)</title><rect x="48.2210%" y="805" width="0.3407%" height="15" fill="rgb(240,34,52)" fg:x="1274" fg:w="9"/><text x="48.4710%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.26%)</title><rect x="48.2967%" y="789" width="0.2650%" height="15" fill="rgb(216,45,12)" fg:x="1276" fg:w="7"/><text x="48.5467%" y="799.50"></text></g><g><title>[libc.so.6] (7 samples, 0.26%)</title><rect x="48.2967%" y="773" width="0.2650%" height="15" fill="rgb(246,21,19)" fg:x="1276" fg:w="7"/><text x="48.5467%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (8 samples, 0.30%)</title><rect x="48.5617%" y="901" width="0.3028%" height="15" fill="rgb(213,98,42)" fg:x="1283" fg:w="8"/><text x="48.8117%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::write_u64 (8 samples, 0.30%)</title><rect x="48.5617%" y="885" width="0.3028%" height="15" fill="rgb(250,136,47)" fg:x="1283" fg:w="8"/><text x="48.8117%" y="895.50"></text></g><g><title>itoa::Buffer::format (8 samples, 0.30%)</title><rect x="48.5617%" y="869" width="0.3028%" height="15" fill="rgb(251,124,27)" fg:x="1283" fg:w="8"/><text x="48.8117%" y="879.50"></text></g><g><title>itoa::&lt;impl itoa::private::Sealed for u64&gt;::write (8 samples, 0.30%)</title><rect x="48.5617%" y="853" width="0.3028%" height="15" fill="rgb(229,180,14)" fg:x="1283" fg:w="8"/><text x="48.8117%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.08%)</title><rect x="48.7888%" y="837" width="0.0757%" height="15" fill="rgb(245,216,25)" fg:x="1289" fg:w="2"/><text x="49.0388%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (213 samples, 8.06%)</title><rect x="41.1431%" y="997" width="8.0621%" height="15" fill="rgb(251,43,5)" fg:x="1087" fg:w="213"/><text x="41.3931%" y="1007.50">serde::ser:..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (213 samples, 8.06%)</title><rect x="41.1431%" y="981" width="8.0621%" height="15" fill="rgb(250,128,24)" fg:x="1087" fg:w="213"/><text x="41.3931%" y="991.50">serde_json:..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (202 samples, 7.65%)</title><rect x="41.5594%" y="965" width="7.6457%" height="15" fill="rgb(217,117,27)" fg:x="1098" fg:w="202"/><text x="41.8094%" y="975.50">serde::ser..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (85 samples, 3.22%)</title><rect x="45.9879%" y="949" width="3.2173%" height="15" fill="rgb(245,147,4)" fg:x="1215" fg:w="85"/><text x="46.2379%" y="959.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (46 samples, 1.74%)</title><rect x="47.4640%" y="933" width="1.7411%" height="15" fill="rgb(242,201,35)" fg:x="1254" fg:w="46"/><text x="47.7140%" y="943.50"></text></g><g><title>&lt;serde_json::number::Number as serde::ser::Serialize&gt;::serialize (34 samples, 1.29%)</title><rect x="47.9182%" y="917" width="1.2869%" height="15" fill="rgb(218,181,1)" fg:x="1266" fg:w="34"/><text x="48.1682%" y="927.50"></text></g><g><title>[libc.so.6] (9 samples, 0.34%)</title><rect x="48.8645%" y="901" width="0.3407%" height="15" fill="rgb(222,6,29)" fg:x="1291" fg:w="9"/><text x="49.1145%" y="911.50"></text></g><g><title>&lt;poem::web::json::Json&lt;T&gt; as poem::web::IntoResponse&gt;::into_response (362 samples, 13.70%)</title><rect x="35.5413%" y="1205" width="13.7017%" height="15" fill="rgb(208,186,3)" fg:x="939" fg:w="362"/><text x="35.7913%" y="1215.50">&lt;poem::web::json::Jso..</text></g><g><title>serde_json::ser::to_vec (216 samples, 8.18%)</title><rect x="41.0674%" y="1189" width="8.1756%" height="15" fill="rgb(216,36,26)" fg:x="1085" fg:w="216"/><text x="41.3174%" y="1199.50">serde_json:..</text></g><g><title>serde_json::ser::to_writer (216 samples, 8.18%)</title><rect x="41.0674%" y="1173" width="8.1756%" height="15" fill="rgb(248,201,23)" fg:x="1085" fg:w="216"/><text x="41.3174%" y="1183.50">serde_json:..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (216 samples, 8.18%)</title><rect x="41.0674%" y="1157" width="8.1756%" height="15" fill="rgb(251,170,31)" fg:x="1085" fg:w="216"/><text x="41.3174%" y="1167.50">serde::ser:..</text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (216 samples, 8.18%)</title><rect x="41.0674%" y="1141" width="8.1756%" height="15" fill="rgb(207,110,25)" fg:x="1085" fg:w="216"/><text x="41.3174%" y="1151.50">&lt;&amp;mut serde..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (216 samples, 8.18%)</title><rect x="41.0674%" y="1125" width="8.1756%" height="15" fill="rgb(250,54,15)" fg:x="1085" fg:w="216"/><text x="41.3174%" y="1135.50">serde_json:..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (215 samples, 8.14%)</title><rect x="41.1052%" y="1109" width="8.1378%" height="15" fill="rgb(227,68,33)" fg:x="1086" fg:w="215"/><text x="41.3552%" y="1119.50">serde::ser:..</text></g><g><title>serde::ser::Serializer::collect_seq (215 samples, 8.14%)</title><rect x="41.1052%" y="1093" width="8.1378%" height="15" fill="rgb(238,34,41)" fg:x="1086" fg:w="215"/><text x="41.3552%" y="1103.50">serde::ser:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (214 samples, 8.10%)</title><rect x="41.1431%" y="1077" width="8.0999%" height="15" fill="rgb(220,11,15)" fg:x="1087" fg:w="214"/><text x="41.3931%" y="1087.50">core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (214 samples, 8.10%)</title><rect x="41.1431%" y="1061" width="8.0999%" height="15" fill="rgb(246,111,35)" fg:x="1087" fg:w="214"/><text x="41.3931%" y="1071.50">core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (214 samples, 8.10%)</title><rect x="41.1431%" y="1045" width="8.0999%" height="15" fill="rgb(209,88,53)" fg:x="1087" fg:w="214"/><text x="41.3931%" y="1055.50">core::iter:..</text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (214 samples, 8.10%)</title><rect x="41.1431%" y="1029" width="8.0999%" height="15" fill="rgb(231,185,47)" fg:x="1087" fg:w="214"/><text x="41.3931%" y="1039.50">serde::ser:..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (214 samples, 8.10%)</title><rect x="41.1431%" y="1013" width="8.0999%" height="15" fill="rgb(233,154,1)" fg:x="1087" fg:w="214"/><text x="41.3931%" y="1023.50">&lt;serde_json..</text></g><g><title>serde_json::ser::Formatter::begin_array_value (1 samples, 0.04%)</title><rect x="49.2051%" y="997" width="0.0379%" height="15" fill="rgb(225,15,46)" fg:x="1300" fg:w="1"/><text x="49.4551%" y="1007.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.04%)</title><rect x="49.2051%" y="981" width="0.0379%" height="15" fill="rgb(211,135,41)" fg:x="1300" fg:w="1"/><text x="49.4551%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.04%)</title><rect x="49.2051%" y="965" width="0.0379%" height="15" fill="rgb(208,54,0)" fg:x="1300" fg:w="1"/><text x="49.4551%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="49.2051%" y="949" width="0.0379%" height="15" fill="rgb(244,136,14)" fg:x="1300" fg:w="1"/><text x="49.4551%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="49.2051%" y="933" width="0.0379%" height="15" fill="rgb(241,56,14)" fg:x="1300" fg:w="1"/><text x="49.4551%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="49.2051%" y="917" width="0.0379%" height="15" fill="rgb(205,80,24)" fg:x="1300" fg:w="1"/><text x="49.4551%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="49.2051%" y="901" width="0.0379%" height="15" fill="rgb(220,57,4)" fg:x="1300" fg:w="1"/><text x="49.4551%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="49.2051%" y="885" width="0.0379%" height="15" fill="rgb(226,193,50)" fg:x="1300" fg:w="1"/><text x="49.4551%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.26%)</title><rect x="49.2430%" y="1173" width="0.2650%" height="15" fill="rgb(231,168,22)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[fabseapi::Car]&gt; (7 samples, 0.26%)</title><rect x="49.2430%" y="1157" width="0.2650%" height="15" fill="rgb(254,215,14)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;fabseapi::Car&gt; (7 samples, 0.26%)</title><rect x="49.2430%" y="1141" width="0.2650%" height="15" fill="rgb(211,115,16)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.26%)</title><rect x="49.2430%" y="1125" width="0.2650%" height="15" fill="rgb(236,210,16)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.26%)</title><rect x="49.2430%" y="1109" width="0.2650%" height="15" fill="rgb(221,94,12)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.26%)</title><rect x="49.2430%" y="1093" width="0.2650%" height="15" fill="rgb(235,218,49)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.26%)</title><rect x="49.2430%" y="1077" width="0.2650%" height="15" fill="rgb(217,114,14)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.26%)</title><rect x="49.2430%" y="1061" width="0.2650%" height="15" fill="rgb(216,145,22)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.26%)</title><rect x="49.2430%" y="1045" width="0.2650%" height="15" fill="rgb(217,112,39)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1055.50"></text></g><g><title>__rdl_dealloc (7 samples, 0.26%)</title><rect x="49.2430%" y="1029" width="0.2650%" height="15" fill="rgb(225,85,32)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1039.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (7 samples, 0.26%)</title><rect x="49.2430%" y="1013" width="0.2650%" height="15" fill="rgb(245,209,47)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1023.50"></text></g><g><title>cfree (7 samples, 0.26%)</title><rect x="49.2430%" y="997" width="0.2650%" height="15" fill="rgb(218,220,15)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="1007.50"></text></g><g><title>[libc.so.6] (7 samples, 0.26%)</title><rect x="49.2430%" y="981" width="0.2650%" height="15" fill="rgb(222,202,31)" fg:x="1301" fg:w="7"/><text x="49.4930%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem_openapi::payload::json::Json&lt;alloc::vec::Vec&lt;fabseapi::Car&gt;&gt;&gt; (168 samples, 6.36%)</title><rect x="49.2430%" y="1205" width="6.3588%" height="15" fill="rgb(243,203,4)" fg:x="1301" fg:w="168"/><text x="49.4930%" y="1215.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fabseapi::Car&gt;&gt; (168 samples, 6.36%)</title><rect x="49.2430%" y="1189" width="6.3588%" height="15" fill="rgb(237,92,17)" fg:x="1301" fg:w="168"/><text x="49.4930%" y="1199.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fabseapi::Car&gt;&gt; (161 samples, 6.09%)</title><rect x="49.5079%" y="1173" width="6.0939%" height="15" fill="rgb(231,119,7)" fg:x="1308" fg:w="161"/><text x="49.7579%" y="1183.50">core::pt..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 6.09%)</title><rect x="49.5079%" y="1157" width="6.0939%" height="15" fill="rgb(237,82,41)" fg:x="1308" fg:w="161"/><text x="49.7579%" y="1167.50">&lt;alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (161 samples, 6.09%)</title><rect x="49.5079%" y="1141" width="6.0939%" height="15" fill="rgb(226,81,48)" fg:x="1308" fg:w="161"/><text x="49.7579%" y="1151.50">&lt;alloc::..</text></g><g><title>alloc::alloc::dealloc (161 samples, 6.09%)</title><rect x="49.5079%" y="1125" width="6.0939%" height="15" fill="rgb(234,70,51)" fg:x="1308" fg:w="161"/><text x="49.7579%" y="1135.50">alloc::a..</text></g><g><title>__rdl_dealloc (161 samples, 6.09%)</title><rect x="49.5079%" y="1109" width="6.0939%" height="15" fill="rgb(251,86,4)" fg:x="1308" fg:w="161"/><text x="49.7579%" y="1119.50">__rdl_de..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (161 samples, 6.09%)</title><rect x="49.5079%" y="1093" width="6.0939%" height="15" fill="rgb(244,144,28)" fg:x="1308" fg:w="161"/><text x="49.7579%" y="1103.50">std::sys..</text></g><g><title>cfree (161 samples, 6.09%)</title><rect x="49.5079%" y="1077" width="6.0939%" height="15" fill="rgb(232,161,39)" fg:x="1308" fg:w="161"/><text x="49.7579%" y="1087.50">cfree</text></g><g><title>[libc.so.6] (161 samples, 6.09%)</title><rect x="49.5079%" y="1061" width="6.0939%" height="15" fill="rgb(247,34,51)" fg:x="1308" fg:w="161"/><text x="49.7579%" y="1071.50">[libc.so..</text></g><g><title>[libc.so.6] (161 samples, 6.09%)</title><rect x="49.5079%" y="1045" width="6.0939%" height="15" fill="rgb(225,132,2)" fg:x="1308" fg:w="161"/><text x="49.7579%" y="1055.50">[libc.so..</text></g><g><title>[libc.so.6] (159 samples, 6.02%)</title><rect x="49.5836%" y="1029" width="6.0182%" height="15" fill="rgb(209,159,44)" fg:x="1310" fg:w="159"/><text x="49.8336%" y="1039.50">[libc.so..</text></g><g><title>[libc.so.6] (99 samples, 3.75%)</title><rect x="51.8547%" y="1013" width="3.7472%" height="15" fill="rgb(251,214,1)" fg:x="1370" fg:w="99"/><text x="52.1047%" y="1023.50">[lib..</text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (62 samples, 2.35%)</title><rect x="55.6018%" y="1173" width="2.3467%" height="15" fill="rgb(247,84,47)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1183.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (62 samples, 2.35%)</title><rect x="55.6018%" y="1157" width="2.3467%" height="15" fill="rgb(240,111,43)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1167.50">&lt;..</text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (62 samples, 2.35%)</title><rect x="55.6018%" y="1141" width="2.3467%" height="15" fill="rgb(215,214,35)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1151.50">a..</text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (62 samples, 2.35%)</title><rect x="55.6018%" y="1125" width="2.3467%" height="15" fill="rgb(248,207,23)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1135.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (62 samples, 2.35%)</title><rect x="55.6018%" y="1109" width="2.3467%" height="15" fill="rgb(214,186,4)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1119.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62 samples, 2.35%)</title><rect x="55.6018%" y="1093" width="2.3467%" height="15" fill="rgb(220,133,22)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1103.50">a..</text></g><g><title>alloc::slice::hack::to_vec (62 samples, 2.35%)</title><rect x="55.6018%" y="1077" width="2.3467%" height="15" fill="rgb(239,134,19)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1087.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62 samples, 2.35%)</title><rect x="55.6018%" y="1061" width="2.3467%" height="15" fill="rgb(250,140,9)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1071.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (62 samples, 2.35%)</title><rect x="55.6018%" y="1045" width="2.3467%" height="15" fill="rgb(225,59,14)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1055.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62 samples, 2.35%)</title><rect x="55.6018%" y="1029" width="2.3467%" height="15" fill="rgb(214,152,51)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1039.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (62 samples, 2.35%)</title><rect x="55.6018%" y="1013" width="2.3467%" height="15" fill="rgb(251,227,43)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1023.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 2.35%)</title><rect x="55.6018%" y="997" width="2.3467%" height="15" fill="rgb(241,96,17)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="1007.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (62 samples, 2.35%)</title><rect x="55.6018%" y="981" width="2.3467%" height="15" fill="rgb(234,198,43)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="991.50">a..</text></g><g><title>alloc::alloc::alloc (62 samples, 2.35%)</title><rect x="55.6018%" y="965" width="2.3467%" height="15" fill="rgb(220,108,29)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="975.50">a..</text></g><g><title>__rdl_alloc (62 samples, 2.35%)</title><rect x="55.6018%" y="949" width="2.3467%" height="15" fill="rgb(226,163,33)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="959.50">_..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (62 samples, 2.35%)</title><rect x="55.6018%" y="933" width="2.3467%" height="15" fill="rgb(205,194,45)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="943.50">s..</text></g><g><title>malloc (62 samples, 2.35%)</title><rect x="55.6018%" y="917" width="2.3467%" height="15" fill="rgb(206,143,44)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="927.50">m..</text></g><g><title>[libc.so.6] (62 samples, 2.35%)</title><rect x="55.6018%" y="901" width="2.3467%" height="15" fill="rgb(236,136,36)" fg:x="1469" fg:w="62"/><text x="55.8518%" y="911.50">[..</text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="57.8728%" y="885" width="0.0757%" height="15" fill="rgb(249,172,42)" fg:x="1529" fg:w="2"/><text x="58.1228%" y="895.50"></text></g><g><title>__mprotect (1 samples, 0.04%)</title><rect x="57.9107%" y="869" width="0.0379%" height="15" fill="rgb(216,139,23)" fg:x="1530" fg:w="1"/><text x="58.1607%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="57.9107%" y="853" width="0.0379%" height="15" fill="rgb(207,166,20)" fg:x="1530" fg:w="1"/><text x="58.1607%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="57.9107%" y="837" width="0.0379%" height="15" fill="rgb(210,209,22)" fg:x="1530" fg:w="1"/><text x="58.1607%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="57.9107%" y="821" width="0.0379%" height="15" fill="rgb(232,118,20)" fg:x="1530" fg:w="1"/><text x="58.1607%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="57.9107%" y="805" width="0.0379%" height="15" fill="rgb(238,113,42)" fg:x="1530" fg:w="1"/><text x="58.1607%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="57.9107%" y="789" width="0.0379%" height="15" fill="rgb(231,42,5)" fg:x="1530" fg:w="1"/><text x="58.1607%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="57.9107%" y="773" width="0.0379%" height="15" fill="rgb(243,166,24)" fg:x="1530" fg:w="1"/><text x="58.1607%" y="783.50"></text></g><g><title>poem_openapi::types::external::string::&lt;impl poem_openapi::types::ToJSON for alloc::string::String&gt;::to_json (11 samples, 0.42%)</title><rect x="57.9485%" y="1173" width="0.4164%" height="15" fill="rgb(237,226,12)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.42%)</title><rect x="57.9485%" y="1157" width="0.4164%" height="15" fill="rgb(229,133,24)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.42%)</title><rect x="57.9485%" y="1141" width="0.4164%" height="15" fill="rgb(238,33,43)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.42%)</title><rect x="57.9485%" y="1125" width="0.4164%" height="15" fill="rgb(227,59,38)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.42%)</title><rect x="57.9485%" y="1109" width="0.4164%" height="15" fill="rgb(230,97,0)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.42%)</title><rect x="57.9485%" y="1093" width="0.4164%" height="15" fill="rgb(250,173,50)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.42%)</title><rect x="57.9485%" y="1077" width="0.4164%" height="15" fill="rgb(240,15,50)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.42%)</title><rect x="57.9485%" y="1061" width="0.4164%" height="15" fill="rgb(221,93,22)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (11 samples, 0.42%)</title><rect x="57.9485%" y="1045" width="0.4164%" height="15" fill="rgb(245,180,53)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.42%)</title><rect x="57.9485%" y="1029" width="0.4164%" height="15" fill="rgb(231,88,51)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.42%)</title><rect x="57.9485%" y="1013" width="0.4164%" height="15" fill="rgb(240,58,21)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.42%)</title><rect x="57.9485%" y="997" width="0.4164%" height="15" fill="rgb(237,21,10)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="1007.50"></text></g><g><title>__rdl_alloc (11 samples, 0.42%)</title><rect x="57.9485%" y="981" width="0.4164%" height="15" fill="rgb(218,43,11)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="991.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.42%)</title><rect x="57.9485%" y="965" width="0.4164%" height="15" fill="rgb(218,221,29)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="975.50"></text></g><g><title>malloc (11 samples, 0.42%)</title><rect x="57.9485%" y="949" width="0.4164%" height="15" fill="rgb(214,118,42)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="959.50"></text></g><g><title>[libc.so.6] (11 samples, 0.42%)</title><rect x="57.9485%" y="933" width="0.4164%" height="15" fill="rgb(251,200,26)" fg:x="1531" fg:w="11"/><text x="58.1985%" y="943.50"></text></g><g><title>[libc.so.6] (104 samples, 3.94%)</title><rect x="59.5382%" y="1013" width="3.9364%" height="15" fill="rgb(237,101,39)" fg:x="1573" fg:w="104"/><text x="59.7882%" y="1023.50">[lib..</text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (120 samples, 4.54%)</title><rect x="59.1976%" y="1077" width="4.5420%" height="15" fill="rgb(251,117,11)" fg:x="1564" fg:w="120"/><text x="59.4476%" y="1087.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (120 samples, 4.54%)</title><rect x="59.1976%" y="1061" width="4.5420%" height="15" fill="rgb(216,223,23)" fg:x="1564" fg:w="120"/><text x="59.4476%" y="1071.50">&lt;allo..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (120 samples, 4.54%)</title><rect x="59.1976%" y="1045" width="4.5420%" height="15" fill="rgb(251,54,12)" fg:x="1564" fg:w="120"/><text x="59.4476%" y="1055.50">core:..</text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (120 samples, 4.54%)</title><rect x="59.1976%" y="1029" width="4.5420%" height="15" fill="rgb(254,176,54)" fg:x="1564" fg:w="120"/><text x="59.4476%" y="1039.50">&lt;u8 a..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (7 samples, 0.26%)</title><rect x="63.4746%" y="1013" width="0.2650%" height="15" fill="rgb(210,32,8)" fg:x="1677" fg:w="7"/><text x="63.7246%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="63.7396%" y="1077" width="0.0757%" height="15" fill="rgb(235,52,38)" fg:x="1684" fg:w="2"/><text x="63.9896%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="63.7396%" y="1061" width="0.0757%" height="15" fill="rgb(231,4,44)" fg:x="1684" fg:w="2"/><text x="63.9896%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (145 samples, 5.49%)</title><rect x="58.4027%" y="1141" width="5.4883%" height="15" fill="rgb(249,2,32)" fg:x="1543" fg:w="145"/><text x="58.6527%" y="1151.50">alloc::..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (136 samples, 5.15%)</title><rect x="58.7434%" y="1125" width="5.1476%" height="15" fill="rgb(224,65,26)" fg:x="1552" fg:w="136"/><text x="58.9934%" y="1135.50">alloc:..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (136 samples, 5.15%)</title><rect x="58.7434%" y="1109" width="5.1476%" height="15" fill="rgb(250,73,40)" fg:x="1552" fg:w="136"/><text x="58.9934%" y="1119.50">alloc:..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (136 samples, 5.15%)</title><rect x="58.7434%" y="1093" width="5.1476%" height="15" fill="rgb(253,177,16)" fg:x="1552" fg:w="136"/><text x="58.9934%" y="1103.50">alloc:..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (2 samples, 0.08%)</title><rect x="63.8153%" y="1077" width="0.0757%" height="15" fill="rgb(217,32,34)" fg:x="1686" fg:w="2"/><text x="64.0653%" y="1087.50"></text></g><g><title>core::intrinsics::copy (12 samples, 0.45%)</title><rect x="64.1938%" y="1061" width="0.4542%" height="15" fill="rgb(212,7,10)" fg:x="1696" fg:w="12"/><text x="64.4438%" y="1071.50"></text></g><g><title>[libc.so.6] (12 samples, 0.45%)</title><rect x="64.1938%" y="1045" width="0.4542%" height="15" fill="rgb(245,89,8)" fg:x="1696" fg:w="12"/><text x="64.4438%" y="1055.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.04%)</title><rect x="64.6480%" y="1061" width="0.0379%" height="15" fill="rgb(237,16,53)" fg:x="1708" fg:w="1"/><text x="64.8980%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (22 samples, 0.83%)</title><rect x="63.9288%" y="1125" width="0.8327%" height="15" fill="rgb(250,204,30)" fg:x="1689" fg:w="22"/><text x="64.1788%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (22 samples, 0.83%)</title><rect x="63.9288%" y="1109" width="0.8327%" height="15" fill="rgb(208,77,27)" fg:x="1689" fg:w="22"/><text x="64.1788%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (21 samples, 0.79%)</title><rect x="63.9667%" y="1093" width="0.7949%" height="15" fill="rgb(250,204,28)" fg:x="1690" fg:w="21"/><text x="64.2167%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (17 samples, 0.64%)</title><rect x="64.1181%" y="1077" width="0.6435%" height="15" fill="rgb(244,63,21)" fg:x="1694" fg:w="17"/><text x="64.3681%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.08%)</title><rect x="64.6858%" y="1061" width="0.0757%" height="15" fill="rgb(236,85,44)" fg:x="1709" fg:w="2"/><text x="64.9358%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.45%)</title><rect x="64.7615%" y="1093" width="0.4542%" height="15" fill="rgb(215,98,4)" fg:x="1711" fg:w="12"/><text x="65.0115%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (11 samples, 0.42%)</title><rect x="64.7994%" y="1077" width="0.4164%" height="15" fill="rgb(235,38,11)" fg:x="1712" fg:w="11"/><text x="65.0494%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.42%)</title><rect x="64.7994%" y="1061" width="0.4164%" height="15" fill="rgb(254,186,25)" fg:x="1712" fg:w="11"/><text x="65.0494%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.42%)</title><rect x="64.7994%" y="1045" width="0.4164%" height="15" fill="rgb(225,55,31)" fg:x="1712" fg:w="11"/><text x="65.0494%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.42%)</title><rect x="64.7994%" y="1029" width="0.4164%" height="15" fill="rgb(211,15,21)" fg:x="1712" fg:w="11"/><text x="65.0494%" y="1039.50"></text></g><g><title>__rdl_alloc (11 samples, 0.42%)</title><rect x="64.7994%" y="1013" width="0.4164%" height="15" fill="rgb(215,187,41)" fg:x="1712" fg:w="11"/><text x="65.0494%" y="1023.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.42%)</title><rect x="64.7994%" y="997" width="0.4164%" height="15" fill="rgb(248,69,32)" fg:x="1712" fg:w="11"/><text x="65.0494%" y="1007.50"></text></g><g><title>malloc (11 samples, 0.42%)</title><rect x="64.7994%" y="981" width="0.4164%" height="15" fill="rgb(252,102,52)" fg:x="1712" fg:w="11"/><text x="65.0494%" y="991.50"></text></g><g><title>[libc.so.6] (7 samples, 0.26%)</title><rect x="64.9508%" y="965" width="0.2650%" height="15" fill="rgb(253,140,32)" fg:x="1716" fg:w="7"/><text x="65.2008%" y="975.50"></text></g><g><title>&lt;fabseapi::Car as poem_openapi::types::ToJSON&gt;::to_json (258 samples, 9.77%)</title><rect x="55.6018%" y="1189" width="9.7653%" height="15" fill="rgb(216,56,42)" fg:x="1469" fg:w="258"/><text x="55.8518%" y="1199.50">&lt;fabseapi::Car..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (185 samples, 7.00%)</title><rect x="58.3649%" y="1173" width="7.0023%" height="15" fill="rgb(216,184,14)" fg:x="1542" fg:w="185"/><text x="58.6149%" y="1183.50">serde_jso..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (185 samples, 7.00%)</title><rect x="58.3649%" y="1157" width="7.0023%" height="15" fill="rgb(237,187,27)" fg:x="1542" fg:w="185"/><text x="58.6149%" y="1167.50">alloc::co..</text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (39 samples, 1.48%)</title><rect x="63.8910%" y="1141" width="1.4762%" height="15" fill="rgb(219,65,3)" fg:x="1688" fg:w="39"/><text x="64.1410%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (16 samples, 0.61%)</title><rect x="64.7615%" y="1125" width="0.6056%" height="15" fill="rgb(245,83,25)" fg:x="1711" fg:w="16"/><text x="65.0115%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (16 samples, 0.61%)</title><rect x="64.7615%" y="1109" width="0.6056%" height="15" fill="rgb(214,205,45)" fg:x="1711" fg:w="16"/><text x="65.0115%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::init (4 samples, 0.15%)</title><rect x="65.2157%" y="1093" width="0.1514%" height="15" fill="rgb(241,20,18)" fg:x="1723" fg:w="4"/><text x="65.4657%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4 samples, 0.15%)</title><rect x="65.2157%" y="1077" width="0.1514%" height="15" fill="rgb(232,163,23)" fg:x="1723" fg:w="4"/><text x="65.4657%" y="1087.50"></text></g><g><title>core::ptr::write (4 samples, 0.15%)</title><rect x="65.2157%" y="1061" width="0.1514%" height="15" fill="rgb(214,5,46)" fg:x="1723" fg:w="4"/><text x="65.4657%" y="1071.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.04%)</title><rect x="65.3671%" y="1173" width="0.0379%" height="15" fill="rgb(229,78,17)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="65.3671%" y="1157" width="0.0379%" height="15" fill="rgb(248,89,10)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1167.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="65.3671%" y="1141" width="0.0379%" height="15" fill="rgb(248,54,15)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="65.3671%" y="1125" width="0.0379%" height="15" fill="rgb(223,116,6)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="65.3671%" y="1109" width="0.0379%" height="15" fill="rgb(205,125,38)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="65.3671%" y="1093" width="0.0379%" height="15" fill="rgb(251,78,38)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="65.3671%" y="1077" width="0.0379%" height="15" fill="rgb(253,78,28)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="65.3671%" y="1061" width="0.0379%" height="15" fill="rgb(209,120,3)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="65.3671%" y="1045" width="0.0379%" height="15" fill="rgb(238,229,9)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="65.3671%" y="1029" width="0.0379%" height="15" fill="rgb(253,159,18)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="65.3671%" y="1013" width="0.0379%" height="15" fill="rgb(244,42,34)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="65.3671%" y="997" width="0.0379%" height="15" fill="rgb(224,8,7)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="65.3671%" y="981" width="0.0379%" height="15" fill="rgb(210,201,45)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="65.3671%" y="965" width="0.0379%" height="15" fill="rgb(252,185,21)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="975.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="65.3671%" y="949" width="0.0379%" height="15" fill="rgb(223,131,1)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="959.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="65.3671%" y="933" width="0.0379%" height="15" fill="rgb(245,141,16)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="943.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="65.3671%" y="917" width="0.0379%" height="15" fill="rgb(229,55,45)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.3671%" y="901" width="0.0379%" height="15" fill="rgb(208,92,15)" fg:x="1727" fg:w="1"/><text x="65.6171%" y="911.50"></text></g><g><title>poem_openapi::types::external::string::&lt;impl poem_openapi::types::ToJSON for alloc::string::String&gt;::to_json (1 samples, 0.04%)</title><rect x="65.4050%" y="1173" width="0.0379%" height="15" fill="rgb(234,185,47)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="65.4050%" y="1157" width="0.0379%" height="15" fill="rgb(253,104,50)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="65.4050%" y="1141" width="0.0379%" height="15" fill="rgb(205,70,7)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="65.4050%" y="1125" width="0.0379%" height="15" fill="rgb(240,178,43)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="65.4050%" y="1109" width="0.0379%" height="15" fill="rgb(214,112,2)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="65.4050%" y="1093" width="0.0379%" height="15" fill="rgb(206,46,17)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="65.4050%" y="1077" width="0.0379%" height="15" fill="rgb(225,220,16)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="65.4050%" y="1061" width="0.0379%" height="15" fill="rgb(238,65,40)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="65.4050%" y="1045" width="0.0379%" height="15" fill="rgb(230,151,21)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="65.4050%" y="1029" width="0.0379%" height="15" fill="rgb(218,58,49)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="65.4050%" y="1013" width="0.0379%" height="15" fill="rgb(219,179,14)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="65.4050%" y="997" width="0.0379%" height="15" fill="rgb(223,72,1)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="1007.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="65.4050%" y="981" width="0.0379%" height="15" fill="rgb(238,126,10)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="991.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="65.4050%" y="965" width="0.0379%" height="15" fill="rgb(224,206,38)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="975.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="65.4050%" y="949" width="0.0379%" height="15" fill="rgb(212,201,54)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.4050%" y="933" width="0.0379%" height="15" fill="rgb(218,154,48)" fg:x="1728" fg:w="1"/><text x="65.6550%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1 samples, 0.04%)</title><rect x="65.4807%" y="1141" width="0.0379%" height="15" fill="rgb(232,93,24)" fg:x="1730" fg:w="1"/><text x="65.7307%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (793 samples, 30.02%)</title><rect x="35.5413%" y="1253" width="30.0151%" height="15" fill="rgb(245,30,21)" fg:x="939" fg:w="793"/><text x="35.7913%" y="1263.50">core::result::Result&lt;T,E&gt;::map</text></g><g><title>core::ops::function::FnOnce::call_once (793 samples, 30.02%)</title><rect x="35.5413%" y="1237" width="30.0151%" height="15" fill="rgb(242,148,29)" fg:x="939" fg:w="793"/><text x="35.7913%" y="1247.50">core::ops::function::FnOnce::call_once</text></g><g><title>&lt;poem_openapi::payload::json::Json&lt;T&gt; as poem::web::IntoResponse&gt;::into_response (793 samples, 30.02%)</title><rect x="35.5413%" y="1221" width="30.0151%" height="15" fill="rgb(244,153,54)" fg:x="939" fg:w="793"/><text x="35.7913%" y="1231.50">&lt;poem_openapi::payload::json::Json&lt;T&gt; as poem::w..</text></g><g><title>poem_openapi::types::external::vec::&lt;impl poem_openapi::types::ToJSON for alloc::vec::Vec&lt;T&gt;&gt;::to_json (263 samples, 9.95%)</title><rect x="55.6018%" y="1205" width="9.9546%" height="15" fill="rgb(252,87,22)" fg:x="1469" fg:w="263"/><text x="55.8518%" y="1215.50">poem_openapi::..</text></g><g><title>&lt;fabseapi::TrafficLight as poem_openapi::types::ToJSON&gt;::to_json (5 samples, 0.19%)</title><rect x="65.3671%" y="1189" width="0.1893%" height="15" fill="rgb(210,51,29)" fg:x="1727" fg:w="5"/><text x="65.6171%" y="1199.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (3 samples, 0.11%)</title><rect x="65.4428%" y="1173" width="0.1136%" height="15" fill="rgb(242,136,47)" fg:x="1729" fg:w="3"/><text x="65.6928%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.11%)</title><rect x="65.4428%" y="1157" width="0.1136%" height="15" fill="rgb(238,68,4)" fg:x="1729" fg:w="3"/><text x="65.6928%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.04%)</title><rect x="65.5185%" y="1141" width="0.0379%" height="15" fill="rgb(242,161,30)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1 samples, 0.04%)</title><rect x="65.5185%" y="1125" width="0.0379%" height="15" fill="rgb(218,58,44)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.04%)</title><rect x="65.5185%" y="1109" width="0.0379%" height="15" fill="rgb(252,125,32)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.04%)</title><rect x="65.5185%" y="1093" width="0.0379%" height="15" fill="rgb(219,178,0)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.04%)</title><rect x="65.5185%" y="1077" width="0.0379%" height="15" fill="rgb(213,152,7)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="65.5185%" y="1061" width="0.0379%" height="15" fill="rgb(249,109,34)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="65.5185%" y="1045" width="0.0379%" height="15" fill="rgb(232,96,21)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="65.5185%" y="1029" width="0.0379%" height="15" fill="rgb(228,27,39)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="1039.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="65.5185%" y="1013" width="0.0379%" height="15" fill="rgb(211,182,52)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="1023.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="65.5185%" y="997" width="0.0379%" height="15" fill="rgb(234,178,38)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="65.5185%" y="981" width="0.0379%" height="15" fill="rgb(221,111,3)" fg:x="1731" fg:w="1"/><text x="65.7685%" y="991.50"></text></g><g><title>&lt;sqlx_mysql::arguments::MySqlArguments as sqlx_core::arguments::Arguments&gt;::reserve (2 samples, 0.08%)</title><rect x="65.5564%" y="1237" width="0.0757%" height="15" fill="rgb(228,175,21)" fg:x="1732" fg:w="2"/><text x="65.8064%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="65.5564%" y="1221" width="0.0757%" height="15" fill="rgb(228,174,43)" fg:x="1732" fg:w="2"/><text x="65.8064%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="65.5564%" y="1205" width="0.0757%" height="15" fill="rgb(211,191,0)" fg:x="1732" fg:w="2"/><text x="65.8064%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.08%)</title><rect x="65.5564%" y="1189" width="0.0757%" height="15" fill="rgb(253,117,3)" fg:x="1732" fg:w="2"/><text x="65.8064%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.08%)</title><rect x="65.5564%" y="1173" width="0.0757%" height="15" fill="rgb(241,127,19)" fg:x="1732" fg:w="2"/><text x="65.8064%" y="1183.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.08%)</title><rect x="65.5564%" y="1157" width="0.0757%" height="15" fill="rgb(218,103,12)" fg:x="1732" fg:w="2"/><text x="65.8064%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="65.5942%" y="1141" width="0.0379%" height="15" fill="rgb(236,214,43)" fg:x="1733" fg:w="1"/><text x="65.8442%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="65.5942%" y="1125" width="0.0379%" height="15" fill="rgb(244,144,19)" fg:x="1733" fg:w="1"/><text x="65.8442%" y="1135.50"></text></g><g><title>fabseapi::Api::traffic_light_insert::_{{closure}} (4 samples, 0.15%)</title><rect x="65.5564%" y="1253" width="0.1514%" height="15" fill="rgb(246,188,10)" fg:x="1732" fg:w="4"/><text x="65.8064%" y="1263.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (2 samples, 0.08%)</title><rect x="65.6321%" y="1237" width="0.0757%" height="15" fill="rgb(212,193,33)" fg:x="1734" fg:w="2"/><text x="65.8821%" y="1247.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="65.6321%" y="1221" width="0.0757%" height="15" fill="rgb(241,51,29)" fg:x="1734" fg:w="2"/><text x="65.8821%" y="1231.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="65.6321%" y="1205" width="0.0757%" height="15" fill="rgb(211,58,19)" fg:x="1734" fg:w="2"/><text x="65.8821%" y="1215.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (2 samples, 0.08%)</title><rect x="65.6321%" y="1189" width="0.0757%" height="15" fill="rgb(229,111,26)" fg:x="1734" fg:w="2"/><text x="65.8821%" y="1199.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.08%)</title><rect x="65.6321%" y="1173" width="0.0757%" height="15" fill="rgb(213,115,40)" fg:x="1734" fg:w="2"/><text x="65.8821%" y="1183.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.08%)</title><rect x="65.6321%" y="1157" width="0.0757%" height="15" fill="rgb(209,56,44)" fg:x="1734" fg:w="2"/><text x="65.8821%" y="1167.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="65.6699%" y="1141" width="0.0379%" height="15" fill="rgb(230,108,32)" fg:x="1735" fg:w="1"/><text x="65.9199%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="65.6699%" y="1125" width="0.0379%" height="15" fill="rgb(216,165,31)" fg:x="1735" fg:w="1"/><text x="65.9199%" y="1135.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="65.6699%" y="1109" width="0.0379%" height="15" fill="rgb(218,122,21)" fg:x="1735" fg:w="1"/><text x="65.9199%" y="1119.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.04%)</title><rect x="65.6699%" y="1093" width="0.0379%" height="15" fill="rgb(223,224,47)" fg:x="1735" fg:w="1"/><text x="65.9199%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="65.6699%" y="1077" width="0.0379%" height="15" fill="rgb(238,102,44)" fg:x="1735" fg:w="1"/><text x="65.9199%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="65.6699%" y="1061" width="0.0379%" height="15" fill="rgb(236,46,40)" fg:x="1735" fg:w="1"/><text x="65.9199%" y="1071.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="65.6699%" y="1045" width="0.0379%" height="15" fill="rgb(247,202,50)" fg:x="1735" fg:w="1"/><text x="65.9199%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="65.7835%" y="965" width="0.0379%" height="15" fill="rgb(209,99,20)" fg:x="1738" fg:w="1"/><text x="66.0335%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="65.7835%" y="949" width="0.0379%" height="15" fill="rgb(252,27,34)" fg:x="1738" fg:w="1"/><text x="66.0335%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="65.7835%" y="933" width="0.0379%" height="15" fill="rgb(215,206,23)" fg:x="1738" fg:w="1"/><text x="66.0335%" y="943.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="65.7835%" y="917" width="0.0379%" height="15" fill="rgb(212,135,36)" fg:x="1738" fg:w="1"/><text x="66.0335%" y="927.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="65.7835%" y="901" width="0.0379%" height="15" fill="rgb(240,189,1)" fg:x="1738" fg:w="1"/><text x="66.0335%" y="911.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="65.7835%" y="885" width="0.0379%" height="15" fill="rgb(242,56,20)" fg:x="1738" fg:w="1"/><text x="66.0335%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.7835%" y="869" width="0.0379%" height="15" fill="rgb(247,132,33)" fg:x="1738" fg:w="1"/><text x="66.0335%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="65.7456%" y="1125" width="0.1136%" height="15" fill="rgb(208,149,11)" fg:x="1737" fg:w="3"/><text x="65.9956%" y="1135.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.11%)</title><rect x="65.7456%" y="1109" width="0.1136%" height="15" fill="rgb(211,33,11)" fg:x="1737" fg:w="3"/><text x="65.9956%" y="1119.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (3 samples, 0.11%)</title><rect x="65.7456%" y="1093" width="0.1136%" height="15" fill="rgb(221,29,38)" fg:x="1737" fg:w="3"/><text x="65.9956%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="65.7456%" y="1077" width="0.1136%" height="15" fill="rgb(206,182,49)" fg:x="1737" fg:w="3"/><text x="65.9956%" y="1087.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (3 samples, 0.11%)</title><rect x="65.7456%" y="1061" width="0.1136%" height="15" fill="rgb(216,140,1)" fg:x="1737" fg:w="3"/><text x="65.9956%" y="1071.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::_{{closure}} (2 samples, 0.08%)</title><rect x="65.7835%" y="1045" width="0.0757%" height="15" fill="rgb(232,57,40)" fg:x="1738" fg:w="2"/><text x="66.0335%" y="1055.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (2 samples, 0.08%)</title><rect x="65.7835%" y="1029" width="0.0757%" height="15" fill="rgb(224,186,18)" fg:x="1738" fg:w="2"/><text x="66.0335%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="65.7835%" y="1013" width="0.0757%" height="15" fill="rgb(215,121,11)" fg:x="1738" fg:w="2"/><text x="66.0335%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="65.7835%" y="997" width="0.0757%" height="15" fill="rgb(245,147,10)" fg:x="1738" fg:w="2"/><text x="66.0335%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (2 samples, 0.08%)</title><rect x="65.7835%" y="981" width="0.0757%" height="15" fill="rgb(238,153,13)" fg:x="1738" fg:w="2"/><text x="66.0335%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;sqlx_mysql::database::MySql&gt;&gt;::fetch_many&lt;sqlx_core::query::Query&lt;sqlx_mysql::database::MySql,sqlx_mysql::arguments::MySqlArguments&gt;&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="65.8213%" y="965" width="0.0379%" height="15" fill="rgb(233,108,0)" fg:x="1739" fg:w="1"/><text x="66.0713%" y="975.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (6 samples, 0.23%)</title><rect x="65.7078%" y="1173" width="0.2271%" height="15" fill="rgb(212,157,17)" fg:x="1736" fg:w="6"/><text x="65.9578%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.23%)</title><rect x="65.7078%" y="1157" width="0.2271%" height="15" fill="rgb(225,213,38)" fg:x="1736" fg:w="6"/><text x="65.9578%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.23%)</title><rect x="65.7078%" y="1141" width="0.2271%" height="15" fill="rgb(248,16,11)" fg:x="1736" fg:w="6"/><text x="65.9578%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.08%)</title><rect x="65.8592%" y="1125" width="0.0757%" height="15" fill="rgb(241,33,4)" fg:x="1740" fg:w="2"/><text x="66.1092%" y="1135.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (2 samples, 0.08%)</title><rect x="65.8592%" y="1109" width="0.0757%" height="15" fill="rgb(222,26,43)" fg:x="1740" fg:w="2"/><text x="66.1092%" y="1119.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2 samples, 0.08%)</title><rect x="65.8592%" y="1093" width="0.0757%" height="15" fill="rgb(243,29,36)" fg:x="1740" fg:w="2"/><text x="66.1092%" y="1103.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many::_{{closure}} (2 samples, 0.08%)</title><rect x="65.8592%" y="1077" width="0.0757%" height="15" fill="rgb(241,9,27)" fg:x="1740" fg:w="2"/><text x="66.1092%" y="1087.50"></text></g><g><title>&lt;(T1,T2,T3,T4,T5) as sqlx_core::from_row::FromRow&lt;R&gt;&gt;::from_row (2 samples, 0.08%)</title><rect x="65.8592%" y="1061" width="0.0757%" height="15" fill="rgb(205,117,26)" fg:x="1740" fg:w="2"/><text x="66.1092%" y="1071.50"></text></g><g><title>sqlx_core::row::Row::try_get (2 samples, 0.08%)</title><rect x="65.8592%" y="1045" width="0.0757%" height="15" fill="rgb(209,80,39)" fg:x="1740" fg:w="2"/><text x="66.1092%" y="1055.50"></text></g><g><title>sqlx_mysql::types::str::&lt;impl sqlx_core::decode::Decode&lt;sqlx_mysql::database::MySql&gt; for alloc::string::String&gt;::decode (1 samples, 0.04%)</title><rect x="65.8970%" y="1029" width="0.0379%" height="15" fill="rgb(239,155,6)" fg:x="1741" fg:w="1"/><text x="66.1470%" y="1039.50"></text></g><g><title>fabseapi::Api::traffic_light_retrieve::_{{closure}} (7 samples, 0.26%)</title><rect x="65.7078%" y="1253" width="0.2650%" height="15" fill="rgb(212,104,12)" fg:x="1736" fg:w="7"/><text x="65.9578%" y="1263.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="65.7078%" y="1237" width="0.2650%" height="15" fill="rgb(234,204,3)" fg:x="1736" fg:w="7"/><text x="65.9578%" y="1247.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.26%)</title><rect x="65.7078%" y="1221" width="0.2650%" height="15" fill="rgb(251,218,7)" fg:x="1736" fg:w="7"/><text x="65.9578%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.26%)</title><rect x="65.7078%" y="1205" width="0.2650%" height="15" fill="rgb(221,81,32)" fg:x="1736" fg:w="7"/><text x="65.9578%" y="1215.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.26%)</title><rect x="65.7078%" y="1189" width="0.2650%" height="15" fill="rgb(214,152,26)" fg:x="1736" fg:w="7"/><text x="65.9578%" y="1199.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="65.9349%" y="1173" width="0.0379%" height="15" fill="rgb(223,22,3)" fg:x="1742" fg:w="1"/><text x="66.1849%" y="1183.50"></text></g><g><title>sqlx_mysql::&lt;impl sqlx_core::encode::Encode&lt;sqlx_mysql::database::MySql&gt; for core::option::Option&lt;T&gt;&gt;::encode_by_ref (1 samples, 0.04%)</title><rect x="65.9727%" y="1189" width="0.0379%" height="15" fill="rgb(207,174,7)" fg:x="1743" fg:w="1"/><text x="66.2227%" y="1199.50"></text></g><g><title>sqlx_mysql::types::str::&lt;impl sqlx_core::encode::Encode&lt;sqlx_mysql::database::MySql&gt; for &amp;str&gt;::encode_by_ref (1 samples, 0.04%)</title><rect x="65.9727%" y="1173" width="0.0379%" height="15" fill="rgb(224,19,52)" fg:x="1743" fg:w="1"/><text x="66.2227%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_mysql::io::buf_mut::MySqlBufMutExt&gt;::put_str_lenenc (1 samples, 0.04%)</title><rect x="65.9727%" y="1157" width="0.0379%" height="15" fill="rgb(228,24,14)" fg:x="1743" fg:w="1"/><text x="66.2227%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_mysql::io::buf_mut::MySqlBufMutExt&gt;::put_bytes_lenenc (1 samples, 0.04%)</title><rect x="65.9727%" y="1141" width="0.0379%" height="15" fill="rgb(230,153,43)" fg:x="1743" fg:w="1"/><text x="66.2227%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_mysql::io::buf_mut::MySqlBufMutExt&gt;::put_uint_lenenc (1 samples, 0.04%)</title><rect x="65.9727%" y="1125" width="0.0379%" height="15" fill="rgb(231,106,12)" fg:x="1743" fg:w="1"/><text x="66.2227%" y="1135.50"></text></g><g><title>&lt;sqlx_mysql::arguments::MySqlArguments as sqlx_core::arguments::Arguments&gt;::add (3 samples, 0.11%)</title><rect x="65.9727%" y="1237" width="0.1136%" height="15" fill="rgb(215,92,2)" fg:x="1743" fg:w="3"/><text x="66.2227%" y="1247.50"></text></g><g><title>sqlx_mysql::arguments::MySqlArguments::add (3 samples, 0.11%)</title><rect x="65.9727%" y="1221" width="0.1136%" height="15" fill="rgb(249,143,25)" fg:x="1743" fg:w="3"/><text x="66.2227%" y="1231.50"></text></g><g><title>&lt;&amp;T as sqlx_core::encode::Encode&lt;DB&gt;&gt;::encode (3 samples, 0.11%)</title><rect x="65.9727%" y="1205" width="0.1136%" height="15" fill="rgb(252,7,35)" fg:x="1743" fg:w="3"/><text x="66.2227%" y="1215.50"></text></g><g><title>sqlx_mysql::types::chrono::&lt;impl sqlx_core::encode::Encode&lt;sqlx_mysql::database::MySql&gt; for chrono::datetime::DateTime&lt;chrono::offset::local::Local&gt;&gt;::encode_by_ref (2 samples, 0.08%)</title><rect x="66.0106%" y="1189" width="0.0757%" height="15" fill="rgb(216,69,40)" fg:x="1744" fg:w="2"/><text x="66.2606%" y="1199.50"></text></g><g><title>&lt;&amp;T as sqlx_core::encode::Encode&lt;DB&gt;&gt;::encode (2 samples, 0.08%)</title><rect x="66.0106%" y="1173" width="0.0757%" height="15" fill="rgb(240,36,33)" fg:x="1744" fg:w="2"/><text x="66.2606%" y="1183.50"></text></g><g><title>sqlx_mysql::types::chrono::&lt;impl sqlx_core::encode::Encode&lt;sqlx_mysql::database::MySql&gt; for chrono::naive::datetime::NaiveDateTime&gt;::encode_by_ref (2 samples, 0.08%)</title><rect x="66.0106%" y="1157" width="0.0757%" height="15" fill="rgb(231,128,14)" fg:x="1744" fg:w="2"/><text x="66.2606%" y="1167.50"></text></g><g><title>sqlx_mysql::types::chrono::encode_date (2 samples, 0.08%)</title><rect x="66.0106%" y="1141" width="0.0757%" height="15" fill="rgb(245,143,14)" fg:x="1744" fg:w="2"/><text x="66.2606%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.08%)</title><rect x="66.0106%" y="1125" width="0.0757%" height="15" fill="rgb(222,130,28)" fg:x="1744" fg:w="2"/><text x="66.2606%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.08%)</title><rect x="66.0106%" y="1109" width="0.0757%" height="15" fill="rgb(212,10,48)" fg:x="1744" fg:w="2"/><text x="66.2606%" y="1119.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::with_timezone (1 samples, 0.04%)</title><rect x="66.0863%" y="1221" width="0.0379%" height="15" fill="rgb(254,118,45)" fg:x="1746" fg:w="1"/><text x="66.3363%" y="1231.50"></text></g><g><title>chrono::offset::TimeZone::from_utc_datetime (1 samples, 0.04%)</title><rect x="66.0863%" y="1205" width="0.0379%" height="15" fill="rgb(228,6,45)" fg:x="1746" fg:w="1"/><text x="66.3363%" y="1215.50"></text></g><g><title>&lt;chrono::offset::local::Local as chrono::offset::TimeZone&gt;::offset_from_utc_datetime (1 samples, 0.04%)</title><rect x="66.0863%" y="1189" width="0.0379%" height="15" fill="rgb(241,18,35)" fg:x="1746" fg:w="1"/><text x="66.3363%" y="1199.50"></text></g><g><title>chrono::offset::local::inner::offset_from_utc_datetime (1 samples, 0.04%)</title><rect x="66.0863%" y="1173" width="0.0379%" height="15" fill="rgb(227,214,53)" fg:x="1746" fg:w="1"/><text x="66.3363%" y="1183.50"></text></g><g><title>chrono::offset::local::inner::offset (1 samples, 0.04%)</title><rect x="66.0863%" y="1157" width="0.0379%" height="15" fill="rgb(224,107,51)" fg:x="1746" fg:w="1"/><text x="66.3363%" y="1167.50"></text></g><g><title>chrono::offset::local::Local::now (3 samples, 0.11%)</title><rect x="66.0863%" y="1237" width="0.1136%" height="15" fill="rgb(248,60,28)" fg:x="1746" fg:w="3"/><text x="66.3363%" y="1247.50"></text></g><g><title>chrono::offset::utc::Utc::now (2 samples, 0.08%)</title><rect x="66.1241%" y="1221" width="0.0757%" height="15" fill="rgb(249,101,23)" fg:x="1747" fg:w="2"/><text x="66.3741%" y="1231.50"></text></g><g><title>std::time::SystemTime::now (1 samples, 0.04%)</title><rect x="66.1620%" y="1205" width="0.0379%" height="15" fill="rgb(228,51,19)" fg:x="1748" fg:w="1"/><text x="66.4120%" y="1215.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (1 samples, 0.04%)</title><rect x="66.1620%" y="1189" width="0.0379%" height="15" fill="rgb(213,20,6)" fg:x="1748" fg:w="1"/><text x="66.4120%" y="1199.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="66.1620%" y="1173" width="0.0379%" height="15" fill="rgb(212,124,10)" fg:x="1748" fg:w="1"/><text x="66.4120%" y="1183.50"></text></g><g><title>clock_gettime (1 samples, 0.04%)</title><rect x="66.1620%" y="1157" width="0.0379%" height="15" fill="rgb(248,3,40)" fg:x="1748" fg:w="1"/><text x="66.4120%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="66.1620%" y="1141" width="0.0379%" height="15" fill="rgb(223,178,23)" fg:x="1748" fg:w="1"/><text x="66.4120%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem_openapi::param::query::Query&lt;core::option::Option&lt;alloc::string::String&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="66.1998%" y="1237" width="0.0379%" height="15" fill="rgb(240,132,45)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.04%)</title><rect x="66.1998%" y="1221" width="0.0379%" height="15" fill="rgb(245,164,36)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="66.1998%" y="1205" width="0.0379%" height="15" fill="rgb(231,188,53)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="66.1998%" y="1189" width="0.0379%" height="15" fill="rgb(237,198,39)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="66.1998%" y="1173" width="0.0379%" height="15" fill="rgb(223,120,35)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="66.1998%" y="1157" width="0.0379%" height="15" fill="rgb(253,107,49)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="66.1998%" y="1141" width="0.0379%" height="15" fill="rgb(216,44,31)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="66.1998%" y="1125" width="0.0379%" height="15" fill="rgb(253,87,21)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1135.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="66.1998%" y="1109" width="0.0379%" height="15" fill="rgb(226,18,2)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1119.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="66.1998%" y="1093" width="0.0379%" height="15" fill="rgb(216,8,46)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1103.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="66.1998%" y="1077" width="0.0379%" height="15" fill="rgb(226,140,39)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="66.1998%" y="1061" width="0.0379%" height="15" fill="rgb(221,194,54)" fg:x="1749" fg:w="1"/><text x="66.4498%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="66.2755%" y="1221" width="0.0757%" height="15" fill="rgb(213,92,11)" fg:x="1751" fg:w="2"/><text x="66.5255%" y="1231.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="66.2755%" y="1205" width="0.0757%" height="15" fill="rgb(229,162,46)" fg:x="1751" fg:w="2"/><text x="66.5255%" y="1215.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (2 samples, 0.08%)</title><rect x="66.2755%" y="1189" width="0.0757%" height="15" fill="rgb(214,111,36)" fg:x="1751" fg:w="2"/><text x="66.5255%" y="1199.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.08%)</title><rect x="66.2755%" y="1173" width="0.0757%" height="15" fill="rgb(207,6,21)" fg:x="1751" fg:w="2"/><text x="66.5255%" y="1183.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.08%)</title><rect x="66.2755%" y="1157" width="0.0757%" height="15" fill="rgb(213,127,38)" fg:x="1751" fg:w="2"/><text x="66.5255%" y="1167.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="66.3134%" y="1141" width="0.0379%" height="15" fill="rgb(238,118,32)" fg:x="1752" fg:w="1"/><text x="66.5634%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="66.3134%" y="1125" width="0.0379%" height="15" fill="rgb(240,139,39)" fg:x="1752" fg:w="1"/><text x="66.5634%" y="1135.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="66.3134%" y="1109" width="0.0379%" height="15" fill="rgb(235,10,37)" fg:x="1752" fg:w="1"/><text x="66.5634%" y="1119.50"></text></g><g><title>fabseapi::Api::vehicle_insert::_{{closure}} (11 samples, 0.42%)</title><rect x="65.9727%" y="1253" width="0.4164%" height="15" fill="rgb(249,171,38)" fg:x="1743" fg:w="11"/><text x="66.2227%" y="1263.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (4 samples, 0.15%)</title><rect x="66.2377%" y="1237" width="0.1514%" height="15" fill="rgb(242,144,32)" fg:x="1750" fg:w="4"/><text x="66.4877%" y="1247.50"></text></g><g><title>sqlx_core::executor::Executor::execute (1 samples, 0.04%)</title><rect x="66.3512%" y="1221" width="0.0379%" height="15" fill="rgb(217,117,21)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1231.50"></text></g><g><title>sqlx_core::executor::Executor::execute_many (1 samples, 0.04%)</title><rect x="66.3512%" y="1205" width="0.0379%" height="15" fill="rgb(249,87,1)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1215.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many (1 samples, 0.04%)</title><rect x="66.3512%" y="1189" width="0.0379%" height="15" fill="rgb(248,196,48)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1199.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="66.3512%" y="1173" width="0.0379%" height="15" fill="rgb(251,206,33)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1183.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="66.3512%" y="1157" width="0.0379%" height="15" fill="rgb(232,141,28)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="66.3512%" y="1141" width="0.0379%" height="15" fill="rgb(209,167,14)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="66.3512%" y="1125" width="0.0379%" height="15" fill="rgb(225,11,50)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="66.3512%" y="1109" width="0.0379%" height="15" fill="rgb(209,50,20)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="66.3512%" y="1093" width="0.0379%" height="15" fill="rgb(212,17,46)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="66.3512%" y="1077" width="0.0379%" height="15" fill="rgb(216,101,39)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="66.3512%" y="1061" width="0.0379%" height="15" fill="rgb(212,228,48)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1071.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="66.3512%" y="1045" width="0.0379%" height="15" fill="rgb(250,6,50)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1055.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="66.3512%" y="1029" width="0.0379%" height="15" fill="rgb(250,160,48)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1039.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="66.3512%" y="1013" width="0.0379%" height="15" fill="rgb(244,216,33)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="66.3512%" y="997" width="0.0379%" height="15" fill="rgb(207,157,5)" fg:x="1753" fg:w="1"/><text x="66.6012%" y="1007.50"></text></g><g><title>&lt;core::fmt::Formatter as powerfmt::ext::FormatterExt&gt;::pad_with_width (5 samples, 0.19%)</title><rect x="66.4269%" y="1173" width="0.1893%" height="15" fill="rgb(228,199,8)" fg:x="1755" fg:w="5"/><text x="66.6769%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.08%)</title><rect x="67.2218%" y="1077" width="0.0757%" height="15" fill="rgb(227,80,20)" fg:x="1776" fg:w="2"/><text x="67.4718%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.04%)</title><rect x="67.3354%" y="1029" width="0.0379%" height="15" fill="rgb(222,9,33)" fg:x="1779" fg:w="1"/><text x="67.5854%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.11%)</title><rect x="67.3354%" y="1045" width="0.1136%" height="15" fill="rgb(239,44,28)" fg:x="1779" fg:w="3"/><text x="67.5854%" y="1055.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.08%)</title><rect x="67.3732%" y="1029" width="0.0757%" height="15" fill="rgb(249,187,43)" fg:x="1780" fg:w="2"/><text x="67.6232%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="67.4868%" y="1013" width="0.0379%" height="15" fill="rgb(216,141,28)" fg:x="1783" fg:w="1"/><text x="67.7368%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="67.5246%" y="1013" width="0.0379%" height="15" fill="rgb(230,154,53)" fg:x="1784" fg:w="1"/><text x="67.7746%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.53%)</title><rect x="67.5625%" y="1013" width="0.5299%" height="15" fill="rgb(227,82,4)" fg:x="1785" fg:w="14"/><text x="67.8125%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.26%)</title><rect x="67.8274%" y="997" width="0.2650%" height="15" fill="rgb(220,107,16)" fg:x="1792" fg:w="7"/><text x="68.0774%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.26%)</title><rect x="67.8274%" y="981" width="0.2650%" height="15" fill="rgb(207,187,2)" fg:x="1792" fg:w="7"/><text x="68.0774%" y="991.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.26%)</title><rect x="67.8274%" y="965" width="0.2650%" height="15" fill="rgb(210,162,52)" fg:x="1792" fg:w="7"/><text x="68.0774%" y="975.50"></text></g><g><title>__rdl_realloc (7 samples, 0.26%)</title><rect x="67.8274%" y="949" width="0.2650%" height="15" fill="rgb(217,216,49)" fg:x="1792" fg:w="7"/><text x="68.0774%" y="959.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (7 samples, 0.26%)</title><rect x="67.8274%" y="933" width="0.2650%" height="15" fill="rgb(218,146,49)" fg:x="1792" fg:w="7"/><text x="68.0774%" y="943.50"></text></g><g><title>realloc (7 samples, 0.26%)</title><rect x="67.8274%" y="917" width="0.2650%" height="15" fill="rgb(216,55,40)" fg:x="1792" fg:w="7"/><text x="68.0774%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="68.0924%" y="1013" width="0.0379%" height="15" fill="rgb(208,196,21)" fg:x="1799" fg:w="1"/><text x="68.3424%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.04%)</title><rect x="68.0924%" y="997" width="0.0379%" height="15" fill="rgb(242,117,42)" fg:x="1799" fg:w="1"/><text x="68.3424%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 0.91%)</title><rect x="67.2975%" y="1077" width="0.9084%" height="15" fill="rgb(210,11,23)" fg:x="1778" fg:w="24"/><text x="67.5475%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.87%)</title><rect x="67.3354%" y="1061" width="0.8706%" height="15" fill="rgb(217,110,2)" fg:x="1779" fg:w="23"/><text x="67.5854%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.76%)</title><rect x="67.4489%" y="1045" width="0.7570%" height="15" fill="rgb(229,77,54)" fg:x="1782" fg:w="20"/><text x="67.6989%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.76%)</title><rect x="67.4489%" y="1029" width="0.7570%" height="15" fill="rgb(218,53,16)" fg:x="1782" fg:w="20"/><text x="67.6989%" y="1039.50"></text></g><g><title>core::cmp::max (2 samples, 0.08%)</title><rect x="68.1302%" y="1013" width="0.0757%" height="15" fill="rgb(215,38,13)" fg:x="1800" fg:w="2"/><text x="68.3802%" y="1023.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.08%)</title><rect x="68.1302%" y="997" width="0.0757%" height="15" fill="rgb(235,42,18)" fg:x="1800" fg:w="2"/><text x="68.3802%" y="1007.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.08%)</title><rect x="68.1302%" y="981" width="0.0757%" height="15" fill="rgb(219,66,54)" fg:x="1800" fg:w="2"/><text x="68.3802%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (53 samples, 2.01%)</title><rect x="66.7298%" y="1157" width="2.0061%" height="15" fill="rgb(222,205,4)" fg:x="1763" fg:w="53"/><text x="66.9798%" y="1167.50">&lt;..</text></g><g><title>alloc::string::String::push_str (43 samples, 1.63%)</title><rect x="67.1083%" y="1141" width="1.6276%" height="15" fill="rgb(227,213,46)" fg:x="1773" fg:w="43"/><text x="67.3583%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (43 samples, 1.63%)</title><rect x="67.1083%" y="1125" width="1.6276%" height="15" fill="rgb(250,145,42)" fg:x="1773" fg:w="43"/><text x="67.3583%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (43 samples, 1.63%)</title><rect x="67.1083%" y="1109" width="1.6276%" height="15" fill="rgb(219,15,2)" fg:x="1773" fg:w="43"/><text x="67.3583%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (43 samples, 1.63%)</title><rect x="67.1083%" y="1093" width="1.6276%" height="15" fill="rgb(231,181,52)" fg:x="1773" fg:w="43"/><text x="67.3583%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.53%)</title><rect x="68.2059%" y="1077" width="0.5299%" height="15" fill="rgb(235,1,42)" fg:x="1802" fg:w="14"/><text x="68.4559%" y="1087.50"></text></g><g><title>[libc.so.6] (9 samples, 0.34%)</title><rect x="68.3952%" y="1061" width="0.3407%" height="15" fill="rgb(249,88,27)" fg:x="1807" fg:w="9"/><text x="68.6452%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="68.7358%" y="1157" width="0.0379%" height="15" fill="rgb(235,145,16)" fg:x="1816" fg:w="1"/><text x="68.9858%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="68.7358%" y="1141" width="0.0379%" height="15" fill="rgb(237,114,19)" fg:x="1816" fg:w="1"/><text x="68.9858%" y="1151.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="68.7358%" y="1125" width="0.0379%" height="15" fill="rgb(238,51,50)" fg:x="1816" fg:w="1"/><text x="68.9858%" y="1135.50"></text></g><g><title>core::fmt::Formatter::new (2 samples, 0.08%)</title><rect x="68.7737%" y="1157" width="0.0757%" height="15" fill="rgb(205,194,25)" fg:x="1817" fg:w="2"/><text x="69.0237%" y="1167.50"></text></g><g><title>core::fmt::getcount (9 samples, 0.34%)</title><rect x="69.0765%" y="1141" width="0.3407%" height="15" fill="rgb(215,203,17)" fg:x="1825" fg:w="9"/><text x="69.3265%" y="1151.50"></text></g><g><title>core::fmt::rt::Argument::as_usize (5 samples, 0.19%)</title><rect x="69.2279%" y="1125" width="0.1893%" height="15" fill="rgb(233,112,49)" fg:x="1829" fg:w="5"/><text x="69.4779%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.04%)</title><rect x="70.1741%" y="997" width="0.0379%" height="15" fill="rgb(241,130,26)" fg:x="1854" fg:w="1"/><text x="70.4241%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="70.2877%" y="933" width="0.0379%" height="15" fill="rgb(252,223,19)" fg:x="1857" fg:w="1"/><text x="70.5377%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.08%)</title><rect x="70.3634%" y="917" width="0.0757%" height="15" fill="rgb(211,95,25)" fg:x="1859" fg:w="2"/><text x="70.6134%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.57%)</title><rect x="70.3255%" y="933" width="0.5678%" height="15" fill="rgb(251,182,27)" fg:x="1858" fg:w="15"/><text x="70.5755%" y="943.50"></text></g><g><title>malloc (12 samples, 0.45%)</title><rect x="70.4391%" y="917" width="0.4542%" height="15" fill="rgb(238,24,4)" fg:x="1861" fg:w="12"/><text x="70.6891%" y="927.50"></text></g><g><title>[libc.so.6] (6 samples, 0.23%)</title><rect x="70.6662%" y="901" width="0.2271%" height="15" fill="rgb(224,220,25)" fg:x="1867" fg:w="6"/><text x="70.9162%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="70.8554%" y="885" width="0.0379%" height="15" fill="rgb(239,133,26)" fg:x="1872" fg:w="1"/><text x="71.1054%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.72%)</title><rect x="70.2120%" y="997" width="0.7192%" height="15" fill="rgb(211,94,48)" fg:x="1855" fg:w="19"/><text x="70.4620%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.68%)</title><rect x="70.2498%" y="981" width="0.6813%" height="15" fill="rgb(239,87,6)" fg:x="1856" fg:w="18"/><text x="70.4998%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.68%)</title><rect x="70.2498%" y="965" width="0.6813%" height="15" fill="rgb(227,62,0)" fg:x="1856" fg:w="18"/><text x="70.4998%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.64%)</title><rect x="70.2877%" y="949" width="0.6435%" height="15" fill="rgb(211,226,4)" fg:x="1857" fg:w="17"/><text x="70.5377%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="70.8933%" y="933" width="0.0379%" height="15" fill="rgb(253,38,52)" fg:x="1873" fg:w="1"/><text x="71.1433%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.04%)</title><rect x="70.8933%" y="917" width="0.0379%" height="15" fill="rgb(229,126,40)" fg:x="1873" fg:w="1"/><text x="71.1433%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (36 samples, 1.36%)</title><rect x="69.9849%" y="1077" width="1.3626%" height="15" fill="rgb(229,165,44)" fg:x="1849" fg:w="36"/><text x="70.2349%" y="1087.50"></text></g><g><title>alloc::string::String::push_str (32 samples, 1.21%)</title><rect x="70.1363%" y="1061" width="1.2112%" height="15" fill="rgb(247,95,47)" fg:x="1853" fg:w="32"/><text x="70.3863%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (32 samples, 1.21%)</title><rect x="70.1363%" y="1045" width="1.2112%" height="15" fill="rgb(216,140,30)" fg:x="1853" fg:w="32"/><text x="70.3863%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (32 samples, 1.21%)</title><rect x="70.1363%" y="1029" width="1.2112%" height="15" fill="rgb(246,214,8)" fg:x="1853" fg:w="32"/><text x="70.3863%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (32 samples, 1.21%)</title><rect x="70.1363%" y="1013" width="1.2112%" height="15" fill="rgb(227,224,15)" fg:x="1853" fg:w="32"/><text x="70.3863%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.42%)</title><rect x="70.9311%" y="997" width="0.4164%" height="15" fill="rgb(233,175,4)" fg:x="1874" fg:w="11"/><text x="71.1811%" y="1007.50"></text></g><g><title>[libc.so.6] (5 samples, 0.19%)</title><rect x="71.1582%" y="981" width="0.1893%" height="15" fill="rgb(221,66,45)" fg:x="1880" fg:w="5"/><text x="71.4082%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="71.6503%" y="1061" width="0.0379%" height="15" fill="rgb(221,178,18)" fg:x="1893" fg:w="1"/><text x="71.9003%" y="1071.50"></text></g><g><title>core::fmt::Formatter::pad_integral (19 samples, 0.72%)</title><rect x="71.3475%" y="1077" width="0.7192%" height="15" fill="rgb(213,81,29)" fg:x="1885" fg:w="19"/><text x="71.5975%" y="1087.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 samples, 0.38%)</title><rect x="71.6881%" y="1061" width="0.3785%" height="15" fill="rgb(220,89,49)" fg:x="1894" fg:w="10"/><text x="71.9381%" y="1071.50"></text></g><g><title>&lt;deranged::RangedU8&lt;_,_&gt; as core::fmt::Display&gt;::fmt (72 samples, 2.73%)</title><rect x="69.5307%" y="1125" width="2.7252%" height="15" fill="rgb(227,60,33)" fg:x="1837" fg:w="72"/><text x="69.7807%" y="1135.50">&lt;d..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (62 samples, 2.35%)</title><rect x="69.9092%" y="1109" width="2.3467%" height="15" fill="rgb(205,113,12)" fg:x="1847" fg:w="62"/><text x="70.1592%" y="1119.50">c..</text></g><g><title>core::fmt::num::imp::fmt_u64 (62 samples, 2.35%)</title><rect x="69.9092%" y="1093" width="2.3467%" height="15" fill="rgb(211,32,1)" fg:x="1847" fg:w="62"/><text x="70.1592%" y="1103.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.19%)</title><rect x="72.0666%" y="1077" width="0.1893%" height="15" fill="rgb(246,2,12)" fg:x="1904" fg:w="5"/><text x="72.3166%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.08%)</title><rect x="72.4451%" y="1093" width="0.0757%" height="15" fill="rgb(243,37,27)" fg:x="1914" fg:w="2"/><text x="72.6951%" y="1103.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="72.4830%" y="1077" width="0.0379%" height="15" fill="rgb(248,211,31)" fg:x="1915" fg:w="1"/><text x="72.7330%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="72.4830%" y="1061" width="0.0379%" height="15" fill="rgb(242,146,47)" fg:x="1915" fg:w="1"/><text x="72.7330%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="72.4830%" y="1045" width="0.0379%" height="15" fill="rgb(206,70,20)" fg:x="1915" fg:w="1"/><text x="72.7330%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="72.4830%" y="1029" width="0.0379%" height="15" fill="rgb(215,10,51)" fg:x="1915" fg:w="1"/><text x="72.7330%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="72.4830%" y="1013" width="0.0379%" height="15" fill="rgb(243,178,53)" fg:x="1915" fg:w="1"/><text x="72.7330%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="72.4830%" y="997" width="0.0379%" height="15" fill="rgb(233,221,20)" fg:x="1915" fg:w="1"/><text x="72.7330%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="72.7479%" y="1077" width="0.0379%" height="15" fill="rgb(218,95,35)" fg:x="1922" fg:w="1"/><text x="72.9979%" y="1087.50"></text></g><g><title>core::fmt::Formatter::pad_integral (8 samples, 0.30%)</title><rect x="72.5208%" y="1093" width="0.3028%" height="15" fill="rgb(229,13,5)" fg:x="1916" fg:w="8"/><text x="72.7708%" y="1103.50"></text></g><g><title>core::fmt::Formatter::sign_plus (1 samples, 0.04%)</title><rect x="72.7858%" y="1077" width="0.0379%" height="15" fill="rgb(252,164,30)" fg:x="1923" fg:w="1"/><text x="73.0358%" y="1087.50"></text></g><g><title>core::fmt::rt::Argument::fmt (92 samples, 3.48%)</title><rect x="69.4171%" y="1141" width="3.4822%" height="15" fill="rgb(232,68,36)" fg:x="1834" fg:w="92"/><text x="69.6671%" y="1151.50">cor..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (17 samples, 0.64%)</title><rect x="72.2559%" y="1125" width="0.6435%" height="15" fill="rgb(219,59,54)" fg:x="1909" fg:w="17"/><text x="72.5059%" y="1135.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (16 samples, 0.61%)</title><rect x="72.2937%" y="1109" width="0.6056%" height="15" fill="rgb(250,92,33)" fg:x="1910" fg:w="16"/><text x="72.5437%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.08%)</title><rect x="72.8236%" y="1093" width="0.0757%" height="15" fill="rgb(229,162,54)" fg:x="1924" fg:w="2"/><text x="73.0736%" y="1103.50"></text></g><g><title>core::fmt::run (108 samples, 4.09%)</title><rect x="68.8494%" y="1157" width="4.0878%" height="15" fill="rgb(244,114,52)" fg:x="1819" fg:w="108"/><text x="69.0994%" y="1167.50">core..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="72.8993%" y="1141" width="0.0379%" height="15" fill="rgb(212,211,43)" fg:x="1926" fg:w="1"/><text x="73.1493%" y="1151.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="72.8993%" y="1125" width="0.0379%" height="15" fill="rgb(226,147,8)" fg:x="1926" fg:w="1"/><text x="73.1493%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="72.8993%" y="1109" width="0.0379%" height="15" fill="rgb(226,23,13)" fg:x="1926" fg:w="1"/><text x="73.1493%" y="1119.50"></text></g><g><title>&lt;time::time::Time as powerfmt::smart_display::SmartDisplay&gt;::fmt_with_metadata (173 samples, 6.55%)</title><rect x="66.4269%" y="1189" width="6.5481%" height="15" fill="rgb(240,63,4)" fg:x="1755" fg:w="173"/><text x="66.6769%" y="1199.50">&lt;time::ti..</text></g><g><title>core::fmt::write (168 samples, 6.36%)</title><rect x="66.6162%" y="1173" width="6.3588%" height="15" fill="rgb(221,1,32)" fg:x="1760" fg:w="168"/><text x="66.8662%" y="1183.50">core::fm..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="72.9372%" y="1157" width="0.0379%" height="15" fill="rgb(242,117,10)" fg:x="1927" fg:w="1"/><text x="73.1872%" y="1167.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="72.9372%" y="1141" width="0.0379%" height="15" fill="rgb(249,172,44)" fg:x="1927" fg:w="1"/><text x="73.1872%" y="1151.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (179 samples, 6.78%)</title><rect x="66.3891%" y="1237" width="6.7752%" height="15" fill="rgb(244,46,45)" fg:x="1754" fg:w="179"/><text x="66.6391%" y="1247.50">&lt;T as all..</text></g><g><title>&lt;time::time::Time as core::fmt::Display&gt;::fmt (179 samples, 6.78%)</title><rect x="66.3891%" y="1221" width="6.7752%" height="15" fill="rgb(206,43,17)" fg:x="1754" fg:w="179"/><text x="66.6391%" y="1231.50">&lt;time::ti..</text></g><g><title>powerfmt::smart_display::SmartDisplay::fmt (178 samples, 6.74%)</title><rect x="66.4269%" y="1205" width="6.7373%" height="15" fill="rgb(239,218,39)" fg:x="1755" fg:w="178"/><text x="66.6769%" y="1215.50">powerfmt:..</text></g><g><title>&lt;time::time::Time as powerfmt::smart_display::SmartDisplay&gt;::metadata (5 samples, 0.19%)</title><rect x="72.9750%" y="1189" width="0.1893%" height="15" fill="rgb(208,169,54)" fg:x="1928" fg:w="5"/><text x="73.2250%" y="1199.50"></text></g><g><title>powerfmt::smart_display::Metadata&lt;core::convert::Infallible&gt;::padded_width_of (1 samples, 0.04%)</title><rect x="73.1264%" y="1173" width="0.0379%" height="15" fill="rgb(247,25,42)" fg:x="1932" fg:w="1"/><text x="73.3764%" y="1183.50"></text></g><g><title>powerfmt::smart_display_impls::&lt;impl powerfmt::smart_display::SmartDisplay for &amp;T&gt;::metadata (1 samples, 0.04%)</title><rect x="73.1264%" y="1157" width="0.0379%" height="15" fill="rgb(226,23,31)" fg:x="1932" fg:w="1"/><text x="73.3764%" y="1167.50"></text></g><g><title>powerfmt::smart_display_impls::&lt;impl powerfmt::smart_display::SmartDisplay for u8&gt;::metadata (1 samples, 0.04%)</title><rect x="73.1264%" y="1141" width="0.0379%" height="15" fill="rgb(247,16,28)" fg:x="1932" fg:w="1"/><text x="73.3764%" y="1151.50"></text></g><g><title>core::num::&lt;impl u8&gt;::checked_ilog10 (1 samples, 0.04%)</title><rect x="73.1264%" y="1125" width="0.0379%" height="15" fill="rgb(231,147,38)" fg:x="1932" fg:w="1"/><text x="73.3764%" y="1135.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (10 samples, 0.38%)</title><rect x="73.5428%" y="1173" width="0.3785%" height="15" fill="rgb(253,81,48)" fg:x="1943" fg:w="10"/><text x="73.7928%" y="1183.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch::_{{closure}}::_{{closure}} (10 samples, 0.38%)</title><rect x="73.5428%" y="1157" width="0.3785%" height="15" fill="rgb(249,222,43)" fg:x="1943" fg:w="10"/><text x="73.7928%" y="1167.50"></text></g><g><title>either::Either&lt;L,R&gt;::right (10 samples, 0.38%)</title><rect x="73.5428%" y="1141" width="0.3785%" height="15" fill="rgb(221,3,27)" fg:x="1943" fg:w="10"/><text x="73.7928%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.04%)</title><rect x="74.6783%" y="1093" width="0.0379%" height="15" fill="rgb(228,180,5)" fg:x="1973" fg:w="1"/><text x="74.9283%" y="1103.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (1 samples, 0.04%)</title><rect x="74.6783%" y="1077" width="0.0379%" height="15" fill="rgb(227,131,42)" fg:x="1973" fg:w="1"/><text x="74.9283%" y="1087.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.04%)</title><rect x="74.7161%" y="1093" width="0.0379%" height="15" fill="rgb(212,3,39)" fg:x="1974" fg:w="1"/><text x="74.9661%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="74.7161%" y="1077" width="0.0379%" height="15" fill="rgb(226,45,5)" fg:x="1974" fg:w="1"/><text x="74.9661%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="74.7161%" y="1061" width="0.0379%" height="15" fill="rgb(215,167,45)" fg:x="1974" fg:w="1"/><text x="74.9661%" y="1071.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="74.7161%" y="1045" width="0.0379%" height="15" fill="rgb(250,218,53)" fg:x="1974" fg:w="1"/><text x="74.9661%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.49%)</title><rect x="74.8297%" y="1077" width="0.4921%" height="15" fill="rgb(207,140,0)" fg:x="1977" fg:w="13"/><text x="75.0797%" y="1087.50"></text></g><g><title>core::mem::replace (13 samples, 0.49%)</title><rect x="74.8297%" y="1061" width="0.4921%" height="15" fill="rgb(238,133,51)" fg:x="1977" fg:w="13"/><text x="75.0797%" y="1071.50"></text></g><g><title>core::ptr::read (13 samples, 0.49%)</title><rect x="74.8297%" y="1045" width="0.4921%" height="15" fill="rgb(218,203,53)" fg:x="1977" fg:w="13"/><text x="75.0797%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (25 samples, 0.95%)</title><rect x="74.4890%" y="1125" width="0.9463%" height="15" fill="rgb(226,184,25)" fg:x="1968" fg:w="25"/><text x="74.7390%" y="1135.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (25 samples, 0.95%)</title><rect x="74.4890%" y="1109" width="0.9463%" height="15" fill="rgb(231,121,21)" fg:x="1968" fg:w="25"/><text x="74.7390%" y="1119.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::take (18 samples, 0.68%)</title><rect x="74.7540%" y="1093" width="0.6813%" height="15" fill="rgb(251,14,34)" fg:x="1975" fg:w="18"/><text x="75.0040%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (3 samples, 0.11%)</title><rect x="75.3217%" y="1077" width="0.1136%" height="15" fill="rgb(249,193,11)" fg:x="1990" fg:w="3"/><text x="75.5717%" y="1087.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="75.3217%" y="1061" width="0.1136%" height="15" fill="rgb(220,172,37)" fg:x="1990" fg:w="3"/><text x="75.5717%" y="1071.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (3 samples, 0.11%)</title><rect x="75.3217%" y="1045" width="0.1136%" height="15" fill="rgb(231,229,43)" fg:x="1990" fg:w="3"/><text x="75.5717%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.42%)</title><rect x="75.5867%" y="1045" width="0.4164%" height="15" fill="rgb(250,161,5)" fg:x="1997" fg:w="11"/><text x="75.8367%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="76.1166%" y="1029" width="0.0379%" height="15" fill="rgb(218,225,18)" fg:x="2011" fg:w="1"/><text x="76.3666%" y="1039.50"></text></g><g><title>&lt;&amp;I as sqlx_core::column::ColumnIndex&lt;T&gt;&gt;::index (14 samples, 0.53%)</title><rect x="76.2301%" y="1013" width="0.5299%" height="15" fill="rgb(245,45,42)" fg:x="2014" fg:w="14"/><text x="76.4801%" y="1023.50"></text></g><g><title>sqlx_mysql::&lt;impl sqlx_core::column::ColumnIndex&lt;sqlx_mysql::row::MySqlRow&gt; for usize&gt;::index (14 samples, 0.53%)</title><rect x="76.2301%" y="997" width="0.5299%" height="15" fill="rgb(211,115,1)" fg:x="2014" fg:w="14"/><text x="76.4801%" y="1007.50"></text></g><g><title>sqlx_core::row::Row::len (12 samples, 0.45%)</title><rect x="76.3058%" y="981" width="0.4542%" height="15" fill="rgb(248,133,52)" fg:x="2016" fg:w="12"/><text x="76.5558%" y="991.50"></text></g><g><title>&lt;sqlx_mysql::row::MySqlRow as sqlx_core::row::Row&gt;::columns (12 samples, 0.45%)</title><rect x="76.3058%" y="965" width="0.4542%" height="15" fill="rgb(238,100,21)" fg:x="2016" fg:w="12"/><text x="76.5558%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.45%)</title><rect x="76.3058%" y="949" width="0.4542%" height="15" fill="rgb(247,144,11)" fg:x="2016" fg:w="12"/><text x="76.5558%" y="959.50"></text></g><g><title>&lt;sqlx_mysql::protocol::text::column::ColumnFlags as core::clone::Clone&gt;::clone (7 samples, 0.26%)</title><rect x="76.7600%" y="997" width="0.2650%" height="15" fill="rgb(206,164,16)" fg:x="2028" fg:w="7"/><text x="77.0100%" y="1007.50"></text></g><g><title>&lt;sqlx_mysql::type_info::MySqlTypeInfo as core::clone::Clone&gt;::clone (9 samples, 0.34%)</title><rect x="76.7600%" y="1013" width="0.3407%" height="15" fill="rgb(222,34,3)" fg:x="2028" fg:w="9"/><text x="77.0100%" y="1023.50"></text></g><g><title>&lt;sqlx_mysql::protocol::text::column::ColumnType as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="77.0250%" y="997" width="0.0757%" height="15" fill="rgb(248,82,4)" fg:x="2035" fg:w="2"/><text x="77.2750%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="77.1385%" y="997" width="0.0379%" height="15" fill="rgb(228,81,46)" fg:x="2038" fg:w="1"/><text x="77.3885%" y="1007.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="77.1385%" y="981" width="0.0379%" height="15" fill="rgb(227,67,47)" fg:x="2038" fg:w="1"/><text x="77.3885%" y="991.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="77.1385%" y="965" width="0.0379%" height="15" fill="rgb(215,93,53)" fg:x="2038" fg:w="1"/><text x="77.3885%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="77.1764%" y="997" width="0.0379%" height="15" fill="rgb(248,194,39)" fg:x="2039" fg:w="1"/><text x="77.4264%" y="1007.50"></text></g><g><title>&lt;sqlx_mysql::row::MySqlRow as sqlx_core::row::Row&gt;::try_get_raw (32 samples, 1.21%)</title><rect x="76.1544%" y="1029" width="1.2112%" height="15" fill="rgb(215,5,19)" fg:x="2012" fg:w="32"/><text x="76.4044%" y="1039.50"></text></g><g><title>sqlx_mysql::protocol::row::Row::get (7 samples, 0.26%)</title><rect x="77.1007%" y="1013" width="0.2650%" height="15" fill="rgb(226,215,51)" fg:x="2037" fg:w="7"/><text x="77.3507%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.15%)</title><rect x="77.2142%" y="997" width="0.1514%" height="15" fill="rgb(225,56,26)" fg:x="2040" fg:w="4"/><text x="77.4642%" y="1007.50"></text></g><g><title>sqlx_mysql::protocol::row::Row::get::_{{closure}} (4 samples, 0.15%)</title><rect x="77.2142%" y="981" width="0.1514%" height="15" fill="rgb(222,75,29)" fg:x="2040" fg:w="4"/><text x="77.4642%" y="991.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.08%)</title><rect x="77.2899%" y="965" width="0.0757%" height="15" fill="rgb(236,139,6)" fg:x="2042" fg:w="2"/><text x="77.5399%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.08%)</title><rect x="77.2899%" y="949" width="0.0757%" height="15" fill="rgb(223,137,36)" fg:x="2042" fg:w="2"/><text x="77.5399%" y="959.50"></text></g><g><title>&lt;sqlx_mysql::value::MySqlValueRef as sqlx_core::value::ValueRef&gt;::is_null (1 samples, 0.04%)</title><rect x="77.3656%" y="1029" width="0.0379%" height="15" fill="rgb(226,99,2)" fg:x="2044" fg:w="1"/><text x="77.6156%" y="1039.50"></text></g><g><title>sqlx_mysql::value::is_null (1 samples, 0.04%)</title><rect x="77.3656%" y="1013" width="0.0379%" height="15" fill="rgb(206,133,23)" fg:x="2044" fg:w="1"/><text x="77.6156%" y="1023.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.30%)</title><rect x="77.4035%" y="1029" width="0.3028%" height="15" fill="rgb(243,173,15)" fg:x="2045" fg:w="8"/><text x="77.6535%" y="1039.50"></text></g><g><title>sqlx_mysql::types::float::&lt;impl sqlx_core::decode::Decode&lt;sqlx_mysql::database::MySql&gt; for f64&gt;::decode (2 samples, 0.08%)</title><rect x="77.7063%" y="1029" width="0.0757%" height="15" fill="rgb(228,69,28)" fg:x="2053" fg:w="2"/><text x="77.9563%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.08%)</title><rect x="77.7063%" y="1013" width="0.0757%" height="15" fill="rgb(212,51,22)" fg:x="2053" fg:w="2"/><text x="77.9563%" y="1023.50"></text></g><g><title>sqlx_mysql::types::int::&lt;impl sqlx_core::decode::Decode&lt;sqlx_mysql::database::MySql&gt; for i64&gt;::decode (5 samples, 0.19%)</title><rect x="77.7820%" y="1029" width="0.1893%" height="15" fill="rgb(227,113,0)" fg:x="2055" fg:w="5"/><text x="78.0320%" y="1039.50"></text></g><g><title>sqlx_mysql::types::int::int_decode (5 samples, 0.19%)</title><rect x="77.7820%" y="1013" width="0.1893%" height="15" fill="rgb(252,84,27)" fg:x="2055" fg:w="5"/><text x="78.0320%" y="1023.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_uint_le (1 samples, 0.04%)</title><rect x="78.0848%" y="997" width="0.0379%" height="15" fill="rgb(223,145,39)" fg:x="2063" fg:w="1"/><text x="78.3348%" y="1007.50"></text></g><g><title>&lt;&amp;[u8] as bytes::buf::buf_impl::Buf&gt;::copy_to_slice (1 samples, 0.04%)</title><rect x="78.0848%" y="981" width="0.0379%" height="15" fill="rgb(239,219,30)" fg:x="2063" fg:w="1"/><text x="78.3348%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.04%)</title><rect x="78.0848%" y="965" width="0.0379%" height="15" fill="rgb(224,196,39)" fg:x="2063" fg:w="1"/><text x="78.3348%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="78.0848%" y="949" width="0.0379%" height="15" fill="rgb(205,35,43)" fg:x="2063" fg:w="1"/><text x="78.3348%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="78.0848%" y="933" width="0.0379%" height="15" fill="rgb(228,201,21)" fg:x="2063" fg:w="1"/><text x="78.3348%" y="943.50"></text></g><g><title>&lt;(T1,T2,T3,T4,T5,T6) as sqlx_core::from_row::FromRow&lt;R&gt;&gt;::from_row (68 samples, 2.57%)</title><rect x="75.5867%" y="1061" width="2.5738%" height="15" fill="rgb(237,118,16)" fg:x="1997" fg:w="68"/><text x="75.8367%" y="1071.50">&lt;(..</text></g><g><title>sqlx_core::row::Row::try_get (57 samples, 2.16%)</title><rect x="76.0030%" y="1045" width="2.1575%" height="15" fill="rgb(241,17,19)" fg:x="2008" fg:w="57"/><text x="76.2530%" y="1055.50">s..</text></g><g><title>sqlx_mysql::types::time::&lt;impl sqlx_core::decode::Decode&lt;sqlx_mysql::database::MySql&gt; for time::time::Time&gt;::decode (5 samples, 0.19%)</title><rect x="77.9712%" y="1029" width="0.1893%" height="15" fill="rgb(214,10,25)" fg:x="2060" fg:w="5"/><text x="78.2212%" y="1039.50"></text></g><g><title>sqlx_mysql::types::time::decode_time (4 samples, 0.15%)</title><rect x="78.0091%" y="1013" width="0.1514%" height="15" fill="rgb(238,37,29)" fg:x="2061" fg:w="4"/><text x="78.2591%" y="1023.50"></text></g><g><title>time::time::Time::from_hms_micro (1 samples, 0.04%)</title><rect x="78.1226%" y="997" width="0.0379%" height="15" fill="rgb(253,83,25)" fg:x="2064" fg:w="1"/><text x="78.3726%" y="1007.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_mul (1 samples, 0.04%)</title><rect x="78.1226%" y="981" width="0.0379%" height="15" fill="rgb(234,192,12)" fg:x="2064" fg:w="1"/><text x="78.3726%" y="991.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_mul (1 samples, 0.04%)</title><rect x="78.1226%" y="965" width="0.0379%" height="15" fill="rgb(241,216,45)" fg:x="2064" fg:w="1"/><text x="78.3726%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;ahash::hash_map::AHashMap&lt;sqlx_core::ext::ustr::UStr,usize&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="78.1605%" y="1045" width="0.0379%" height="15" fill="rgb(242,22,33)" fg:x="2065" fg:w="1"/><text x="78.4105%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="78.1605%" y="1029" width="0.0379%" height="15" fill="rgb(231,105,49)" fg:x="2065" fg:w="1"/><text x="78.4105%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.04%)</title><rect x="78.1605%" y="1013" width="0.0379%" height="15" fill="rgb(218,204,15)" fg:x="2065" fg:w="1"/><text x="78.4105%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.04%)</title><rect x="78.1605%" y="997" width="0.0379%" height="15" fill="rgb(235,138,41)" fg:x="2065" fg:w="1"/><text x="78.4105%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;sqlx_mysql::column::MySqlColumn&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="78.1983%" y="1045" width="0.0379%" height="15" fill="rgb(246,0,9)" fg:x="2066" fg:w="1"/><text x="78.4483%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="78.1983%" y="1029" width="0.0379%" height="15" fill="rgb(210,74,4)" fg:x="2066" fg:w="1"/><text x="78.4483%" y="1039.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.04%)</title><rect x="78.1983%" y="1013" width="0.0379%" height="15" fill="rgb(250,60,41)" fg:x="2066" fg:w="1"/><text x="78.4483%" y="1023.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="78.1983%" y="997" width="0.0379%" height="15" fill="rgb(220,115,12)" fg:x="2066" fg:w="1"/><text x="78.4483%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;&gt; (6 samples, 0.23%)</title><rect x="78.2362%" y="1029" width="0.2271%" height="15" fill="rgb(237,100,13)" fg:x="2067" fg:w="6"/><text x="78.4862%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;&gt; (6 samples, 0.23%)</title><rect x="78.2362%" y="1013" width="0.2271%" height="15" fill="rgb(213,55,26)" fg:x="2067" fg:w="6"/><text x="78.4862%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.23%)</title><rect x="78.2362%" y="997" width="0.2271%" height="15" fill="rgb(216,17,4)" fg:x="2067" fg:w="6"/><text x="78.4862%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.23%)</title><rect x="78.2362%" y="981" width="0.2271%" height="15" fill="rgb(220,153,47)" fg:x="2067" fg:w="6"/><text x="78.4862%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.23%)</title><rect x="78.2362%" y="965" width="0.2271%" height="15" fill="rgb(215,131,9)" fg:x="2067" fg:w="6"/><text x="78.4862%" y="975.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.23%)</title><rect x="78.2362%" y="949" width="0.2271%" height="15" fill="rgb(233,46,42)" fg:x="2067" fg:w="6"/><text x="78.4862%" y="959.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.23%)</title><rect x="78.2362%" y="933" width="0.2271%" height="15" fill="rgb(226,86,7)" fg:x="2067" fg:w="6"/><text x="78.4862%" y="943.50"></text></g><g><title>cfree (6 samples, 0.23%)</title><rect x="78.2362%" y="917" width="0.2271%" height="15" fill="rgb(239,226,21)" fg:x="2067" fg:w="6"/><text x="78.4862%" y="927.50"></text></g><g><title>[libc.so.6] (5 samples, 0.19%)</title><rect x="78.2740%" y="901" width="0.1893%" height="15" fill="rgb(244,137,22)" fg:x="2068" fg:w="5"/><text x="78.5240%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::row::MySqlRow&gt; (15 samples, 0.57%)</title><rect x="78.1605%" y="1061" width="0.5678%" height="15" fill="rgb(211,139,35)" fg:x="2065" fg:w="15"/><text x="78.4105%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::protocol::row::Row&gt; (13 samples, 0.49%)</title><rect x="78.2362%" y="1045" width="0.4921%" height="15" fill="rgb(214,62,50)" fg:x="2067" fg:w="13"/><text x="78.4862%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (7 samples, 0.26%)</title><rect x="78.4633%" y="1029" width="0.2650%" height="15" fill="rgb(212,113,44)" fg:x="2073" fg:w="7"/><text x="78.7133%" y="1039.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (7 samples, 0.26%)</title><rect x="78.4633%" y="1013" width="0.2650%" height="15" fill="rgb(226,150,43)" fg:x="2073" fg:w="7"/><text x="78.7133%" y="1023.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (7 samples, 0.26%)</title><rect x="78.4633%" y="997" width="0.2650%" height="15" fill="rgb(250,71,37)" fg:x="2073" fg:w="7"/><text x="78.7133%" y="1007.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (6 samples, 0.23%)</title><rect x="78.5011%" y="981" width="0.2271%" height="15" fill="rgb(219,76,19)" fg:x="2074" fg:w="6"/><text x="78.7511%" y="991.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (6 samples, 0.23%)</title><rect x="78.5011%" y="965" width="0.2271%" height="15" fill="rgb(250,39,11)" fg:x="2074" fg:w="6"/><text x="78.7511%" y="975.50"></text></g><g><title>bytes::bytes_mut::release_shared (4 samples, 0.15%)</title><rect x="78.5768%" y="949" width="0.1514%" height="15" fill="rgb(230,64,31)" fg:x="2076" fg:w="4"/><text x="78.8268%" y="959.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (128 samples, 4.84%)</title><rect x="73.9213%" y="1173" width="4.8448%" height="15" fill="rgb(208,222,23)" fg:x="1953" fg:w="128"/><text x="74.1713%" y="1183.50">&lt;S as ..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (128 samples, 4.84%)</title><rect x="73.9213%" y="1157" width="4.8448%" height="15" fill="rgb(227,125,18)" fg:x="1953" fg:w="128"/><text x="74.1713%" y="1167.50">&lt;core:..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (128 samples, 4.84%)</title><rect x="73.9213%" y="1141" width="4.8448%" height="15" fill="rgb(234,210,9)" fg:x="1953" fg:w="128"/><text x="74.1713%" y="1151.50">&lt;futur..</text></g><g><title>core::option::Option&lt;T&gt;::map (88 samples, 3.33%)</title><rect x="75.4353%" y="1125" width="3.3308%" height="15" fill="rgb(217,127,24)" fg:x="1993" fg:w="88"/><text x="75.6853%" y="1135.50">cor..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (88 samples, 3.33%)</title><rect x="75.4353%" y="1109" width="3.3308%" height="15" fill="rgb(239,141,48)" fg:x="1993" fg:w="88"/><text x="75.6853%" y="1119.50">&lt;fu..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (88 samples, 3.33%)</title><rect x="75.4353%" y="1093" width="3.3308%" height="15" fill="rgb(227,109,8)" fg:x="1993" fg:w="88"/><text x="75.6853%" y="1103.50">&lt;T ..</text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many::_{{closure}} (88 samples, 3.33%)</title><rect x="75.4353%" y="1077" width="3.3308%" height="15" fill="rgb(235,184,23)" fg:x="1993" fg:w="88"/><text x="75.6853%" y="1087.50">sql..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="78.7282%" y="1061" width="0.0379%" height="15" fill="rgb(227,226,48)" fg:x="2080" fg:w="1"/><text x="78.9782%" y="1071.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (19 samples, 0.72%)</title><rect x="78.7661%" y="1173" width="0.7192%" height="15" fill="rgb(206,150,11)" fg:x="2081" fg:w="19"/><text x="79.0161%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_pin_mut (1 samples, 0.04%)</title><rect x="79.4852%" y="1173" width="0.0379%" height="15" fill="rgb(254,2,33)" fg:x="2100" fg:w="1"/><text x="79.7352%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.04%)</title><rect x="79.4852%" y="1157" width="0.0379%" height="15" fill="rgb(243,160,20)" fg:x="2100" fg:w="1"/><text x="79.7352%" y="1167.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (169 samples, 6.40%)</title><rect x="73.1643%" y="1237" width="6.3967%" height="15" fill="rgb(218,208,30)" fg:x="1933" fg:w="169"/><text x="73.4143%" y="1247.50">&lt;tokio_s..</text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (169 samples, 6.40%)</title><rect x="73.1643%" y="1221" width="6.3967%" height="15" fill="rgb(224,120,49)" fg:x="1933" fg:w="169"/><text x="73.4143%" y="1231.50">&lt;&amp;mut S ..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (169 samples, 6.40%)</title><rect x="73.1643%" y="1205" width="6.3967%" height="15" fill="rgb(246,12,2)" fg:x="1933" fg:w="169"/><text x="73.4143%" y="1215.50">&lt;core::p..</text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (169 samples, 6.40%)</title><rect x="73.1643%" y="1189" width="6.3967%" height="15" fill="rgb(236,117,3)" fg:x="1933" fg:w="169"/><text x="73.4143%" y="1199.50">&lt;futures..</text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (1 samples, 0.04%)</title><rect x="79.5231%" y="1173" width="0.0379%" height="15" fill="rgb(216,128,52)" fg:x="2101" fg:w="1"/><text x="79.7731%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.42%)</title><rect x="79.5609%" y="1173" width="0.4164%" height="15" fill="rgb(246,145,19)" fg:x="2102" fg:w="11"/><text x="79.8109%" y="1183.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.42%)</title><rect x="79.5609%" y="1157" width="0.4164%" height="15" fill="rgb(222,11,46)" fg:x="2102" fg:w="11"/><text x="79.8109%" y="1167.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.42%)</title><rect x="79.5609%" y="1141" width="0.4164%" height="15" fill="rgb(245,82,36)" fg:x="2102" fg:w="11"/><text x="79.8109%" y="1151.50"></text></g><g><title>__rdl_realloc (11 samples, 0.42%)</title><rect x="79.5609%" y="1125" width="0.4164%" height="15" fill="rgb(250,73,51)" fg:x="2102" fg:w="11"/><text x="79.8109%" y="1135.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (11 samples, 0.42%)</title><rect x="79.5609%" y="1109" width="0.4164%" height="15" fill="rgb(221,189,23)" fg:x="2102" fg:w="11"/><text x="79.8109%" y="1119.50"></text></g><g><title>realloc (11 samples, 0.42%)</title><rect x="79.5609%" y="1093" width="0.4164%" height="15" fill="rgb(210,33,7)" fg:x="2102" fg:w="11"/><text x="79.8109%" y="1103.50"></text></g><g><title>[libc.so.6] (11 samples, 0.42%)</title><rect x="79.5609%" y="1077" width="0.4164%" height="15" fill="rgb(210,107,22)" fg:x="2102" fg:w="11"/><text x="79.8109%" y="1087.50"></text></g><g><title>[libc.so.6] (11 samples, 0.42%)</title><rect x="79.5609%" y="1061" width="0.4164%" height="15" fill="rgb(222,116,37)" fg:x="2102" fg:w="11"/><text x="79.8109%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="79.9394%" y="1045" width="0.0379%" height="15" fill="rgb(254,17,48)" fg:x="2112" fg:w="1"/><text x="80.1894%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.45%)</title><rect x="79.5609%" y="1237" width="0.4542%" height="15" fill="rgb(224,36,32)" fg:x="2102" fg:w="12"/><text x="79.8109%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.45%)</title><rect x="79.5609%" y="1221" width="0.4542%" height="15" fill="rgb(232,90,46)" fg:x="2102" fg:w="12"/><text x="79.8109%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.45%)</title><rect x="79.5609%" y="1205" width="0.4542%" height="15" fill="rgb(241,66,40)" fg:x="2102" fg:w="12"/><text x="79.8109%" y="1215.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.45%)</title><rect x="79.5609%" y="1189" width="0.4542%" height="15" fill="rgb(249,184,29)" fg:x="2102" fg:w="12"/><text x="79.8109%" y="1199.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="79.9773%" y="1173" width="0.0379%" height="15" fill="rgb(231,181,1)" fg:x="2113" fg:w="1"/><text x="80.2273%" y="1183.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1621" width="45.1173%" height="15" fill="rgb(224,94,2)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1631.50">&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::end..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1605" width="45.1173%" height="15" fill="rgb(229,170,15)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1615.50">&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{clos..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1589" width="45.1173%" height="15" fill="rgb(240,127,35)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1599.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{clo..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1573" width="45.1173%" height="15" fill="rgb(248,196,34)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1583.50">&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::e..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1557" width="45.1173%" height="15" fill="rgb(236,137,7)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1567.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1541" width="45.1173%" height="15" fill="rgb(235,127,16)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1551.50">&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endp..</text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1525" width="45.1173%" height="15" fill="rgb(250,192,54)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1535.50">&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint..</text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1509" width="45.1173%" height="15" fill="rgb(218,98,20)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1519.50">&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem..</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1493" width="45.1173%" height="15" fill="rgb(230,176,47)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1503.50">&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1477" width="45.1173%" height="15" fill="rgb(244,2,33)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1487.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{clo..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1461" width="45.1173%" height="15" fill="rgb(231,100,17)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1471.50">&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::e..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1445" width="45.1173%" height="15" fill="rgb(245,23,12)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1455.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1429" width="45.1173%" height="15" fill="rgb(249,55,22)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1439.50">&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endp..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1413" width="45.1173%" height="15" fill="rgb(207,134,9)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1423.50">&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1397" width="45.1173%" height="15" fill="rgb(218,134,0)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1407.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{clo..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1381" width="45.1173%" height="15" fill="rgb(213,212,33)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1391.50">&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::e..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1365" width="45.1173%" height="15" fill="rgb(252,106,18)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1375.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1349" width="45.1173%" height="15" fill="rgb(208,126,42)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1359.50">&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endp..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1333" width="45.1173%" height="15" fill="rgb(246,175,29)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1343.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{clo..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1317" width="45.1173%" height="15" fill="rgb(215,13,50)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1327.50">&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::e..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1301" width="45.1173%" height="15" fill="rgb(216,172,15)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1311.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,192 samples, 45.12%)</title><rect x="34.9357%" y="1285" width="45.1173%" height="15" fill="rgb(212,103,13)" fg:x="923" fg:w="1192"/><text x="35.1857%" y="1295.50">&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoin..</text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (1,190 samples, 45.04%)</title><rect x="35.0114%" y="1269" width="45.0416%" height="15" fill="rgb(231,171,36)" fg:x="925" fg:w="1190"/><text x="35.2614%" y="1279.50">&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::..</text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (361 samples, 13.66%)</title><rect x="66.3891%" y="1253" width="13.6639%" height="15" fill="rgb(250,123,20)" fg:x="1754" fg:w="361"/><text x="66.6391%" y="1263.50">fabseapi::Api::vehicl..</text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch (1 samples, 0.04%)</title><rect x="80.0151%" y="1237" width="0.0379%" height="15" fill="rgb(212,53,50)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1247.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many (1 samples, 0.04%)</title><rect x="80.0151%" y="1221" width="0.0379%" height="15" fill="rgb(243,54,12)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1231.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many (1 samples, 0.04%)</title><rect x="80.0151%" y="1205" width="0.0379%" height="15" fill="rgb(234,101,34)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1215.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="80.0151%" y="1189" width="0.0379%" height="15" fill="rgb(254,67,22)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1199.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="80.0151%" y="1173" width="0.0379%" height="15" fill="rgb(250,35,47)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="80.0151%" y="1157" width="0.0379%" height="15" fill="rgb(226,126,38)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="80.0151%" y="1141" width="0.0379%" height="15" fill="rgb(216,138,53)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="80.0151%" y="1125" width="0.0379%" height="15" fill="rgb(246,199,43)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="80.0151%" y="1109" width="0.0379%" height="15" fill="rgb(232,125,11)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="80.0151%" y="1093" width="0.0379%" height="15" fill="rgb(218,219,45)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="80.0151%" y="1077" width="0.0379%" height="15" fill="rgb(216,102,54)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1087.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="80.0151%" y="1061" width="0.0379%" height="15" fill="rgb(250,228,7)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1071.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="80.0151%" y="1045" width="0.0379%" height="15" fill="rgb(226,125,25)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1055.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="80.0151%" y="1029" width="0.0379%" height="15" fill="rgb(224,165,27)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="80.0151%" y="1013" width="0.0379%" height="15" fill="rgb(233,86,3)" fg:x="2114" fg:w="1"/><text x="80.2651%" y="1023.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="80.0530%" y="1589" width="0.0757%" height="15" fill="rgb(228,116,20)" fg:x="2115" fg:w="2"/><text x="80.3030%" y="1599.50"></text></g><g><title>snprintf (2 samples, 0.08%)</title><rect x="80.0530%" y="1573" width="0.0757%" height="15" fill="rgb(209,192,17)" fg:x="2115" fg:w="2"/><text x="80.3030%" y="1583.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="80.0530%" y="1557" width="0.0757%" height="15" fill="rgb(224,88,34)" fg:x="2115" fg:w="2"/><text x="80.3030%" y="1567.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="80.0530%" y="1541" width="0.0757%" height="15" fill="rgb(233,38,6)" fg:x="2115" fg:w="2"/><text x="80.3030%" y="1551.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="80.0530%" y="1525" width="0.0757%" height="15" fill="rgb(212,59,30)" fg:x="2115" fg:w="2"/><text x="80.3030%" y="1535.50"></text></g><g><title>__ctype_init (3 samples, 0.11%)</title><rect x="80.1287%" y="1589" width="0.1136%" height="15" fill="rgb(213,80,3)" fg:x="2117" fg:w="3"/><text x="80.3787%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="80.2044%" y="1573" width="0.0379%" height="15" fill="rgb(251,178,7)" fg:x="2119" fg:w="1"/><text x="80.4544%" y="1583.50"></text></g><g><title>core::mem::drop (5 samples, 0.19%)</title><rect x="80.2422%" y="1381" width="0.1893%" height="15" fill="rgb(213,154,26)" fg:x="2120" fg:w="5"/><text x="80.4922%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (5 samples, 0.19%)</title><rect x="80.2422%" y="1365" width="0.1893%" height="15" fill="rgb(238,165,49)" fg:x="2120" fg:w="5"/><text x="80.4922%" y="1375.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.19%)</title><rect x="80.2422%" y="1349" width="0.1893%" height="15" fill="rgb(248,91,46)" fg:x="2120" fg:w="5"/><text x="80.4922%" y="1359.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (5 samples, 0.19%)</title><rect x="80.2422%" y="1333" width="0.1893%" height="15" fill="rgb(244,21,52)" fg:x="2120" fg:w="5"/><text x="80.4922%" y="1343.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (5 samples, 0.19%)</title><rect x="80.2422%" y="1317" width="0.1893%" height="15" fill="rgb(247,122,20)" fg:x="2120" fg:w="5"/><text x="80.4922%" y="1327.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (5 samples, 0.19%)</title><rect x="80.2422%" y="1301" width="0.1893%" height="15" fill="rgb(218,27,9)" fg:x="2120" fg:w="5"/><text x="80.4922%" y="1311.50"></text></g><g><title>syscall (5 samples, 0.19%)</title><rect x="80.2422%" y="1285" width="0.1893%" height="15" fill="rgb(246,7,6)" fg:x="2120" fg:w="5"/><text x="80.4922%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.19%)</title><rect x="80.2422%" y="1269" width="0.1893%" height="15" fill="rgb(227,135,54)" fg:x="2120" fg:w="5"/><text x="80.4922%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.19%)</title><rect x="80.2422%" y="1253" width="0.1893%" height="15" fill="rgb(247,14,11)" fg:x="2120" fg:w="5"/><text x="80.4922%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.19%)</title><rect x="80.2422%" y="1237" width="0.1893%" height="15" fill="rgb(206,149,34)" fg:x="2120" fg:w="5"/><text x="80.4922%" y="1247.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="80.3179%" y="1221" width="0.1136%" height="15" fill="rgb(227,228,4)" fg:x="2122" fg:w="3"/><text x="80.5679%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="80.3936%" y="1205" width="0.0379%" height="15" fill="rgb(238,218,28)" fg:x="2124" fg:w="1"/><text x="80.6436%" y="1215.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.04%)</title><rect x="80.4315%" y="1317" width="0.0379%" height="15" fill="rgb(252,86,40)" fg:x="2125" fg:w="1"/><text x="80.6815%" y="1327.50"></text></g><g><title>syscall (1 samples, 0.04%)</title><rect x="80.4315%" y="1301" width="0.0379%" height="15" fill="rgb(251,225,11)" fg:x="2125" fg:w="1"/><text x="80.6815%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="80.4315%" y="1285" width="0.0379%" height="15" fill="rgb(206,46,49)" fg:x="2125" fg:w="1"/><text x="80.6815%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="80.4315%" y="1269" width="0.0379%" height="15" fill="rgb(245,128,24)" fg:x="2125" fg:w="1"/><text x="80.6815%" y="1279.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.42%)</title><rect x="80.4315%" y="1381" width="0.4164%" height="15" fill="rgb(219,177,34)" fg:x="2125" fg:w="11"/><text x="80.6815%" y="1391.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.42%)</title><rect x="80.4315%" y="1365" width="0.4164%" height="15" fill="rgb(218,60,48)" fg:x="2125" fg:w="11"/><text x="80.6815%" y="1375.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (11 samples, 0.42%)</title><rect x="80.4315%" y="1349" width="0.4164%" height="15" fill="rgb(221,11,5)" fg:x="2125" fg:w="11"/><text x="80.6815%" y="1359.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (11 samples, 0.42%)</title><rect x="80.4315%" y="1333" width="0.4164%" height="15" fill="rgb(220,148,13)" fg:x="2125" fg:w="11"/><text x="80.6815%" y="1343.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (10 samples, 0.38%)</title><rect x="80.4693%" y="1317" width="0.3785%" height="15" fill="rgb(210,16,3)" fg:x="2126" fg:w="10"/><text x="80.7193%" y="1327.50"></text></g><g><title>tokio::net::addr::_&lt;impl tokio::net::addr::sealed::ToSocketAddrsPriv for (&amp;str,u16)&gt;::to_socket_addrs::_{{closure}} (1 samples, 0.04%)</title><rect x="80.8478%" y="1125" width="0.0379%" height="15" fill="rgb(236,80,2)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="1135.50"></text></g><g><title>&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (1 samples, 0.04%)</title><rect x="80.8478%" y="1109" width="0.0379%" height="15" fill="rgb(239,129,19)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="1119.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="80.8478%" y="1093" width="0.0379%" height="15" fill="rgb(220,106,35)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="1103.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (1 samples, 0.04%)</title><rect x="80.8478%" y="1077" width="0.0379%" height="15" fill="rgb(252,139,45)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="1087.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (1 samples, 0.04%)</title><rect x="80.8478%" y="1061" width="0.0379%" height="15" fill="rgb(229,8,36)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="1071.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (1 samples, 0.04%)</title><rect x="80.8478%" y="1045" width="0.0379%" height="15" fill="rgb(230,126,33)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="1055.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::_{{closure}} (1 samples, 0.04%)</title><rect x="80.8478%" y="1029" width="0.0379%" height="15" fill="rgb(239,140,21)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="1039.50"></text></g><g><title>getaddrinfo (1 samples, 0.04%)</title><rect x="80.8478%" y="1013" width="0.0379%" height="15" fill="rgb(254,104,9)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="1023.50"></text></g><g><title>_nss_files_gethostbyname4_r (1 samples, 0.04%)</title><rect x="80.8478%" y="997" width="0.0379%" height="15" fill="rgb(239,52,14)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="1007.50"></text></g><g><title>__nss_files_fopen (1 samples, 0.04%)</title><rect x="80.8478%" y="981" width="0.0379%" height="15" fill="rgb(208,227,44)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="991.50"></text></g><g><title>fopen (1 samples, 0.04%)</title><rect x="80.8478%" y="965" width="0.0379%" height="15" fill="rgb(246,18,19)" fg:x="2136" fg:w="1"/><text x="81.0978%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.23%)</title><rect x="80.9235%" y="1077" width="0.2271%" height="15" fill="rgb(235,228,25)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.23%)</title><rect x="80.9235%" y="1061" width="0.2271%" height="15" fill="rgb(240,156,20)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="1071.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime::_{{closure}} (6 samples, 0.23%)</title><rect x="80.9235%" y="1045" width="0.2271%" height="15" fill="rgb(224,8,20)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (6 samples, 0.23%)</title><rect x="80.9235%" y="1029" width="0.2271%" height="15" fill="rgb(214,12,52)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.23%)</title><rect x="80.9235%" y="1013" width="0.2271%" height="15" fill="rgb(211,220,47)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="1023.50"></text></g><g><title>tokio::util::rand::FastRand::new (6 samples, 0.23%)</title><rect x="80.9235%" y="997" width="0.2271%" height="15" fill="rgb(250,173,5)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="1007.50"></text></g><g><title>tokio::util::rand::RngSeed::new (6 samples, 0.23%)</title><rect x="80.9235%" y="981" width="0.2271%" height="15" fill="rgb(250,125,52)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="991.50"></text></g><g><title>tokio::loom::std::rand::seed (6 samples, 0.23%)</title><rect x="80.9235%" y="965" width="0.2271%" height="15" fill="rgb(209,133,18)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="975.50"></text></g><g><title>std::hash::random::RandomState::new (6 samples, 0.23%)</title><rect x="80.9235%" y="949" width="0.2271%" height="15" fill="rgb(216,173,22)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.23%)</title><rect x="80.9235%" y="933" width="0.2271%" height="15" fill="rgb(205,3,22)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.23%)</title><rect x="80.9235%" y="917" width="0.2271%" height="15" fill="rgb(248,22,20)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="927.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::__getit (6 samples, 0.23%)</title><rect x="80.9235%" y="901" width="0.2271%" height="15" fill="rgb(233,6,29)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="911.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (6 samples, 0.23%)</title><rect x="80.9235%" y="885" width="0.2271%" height="15" fill="rgb(240,22,54)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="895.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_initialize (6 samples, 0.23%)</title><rect x="80.9235%" y="869" width="0.2271%" height="15" fill="rgb(231,133,32)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="879.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (6 samples, 0.23%)</title><rect x="80.9235%" y="853" width="0.2271%" height="15" fill="rgb(248,193,4)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="863.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::__getit::_{{closure}} (6 samples, 0.23%)</title><rect x="80.9235%" y="837" width="0.2271%" height="15" fill="rgb(211,178,46)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="847.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::__init (6 samples, 0.23%)</title><rect x="80.9235%" y="821" width="0.2271%" height="15" fill="rgb(224,5,42)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="831.50"></text></g><g><title>std::sys::pal::unix::rand::hashmap_random_keys (6 samples, 0.23%)</title><rect x="80.9235%" y="805" width="0.2271%" height="15" fill="rgb(239,176,25)" fg:x="2138" fg:w="6"/><text x="81.1735%" y="815.50"></text></g><g><title>std::sys::pal::unix::rand::imp::fill_bytes (5 samples, 0.19%)</title><rect x="80.9614%" y="789" width="0.1893%" height="15" fill="rgb(245,187,50)" fg:x="2139" fg:w="5"/><text x="81.2114%" y="799.50"></text></g><g><title>std::sys::pal::unix::rand::imp::getrandom_fill_bytes (5 samples, 0.19%)</title><rect x="80.9614%" y="773" width="0.1893%" height="15" fill="rgb(248,24,15)" fg:x="2139" fg:w="5"/><text x="81.2114%" y="783.50"></text></g><g><title>std::sys::pal::unix::rand::imp::getrandom (5 samples, 0.19%)</title><rect x="80.9614%" y="757" width="0.1893%" height="15" fill="rgb(205,166,13)" fg:x="2139" fg:w="5"/><text x="81.2114%" y="767.50"></text></g><g><title>std::sys::pal::unix::rand::imp::getrandom::getrandom (5 samples, 0.19%)</title><rect x="80.9614%" y="741" width="0.1893%" height="15" fill="rgb(208,114,23)" fg:x="2139" fg:w="5"/><text x="81.2114%" y="751.50"></text></g><g><title>getrandom (5 samples, 0.19%)</title><rect x="80.9614%" y="725" width="0.1893%" height="15" fill="rgb(239,127,18)" fg:x="2139" fg:w="5"/><text x="81.2114%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.19%)</title><rect x="80.9614%" y="709" width="0.1893%" height="15" fill="rgb(219,154,28)" fg:x="2139" fg:w="5"/><text x="81.2114%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.19%)</title><rect x="80.9614%" y="693" width="0.1893%" height="15" fill="rgb(225,157,23)" fg:x="2139" fg:w="5"/><text x="81.2114%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="80.9992%" y="677" width="0.1514%" height="15" fill="rgb(219,8,6)" fg:x="2140" fg:w="4"/><text x="81.2492%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="80.9992%" y="661" width="0.1514%" height="15" fill="rgb(212,47,6)" fg:x="2140" fg:w="4"/><text x="81.2492%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="80.9992%" y="645" width="0.1514%" height="15" fill="rgb(224,190,4)" fg:x="2140" fg:w="4"/><text x="81.2492%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="81.0749%" y="629" width="0.0757%" height="15" fill="rgb(239,183,29)" fg:x="2142" fg:w="2"/><text x="81.3249%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="81.0749%" y="613" width="0.0757%" height="15" fill="rgb(213,57,7)" fg:x="2142" fg:w="2"/><text x="81.3249%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="81.0749%" y="597" width="0.0757%" height="15" fill="rgb(216,148,1)" fg:x="2142" fg:w="2"/><text x="81.3249%" y="607.50"></text></g><g><title>__floattidf (1 samples, 0.04%)</title><rect x="81.1885%" y="933" width="0.0379%" height="15" fill="rgb(236,182,29)" fg:x="2145" fg:w="1"/><text x="81.4385%" y="943.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (5 samples, 0.19%)</title><rect x="81.2263%" y="933" width="0.1893%" height="15" fill="rgb(244,120,48)" fg:x="2146" fg:w="5"/><text x="81.4763%" y="943.50"></text></g><g><title>pow (5 samples, 0.19%)</title><rect x="81.2263%" y="917" width="0.1893%" height="15" fill="rgb(206,71,34)" fg:x="2146" fg:w="5"/><text x="81.4763%" y="927.50"></text></g><g><title>[libm.so.6] (5 samples, 0.19%)</title><rect x="81.2263%" y="901" width="0.1893%" height="15" fill="rgb(242,32,6)" fg:x="2146" fg:w="5"/><text x="81.4763%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="81.3777%" y="885" width="0.0379%" height="15" fill="rgb(241,35,3)" fg:x="2150" fg:w="1"/><text x="81.6277%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="81.3777%" y="869" width="0.0379%" height="15" fill="rgb(222,62,19)" fg:x="2150" fg:w="1"/><text x="81.6277%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (9 samples, 0.34%)</title><rect x="81.1506%" y="949" width="0.3407%" height="15" fill="rgb(223,110,41)" fg:x="2144" fg:w="9"/><text x="81.4006%" y="959.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.08%)</title><rect x="81.4156%" y="933" width="0.0757%" height="15" fill="rgb(208,224,4)" fg:x="2151" fg:w="2"/><text x="81.6656%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (2 samples, 0.08%)</title><rect x="81.4156%" y="917" width="0.0757%" height="15" fill="rgb(241,137,19)" fg:x="2151" fg:w="2"/><text x="81.6656%" y="927.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.08%)</title><rect x="81.4156%" y="901" width="0.0757%" height="15" fill="rgb(244,24,17)" fg:x="2151" fg:w="2"/><text x="81.6656%" y="911.50"></text></g><g><title>clock_gettime (2 samples, 0.08%)</title><rect x="81.4156%" y="885" width="0.0757%" height="15" fill="rgb(245,178,49)" fg:x="2151" fg:w="2"/><text x="81.6656%" y="895.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="81.4534%" y="869" width="0.0379%" height="15" fill="rgb(219,160,38)" fg:x="2152" fg:w="1"/><text x="81.7034%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (4 samples, 0.15%)</title><rect x="81.4913%" y="949" width="0.1514%" height="15" fill="rgb(228,137,14)" fg:x="2153" fg:w="4"/><text x="81.7413%" y="959.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.15%)</title><rect x="81.4913%" y="933" width="0.1514%" height="15" fill="rgb(237,134,11)" fg:x="2153" fg:w="4"/><text x="81.7413%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (4 samples, 0.15%)</title><rect x="81.4913%" y="917" width="0.1514%" height="15" fill="rgb(211,126,44)" fg:x="2153" fg:w="4"/><text x="81.7413%" y="927.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4 samples, 0.15%)</title><rect x="81.4913%" y="901" width="0.1514%" height="15" fill="rgb(226,171,33)" fg:x="2153" fg:w="4"/><text x="81.7413%" y="911.50"></text></g><g><title>clock_gettime (3 samples, 0.11%)</title><rect x="81.5291%" y="885" width="0.1136%" height="15" fill="rgb(253,99,13)" fg:x="2154" fg:w="3"/><text x="81.7791%" y="895.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="81.6048%" y="869" width="0.0379%" height="15" fill="rgb(244,48,7)" fg:x="2156" fg:w="1"/><text x="81.8548%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (2 samples, 0.08%)</title><rect x="81.6427%" y="949" width="0.0757%" height="15" fill="rgb(244,217,54)" fg:x="2157" fg:w="2"/><text x="81.8927%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="81.7562%" y="933" width="0.0757%" height="15" fill="rgb(224,15,18)" fg:x="2160" fg:w="2"/><text x="82.0062%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.08%)</title><rect x="81.7562%" y="917" width="0.0757%" height="15" fill="rgb(244,99,12)" fg:x="2160" fg:w="2"/><text x="82.0062%" y="927.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.08%)</title><rect x="81.7562%" y="901" width="0.0757%" height="15" fill="rgb(233,226,8)" fg:x="2160" fg:w="2"/><text x="82.0062%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (2 samples, 0.08%)</title><rect x="81.8319%" y="917" width="0.0757%" height="15" fill="rgb(229,211,3)" fg:x="2162" fg:w="2"/><text x="82.0819%" y="927.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.08%)</title><rect x="81.8319%" y="901" width="0.0757%" height="15" fill="rgb(216,140,21)" fg:x="2162" fg:w="2"/><text x="82.0819%" y="911.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.08%)</title><rect x="81.8319%" y="885" width="0.0757%" height="15" fill="rgb(234,122,30)" fg:x="2162" fg:w="2"/><text x="82.0819%" y="895.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.08%)</title><rect x="81.8319%" y="869" width="0.0757%" height="15" fill="rgb(236,25,46)" fg:x="2162" fg:w="2"/><text x="82.0819%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="81.8698%" y="853" width="0.0379%" height="15" fill="rgb(217,52,54)" fg:x="2163" fg:w="1"/><text x="82.1198%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="81.8698%" y="837" width="0.0379%" height="15" fill="rgb(222,29,26)" fg:x="2163" fg:w="1"/><text x="82.1198%" y="847.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="81.8698%" y="821" width="0.0379%" height="15" fill="rgb(216,177,29)" fg:x="2163" fg:w="1"/><text x="82.1198%" y="831.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="81.8698%" y="805" width="0.0379%" height="15" fill="rgb(247,136,51)" fg:x="2163" fg:w="1"/><text x="82.1198%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (6 samples, 0.23%)</title><rect x="81.9455%" y="885" width="0.2271%" height="15" fill="rgb(231,47,47)" fg:x="2165" fg:w="6"/><text x="82.1955%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::wait (6 samples, 0.23%)</title><rect x="81.9455%" y="869" width="0.2271%" height="15" fill="rgb(211,192,36)" fg:x="2165" fg:w="6"/><text x="82.1955%" y="879.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (6 samples, 0.23%)</title><rect x="81.9455%" y="853" width="0.2271%" height="15" fill="rgb(229,156,32)" fg:x="2165" fg:w="6"/><text x="82.1955%" y="863.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (6 samples, 0.23%)</title><rect x="81.9455%" y="837" width="0.2271%" height="15" fill="rgb(248,213,20)" fg:x="2165" fg:w="6"/><text x="82.1955%" y="847.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (6 samples, 0.23%)</title><rect x="81.9455%" y="821" width="0.2271%" height="15" fill="rgb(217,64,7)" fg:x="2165" fg:w="6"/><text x="82.1955%" y="831.50"></text></g><g><title>syscall (5 samples, 0.19%)</title><rect x="81.9833%" y="805" width="0.1893%" height="15" fill="rgb(232,142,8)" fg:x="2166" fg:w="5"/><text x="82.2333%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.19%)</title><rect x="81.9833%" y="789" width="0.1893%" height="15" fill="rgb(224,92,44)" fg:x="2166" fg:w="5"/><text x="82.2333%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.19%)</title><rect x="81.9833%" y="773" width="0.1893%" height="15" fill="rgb(214,169,17)" fg:x="2166" fg:w="5"/><text x="82.2333%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.19%)</title><rect x="81.9833%" y="757" width="0.1893%" height="15" fill="rgb(210,59,37)" fg:x="2166" fg:w="5"/><text x="82.2333%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="82.0212%" y="741" width="0.1514%" height="15" fill="rgb(214,116,48)" fg:x="2167" fg:w="4"/><text x="82.2712%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="82.0590%" y="725" width="0.1136%" height="15" fill="rgb(244,191,6)" fg:x="2168" fg:w="3"/><text x="82.3090%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="82.0590%" y="709" width="0.1136%" height="15" fill="rgb(241,50,52)" fg:x="2168" fg:w="3"/><text x="82.3090%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_sub (1 samples, 0.04%)</title><rect x="82.2104%" y="805" width="0.0379%" height="15" fill="rgb(236,75,39)" fg:x="2172" fg:w="1"/><text x="82.4604%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="82.2483%" y="805" width="0.0379%" height="15" fill="rgb(236,99,0)" fg:x="2173" fg:w="1"/><text x="82.4983%" y="815.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (1 samples, 0.04%)</title><rect x="82.2483%" y="789" width="0.0379%" height="15" fill="rgb(207,202,15)" fg:x="2173" fg:w="1"/><text x="82.4983%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.04%)</title><rect x="82.2483%" y="773" width="0.0379%" height="15" fill="rgb(233,207,14)" fg:x="2173" fg:w="1"/><text x="82.4983%" y="783.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="82.5889%" y="789" width="0.0379%" height="15" fill="rgb(226,27,51)" fg:x="2182" fg:w="1"/><text x="82.8389%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="82.5889%" y="773" width="0.0379%" height="15" fill="rgb(206,104,42)" fg:x="2182" fg:w="1"/><text x="82.8389%" y="783.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="82.5889%" y="757" width="0.0379%" height="15" fill="rgb(212,225,4)" fg:x="2182" fg:w="1"/><text x="82.8389%" y="767.50"></text></g><g><title>[libc.so.6] (5 samples, 0.19%)</title><rect x="82.9296%" y="741" width="0.1893%" height="15" fill="rgb(233,96,42)" fg:x="2191" fg:w="5"/><text x="83.1796%" y="751.50"></text></g><g><title>mio::poll::Poll::poll (19 samples, 0.72%)</title><rect x="82.6268%" y="789" width="0.7192%" height="15" fill="rgb(229,21,32)" fg:x="2183" fg:w="19"/><text x="82.8768%" y="799.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (17 samples, 0.64%)</title><rect x="82.7025%" y="773" width="0.6435%" height="15" fill="rgb(226,216,24)" fg:x="2185" fg:w="17"/><text x="82.9525%" y="783.50"></text></g><g><title>epoll_wait (13 samples, 0.49%)</title><rect x="82.8539%" y="757" width="0.4921%" height="15" fill="rgb(221,163,17)" fg:x="2189" fg:w="13"/><text x="83.1039%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.23%)</title><rect x="83.1188%" y="741" width="0.2271%" height="15" fill="rgb(216,216,42)" fg:x="2196" fg:w="6"/><text x="83.3688%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.23%)</title><rect x="83.1188%" y="725" width="0.2271%" height="15" fill="rgb(240,118,7)" fg:x="2196" fg:w="6"/><text x="83.3688%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.23%)</title><rect x="83.1188%" y="709" width="0.2271%" height="15" fill="rgb(221,67,37)" fg:x="2196" fg:w="6"/><text x="83.3688%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="83.2702%" y="693" width="0.0757%" height="15" fill="rgb(241,32,44)" fg:x="2200" fg:w="2"/><text x="83.5202%" y="703.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (9 samples, 0.34%)</title><rect x="83.3460%" y="789" width="0.3407%" height="15" fill="rgb(235,204,43)" fg:x="2202" fg:w="9"/><text x="83.5960%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="83.6488%" y="773" width="0.0379%" height="15" fill="rgb(213,116,10)" fg:x="2210" fg:w="1"/><text x="83.8988%" y="783.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.15%)</title><rect x="83.7623%" y="773" width="0.1514%" height="15" fill="rgb(239,15,48)" fg:x="2213" fg:w="4"/><text x="84.0123%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.15%)</title><rect x="83.7623%" y="757" width="0.1514%" height="15" fill="rgb(207,123,36)" fg:x="2213" fg:w="4"/><text x="84.0123%" y="767.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.15%)</title><rect x="83.7623%" y="741" width="0.1514%" height="15" fill="rgb(209,103,30)" fg:x="2213" fg:w="4"/><text x="84.0123%" y="751.50"></text></g><g><title>std::sync::poison::Flag::guard (4 samples, 0.15%)</title><rect x="83.7623%" y="725" width="0.1514%" height="15" fill="rgb(238,100,19)" fg:x="2213" fg:w="4"/><text x="84.0123%" y="735.50"></text></g><g><title>std::thread::panicking (4 samples, 0.15%)</title><rect x="83.7623%" y="709" width="0.1514%" height="15" fill="rgb(244,30,14)" fg:x="2213" fg:w="4"/><text x="84.0123%" y="719.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.15%)</title><rect x="83.7623%" y="693" width="0.1514%" height="15" fill="rgb(249,174,6)" fg:x="2213" fg:w="4"/><text x="84.0123%" y="703.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.15%)</title><rect x="83.7623%" y="677" width="0.1514%" height="15" fill="rgb(235,213,41)" fg:x="2213" fg:w="4"/><text x="84.0123%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="83.8759%" y="661" width="0.0379%" height="15" fill="rgb(213,118,6)" fg:x="2216" fg:w="1"/><text x="84.1259%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="83.8759%" y="645" width="0.0379%" height="15" fill="rgb(235,44,51)" fg:x="2216" fg:w="1"/><text x="84.1259%" y="655.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="83.9516%" y="757" width="0.0379%" height="15" fill="rgb(217,9,53)" fg:x="2218" fg:w="1"/><text x="84.2016%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (1 samples, 0.04%)</title><rect x="83.9894%" y="709" width="0.0379%" height="15" fill="rgb(237,172,34)" fg:x="2219" fg:w="1"/><text x="84.2394%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.04%)</title><rect x="83.9894%" y="693" width="0.0379%" height="15" fill="rgb(206,206,11)" fg:x="2219" fg:w="1"/><text x="84.2394%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.04%)</title><rect x="83.9894%" y="677" width="0.0379%" height="15" fill="rgb(214,149,29)" fg:x="2219" fg:w="1"/><text x="84.2394%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.04%)</title><rect x="83.9894%" y="661" width="0.0379%" height="15" fill="rgb(208,123,3)" fg:x="2219" fg:w="1"/><text x="84.2394%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::ptr_eq (3 samples, 0.11%)</title><rect x="84.1408%" y="565" width="0.1136%" height="15" fill="rgb(229,126,4)" fg:x="2223" fg:w="3"/><text x="84.3908%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (8 samples, 0.30%)</title><rect x="84.0273%" y="693" width="0.3028%" height="15" fill="rgb(222,92,36)" fg:x="2220" fg:w="8"/><text x="84.2773%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (5 samples, 0.19%)</title><rect x="84.1408%" y="677" width="0.1893%" height="15" fill="rgb(216,39,41)" fg:x="2223" fg:w="5"/><text x="84.3908%" y="687.50"></text></g><g><title>tokio::runtime::context::with_scheduler (5 samples, 0.19%)</title><rect x="84.1408%" y="661" width="0.1893%" height="15" fill="rgb(253,127,28)" fg:x="2223" fg:w="5"/><text x="84.3908%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.19%)</title><rect x="84.1408%" y="645" width="0.1893%" height="15" fill="rgb(249,152,51)" fg:x="2223" fg:w="5"/><text x="84.3908%" y="655.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (5 samples, 0.19%)</title><rect x="84.1408%" y="629" width="0.1893%" height="15" fill="rgb(209,123,42)" fg:x="2223" fg:w="5"/><text x="84.3908%" y="639.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (5 samples, 0.19%)</title><rect x="84.1408%" y="613" width="0.1893%" height="15" fill="rgb(241,118,22)" fg:x="2223" fg:w="5"/><text x="84.3908%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (5 samples, 0.19%)</title><rect x="84.1408%" y="597" width="0.1893%" height="15" fill="rgb(208,25,7)" fg:x="2223" fg:w="5"/><text x="84.3908%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (5 samples, 0.19%)</title><rect x="84.1408%" y="581" width="0.1893%" height="15" fill="rgb(243,144,39)" fg:x="2223" fg:w="5"/><text x="84.3908%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (2 samples, 0.08%)</title><rect x="84.2544%" y="565" width="0.0757%" height="15" fill="rgb(250,50,5)" fg:x="2226" fg:w="2"/><text x="84.5044%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.04%)</title><rect x="84.3301%" y="677" width="0.0379%" height="15" fill="rgb(207,67,11)" fg:x="2228" fg:w="1"/><text x="84.5801%" y="687.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (18 samples, 0.68%)</title><rect x="84.0273%" y="709" width="0.6813%" height="15" fill="rgb(245,204,40)" fg:x="2220" fg:w="18"/><text x="84.2773%" y="719.50"></text></g><g><title>tokio::runtime::task::raw::schedule (10 samples, 0.38%)</title><rect x="84.3301%" y="693" width="0.3785%" height="15" fill="rgb(238,228,24)" fg:x="2228" fg:w="10"/><text x="84.5801%" y="703.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (9 samples, 0.34%)</title><rect x="84.3679%" y="677" width="0.3407%" height="15" fill="rgb(217,116,22)" fg:x="2229" fg:w="9"/><text x="84.6179%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="84.6707%" y="661" width="0.0379%" height="15" fill="rgb(234,98,12)" fg:x="2237" fg:w="1"/><text x="84.9207%" y="671.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (72 samples, 2.73%)</title><rect x="82.2861%" y="805" width="2.7252%" height="15" fill="rgb(242,170,50)" fg:x="2174" fg:w="72"/><text x="82.5361%" y="815.50">to..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (35 samples, 1.32%)</title><rect x="83.6866%" y="789" width="1.3248%" height="15" fill="rgb(235,7,5)" fg:x="2211" fg:w="35"/><text x="83.9366%" y="799.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (29 samples, 1.10%)</title><rect x="83.9137%" y="773" width="1.0977%" height="15" fill="rgb(241,114,28)" fg:x="2217" fg:w="29"/><text x="84.1637%" y="783.50"></text></g><g><title>core::task::wake::Waker::wake (27 samples, 1.02%)</title><rect x="83.9894%" y="757" width="1.0220%" height="15" fill="rgb(246,112,42)" fg:x="2219" fg:w="27"/><text x="84.2394%" y="767.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (27 samples, 1.02%)</title><rect x="83.9894%" y="741" width="1.0220%" height="15" fill="rgb(248,228,14)" fg:x="2219" fg:w="27"/><text x="84.2394%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (27 samples, 1.02%)</title><rect x="83.9894%" y="725" width="1.0220%" height="15" fill="rgb(208,133,18)" fg:x="2219" fg:w="27"/><text x="84.2394%" y="735.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (8 samples, 0.30%)</title><rect x="84.7086%" y="709" width="0.3028%" height="15" fill="rgb(207,35,49)" fg:x="2238" fg:w="8"/><text x="84.9586%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (8 samples, 0.30%)</title><rect x="84.7086%" y="693" width="0.3028%" height="15" fill="rgb(205,68,36)" fg:x="2238" fg:w="8"/><text x="84.9586%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::load (8 samples, 0.30%)</title><rect x="84.7086%" y="677" width="0.3028%" height="15" fill="rgb(245,62,40)" fg:x="2238" fg:w="8"/><text x="84.9586%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.30%)</title><rect x="84.7086%" y="661" width="0.3028%" height="15" fill="rgb(228,27,24)" fg:x="2238" fg:w="8"/><text x="84.9586%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.30%)</title><rect x="84.7086%" y="645" width="0.3028%" height="15" fill="rgb(253,19,12)" fg:x="2238" fg:w="8"/><text x="84.9586%" y="655.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.04%)</title><rect x="85.0871%" y="773" width="0.0379%" height="15" fill="rgb(232,28,20)" fg:x="2248" fg:w="1"/><text x="85.3371%" y="783.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="85.0871%" y="757" width="0.0379%" height="15" fill="rgb(218,35,51)" fg:x="2248" fg:w="1"/><text x="85.3371%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="85.0871%" y="741" width="0.0379%" height="15" fill="rgb(212,90,40)" fg:x="2248" fg:w="1"/><text x="85.3371%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (2 samples, 0.08%)</title><rect x="85.1249%" y="773" width="0.0757%" height="15" fill="rgb(220,172,12)" fg:x="2249" fg:w="2"/><text x="85.3749%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.04%)</title><rect x="85.1628%" y="757" width="0.0379%" height="15" fill="rgb(226,159,20)" fg:x="2250" fg:w="1"/><text x="85.4128%" y="767.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (5 samples, 0.19%)</title><rect x="85.2006%" y="773" width="0.1893%" height="15" fill="rgb(234,205,16)" fg:x="2251" fg:w="5"/><text x="85.4506%" y="783.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (5 samples, 0.19%)</title><rect x="85.2006%" y="757" width="0.1893%" height="15" fill="rgb(207,9,39)" fg:x="2251" fg:w="5"/><text x="85.4506%" y="767.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.04%)</title><rect x="85.3520%" y="741" width="0.0379%" height="15" fill="rgb(249,143,15)" fg:x="2255" fg:w="1"/><text x="85.6020%" y="751.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.04%)</title><rect x="85.3520%" y="725" width="0.0379%" height="15" fill="rgb(253,133,29)" fg:x="2255" fg:w="1"/><text x="85.6020%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="85.4277%" y="741" width="0.0379%" height="15" fill="rgb(221,187,0)" fg:x="2257" fg:w="1"/><text x="85.6777%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="85.4277%" y="725" width="0.0379%" height="15" fill="rgb(205,204,26)" fg:x="2257" fg:w="1"/><text x="85.6777%" y="735.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="85.4277%" y="709" width="0.0379%" height="15" fill="rgb(224,68,54)" fg:x="2257" fg:w="1"/><text x="85.6777%" y="719.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (12 samples, 0.45%)</title><rect x="85.0871%" y="789" width="0.4542%" height="15" fill="rgb(209,67,4)" fg:x="2248" fg:w="12"/><text x="85.3371%" y="799.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (4 samples, 0.15%)</title><rect x="85.3899%" y="773" width="0.1514%" height="15" fill="rgb(228,229,18)" fg:x="2256" fg:w="4"/><text x="85.6399%" y="783.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (4 samples, 0.15%)</title><rect x="85.3899%" y="757" width="0.1514%" height="15" fill="rgb(231,89,13)" fg:x="2256" fg:w="4"/><text x="85.6399%" y="767.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.08%)</title><rect x="85.4656%" y="741" width="0.0757%" height="15" fill="rgb(210,182,18)" fg:x="2258" fg:w="2"/><text x="85.7156%" y="751.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.04%)</title><rect x="85.5034%" y="725" width="0.0379%" height="15" fill="rgb(240,105,2)" fg:x="2259" fg:w="1"/><text x="85.7534%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.04%)</title><rect x="85.5413%" y="709" width="0.0379%" height="15" fill="rgb(207,170,50)" fg:x="2260" fg:w="1"/><text x="85.7913%" y="719.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (2 samples, 0.08%)</title><rect x="85.5413%" y="773" width="0.0757%" height="15" fill="rgb(232,133,24)" fg:x="2260" fg:w="2"/><text x="85.7913%" y="783.50"></text></g><g><title>tokio::time::instant::Instant::checked_duration_since (2 samples, 0.08%)</title><rect x="85.5413%" y="757" width="0.0757%" height="15" fill="rgb(235,166,27)" fg:x="2260" fg:w="2"/><text x="85.7913%" y="767.50"></text></g><g><title>std::time::Instant::checked_duration_since (2 samples, 0.08%)</title><rect x="85.5413%" y="741" width="0.0757%" height="15" fill="rgb(209,19,13)" fg:x="2260" fg:w="2"/><text x="85.7913%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (2 samples, 0.08%)</title><rect x="85.5413%" y="725" width="0.0757%" height="15" fill="rgb(226,79,39)" fg:x="2260" fg:w="2"/><text x="85.7913%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (1 samples, 0.04%)</title><rect x="85.5791%" y="709" width="0.0379%" height="15" fill="rgb(222,163,10)" fg:x="2261" fg:w="1"/><text x="85.8291%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="86.0333%" y="677" width="0.0379%" height="15" fill="rgb(214,44,19)" fg:x="2273" fg:w="1"/><text x="86.2833%" y="687.50"></text></g><g><title>clock_gettime (20 samples, 0.76%)</title><rect x="85.6170%" y="693" width="0.7570%" height="15" fill="rgb(210,217,13)" fg:x="2262" fg:w="20"/><text x="85.8670%" y="703.50"></text></g><g><title>__vdso_clock_gettime (8 samples, 0.30%)</title><rect x="86.0712%" y="677" width="0.3028%" height="15" fill="rgb(237,61,54)" fg:x="2274" fg:w="8"/><text x="86.3212%" y="687.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (37 samples, 1.40%)</title><rect x="85.0114%" y="805" width="1.4005%" height="15" fill="rgb(226,184,24)" fg:x="2246" fg:w="37"/><text x="85.2614%" y="815.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (23 samples, 0.87%)</title><rect x="85.5413%" y="789" width="0.8706%" height="15" fill="rgb(223,226,4)" fg:x="2260" fg:w="23"/><text x="85.7913%" y="799.50"></text></g><g><title>tokio::time::clock::Clock::now (21 samples, 0.79%)</title><rect x="85.6170%" y="773" width="0.7949%" height="15" fill="rgb(210,26,41)" fg:x="2262" fg:w="21"/><text x="85.8670%" y="783.50"></text></g><g><title>tokio::time::clock::now (21 samples, 0.79%)</title><rect x="85.6170%" y="757" width="0.7949%" height="15" fill="rgb(220,221,6)" fg:x="2262" fg:w="21"/><text x="85.8670%" y="767.50"></text></g><g><title>std::time::Instant::now (21 samples, 0.79%)</title><rect x="85.6170%" y="741" width="0.7949%" height="15" fill="rgb(225,89,49)" fg:x="2262" fg:w="21"/><text x="85.8670%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (21 samples, 0.79%)</title><rect x="85.6170%" y="725" width="0.7949%" height="15" fill="rgb(218,70,45)" fg:x="2262" fg:w="21"/><text x="85.8670%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (21 samples, 0.79%)</title><rect x="85.6170%" y="709" width="0.7949%" height="15" fill="rgb(238,166,21)" fg:x="2262" fg:w="21"/><text x="85.8670%" y="719.50"></text></g><g><title>std::sys::pal::unix::cvt (1 samples, 0.04%)</title><rect x="86.3740%" y="693" width="0.0379%" height="15" fill="rgb(224,141,44)" fg:x="2282" fg:w="1"/><text x="86.6240%" y="703.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (1 samples, 0.04%)</title><rect x="86.4118%" y="805" width="0.0379%" height="15" fill="rgb(230,12,49)" fg:x="2283" fg:w="1"/><text x="86.6618%" y="815.50"></text></g><g><title>tokio::time::clock::Clock::now (1 samples, 0.04%)</title><rect x="86.4118%" y="789" width="0.0379%" height="15" fill="rgb(212,174,12)" fg:x="2283" fg:w="1"/><text x="86.6618%" y="799.50"></text></g><g><title>tokio::time::clock::now (1 samples, 0.04%)</title><rect x="86.4118%" y="773" width="0.0379%" height="15" fill="rgb(246,67,9)" fg:x="2283" fg:w="1"/><text x="86.6618%" y="783.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="86.4118%" y="757" width="0.0379%" height="15" fill="rgb(239,35,23)" fg:x="2283" fg:w="1"/><text x="86.6618%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.04%)</title><rect x="86.4118%" y="741" width="0.0379%" height="15" fill="rgb(211,167,0)" fg:x="2283" fg:w="1"/><text x="86.6618%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="86.4118%" y="725" width="0.0379%" height="15" fill="rgb(225,119,45)" fg:x="2283" fg:w="1"/><text x="86.6618%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (1 samples, 0.04%)</title><rect x="86.4118%" y="709" width="0.0379%" height="15" fill="rgb(210,162,6)" fg:x="2283" fg:w="1"/><text x="86.6618%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (125 samples, 4.73%)</title><rect x="81.8319%" y="933" width="4.7313%" height="15" fill="rgb(208,118,35)" fg:x="2162" fg:w="125"/><text x="82.0819%" y="943.50">tokio:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (123 samples, 4.66%)</title><rect x="81.9076%" y="917" width="4.6556%" height="15" fill="rgb(239,4,53)" fg:x="2164" fg:w="123"/><text x="82.1576%" y="927.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (123 samples, 4.66%)</title><rect x="81.9076%" y="901" width="4.6556%" height="15" fill="rgb(213,130,21)" fg:x="2164" fg:w="123"/><text x="82.1576%" y="911.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (116 samples, 4.39%)</title><rect x="82.1726%" y="885" width="4.3906%" height="15" fill="rgb(235,148,0)" fg:x="2171" fg:w="116"/><text x="82.4226%" y="895.50">tokio..</text></g><g><title>tokio::runtime::driver::Driver::park (115 samples, 4.35%)</title><rect x="82.2104%" y="869" width="4.3528%" height="15" fill="rgb(244,224,18)" fg:x="2172" fg:w="115"/><text x="82.4604%" y="879.50">tokio..</text></g><g><title>tokio::runtime::driver::TimeDriver::park (115 samples, 4.35%)</title><rect x="82.2104%" y="853" width="4.3528%" height="15" fill="rgb(211,214,4)" fg:x="2172" fg:w="115"/><text x="82.4604%" y="863.50">tokio..</text></g><g><title>tokio::runtime::time::Driver::park (115 samples, 4.35%)</title><rect x="82.2104%" y="837" width="4.3528%" height="15" fill="rgb(206,119,25)" fg:x="2172" fg:w="115"/><text x="82.4604%" y="847.50">tokio..</text></g><g><title>tokio::runtime::time::Driver::park_internal (115 samples, 4.35%)</title><rect x="82.2104%" y="821" width="4.3528%" height="15" fill="rgb(243,93,47)" fg:x="2172" fg:w="115"/><text x="82.4604%" y="831.50">tokio..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (3 samples, 0.11%)</title><rect x="86.4497%" y="805" width="0.1136%" height="15" fill="rgb(224,194,6)" fg:x="2284" fg:w="3"/><text x="86.6997%" y="815.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (3 samples, 0.11%)</title><rect x="86.4497%" y="789" width="0.1136%" height="15" fill="rgb(243,229,6)" fg:x="2284" fg:w="3"/><text x="86.6997%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (2 samples, 0.08%)</title><rect x="86.5632%" y="933" width="0.0757%" height="15" fill="rgb(207,23,50)" fg:x="2287" fg:w="2"/><text x="86.8132%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.04%)</title><rect x="86.6011%" y="917" width="0.0379%" height="15" fill="rgb(253,192,32)" fg:x="2288" fg:w="1"/><text x="86.8511%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="86.6011%" y="901" width="0.0379%" height="15" fill="rgb(213,21,6)" fg:x="2288" fg:w="1"/><text x="86.8511%" y="911.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.04%)</title><rect x="86.6011%" y="885" width="0.0379%" height="15" fill="rgb(243,151,13)" fg:x="2288" fg:w="1"/><text x="86.8511%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (1 samples, 0.04%)</title><rect x="86.6389%" y="917" width="0.0379%" height="15" fill="rgb(233,165,41)" fg:x="2289" fg:w="1"/><text x="86.8889%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.04%)</title><rect x="86.6389%" y="901" width="0.0379%" height="15" fill="rgb(246,176,45)" fg:x="2289" fg:w="1"/><text x="86.8889%" y="911.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.04%)</title><rect x="86.6389%" y="885" width="0.0379%" height="15" fill="rgb(217,170,52)" fg:x="2289" fg:w="1"/><text x="86.8889%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.04%)</title><rect x="86.6389%" y="869" width="0.0379%" height="15" fill="rgb(214,203,54)" fg:x="2289" fg:w="1"/><text x="86.8889%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (1 samples, 0.04%)</title><rect x="86.7146%" y="901" width="0.0379%" height="15" fill="rgb(248,215,49)" fg:x="2291" fg:w="1"/><text x="86.9646%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (4 samples, 0.15%)</title><rect x="86.6389%" y="933" width="0.1514%" height="15" fill="rgb(208,46,10)" fg:x="2289" fg:w="4"/><text x="86.8889%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (3 samples, 0.11%)</title><rect x="86.6768%" y="917" width="0.1136%" height="15" fill="rgb(254,5,31)" fg:x="2290" fg:w="3"/><text x="86.9268%" y="927.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="86.7525%" y="901" width="0.0379%" height="15" fill="rgb(222,104,33)" fg:x="2292" fg:w="1"/><text x="87.0025%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="86.7525%" y="885" width="0.0379%" height="15" fill="rgb(248,49,16)" fg:x="2292" fg:w="1"/><text x="87.0025%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="86.7525%" y="869" width="0.0379%" height="15" fill="rgb(232,198,41)" fg:x="2292" fg:w="1"/><text x="87.0025%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.08%)</title><rect x="86.7903%" y="901" width="0.0757%" height="15" fill="rgb(214,125,3)" fg:x="2293" fg:w="2"/><text x="87.0403%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2 samples, 0.08%)</title><rect x="86.8660%" y="901" width="0.0757%" height="15" fill="rgb(229,220,28)" fg:x="2295" fg:w="2"/><text x="87.1160%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="86.8660%" y="885" width="0.0757%" height="15" fill="rgb(222,64,37)" fg:x="2295" fg:w="2"/><text x="87.1160%" y="895.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (2 samples, 0.08%)</title><rect x="86.8660%" y="869" width="0.0757%" height="15" fill="rgb(249,184,13)" fg:x="2295" fg:w="2"/><text x="87.1160%" y="879.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (2 samples, 0.08%)</title><rect x="86.8660%" y="853" width="0.0757%" height="15" fill="rgb(252,176,6)" fg:x="2295" fg:w="2"/><text x="87.1160%" y="863.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (2 samples, 0.08%)</title><rect x="86.8660%" y="837" width="0.0757%" height="15" fill="rgb(228,153,7)" fg:x="2295" fg:w="2"/><text x="87.1160%" y="847.50"></text></g><g><title>syscall (2 samples, 0.08%)</title><rect x="86.8660%" y="821" width="0.0757%" height="15" fill="rgb(242,193,5)" fg:x="2295" fg:w="2"/><text x="87.1160%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="86.8660%" y="805" width="0.0757%" height="15" fill="rgb(232,140,9)" fg:x="2295" fg:w="2"/><text x="87.1160%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="86.8660%" y="789" width="0.0757%" height="15" fill="rgb(213,222,16)" fg:x="2295" fg:w="2"/><text x="87.1160%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="86.8660%" y="773" width="0.0757%" height="15" fill="rgb(222,75,50)" fg:x="2295" fg:w="2"/><text x="87.1160%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.08%)</title><rect x="86.8660%" y="757" width="0.0757%" height="15" fill="rgb(205,180,2)" fg:x="2295" fg:w="2"/><text x="87.1160%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (6 samples, 0.23%)</title><rect x="86.7903%" y="917" width="0.2271%" height="15" fill="rgb(216,34,7)" fg:x="2293" fg:w="6"/><text x="87.0403%" y="927.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.08%)</title><rect x="86.9417%" y="901" width="0.0757%" height="15" fill="rgb(253,16,32)" fg:x="2297" fg:w="2"/><text x="87.1917%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.08%)</title><rect x="86.9417%" y="885" width="0.0757%" height="15" fill="rgb(208,97,28)" fg:x="2297" fg:w="2"/><text x="87.1917%" y="895.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="86.9417%" y="869" width="0.0757%" height="15" fill="rgb(225,92,11)" fg:x="2297" fg:w="2"/><text x="87.1917%" y="879.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.08%)</title><rect x="86.9417%" y="853" width="0.0757%" height="15" fill="rgb(243,38,12)" fg:x="2297" fg:w="2"/><text x="87.1917%" y="863.50"></text></g><g><title>std::thread::panicking (2 samples, 0.08%)</title><rect x="86.9417%" y="837" width="0.0757%" height="15" fill="rgb(208,139,16)" fg:x="2297" fg:w="2"/><text x="87.1917%" y="847.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.08%)</title><rect x="86.9417%" y="821" width="0.0757%" height="15" fill="rgb(227,24,9)" fg:x="2297" fg:w="2"/><text x="87.1917%" y="831.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.08%)</title><rect x="86.9417%" y="805" width="0.0757%" height="15" fill="rgb(206,62,11)" fg:x="2297" fg:w="2"/><text x="87.1917%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="87.0553%" y="901" width="0.0757%" height="15" fill="rgb(228,134,27)" fg:x="2300" fg:w="2"/><text x="87.3053%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (144 samples, 5.45%)</title><rect x="81.7184%" y="949" width="5.4504%" height="15" fill="rgb(205,55,33)" fg:x="2159" fg:w="144"/><text x="81.9684%" y="959.50">tokio::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (10 samples, 0.38%)</title><rect x="86.7903%" y="933" width="0.3785%" height="15" fill="rgb(243,75,43)" fg:x="2293" fg:w="10"/><text x="87.0403%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (4 samples, 0.15%)</title><rect x="87.0174%" y="917" width="0.1514%" height="15" fill="rgb(223,27,42)" fg:x="2299" fg:w="4"/><text x="87.2674%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (1 samples, 0.04%)</title><rect x="87.1310%" y="901" width="0.0379%" height="15" fill="rgb(232,189,33)" fg:x="2302" fg:w="1"/><text x="87.3810%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.04%)</title><rect x="87.1310%" y="885" width="0.0379%" height="15" fill="rgb(210,9,39)" fg:x="2302" fg:w="1"/><text x="87.3810%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (1 samples, 0.04%)</title><rect x="87.1688%" y="949" width="0.0379%" height="15" fill="rgb(242,85,26)" fg:x="2303" fg:w="1"/><text x="87.4188%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (1 samples, 0.04%)</title><rect x="87.1688%" y="933" width="0.0379%" height="15" fill="rgb(248,44,4)" fg:x="2303" fg:w="1"/><text x="87.4188%" y="943.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.04%)</title><rect x="87.1688%" y="917" width="0.0379%" height="15" fill="rgb(250,96,46)" fg:x="2303" fg:w="1"/><text x="87.4188%" y="927.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.04%)</title><rect x="87.1688%" y="901" width="0.0379%" height="15" fill="rgb(229,116,26)" fg:x="2303" fg:w="1"/><text x="87.4188%" y="911.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.04%)</title><rect x="87.1688%" y="885" width="0.0379%" height="15" fill="rgb(246,94,34)" fg:x="2303" fg:w="1"/><text x="87.4188%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="87.1688%" y="869" width="0.0379%" height="15" fill="rgb(251,73,21)" fg:x="2303" fg:w="1"/><text x="87.4188%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="87.1688%" y="853" width="0.0379%" height="15" fill="rgb(254,121,25)" fg:x="2303" fg:w="1"/><text x="87.4188%" y="863.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="87.1688%" y="837" width="0.0379%" height="15" fill="rgb(215,161,49)" fg:x="2303" fg:w="1"/><text x="87.4188%" y="847.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="87.1688%" y="821" width="0.0379%" height="15" fill="rgb(221,43,13)" fg:x="2303" fg:w="1"/><text x="87.4188%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="87.1688%" y="805" width="0.0379%" height="15" fill="rgb(249,5,37)" fg:x="2303" fg:w="1"/><text x="87.4188%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (1 samples, 0.04%)</title><rect x="87.2067%" y="885" width="0.0379%" height="15" fill="rgb(226,25,44)" fg:x="2304" fg:w="1"/><text x="87.4567%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.04%)</title><rect x="87.3959%" y="821" width="0.0379%" height="15" fill="rgb(238,189,16)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.04%)</title><rect x="87.3959%" y="805" width="0.0379%" height="15" fill="rgb(251,186,8)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="815.50"></text></g><g><title>core::mem::drop (1 samples, 0.04%)</title><rect x="87.3959%" y="789" width="0.0379%" height="15" fill="rgb(254,34,31)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_mysql::database::MySql&gt;::return_to_pool::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="87.3959%" y="773" width="0.0379%" height="15" fill="rgb(225,215,27)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="87.3959%" y="757" width="0.0379%" height="15" fill="rgb(221,192,48)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="87.3959%" y="741" width="0.0379%" height="15" fill="rgb(219,137,20)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="87.3959%" y="725" width="0.0379%" height="15" fill="rgb(219,84,11)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="735.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="87.3959%" y="709" width="0.0379%" height="15" fill="rgb(224,10,23)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="87.3959%" y="693" width="0.0379%" height="15" fill="rgb(248,22,39)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="703.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="87.3959%" y="677" width="0.0379%" height="15" fill="rgb(212,154,20)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="87.3959%" y="661" width="0.0379%" height="15" fill="rgb(236,199,50)" fg:x="2309" fg:w="1"/><text x="87.6459%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (2 samples, 0.08%)</title><rect x="87.5473%" y="661" width="0.0757%" height="15" fill="rgb(211,9,17)" fg:x="2313" fg:w="2"/><text x="87.7973%" y="671.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="87.5473%" y="645" width="0.0757%" height="15" fill="rgb(243,216,36)" fg:x="2313" fg:w="2"/><text x="87.7973%" y="655.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (2 samples, 0.08%)</title><rect x="87.5473%" y="629" width="0.0757%" height="15" fill="rgb(250,2,10)" fg:x="2313" fg:w="2"/><text x="87.7973%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.08%)</title><rect x="87.5473%" y="613" width="0.0757%" height="15" fill="rgb(226,50,48)" fg:x="2313" fg:w="2"/><text x="87.7973%" y="623.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (2 samples, 0.08%)</title><rect x="87.5473%" y="597" width="0.0757%" height="15" fill="rgb(243,81,16)" fg:x="2313" fg:w="2"/><text x="87.7973%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.08%)</title><rect x="87.5473%" y="581" width="0.0757%" height="15" fill="rgb(250,14,2)" fg:x="2313" fg:w="2"/><text x="87.7973%" y="591.50"></text></g><g><title>core::mem::replace (2 samples, 0.08%)</title><rect x="87.5473%" y="565" width="0.0757%" height="15" fill="rgb(233,135,29)" fg:x="2313" fg:w="2"/><text x="87.7973%" y="575.50"></text></g><g><title>core::ptr::write (2 samples, 0.08%)</title><rect x="87.5473%" y="549" width="0.0757%" height="15" fill="rgb(224,64,43)" fg:x="2313" fg:w="2"/><text x="87.7973%" y="559.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (3 samples, 0.11%)</title><rect x="87.9637%" y="485" width="0.1136%" height="15" fill="rgb(238,84,13)" fg:x="2324" fg:w="3"/><text x="88.2137%" y="495.50"></text></g><g><title>hyper::common::date::update (3 samples, 0.11%)</title><rect x="87.9637%" y="469" width="0.1136%" height="15" fill="rgb(253,48,26)" fg:x="2324" fg:w="3"/><text x="88.2137%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.11%)</title><rect x="87.9637%" y="453" width="0.1136%" height="15" fill="rgb(205,223,31)" fg:x="2324" fg:w="3"/><text x="88.2137%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.11%)</title><rect x="87.9637%" y="437" width="0.1136%" height="15" fill="rgb(221,41,32)" fg:x="2324" fg:w="3"/><text x="88.2137%" y="447.50"></text></g><g><title>hyper::common::date::CACHED::__getit (3 samples, 0.11%)</title><rect x="87.9637%" y="421" width="0.1136%" height="15" fill="rgb(213,158,31)" fg:x="2324" fg:w="3"/><text x="88.2137%" y="431.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (3 samples, 0.11%)</title><rect x="87.9637%" y="405" width="0.1136%" height="15" fill="rgb(245,126,43)" fg:x="2324" fg:w="3"/><text x="88.2137%" y="415.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (3 samples, 0.11%)</title><rect x="87.9637%" y="389" width="0.1136%" height="15" fill="rgb(227,7,22)" fg:x="2324" fg:w="3"/><text x="88.2137%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.11%)</title><rect x="87.9637%" y="373" width="0.1136%" height="15" fill="rgb(252,90,44)" fg:x="2324" fg:w="3"/><text x="88.2137%" y="383.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_flush (2 samples, 0.08%)</title><rect x="88.1151%" y="421" width="0.0757%" height="15" fill="rgb(253,91,0)" fg:x="2328" fg:w="2"/><text x="88.3651%" y="431.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_flush (2 samples, 0.08%)</title><rect x="88.1151%" y="405" width="0.0757%" height="15" fill="rgb(252,175,49)" fg:x="2328" fg:w="2"/><text x="88.3651%" y="415.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (2 samples, 0.08%)</title><rect x="88.1151%" y="389" width="0.0757%" height="15" fill="rgb(246,150,1)" fg:x="2328" fg:w="2"/><text x="88.3651%" y="399.50"></text></g><g><title>&lt;poem::listener::BoxIo as tokio::io::async_write::AsyncWrite&gt;::poll_flush (2 samples, 0.08%)</title><rect x="88.1151%" y="373" width="0.0757%" height="15" fill="rgb(241,192,25)" fg:x="2328" fg:w="2"/><text x="88.3651%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (2 samples, 0.08%)</title><rect x="88.1151%" y="357" width="0.0757%" height="15" fill="rgb(239,187,11)" fg:x="2328" fg:w="2"/><text x="88.3651%" y="367.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (2 samples, 0.08%)</title><rect x="88.1151%" y="341" width="0.0757%" height="15" fill="rgb(218,202,51)" fg:x="2328" fg:w="2"/><text x="88.3651%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="88.1529%" y="325" width="0.0379%" height="15" fill="rgb(225,176,8)" fg:x="2329" fg:w="1"/><text x="88.4029%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.04%)</title><rect x="88.1529%" y="309" width="0.0379%" height="15" fill="rgb(219,122,41)" fg:x="2329" fg:w="1"/><text x="88.4029%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="88.1529%" y="293" width="0.0379%" height="15" fill="rgb(248,140,20)" fg:x="2329" fg:w="1"/><text x="88.4029%" y="303.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (4 samples, 0.15%)</title><rect x="88.0772%" y="469" width="0.1514%" height="15" fill="rgb(245,41,37)" fg:x="2327" fg:w="4"/><text x="88.3272%" y="479.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (4 samples, 0.15%)</title><rect x="88.0772%" y="453" width="0.1514%" height="15" fill="rgb(235,82,39)" fg:x="2327" fg:w="4"/><text x="88.3272%" y="463.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (4 samples, 0.15%)</title><rect x="88.0772%" y="437" width="0.1514%" height="15" fill="rgb(230,108,42)" fg:x="2327" fg:w="4"/><text x="88.3272%" y="447.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush_flattened (1 samples, 0.04%)</title><rect x="88.1908%" y="421" width="0.0379%" height="15" fill="rgb(215,150,50)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="431.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (1 samples, 0.04%)</title><rect x="88.1908%" y="405" width="0.0379%" height="15" fill="rgb(233,212,5)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="415.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (1 samples, 0.04%)</title><rect x="88.1908%" y="389" width="0.0379%" height="15" fill="rgb(245,80,22)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="399.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.04%)</title><rect x="88.1908%" y="373" width="0.0379%" height="15" fill="rgb(238,129,16)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="383.50"></text></g><g><title>&lt;poem::listener::BoxIo as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.04%)</title><rect x="88.1908%" y="357" width="0.0379%" height="15" fill="rgb(240,19,0)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.04%)</title><rect x="88.1908%" y="341" width="0.0379%" height="15" fill="rgb(232,42,35)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="351.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.04%)</title><rect x="88.1908%" y="325" width="0.0379%" height="15" fill="rgb(223,130,24)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="335.50"></text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (1 samples, 0.04%)</title><rect x="88.1908%" y="309" width="0.0379%" height="15" fill="rgb(237,16,22)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="319.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write::_{{closure}} (1 samples, 0.04%)</title><rect x="88.1908%" y="293" width="0.0379%" height="15" fill="rgb(248,192,20)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="303.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.04%)</title><rect x="88.1908%" y="277" width="0.0379%" height="15" fill="rgb(233,167,2)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="287.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (1 samples, 0.04%)</title><rect x="88.1908%" y="261" width="0.0379%" height="15" fill="rgb(252,71,44)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="271.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.04%)</title><rect x="88.1908%" y="245" width="0.0379%" height="15" fill="rgb(238,37,47)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="255.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="88.1908%" y="229" width="0.0379%" height="15" fill="rgb(214,202,54)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="239.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="88.1908%" y="213" width="0.0379%" height="15" fill="rgb(254,165,40)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="223.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="88.1908%" y="197" width="0.0379%" height="15" fill="rgb(246,173,38)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="207.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1 samples, 0.04%)</title><rect x="88.1908%" y="181" width="0.0379%" height="15" fill="rgb(215,3,27)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="191.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="88.1908%" y="165" width="0.0379%" height="15" fill="rgb(239,169,51)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="175.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.04%)</title><rect x="88.1908%" y="149" width="0.0379%" height="15" fill="rgb(212,5,25)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="159.50"></text></g><g><title>__send (1 samples, 0.04%)</title><rect x="88.1908%" y="133" width="0.0379%" height="15" fill="rgb(243,45,17)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="88.1908%" y="117" width="0.0379%" height="15" fill="rgb(242,97,9)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="88.1908%" y="101" width="0.0379%" height="15" fill="rgb(228,71,31)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="88.1908%" y="85" width="0.0379%" height="15" fill="rgb(252,184,16)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="88.1908%" y="69" width="0.0379%" height="15" fill="rgb(236,169,46)" fg:x="2330" fg:w="1"/><text x="88.4408%" y="79.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="88.2665%" y="453" width="0.0379%" height="15" fill="rgb(207,17,47)" fg:x="2332" fg:w="1"/><text x="88.5165%" y="463.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="88.2665%" y="437" width="0.0379%" height="15" fill="rgb(206,201,28)" fg:x="2332" fg:w="1"/><text x="88.5165%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="88.2665%" y="421" width="0.0379%" height="15" fill="rgb(224,184,23)" fg:x="2332" fg:w="1"/><text x="88.5165%" y="431.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.04%)</title><rect x="88.3422%" y="389" width="0.0379%" height="15" fill="rgb(208,139,48)" fg:x="2334" fg:w="1"/><text x="88.5922%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="88.3800%" y="293" width="0.0757%" height="15" fill="rgb(208,130,10)" fg:x="2335" fg:w="2"/><text x="88.6300%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.08%)</title><rect x="88.3800%" y="277" width="0.0757%" height="15" fill="rgb(211,213,45)" fg:x="2335" fg:w="2"/><text x="88.6300%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.08%)</title><rect x="88.3800%" y="261" width="0.0757%" height="15" fill="rgb(235,100,30)" fg:x="2335" fg:w="2"/><text x="88.6300%" y="271.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::_{{closure}} (2 samples, 0.08%)</title><rect x="88.4557%" y="277" width="0.0757%" height="15" fill="rgb(206,144,31)" fg:x="2337" fg:w="2"/><text x="88.7057%" y="287.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.08%)</title><rect x="88.4557%" y="261" width="0.0757%" height="15" fill="rgb(224,200,26)" fg:x="2337" fg:w="2"/><text x="88.7057%" y="271.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2 samples, 0.08%)</title><rect x="88.4557%" y="245" width="0.0757%" height="15" fill="rgb(247,104,53)" fg:x="2337" fg:w="2"/><text x="88.7057%" y="255.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2 samples, 0.08%)</title><rect x="88.4557%" y="229" width="0.0757%" height="15" fill="rgb(220,14,17)" fg:x="2337" fg:w="2"/><text x="88.7057%" y="239.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (1 samples, 0.04%)</title><rect x="88.4936%" y="213" width="0.0379%" height="15" fill="rgb(230,140,40)" fg:x="2338" fg:w="1"/><text x="88.7436%" y="223.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.04%)</title><rect x="88.4936%" y="197" width="0.0379%" height="15" fill="rgb(229,2,41)" fg:x="2338" fg:w="1"/><text x="88.7436%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (1 samples, 0.04%)</title><rect x="88.4936%" y="181" width="0.0379%" height="15" fill="rgb(232,89,16)" fg:x="2338" fg:w="1"/><text x="88.7436%" y="191.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="88.4936%" y="165" width="0.0379%" height="15" fill="rgb(247,59,52)" fg:x="2338" fg:w="1"/><text x="88.7436%" y="175.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.04%)</title><rect x="88.4936%" y="149" width="0.0379%" height="15" fill="rgb(226,110,21)" fg:x="2338" fg:w="1"/><text x="88.7436%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="88.4936%" y="133" width="0.0379%" height="15" fill="rgb(224,176,43)" fg:x="2338" fg:w="1"/><text x="88.7436%" y="143.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.04%)</title><rect x="88.4936%" y="117" width="0.0379%" height="15" fill="rgb(221,73,6)" fg:x="2338" fg:w="1"/><text x="88.7436%" y="127.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="88.4936%" y="101" width="0.0379%" height="15" fill="rgb(232,78,19)" fg:x="2338" fg:w="1"/><text x="88.7436%" y="111.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (5 samples, 0.19%)</title><rect x="88.3800%" y="357" width="0.1893%" height="15" fill="rgb(233,112,48)" fg:x="2335" fg:w="5"/><text x="88.6300%" y="367.50"></text></g><g><title>&lt;poem::listener::BoxIo as tokio::io::async_read::AsyncRead&gt;::poll_read (5 samples, 0.19%)</title><rect x="88.3800%" y="341" width="0.1893%" height="15" fill="rgb(243,131,47)" fg:x="2335" fg:w="5"/><text x="88.6300%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (5 samples, 0.19%)</title><rect x="88.3800%" y="325" width="0.1893%" height="15" fill="rgb(226,51,1)" fg:x="2335" fg:w="5"/><text x="88.6300%" y="335.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (5 samples, 0.19%)</title><rect x="88.3800%" y="309" width="0.1893%" height="15" fill="rgb(247,58,7)" fg:x="2335" fg:w="5"/><text x="88.6300%" y="319.50"></text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (3 samples, 0.11%)</title><rect x="88.4557%" y="293" width="0.1136%" height="15" fill="rgb(209,7,32)" fg:x="2337" fg:w="3"/><text x="88.7057%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (1 samples, 0.04%)</title><rect x="88.5314%" y="277" width="0.0379%" height="15" fill="rgb(209,39,41)" fg:x="2339" fg:w="1"/><text x="88.7814%" y="287.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="88.5314%" y="261" width="0.0379%" height="15" fill="rgb(226,182,46)" fg:x="2339" fg:w="1"/><text x="88.7814%" y="271.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.04%)</title><rect x="88.5314%" y="245" width="0.0379%" height="15" fill="rgb(230,219,10)" fg:x="2339" fg:w="1"/><text x="88.7814%" y="255.50"></text></g><g><title>hyper::rt::io::ReadBufCursor::as_mut (1 samples, 0.04%)</title><rect x="88.5693%" y="357" width="0.0379%" height="15" fill="rgb(227,175,30)" fg:x="2340" fg:w="1"/><text x="88.8193%" y="367.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (7 samples, 0.26%)</title><rect x="88.3800%" y="373" width="0.2650%" height="15" fill="rgb(217,2,50)" fg:x="2335" fg:w="7"/><text x="88.6300%" y="383.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::uninit (1 samples, 0.04%)</title><rect x="88.6071%" y="357" width="0.0379%" height="15" fill="rgb(229,160,0)" fg:x="2341" fg:w="1"/><text x="88.8571%" y="367.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (9 samples, 0.34%)</title><rect x="88.3800%" y="389" width="0.3407%" height="15" fill="rgb(207,78,37)" fg:x="2335" fg:w="9"/><text x="88.6300%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.08%)</title><rect x="88.6450%" y="373" width="0.0757%" height="15" fill="rgb(225,57,0)" fg:x="2342" fg:w="2"/><text x="88.8950%" y="383.50"></text></g><g><title>core::mem::replace (2 samples, 0.08%)</title><rect x="88.6450%" y="357" width="0.0757%" height="15" fill="rgb(232,154,2)" fg:x="2342" fg:w="2"/><text x="88.8950%" y="367.50"></text></g><g><title>core::ptr::read (2 samples, 0.08%)</title><rect x="88.6450%" y="341" width="0.0757%" height="15" fill="rgb(241,212,25)" fg:x="2342" fg:w="2"/><text x="88.8950%" y="351.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (21 samples, 0.79%)</title><rect x="88.3043%" y="453" width="0.7949%" height="15" fill="rgb(226,69,20)" fg:x="2333" fg:w="21"/><text x="88.5543%" y="463.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::mid_message_detect_eof (21 samples, 0.79%)</title><rect x="88.3043%" y="437" width="0.7949%" height="15" fill="rgb(247,184,54)" fg:x="2333" fg:w="21"/><text x="88.5543%" y="447.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (21 samples, 0.79%)</title><rect x="88.3043%" y="421" width="0.7949%" height="15" fill="rgb(210,145,0)" fg:x="2333" fg:w="21"/><text x="88.5543%" y="431.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (21 samples, 0.79%)</title><rect x="88.3043%" y="405" width="0.7949%" height="15" fill="rgb(253,82,12)" fg:x="2333" fg:w="21"/><text x="88.5543%" y="415.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (10 samples, 0.38%)</title><rect x="88.7207%" y="389" width="0.3785%" height="15" fill="rgb(245,42,11)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="399.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (10 samples, 0.38%)</title><rect x="88.7207%" y="373" width="0.3785%" height="15" fill="rgb(219,147,32)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.38%)</title><rect x="88.7207%" y="357" width="0.3785%" height="15" fill="rgb(246,12,7)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.38%)</title><rect x="88.7207%" y="341" width="0.3785%" height="15" fill="rgb(243,50,9)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.38%)</title><rect x="88.7207%" y="325" width="0.3785%" height="15" fill="rgb(219,149,6)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (10 samples, 0.38%)</title><rect x="88.7207%" y="309" width="0.3785%" height="15" fill="rgb(241,51,42)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.38%)</title><rect x="88.7207%" y="293" width="0.3785%" height="15" fill="rgb(226,128,27)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.38%)</title><rect x="88.7207%" y="277" width="0.3785%" height="15" fill="rgb(244,144,4)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="287.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.38%)</title><rect x="88.7207%" y="261" width="0.3785%" height="15" fill="rgb(221,4,13)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="271.50"></text></g><g><title>__rdl_alloc (10 samples, 0.38%)</title><rect x="88.7207%" y="245" width="0.3785%" height="15" fill="rgb(208,170,28)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="255.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10 samples, 0.38%)</title><rect x="88.7207%" y="229" width="0.3785%" height="15" fill="rgb(226,131,13)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="239.50"></text></g><g><title>malloc (10 samples, 0.38%)</title><rect x="88.7207%" y="213" width="0.3785%" height="15" fill="rgb(215,72,41)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="223.50"></text></g><g><title>[libc.so.6] (10 samples, 0.38%)</title><rect x="88.7207%" y="197" width="0.3785%" height="15" fill="rgb(243,108,20)" fg:x="2344" fg:w="10"/><text x="88.9707%" y="207.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="88.9856%" y="181" width="0.1136%" height="15" fill="rgb(230,189,17)" fg:x="2351" fg:w="3"/><text x="89.2356%" y="191.50"></text></g><g><title>&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (1 samples, 0.04%)</title><rect x="89.2127%" y="421" width="0.0379%" height="15" fill="rgb(220,50,17)" fg:x="2357" fg:w="1"/><text x="89.4627%" y="431.50"></text></g><g><title>&lt;hyper::service::util::ServiceFn&lt;F,ReqBody&gt; as hyper::service::service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (1 samples, 0.04%)</title><rect x="89.2127%" y="405" width="0.0379%" height="15" fill="rgb(248,152,48)" fg:x="2357" fg:w="1"/><text x="89.4627%" y="415.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="89.2127%" y="389" width="0.0379%" height="15" fill="rgb(244,91,11)" fg:x="2357" fg:w="1"/><text x="89.4627%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="89.2127%" y="373" width="0.0379%" height="15" fill="rgb(220,157,5)" fg:x="2357" fg:w="1"/><text x="89.4627%" y="383.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (4 samples, 0.15%)</title><rect x="89.1370%" y="437" width="0.1514%" height="15" fill="rgb(253,137,8)" fg:x="2355" fg:w="4"/><text x="89.3870%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.04%)</title><rect x="89.2506%" y="421" width="0.0379%" height="15" fill="rgb(217,137,51)" fg:x="2358" fg:w="1"/><text x="89.5006%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="89.2506%" y="405" width="0.0379%" height="15" fill="rgb(218,209,53)" fg:x="2358" fg:w="1"/><text x="89.5006%" y="415.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (2 samples, 0.08%)</title><rect x="89.2884%" y="421" width="0.0757%" height="15" fill="rgb(249,137,25)" fg:x="2359" fg:w="2"/><text x="89.5384%" y="431.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get2 (1 samples, 0.04%)</title><rect x="89.3263%" y="405" width="0.0379%" height="15" fill="rgb(239,155,26)" fg:x="2360" fg:w="1"/><text x="89.5763%" y="415.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (1 samples, 0.04%)</title><rect x="89.3263%" y="389" width="0.0379%" height="15" fill="rgb(227,85,46)" fg:x="2360" fg:w="1"/><text x="89.5763%" y="399.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (1 samples, 0.04%)</title><rect x="89.3263%" y="373" width="0.0379%" height="15" fill="rgb(251,107,43)" fg:x="2360" fg:w="1"/><text x="89.5763%" y="383.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.04%)</title><rect x="89.3263%" y="357" width="0.0379%" height="15" fill="rgb(234,170,33)" fg:x="2360" fg:w="1"/><text x="89.5763%" y="367.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (33 samples, 1.25%)</title><rect x="88.2286%" y="469" width="1.2491%" height="15" fill="rgb(206,29,35)" fg:x="2331" fg:w="33"/><text x="88.4786%" y="479.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (10 samples, 0.38%)</title><rect x="89.0992%" y="453" width="0.3785%" height="15" fill="rgb(227,138,25)" fg:x="2354" fg:w="10"/><text x="89.3492%" y="463.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (5 samples, 0.19%)</title><rect x="89.2884%" y="437" width="0.1893%" height="15" fill="rgb(249,131,35)" fg:x="2359" fg:w="5"/><text x="89.5384%" y="447.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (3 samples, 0.11%)</title><rect x="89.3641%" y="421" width="0.1136%" height="15" fill="rgb(239,6,40)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="431.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (3 samples, 0.11%)</title><rect x="89.3641%" y="405" width="0.1136%" height="15" fill="rgb(246,136,47)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="415.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (3 samples, 0.11%)</title><rect x="89.3641%" y="389" width="0.1136%" height="15" fill="rgb(253,58,26)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="399.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (3 samples, 0.11%)</title><rect x="89.3641%" y="373" width="0.1136%" height="15" fill="rgb(237,141,10)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="383.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.11%)</title><rect x="89.3641%" y="357" width="0.1136%" height="15" fill="rgb(234,156,12)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="367.50"></text></g><g><title>&lt;poem::listener::BoxIo as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.11%)</title><rect x="89.3641%" y="341" width="0.1136%" height="15" fill="rgb(243,224,36)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.11%)</title><rect x="89.3641%" y="325" width="0.1136%" height="15" fill="rgb(205,229,51)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="335.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.11%)</title><rect x="89.3641%" y="309" width="0.1136%" height="15" fill="rgb(223,189,4)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="319.50"></text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (3 samples, 0.11%)</title><rect x="89.3641%" y="293" width="0.1136%" height="15" fill="rgb(249,167,54)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="303.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::_{{closure}} (3 samples, 0.11%)</title><rect x="89.3641%" y="277" width="0.1136%" height="15" fill="rgb(218,34,28)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="287.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.11%)</title><rect x="89.3641%" y="261" width="0.1136%" height="15" fill="rgb(232,109,42)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="271.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (3 samples, 0.11%)</title><rect x="89.3641%" y="245" width="0.1136%" height="15" fill="rgb(248,214,46)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="255.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (3 samples, 0.11%)</title><rect x="89.3641%" y="229" width="0.1136%" height="15" fill="rgb(244,216,40)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="239.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (3 samples, 0.11%)</title><rect x="89.3641%" y="213" width="0.1136%" height="15" fill="rgb(231,226,31)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="223.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (3 samples, 0.11%)</title><rect x="89.3641%" y="197" width="0.1136%" height="15" fill="rgb(238,38,43)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="207.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (3 samples, 0.11%)</title><rect x="89.3641%" y="181" width="0.1136%" height="15" fill="rgb(208,88,43)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="191.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (3 samples, 0.11%)</title><rect x="89.3641%" y="165" width="0.1136%" height="15" fill="rgb(205,136,37)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="175.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.11%)</title><rect x="89.3641%" y="149" width="0.1136%" height="15" fill="rgb(237,34,14)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="159.50"></text></g><g><title>std::sys_common::net::TcpStream::read (3 samples, 0.11%)</title><rect x="89.3641%" y="133" width="0.1136%" height="15" fill="rgb(236,193,44)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="143.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (3 samples, 0.11%)</title><rect x="89.3641%" y="117" width="0.1136%" height="15" fill="rgb(231,48,10)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="127.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (3 samples, 0.11%)</title><rect x="89.3641%" y="101" width="0.1136%" height="15" fill="rgb(213,141,34)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="111.50"></text></g><g><title>recv (3 samples, 0.11%)</title><rect x="89.3641%" y="85" width="0.1136%" height="15" fill="rgb(249,130,34)" fg:x="2361" fg:w="3"/><text x="89.6141%" y="95.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="89.5534%" y="437" width="0.0379%" height="15" fill="rgb(219,42,41)" fg:x="2366" fg:w="1"/><text x="89.8034%" y="447.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (1 samples, 0.04%)</title><rect x="89.5912%" y="437" width="0.0379%" height="15" fill="rgb(224,100,54)" fg:x="2367" fg:w="1"/><text x="89.8412%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;poem::server::serve_connection&lt;poem::listener::BoxIo&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.04%)</title><rect x="89.5912%" y="421" width="0.0379%" height="15" fill="rgb(229,200,27)" fg:x="2367" fg:w="1"/><text x="89.8412%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::server::serve_connection&lt;poem::listener::BoxIo&gt;::{{closure}}::{{closure}}::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="89.5912%" y="405" width="0.0379%" height="15" fill="rgb(217,118,10)" fg:x="2367" fg:w="1"/><text x="89.8412%" y="415.50"></text></g><g><title>&lt;http::uri::Uri as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="89.7426%" y="389" width="0.0757%" height="15" fill="rgb(206,22,3)" fg:x="2371" fg:w="2"/><text x="89.9926%" y="399.50"></text></g><g><title>&lt;http::uri::authority::Authority as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="89.7426%" y="373" width="0.0757%" height="15" fill="rgb(232,163,46)" fg:x="2371" fg:w="2"/><text x="89.9926%" y="383.50"></text></g><g><title>&lt;http::byte_str::ByteStr as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="89.7426%" y="357" width="0.0757%" height="15" fill="rgb(206,95,13)" fg:x="2371" fg:w="2"/><text x="89.9926%" y="367.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="89.7426%" y="341" width="0.0757%" height="15" fill="rgb(253,154,18)" fg:x="2371" fg:w="2"/><text x="89.9926%" y="351.50"></text></g><g><title>bytes::bytes::static_clone (2 samples, 0.08%)</title><rect x="89.7426%" y="325" width="0.0757%" height="15" fill="rgb(219,32,23)" fg:x="2371" fg:w="2"/><text x="89.9926%" y="335.50"></text></g><g><title>bytes::bytes::Bytes::from_static (2 samples, 0.08%)</title><rect x="89.7426%" y="309" width="0.0757%" height="15" fill="rgb(230,191,45)" fg:x="2371" fg:w="2"/><text x="89.9926%" y="319.50"></text></g><g><title>&lt;poem::request::Request as core::convert::From&lt;(http::request::Request&lt;hyper::body::incoming::Incoming&gt;,poem::web::addr::LocalAddr,poem::web::addr::RemoteAddr,http::uri::scheme::Scheme)&gt;&gt;::from (4 samples, 0.15%)</title><rect x="89.7048%" y="405" width="0.1514%" height="15" fill="rgb(229,64,36)" fg:x="2370" fg:w="4"/><text x="89.9548%" y="415.50"></text></g><g><title>http_body_util::BodyExt::boxed (1 samples, 0.04%)</title><rect x="89.8183%" y="389" width="0.0379%" height="15" fill="rgb(205,129,25)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="399.50"></text></g><g><title>http_body_util::combinators::box_body::BoxBody&lt;D,E&gt;::new (1 samples, 0.04%)</title><rect x="89.8183%" y="373" width="0.0379%" height="15" fill="rgb(254,112,7)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="89.8183%" y="357" width="0.0379%" height="15" fill="rgb(226,53,48)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="89.8183%" y="341" width="0.0379%" height="15" fill="rgb(214,153,38)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="89.8183%" y="325" width="0.0379%" height="15" fill="rgb(243,101,7)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="89.8183%" y="309" width="0.0379%" height="15" fill="rgb(240,140,22)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="89.8183%" y="293" width="0.0379%" height="15" fill="rgb(235,114,2)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="89.8183%" y="277" width="0.0379%" height="15" fill="rgb(242,59,12)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="89.8183%" y="261" width="0.0379%" height="15" fill="rgb(252,134,9)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="271.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="89.8183%" y="245" width="0.0379%" height="15" fill="rgb(236,4,44)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="255.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="89.8183%" y="229" width="0.0379%" height="15" fill="rgb(254,172,41)" fg:x="2373" fg:w="1"/><text x="90.0683%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (2 samples, 0.08%)</title><rect x="89.8562%" y="389" width="0.0757%" height="15" fill="rgb(244,63,20)" fg:x="2374" fg:w="2"/><text x="90.1062%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="89.8940%" y="373" width="0.0379%" height="15" fill="rgb(250,73,31)" fg:x="2375" fg:w="1"/><text x="90.1440%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.30%)</title><rect x="89.7048%" y="421" width="0.3028%" height="15" fill="rgb(241,38,36)" fg:x="2370" fg:w="8"/><text x="89.9548%" y="431.50"></text></g><g><title>poem::response::&lt;impl core::convert::From&lt;poem::response::Response&gt; for http::response::Response&lt;http_body_util::combinators::box_body::BoxBody&lt;bytes::bytes::Bytes,std::io::error::Error&gt;&gt;&gt;::from (4 samples, 0.15%)</title><rect x="89.8562%" y="405" width="0.1514%" height="15" fill="rgb(245,211,2)" fg:x="2374" fg:w="4"/><text x="90.1062%" y="415.50"></text></g><g><title>http::response::Response&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="89.9319%" y="389" width="0.0757%" height="15" fill="rgb(206,120,28)" fg:x="2376" fg:w="2"/><text x="90.1819%" y="399.50"></text></g><g><title>http::response::Parts::new (2 samples, 0.08%)</title><rect x="89.9319%" y="373" width="0.0757%" height="15" fill="rgb(211,59,34)" fg:x="2376" fg:w="2"/><text x="90.1819%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="90.2347%" y="325" width="0.0379%" height="15" fill="rgb(233,168,5)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="90.2347%" y="309" width="0.0379%" height="15" fill="rgb(234,33,13)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.04%)</title><rect x="90.2347%" y="293" width="0.0379%" height="15" fill="rgb(231,150,26)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as alloc::sync::ArcFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.04%)</title><rect x="90.2347%" y="277" width="0.0379%" height="15" fill="rgb(217,191,4)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::copy_from_slice (1 samples, 0.04%)</title><rect x="90.2347%" y="261" width="0.0379%" height="15" fill="rgb(246,198,38)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice (1 samples, 0.04%)</title><rect x="90.2347%" y="245" width="0.0379%" height="15" fill="rgb(245,64,37)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (1 samples, 0.04%)</title><rect x="90.2347%" y="229" width="0.0379%" height="15" fill="rgb(250,30,36)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice::_{{closure}} (1 samples, 0.04%)</title><rect x="90.2347%" y="213" width="0.0379%" height="15" fill="rgb(217,86,53)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="90.2347%" y="197" width="0.0379%" height="15" fill="rgb(228,157,16)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="90.2347%" y="181" width="0.0379%" height="15" fill="rgb(217,59,31)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="90.2347%" y="165" width="0.0379%" height="15" fill="rgb(237,138,41)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="90.2347%" y="149" width="0.0379%" height="15" fill="rgb(227,91,49)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="159.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="90.2347%" y="133" width="0.0379%" height="15" fill="rgb(247,21,44)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="143.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="90.2347%" y="117" width="0.0379%" height="15" fill="rgb(219,210,51)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="90.2347%" y="101" width="0.0379%" height="15" fill="rgb(209,140,6)" fg:x="2384" fg:w="1"/><text x="90.4847%" y="111.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="90.3104%" y="293" width="0.0757%" height="15" fill="rgb(221,188,24)" fg:x="2386" fg:w="2"/><text x="90.5604%" y="303.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (2 samples, 0.08%)</title><rect x="90.3104%" y="277" width="0.0757%" height="15" fill="rgb(232,154,20)" fg:x="2386" fg:w="2"/><text x="90.5604%" y="287.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (4 samples, 0.15%)</title><rect x="90.2725%" y="325" width="0.1514%" height="15" fill="rgb(244,137,50)" fg:x="2385" fg:w="4"/><text x="90.5225%" y="335.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="90.3104%" y="309" width="0.1136%" height="15" fill="rgb(225,185,43)" fg:x="2386" fg:w="3"/><text x="90.5604%" y="319.50"></text></g><g><title>&lt;poem::endpoint::endpoint::ToDynEndpoint&lt;E&gt; as poem::endpoint::endpoint::DynEndpoint&gt;::call (1 samples, 0.04%)</title><rect x="90.3861%" y="293" width="0.0379%" height="15" fill="rgb(213,205,38)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="303.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="90.3861%" y="277" width="0.0379%" height="15" fill="rgb(236,73,12)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="287.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="90.3861%" y="261" width="0.0379%" height="15" fill="rgb(235,219,13)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="90.3861%" y="245" width="0.0379%" height="15" fill="rgb(218,59,36)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="255.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="90.3861%" y="229" width="0.0379%" height="15" fill="rgb(205,110,39)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="90.3861%" y="213" width="0.0379%" height="15" fill="rgb(218,206,42)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="90.3861%" y="197" width="0.0379%" height="15" fill="rgb(248,125,24)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="90.3861%" y="181" width="0.0379%" height="15" fill="rgb(242,28,27)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="191.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="90.3861%" y="165" width="0.0379%" height="15" fill="rgb(216,228,15)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="175.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="90.3861%" y="149" width="0.0379%" height="15" fill="rgb(235,116,46)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="159.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="90.3861%" y="133" width="0.0379%" height="15" fill="rgb(224,18,32)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="90.3861%" y="117" width="0.0379%" height="15" fill="rgb(252,5,12)" fg:x="2388" fg:w="1"/><text x="90.6361%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="90.4996%" y="197" width="0.0379%" height="15" fill="rgb(251,36,5)" fg:x="2391" fg:w="1"/><text x="90.7496%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="90.4996%" y="181" width="0.0379%" height="15" fill="rgb(217,53,14)" fg:x="2391" fg:w="1"/><text x="90.7496%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="90.4996%" y="165" width="0.0379%" height="15" fill="rgb(215,86,45)" fg:x="2391" fg:w="1"/><text x="90.7496%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="90.4996%" y="149" width="0.0379%" height="15" fill="rgb(242,169,11)" fg:x="2391" fg:w="1"/><text x="90.7496%" y="159.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="90.4996%" y="133" width="0.0379%" height="15" fill="rgb(211,213,45)" fg:x="2391" fg:w="1"/><text x="90.7496%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="90.5375%" y="197" width="0.0379%" height="15" fill="rgb(205,88,11)" fg:x="2392" fg:w="1"/><text x="90.7875%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.19%)</title><rect x="90.4239%" y="293" width="0.1893%" height="15" fill="rgb(252,69,26)" fg:x="2389" fg:w="5"/><text x="90.6739%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.19%)</title><rect x="90.4239%" y="277" width="0.1893%" height="15" fill="rgb(246,123,37)" fg:x="2389" fg:w="5"/><text x="90.6739%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.19%)</title><rect x="90.4239%" y="261" width="0.1893%" height="15" fill="rgb(212,205,5)" fg:x="2389" fg:w="5"/><text x="90.6739%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.15%)</title><rect x="90.4618%" y="245" width="0.1514%" height="15" fill="rgb(253,148,0)" fg:x="2390" fg:w="4"/><text x="90.7118%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.11%)</title><rect x="90.4996%" y="229" width="0.1136%" height="15" fill="rgb(239,22,4)" fg:x="2391" fg:w="3"/><text x="90.7496%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.11%)</title><rect x="90.4996%" y="213" width="0.1136%" height="15" fill="rgb(226,26,53)" fg:x="2391" fg:w="3"/><text x="90.7496%" y="223.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="90.5753%" y="197" width="0.0379%" height="15" fill="rgb(225,229,45)" fg:x="2393" fg:w="1"/><text x="90.8253%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7 samples, 0.26%)</title><rect x="90.4239%" y="325" width="0.2650%" height="15" fill="rgb(220,60,37)" fg:x="2389" fg:w="7"/><text x="90.6739%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.26%)</title><rect x="90.4239%" y="309" width="0.2650%" height="15" fill="rgb(217,180,35)" fg:x="2389" fg:w="7"/><text x="90.6739%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (2 samples, 0.08%)</title><rect x="90.6132%" y="293" width="0.0757%" height="15" fill="rgb(229,7,53)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="90.6132%" y="277" width="0.0757%" height="15" fill="rgb(254,137,3)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(alloc::string::String,alloc::string::String),alloc::alloc::Global&gt;&gt; (2 samples, 0.08%)</title><rect x="90.6132%" y="261" width="0.0757%" height="15" fill="rgb(215,140,41)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="271.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="90.6132%" y="245" width="0.0757%" height="15" fill="rgb(250,80,15)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (2 samples, 0.08%)</title><rect x="90.6132%" y="229" width="0.0757%" height="15" fill="rgb(252,191,6)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="90.6132%" y="213" width="0.0757%" height="15" fill="rgb(246,217,18)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="90.6132%" y="197" width="0.0757%" height="15" fill="rgb(223,93,7)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="90.6132%" y="181" width="0.0757%" height="15" fill="rgb(225,55,52)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="191.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.08%)</title><rect x="90.6132%" y="165" width="0.0757%" height="15" fill="rgb(240,31,24)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="175.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.08%)</title><rect x="90.6132%" y="149" width="0.0757%" height="15" fill="rgb(205,56,52)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="159.50"></text></g><g><title>cfree (2 samples, 0.08%)</title><rect x="90.6132%" y="133" width="0.0757%" height="15" fill="rgb(246,146,12)" fg:x="2394" fg:w="2"/><text x="90.8632%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="90.6510%" y="117" width="0.0379%" height="15" fill="rgb(239,84,36)" fg:x="2395" fg:w="1"/><text x="90.9010%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.04%)</title><rect x="90.6889%" y="293" width="0.0379%" height="15" fill="rgb(207,41,40)" fg:x="2396" fg:w="1"/><text x="90.9389%" y="303.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="90.6889%" y="277" width="0.0379%" height="15" fill="rgb(241,179,25)" fg:x="2396" fg:w="1"/><text x="90.9389%" y="287.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="90.6889%" y="261" width="0.0379%" height="15" fill="rgb(210,0,34)" fg:x="2396" fg:w="1"/><text x="90.9389%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="90.6889%" y="245" width="0.0379%" height="15" fill="rgb(225,217,29)" fg:x="2396" fg:w="1"/><text x="90.9389%" y="255.50"></text></g><g><title>poem::request::Request::set_data (4 samples, 0.15%)</title><rect x="90.6889%" y="325" width="0.1514%" height="15" fill="rgb(216,191,38)" fg:x="2396" fg:w="4"/><text x="90.9389%" y="335.50"></text></g><g><title>http::extensions::Extensions::insert (4 samples, 0.15%)</title><rect x="90.6889%" y="309" width="0.1514%" height="15" fill="rgb(232,140,52)" fg:x="2396" fg:w="4"/><text x="90.9389%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.11%)</title><rect x="90.7267%" y="293" width="0.1136%" height="15" fill="rgb(223,158,51)" fg:x="2397" fg:w="3"/><text x="90.9767%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.11%)</title><rect x="90.7267%" y="277" width="0.1136%" height="15" fill="rgb(235,29,51)" fg:x="2397" fg:w="3"/><text x="90.9767%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3 samples, 0.11%)</title><rect x="90.7267%" y="261" width="0.1136%" height="15" fill="rgb(215,181,18)" fg:x="2397" fg:w="3"/><text x="90.9767%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.11%)</title><rect x="90.7267%" y="245" width="0.1136%" height="15" fill="rgb(227,125,34)" fg:x="2397" fg:w="3"/><text x="90.9767%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.11%)</title><rect x="90.7267%" y="229" width="0.1136%" height="15" fill="rgb(230,197,49)" fg:x="2397" fg:w="3"/><text x="90.9767%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.11%)</title><rect x="90.7267%" y="213" width="0.1136%" height="15" fill="rgb(239,141,16)" fg:x="2397" fg:w="3"/><text x="90.9767%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.08%)</title><rect x="90.7646%" y="197" width="0.0757%" height="15" fill="rgb(225,105,43)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (2 samples, 0.08%)</title><rect x="90.7646%" y="181" width="0.0757%" height="15" fill="rgb(214,131,14)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (2 samples, 0.08%)</title><rect x="90.7646%" y="165" width="0.0757%" height="15" fill="rgb(229,177,11)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.08%)</title><rect x="90.7646%" y="149" width="0.0757%" height="15" fill="rgb(231,180,14)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="159.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.08%)</title><rect x="90.7646%" y="133" width="0.0757%" height="15" fill="rgb(232,88,2)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="90.7646%" y="117" width="0.0757%" height="15" fill="rgb(205,220,8)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="90.7646%" y="101" width="0.0757%" height="15" fill="rgb(225,23,53)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="111.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="90.7646%" y="85" width="0.0757%" height="15" fill="rgb(213,62,29)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="95.50"></text></g><g><title>__rdl_alloc (2 samples, 0.08%)</title><rect x="90.7646%" y="69" width="0.0757%" height="15" fill="rgb(227,75,7)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="79.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.08%)</title><rect x="90.7646%" y="53" width="0.0757%" height="15" fill="rgb(207,105,14)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="63.50"></text></g><g><title>malloc (2 samples, 0.08%)</title><rect x="90.7646%" y="37" width="0.0757%" height="15" fill="rgb(245,62,29)" fg:x="2398" fg:w="2"/><text x="91.0146%" y="47.50"></text></g><g><title>poem::response::Response::data (1 samples, 0.04%)</title><rect x="90.8403%" y="325" width="0.0379%" height="15" fill="rgb(236,202,4)" fg:x="2400" fg:w="1"/><text x="91.0903%" y="335.50"></text></g><g><title>http::extensions::Extensions::get (1 samples, 0.04%)</title><rect x="90.8403%" y="309" width="0.0379%" height="15" fill="rgb(250,67,1)" fg:x="2400" fg:w="1"/><text x="91.0903%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.04%)</title><rect x="90.8403%" y="293" width="0.0379%" height="15" fill="rgb(253,115,44)" fg:x="2400" fg:w="1"/><text x="91.0903%" y="303.50"></text></g><g><title>http::extensions::Extensions::get::_{{closure}} (1 samples, 0.04%)</title><rect x="90.8403%" y="277" width="0.0379%" height="15" fill="rgb(251,139,18)" fg:x="2400" fg:w="1"/><text x="91.0903%" y="287.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (1 samples, 0.04%)</title><rect x="90.8403%" y="261" width="0.0379%" height="15" fill="rgb(218,22,32)" fg:x="2400" fg:w="1"/><text x="91.0903%" y="271.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (1 samples, 0.04%)</title><rect x="90.8403%" y="245" width="0.0379%" height="15" fill="rgb(243,53,5)" fg:x="2400" fg:w="1"/><text x="91.0903%" y="255.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.04%)</title><rect x="90.8781%" y="309" width="0.0379%" height="15" fill="rgb(227,56,16)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="90.8781%" y="293" width="0.0379%" height="15" fill="rgb(245,53,0)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="303.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="90.8781%" y="277" width="0.0379%" height="15" fill="rgb(216,170,35)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="90.8781%" y="261" width="0.0379%" height="15" fill="rgb(211,200,8)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="90.8781%" y="245" width="0.0379%" height="15" fill="rgb(228,204,44)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="90.8781%" y="229" width="0.0379%" height="15" fill="rgb(214,121,17)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="90.8781%" y="213" width="0.0379%" height="15" fill="rgb(233,64,38)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="90.8781%" y="197" width="0.0379%" height="15" fill="rgb(253,54,19)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="90.8781%" y="181" width="0.0379%" height="15" fill="rgb(253,94,18)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="90.8781%" y="165" width="0.0379%" height="15" fill="rgb(227,57,52)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="90.8781%" y="149" width="0.0379%" height="15" fill="rgb(230,228,50)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="90.8781%" y="133" width="0.0379%" height="15" fill="rgb(217,205,27)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="90.8781%" y="117" width="0.0379%" height="15" fill="rgb(252,71,50)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="90.8781%" y="101" width="0.0379%" height="15" fill="rgb(209,86,4)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="111.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="90.8781%" y="85" width="0.0379%" height="15" fill="rgb(229,94,0)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="95.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="90.8781%" y="69" width="0.0379%" height="15" fill="rgb(252,223,21)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="79.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="90.8781%" y="53" width="0.0379%" height="15" fill="rgb(230,210,4)" fg:x="2401" fg:w="1"/><text x="91.1281%" y="63.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.08%)</title><rect x="90.9160%" y="309" width="0.0757%" height="15" fill="rgb(240,149,38)" fg:x="2402" fg:w="2"/><text x="91.1660%" y="319.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.08%)</title><rect x="90.9160%" y="293" width="0.0757%" height="15" fill="rgb(254,105,20)" fg:x="2402" fg:w="2"/><text x="91.1660%" y="303.50"></text></g><g><title>percent_encoding::PercentDecode::decode_utf8 (1 samples, 0.04%)</title><rect x="90.9917%" y="309" width="0.0379%" height="15" fill="rgb(253,87,46)" fg:x="2404" fg:w="1"/><text x="91.2417%" y="319.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="90.9917%" y="293" width="0.0379%" height="15" fill="rgb(253,116,33)" fg:x="2404" fg:w="1"/><text x="91.2417%" y="303.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.04%)</title><rect x="90.9917%" y="277" width="0.0379%" height="15" fill="rgb(229,198,5)" fg:x="2404" fg:w="1"/><text x="91.2417%" y="287.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27 samples, 1.02%)</title><rect x="90.0454%" y="373" width="1.0220%" height="15" fill="rgb(242,38,37)" fg:x="2379" fg:w="27"/><text x="90.2954%" y="383.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (27 samples, 1.02%)</title><rect x="90.0454%" y="357" width="1.0220%" height="15" fill="rgb(242,69,53)" fg:x="2379" fg:w="27"/><text x="90.2954%" y="367.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (23 samples, 0.87%)</title><rect x="90.1968%" y="341" width="0.8706%" height="15" fill="rgb(249,80,16)" fg:x="2383" fg:w="23"/><text x="90.4468%" y="351.50"></text></g><g><title>poem::route::internal::radix_tree::RadixTree&lt;T&gt;::matches (5 samples, 0.19%)</title><rect x="90.8781%" y="325" width="0.1893%" height="15" fill="rgb(206,128,11)" fg:x="2401" fg:w="5"/><text x="91.1281%" y="335.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::matches (1 samples, 0.04%)</title><rect x="91.0295%" y="309" width="0.0379%" height="15" fill="rgb(212,35,20)" fg:x="2405" fg:w="1"/><text x="91.2795%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::strip_prefix (1 samples, 0.04%)</title><rect x="91.0295%" y="293" width="0.0379%" height="15" fill="rgb(236,79,13)" fg:x="2405" fg:w="1"/><text x="91.2795%" y="303.50"></text></g><g><title>&lt;poem::endpoint::endpoint::ToDynEndpoint&lt;E&gt; as poem::endpoint::endpoint::DynEndpoint&gt;::call (7 samples, 0.26%)</title><rect x="91.0674%" y="373" width="0.2650%" height="15" fill="rgb(233,123,3)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="383.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (7 samples, 0.26%)</title><rect x="91.0674%" y="357" width="0.2650%" height="15" fill="rgb(214,93,52)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (7 samples, 0.26%)</title><rect x="91.0674%" y="341" width="0.2650%" height="15" fill="rgb(251,37,40)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.26%)</title><rect x="91.0674%" y="325" width="0.2650%" height="15" fill="rgb(227,80,54)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="335.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.26%)</title><rect x="91.0674%" y="309" width="0.2650%" height="15" fill="rgb(254,48,11)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.26%)</title><rect x="91.0674%" y="293" width="0.2650%" height="15" fill="rgb(235,193,26)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.26%)</title><rect x="91.0674%" y="277" width="0.2650%" height="15" fill="rgb(229,99,21)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="287.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.26%)</title><rect x="91.0674%" y="261" width="0.2650%" height="15" fill="rgb(211,140,41)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="271.50"></text></g><g><title>__rdl_alloc (7 samples, 0.26%)</title><rect x="91.0674%" y="245" width="0.2650%" height="15" fill="rgb(240,227,30)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="255.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.26%)</title><rect x="91.0674%" y="229" width="0.2650%" height="15" fill="rgb(215,224,45)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="239.50"></text></g><g><title>malloc (7 samples, 0.26%)</title><rect x="91.0674%" y="213" width="0.2650%" height="15" fill="rgb(206,123,31)" fg:x="2406" fg:w="7"/><text x="91.3174%" y="223.50"></text></g><g><title>[libc.so.6] (5 samples, 0.19%)</title><rect x="91.1431%" y="197" width="0.1893%" height="15" fill="rgb(210,138,16)" fg:x="2408" fg:w="5"/><text x="91.3931%" y="207.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (36 samples, 1.36%)</title><rect x="90.0076%" y="389" width="1.3626%" height="15" fill="rgb(228,57,28)" fg:x="2378" fg:w="36"/><text x="90.2576%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;poem::response::Response,poem::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="91.3323%" y="373" width="0.0379%" height="15" fill="rgb(242,170,10)" fg:x="2413" fg:w="1"/><text x="91.5823%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;poem::response::Response,poem::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="91.3323%" y="357" width="0.0379%" height="15" fill="rgb(228,214,39)" fg:x="2413" fg:w="1"/><text x="91.5823%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="91.3323%" y="341" width="0.0379%" height="15" fill="rgb(218,179,33)" fg:x="2413" fg:w="1"/><text x="91.5823%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="91.3323%" y="325" width="0.0379%" height="15" fill="rgb(235,193,39)" fg:x="2413" fg:w="1"/><text x="91.5823%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="91.3323%" y="309" width="0.0379%" height="15" fill="rgb(219,221,36)" fg:x="2413" fg:w="1"/><text x="91.5823%" y="319.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="91.3323%" y="293" width="0.0379%" height="15" fill="rgb(248,218,19)" fg:x="2413" fg:w="1"/><text x="91.5823%" y="303.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="91.3323%" y="277" width="0.0379%" height="15" fill="rgb(205,50,9)" fg:x="2413" fg:w="1"/><text x="91.5823%" y="287.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="91.3323%" y="261" width="0.0379%" height="15" fill="rgb(238,81,28)" fg:x="2413" fg:w="1"/><text x="91.5823%" y="271.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (49 samples, 1.85%)</title><rect x="89.5534%" y="453" width="1.8547%" height="15" fill="rgb(235,110,19)" fg:x="2366" fg:w="49"/><text x="89.8034%" y="463.50">&lt;..</text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (47 samples, 1.78%)</title><rect x="89.6291%" y="437" width="1.7790%" height="15" fill="rgb(214,7,14)" fg:x="2368" fg:w="47"/><text x="89.8791%" y="447.50">p..</text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (37 samples, 1.40%)</title><rect x="90.0076%" y="421" width="1.4005%" height="15" fill="rgb(211,77,3)" fg:x="2378" fg:w="37"/><text x="90.2576%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (37 samples, 1.40%)</title><rect x="90.0076%" y="405" width="1.4005%" height="15" fill="rgb(229,5,9)" fg:x="2378" fg:w="37"/><text x="90.2576%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.3702%" y="389" width="0.0379%" height="15" fill="rgb(225,90,11)" fg:x="2414" fg:w="1"/><text x="91.6202%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.04%)</title><rect x="91.4080%" y="453" width="0.0379%" height="15" fill="rgb(242,56,8)" fg:x="2415" fg:w="1"/><text x="91.6580%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.04%)</title><rect x="91.4080%" y="437" width="0.0379%" height="15" fill="rgb(249,212,39)" fg:x="2415" fg:w="1"/><text x="91.6580%" y="447.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_write_head (2 samples, 0.08%)</title><rect x="91.4459%" y="453" width="0.0757%" height="15" fill="rgb(236,90,9)" fg:x="2416" fg:w="2"/><text x="91.6959%" y="463.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_headers_buf (2 samples, 0.08%)</title><rect x="91.4459%" y="437" width="0.0757%" height="15" fill="rgb(206,88,35)" fg:x="2416" fg:w="2"/><text x="91.6959%" y="447.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining (2 samples, 0.08%)</title><rect x="91.4459%" y="421" width="0.0757%" height="15" fill="rgb(205,126,30)" fg:x="2416" fg:w="2"/><text x="91.6959%" y="431.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (1 samples, 0.04%)</title><rect x="91.4837%" y="405" width="0.0379%" height="15" fill="rgb(230,176,12)" fg:x="2417" fg:w="1"/><text x="91.7337%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.04%)</title><rect x="91.4837%" y="389" width="0.0379%" height="15" fill="rgb(243,19,9)" fg:x="2417" fg:w="1"/><text x="91.7337%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.04%)</title><rect x="91.4837%" y="373" width="0.0379%" height="15" fill="rgb(245,171,17)" fg:x="2417" fg:w="1"/><text x="91.7337%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="91.4837%" y="357" width="0.0379%" height="15" fill="rgb(227,52,21)" fg:x="2417" fg:w="1"/><text x="91.7337%" y="367.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="91.4837%" y="341" width="0.0379%" height="15" fill="rgb(238,69,14)" fg:x="2417" fg:w="1"/><text x="91.7337%" y="351.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.04%)</title><rect x="91.5216%" y="421" width="0.0379%" height="15" fill="rgb(241,156,39)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="431.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.04%)</title><rect x="91.5216%" y="405" width="0.0379%" height="15" fill="rgb(212,227,28)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="415.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (1 samples, 0.04%)</title><rect x="91.5216%" y="389" width="0.0379%" height="15" fill="rgb(209,118,27)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="399.50"></text></g><g><title>bytes::bytes::release_shared (1 samples, 0.04%)</title><rect x="91.5216%" y="373" width="0.0379%" height="15" fill="rgb(226,102,5)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="383.50"></text></g><g><title>core::mem::drop (1 samples, 0.04%)</title><rect x="91.5216%" y="357" width="0.0379%" height="15" fill="rgb(223,34,3)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (1 samples, 0.04%)</title><rect x="91.5216%" y="341" width="0.0379%" height="15" fill="rgb(221,81,38)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (1 samples, 0.04%)</title><rect x="91.5216%" y="325" width="0.0379%" height="15" fill="rgb(236,219,28)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="335.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="91.5216%" y="309" width="0.0379%" height="15" fill="rgb(213,200,14)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="91.5216%" y="293" width="0.0379%" height="15" fill="rgb(240,33,19)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="303.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="91.5216%" y="277" width="0.0379%" height="15" fill="rgb(233,113,27)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="287.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="91.5216%" y="261" width="0.0379%" height="15" fill="rgb(220,221,18)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="271.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="91.5216%" y="245" width="0.0379%" height="15" fill="rgb(238,92,8)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.5216%" y="229" width="0.0379%" height="15" fill="rgb(222,164,16)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.5216%" y="213" width="0.0379%" height="15" fill="rgb(241,119,3)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.5216%" y="197" width="0.0379%" height="15" fill="rgb(241,44,8)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.5216%" y="181" width="0.0379%" height="15" fill="rgb(230,36,40)" fg:x="2418" fg:w="1"/><text x="91.7716%" y="191.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_body_and_end (9 samples, 0.34%)</title><rect x="91.5216%" y="453" width="0.3407%" height="15" fill="rgb(243,16,36)" fg:x="2418" fg:w="9"/><text x="91.7716%" y="463.50"></text></g><g><title>hyper::proto::h1::encode::Encoder::encode_and_end (9 samples, 0.34%)</title><rect x="91.5216%" y="437" width="0.3407%" height="15" fill="rgb(231,4,26)" fg:x="2418" fg:w="9"/><text x="91.7716%" y="447.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (8 samples, 0.30%)</title><rect x="91.5594%" y="421" width="0.3028%" height="15" fill="rgb(240,9,31)" fg:x="2419" fg:w="8"/><text x="91.8094%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.30%)</title><rect x="91.5594%" y="405" width="0.3028%" height="15" fill="rgb(207,173,15)" fg:x="2419" fg:w="8"/><text x="91.8094%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.30%)</title><rect x="91.5594%" y="389" width="0.3028%" height="15" fill="rgb(224,192,53)" fg:x="2419" fg:w="8"/><text x="91.8094%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.30%)</title><rect x="91.5594%" y="373" width="0.3028%" height="15" fill="rgb(223,67,28)" fg:x="2419" fg:w="8"/><text x="91.8094%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.30%)</title><rect x="91.5594%" y="357" width="0.3028%" height="15" fill="rgb(211,20,47)" fg:x="2419" fg:w="8"/><text x="91.8094%" y="367.50"></text></g><g><title>[libc.so.6] (8 samples, 0.30%)</title><rect x="91.5594%" y="341" width="0.3028%" height="15" fill="rgb(240,228,2)" fg:x="2419" fg:w="8"/><text x="91.8094%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;mut A&gt;::eq (1 samples, 0.04%)</title><rect x="91.8622%" y="389" width="0.0379%" height="15" fill="rgb(248,151,12)" fg:x="2427" fg:w="1"/><text x="92.1122%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="91.8622%" y="373" width="0.0379%" height="15" fill="rgb(244,8,39)" fg:x="2427" fg:w="1"/><text x="92.1122%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="91.9001%" y="181" width="0.0379%" height="15" fill="rgb(222,26,8)" fg:x="2428" fg:w="1"/><text x="92.1501%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="91.9001%" y="165" width="0.0379%" height="15" fill="rgb(213,106,44)" fg:x="2428" fg:w="1"/><text x="92.1501%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="91.9001%" y="149" width="0.0379%" height="15" fill="rgb(214,129,20)" fg:x="2428" fg:w="1"/><text x="92.1501%" y="159.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="91.9001%" y="133" width="0.0379%" height="15" fill="rgb(212,32,13)" fg:x="2428" fg:w="1"/><text x="92.1501%" y="143.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="91.9001%" y="117" width="0.0379%" height="15" fill="rgb(208,168,33)" fg:x="2428" fg:w="1"/><text x="92.1501%" y="127.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="91.9001%" y="101" width="0.0379%" height="15" fill="rgb(231,207,8)" fg:x="2428" fg:w="1"/><text x="92.1501%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (2 samples, 0.08%)</title><rect x="91.9001%" y="389" width="0.0757%" height="15" fill="rgb(235,219,23)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="91.9001%" y="373" width="0.0757%" height="15" fill="rgb(226,216,26)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="91.9001%" y="357" width="0.0757%" height="15" fill="rgb(239,137,16)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="91.9001%" y="341" width="0.0757%" height="15" fill="rgb(207,12,36)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="91.9001%" y="325" width="0.0757%" height="15" fill="rgb(210,214,24)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;)&gt;&gt; (2 samples, 0.08%)</title><rect x="91.9001%" y="309" width="0.0757%" height="15" fill="rgb(206,56,30)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="91.9001%" y="293" width="0.0757%" height="15" fill="rgb(228,143,26)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.08%)</title><rect x="91.9001%" y="277" width="0.0757%" height="15" fill="rgb(216,218,46)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.08%)</title><rect x="91.9001%" y="261" width="0.0757%" height="15" fill="rgb(206,6,19)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.08%)</title><rect x="91.9001%" y="245" width="0.0757%" height="15" fill="rgb(239,177,51)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.08%)</title><rect x="91.9001%" y="229" width="0.0757%" height="15" fill="rgb(216,55,25)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;)&gt; (2 samples, 0.08%)</title><rect x="91.9001%" y="213" width="0.0757%" height="15" fill="rgb(231,163,29)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;&gt; (2 samples, 0.08%)</title><rect x="91.9001%" y="197" width="0.0757%" height="15" fill="rgb(232,149,50)" fg:x="2428" fg:w="2"/><text x="92.1501%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::route::router::PathPattern&gt; (1 samples, 0.04%)</title><rect x="91.9379%" y="181" width="0.0379%" height="15" fill="rgb(223,142,48)" fg:x="2429" fg:w="1"/><text x="92.1879%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (1 samples, 0.04%)</title><rect x="91.9379%" y="165" width="0.0379%" height="15" fill="rgb(245,83,23)" fg:x="2429" fg:w="1"/><text x="92.1879%" y="175.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="91.9379%" y="149" width="0.0379%" height="15" fill="rgb(224,63,2)" fg:x="2429" fg:w="1"/><text x="92.1879%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.04%)</title><rect x="91.9379%" y="133" width="0.0379%" height="15" fill="rgb(218,65,53)" fg:x="2429" fg:w="1"/><text x="92.1879%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="91.9379%" y="117" width="0.0379%" height="15" fill="rgb(221,84,29)" fg:x="2429" fg:w="1"/><text x="92.1879%" y="127.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server::encode_headers_with_lower_case::LowercaseWriter as hyper::proto::h1::role::HeaderNameWriter&gt;::write_header_name (1 samples, 0.04%)</title><rect x="92.0136%" y="357" width="0.0379%" height="15" fill="rgb(234,0,32)" fg:x="2431" fg:w="1"/><text x="92.2636%" y="367.50"></text></g><g><title>http::header::name::HeaderName::as_str (1 samples, 0.04%)</title><rect x="92.0136%" y="341" width="0.0379%" height="15" fill="rgb(206,20,16)" fg:x="2431" fg:w="1"/><text x="92.2636%" y="351.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server::encode_headers_with_lower_case::LowercaseWriter as hyper::proto::h1::role::HeaderNameWriter&gt;::write_header_name_with_colon (1 samples, 0.04%)</title><rect x="92.0515%" y="357" width="0.0379%" height="15" fill="rgb(244,172,18)" fg:x="2432" fg:w="1"/><text x="92.3015%" y="367.50"></text></g><g><title>hyper::proto::h1::role::extend (1 samples, 0.04%)</title><rect x="92.0515%" y="341" width="0.0379%" height="15" fill="rgb(254,133,1)" fg:x="2432" fg:w="1"/><text x="92.3015%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="92.0515%" y="325" width="0.0379%" height="15" fill="rgb(222,206,41)" fg:x="2432" fg:w="1"/><text x="92.3015%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="92.0515%" y="309" width="0.0379%" height="15" fill="rgb(212,3,42)" fg:x="2432" fg:w="1"/><text x="92.3015%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="92.0515%" y="293" width="0.0379%" height="15" fill="rgb(241,11,4)" fg:x="2432" fg:w="1"/><text x="92.3015%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="92.0515%" y="277" width="0.0379%" height="15" fill="rgb(205,19,26)" fg:x="2432" fg:w="1"/><text x="92.3015%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="92.0515%" y="261" width="0.0379%" height="15" fill="rgb(210,179,32)" fg:x="2432" fg:w="1"/><text x="92.3015%" y="271.50"></text></g><g><title>hyper::common::date::extend (1 samples, 0.04%)</title><rect x="92.0893%" y="357" width="0.0379%" height="15" fill="rgb(227,116,49)" fg:x="2433" fg:w="1"/><text x="92.3393%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="92.0893%" y="341" width="0.0379%" height="15" fill="rgb(211,146,6)" fg:x="2433" fg:w="1"/><text x="92.3393%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="92.0893%" y="325" width="0.0379%" height="15" fill="rgb(219,44,39)" fg:x="2433" fg:w="1"/><text x="92.3393%" y="335.50"></text></g><g><title>hyper::common::date::extend::_{{closure}} (1 samples, 0.04%)</title><rect x="92.0893%" y="309" width="0.0379%" height="15" fill="rgb(234,128,11)" fg:x="2433" fg:w="1"/><text x="92.3393%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="92.0893%" y="293" width="0.0379%" height="15" fill="rgb(220,183,53)" fg:x="2433" fg:w="1"/><text x="92.3393%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="92.0893%" y="277" width="0.0379%" height="15" fill="rgb(213,219,32)" fg:x="2433" fg:w="1"/><text x="92.3393%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="92.0893%" y="261" width="0.0379%" height="15" fill="rgb(232,156,16)" fg:x="2433" fg:w="1"/><text x="92.3393%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="92.0893%" y="245" width="0.0379%" height="15" fill="rgb(246,135,34)" fg:x="2433" fg:w="1"/><text x="92.3393%" y="255.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (115 samples, 4.35%)</title><rect x="87.8123%" y="597" width="4.3528%" height="15" fill="rgb(241,99,0)" fg:x="2320" fg:w="115"/><text x="88.0623%" y="607.50">&lt;&amp;mut..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (114 samples, 4.31%)</title><rect x="87.8501%" y="581" width="4.3149%" height="15" fill="rgb(222,103,45)" fg:x="2321" fg:w="114"/><text x="88.1001%" y="591.50">&lt;core..</text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (113 samples, 4.28%)</title><rect x="87.8880%" y="565" width="4.2771%" height="15" fill="rgb(212,57,4)" fg:x="2322" fg:w="113"/><text x="88.1380%" y="575.50">&lt;hype..</text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (113 samples, 4.28%)</title><rect x="87.8880%" y="549" width="4.2771%" height="15" fill="rgb(215,68,47)" fg:x="2322" fg:w="113"/><text x="88.1380%" y="559.50">&lt;hype..</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (113 samples, 4.28%)</title><rect x="87.8880%" y="533" width="4.2771%" height="15" fill="rgb(230,84,2)" fg:x="2322" fg:w="113"/><text x="88.1380%" y="543.50">&lt;hype..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (113 samples, 4.28%)</title><rect x="87.8880%" y="517" width="4.2771%" height="15" fill="rgb(220,102,14)" fg:x="2322" fg:w="113"/><text x="88.1380%" y="527.50">hyper..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (113 samples, 4.28%)</title><rect x="87.8880%" y="501" width="4.2771%" height="15" fill="rgb(240,10,32)" fg:x="2322" fg:w="113"/><text x="88.1380%" y="511.50">hyper..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (108 samples, 4.09%)</title><rect x="88.0772%" y="485" width="4.0878%" height="15" fill="rgb(215,47,27)" fg:x="2327" fg:w="108"/><text x="88.3272%" y="495.50">hype..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (71 samples, 2.69%)</title><rect x="89.4777%" y="469" width="2.6874%" height="15" fill="rgb(233,188,43)" fg:x="2364" fg:w="71"/><text x="89.7277%" y="479.50">hy..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (8 samples, 0.30%)</title><rect x="91.8622%" y="453" width="0.3028%" height="15" fill="rgb(253,190,1)" fg:x="2427" fg:w="8"/><text x="92.1122%" y="463.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (8 samples, 0.30%)</title><rect x="91.8622%" y="437" width="0.3028%" height="15" fill="rgb(206,114,52)" fg:x="2427" fg:w="8"/><text x="92.1122%" y="447.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (8 samples, 0.30%)</title><rect x="91.8622%" y="421" width="0.3028%" height="15" fill="rgb(233,120,37)" fg:x="2427" fg:w="8"/><text x="92.1122%" y="431.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (8 samples, 0.30%)</title><rect x="91.8622%" y="405" width="0.3028%" height="15" fill="rgb(214,52,39)" fg:x="2427" fg:w="8"/><text x="92.1122%" y="415.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers_with_lower_case (5 samples, 0.19%)</title><rect x="91.9758%" y="389" width="0.1893%" height="15" fill="rgb(223,80,29)" fg:x="2430" fg:w="5"/><text x="92.2258%" y="399.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers (5 samples, 0.19%)</title><rect x="91.9758%" y="373" width="0.1893%" height="15" fill="rgb(230,101,40)" fg:x="2430" fg:w="5"/><text x="92.2258%" y="383.50"></text></g><g><title>hyper::proto::h1::role::Server::can_have_implicit_zero_content_length (1 samples, 0.04%)</title><rect x="92.1272%" y="357" width="0.0379%" height="15" fill="rgb(219,211,8)" fg:x="2434" fg:w="1"/><text x="92.3772%" y="367.50"></text></g><g><title>hyper::proto::h1::role::Server::can_have_content_length (1 samples, 0.04%)</title><rect x="92.1272%" y="341" width="0.0379%" height="15" fill="rgb(252,126,28)" fg:x="2434" fg:w="1"/><text x="92.3772%" y="351.50"></text></g><g><title>http::status::StatusCode::is_informational (1 samples, 0.04%)</title><rect x="92.1272%" y="325" width="0.0379%" height="15" fill="rgb(215,56,38)" fg:x="2434" fg:w="1"/><text x="92.3772%" y="335.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.04%)</title><rect x="92.1650%" y="501" width="0.0379%" height="15" fill="rgb(249,55,44)" fg:x="2435" fg:w="1"/><text x="92.4150%" y="511.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="92.1650%" y="581" width="0.0757%" height="15" fill="rgb(220,221,32)" fg:x="2435" fg:w="2"/><text x="92.4150%" y="591.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (2 samples, 0.08%)</title><rect x="92.1650%" y="565" width="0.0757%" height="15" fill="rgb(212,216,41)" fg:x="2435" fg:w="2"/><text x="92.4150%" y="575.50"></text></g><g><title>core::mem::drop (2 samples, 0.08%)</title><rect x="92.1650%" y="549" width="0.0757%" height="15" fill="rgb(228,213,43)" fg:x="2435" fg:w="2"/><text x="92.4150%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="92.1650%" y="533" width="0.0757%" height="15" fill="rgb(211,31,26)" fg:x="2435" fg:w="2"/><text x="92.4150%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="92.1650%" y="517" width="0.0757%" height="15" fill="rgb(229,202,19)" fg:x="2435" fg:w="2"/><text x="92.4150%" y="527.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.04%)</title><rect x="92.2029%" y="501" width="0.0379%" height="15" fill="rgb(229,105,46)" fg:x="2436" fg:w="1"/><text x="92.4529%" y="511.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}}::_{{closure}} (124 samples, 4.69%)</title><rect x="87.6230%" y="661" width="4.6934%" height="15" fill="rgb(235,108,1)" fg:x="2315" fg:w="124"/><text x="87.8730%" y="671.50">poem:..</text></g><g><title>poem::server::serve_connection::_{{closure}} (122 samples, 4.62%)</title><rect x="87.6987%" y="645" width="4.6177%" height="15" fill="rgb(245,111,35)" fg:x="2317" fg:w="122"/><text x="87.9487%" y="655.50">poem:..</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (120 samples, 4.54%)</title><rect x="87.7744%" y="629" width="4.5420%" height="15" fill="rgb(219,185,31)" fg:x="2319" fg:w="120"/><text x="88.0244%" y="639.50">&lt;toki..</text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}} (120 samples, 4.54%)</title><rect x="87.7744%" y="613" width="4.5420%" height="15" fill="rgb(214,4,43)" fg:x="2319" fg:w="120"/><text x="88.0244%" y="623.50">poem:..</text></g><g><title>&lt;tokio_util::sync::cancellation_token::WaitForCancellationFuture as core::future::future::Future&gt;::poll (4 samples, 0.15%)</title><rect x="92.1650%" y="597" width="0.1514%" height="15" fill="rgb(235,227,40)" fg:x="2435" fg:w="4"/><text x="92.4150%" y="607.50"></text></g><g><title>tokio_util::sync::cancellation_token::CancellationToken::is_cancelled (2 samples, 0.08%)</title><rect x="92.2407%" y="581" width="0.0757%" height="15" fill="rgb(230,88,30)" fg:x="2437" fg:w="2"/><text x="92.4907%" y="591.50"></text></g><g><title>tokio_util::sync::cancellation_token::tree_node::is_cancelled (1 samples, 0.04%)</title><rect x="92.2786%" y="565" width="0.0379%" height="15" fill="rgb(216,217,1)" fg:x="2438" fg:w="1"/><text x="92.5286%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::Floating&lt;sqlx_mysql::database::MySql,sqlx_core::pool::connection::Live&lt;sqlx_mysql::database::MySql&gt;&gt;::return_to_pool::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="92.3164%" y="645" width="0.0379%" height="15" fill="rgb(248,139,50)" fg:x="2439" fg:w="1"/><text x="92.5664%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="92.6571%" y="565" width="0.0379%" height="15" fill="rgb(233,1,21)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="92.6571%" y="549" width="0.0379%" height="15" fill="rgb(215,183,12)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="92.6571%" y="533" width="0.0379%" height="15" fill="rgb(229,104,42)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="92.6571%" y="517" width="0.0379%" height="15" fill="rgb(243,34,48)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="92.6571%" y="501" width="0.0379%" height="15" fill="rgb(239,11,44)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="92.6571%" y="485" width="0.0379%" height="15" fill="rgb(231,98,35)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="92.6571%" y="469" width="0.0379%" height="15" fill="rgb(233,28,25)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="92.6571%" y="453" width="0.0379%" height="15" fill="rgb(234,123,11)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="92.6571%" y="437" width="0.0379%" height="15" fill="rgb(220,69,3)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="92.6571%" y="421" width="0.0379%" height="15" fill="rgb(214,64,36)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="92.6571%" y="405" width="0.0379%" height="15" fill="rgb(211,138,32)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="92.6571%" y="389" width="0.0379%" height="15" fill="rgb(213,118,47)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="92.6571%" y="373" width="0.0379%" height="15" fill="rgb(243,124,49)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="92.6571%" y="357" width="0.0379%" height="15" fill="rgb(221,30,28)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="92.6571%" y="341" width="0.0379%" height="15" fill="rgb(246,37,13)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="351.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="92.6571%" y="325" width="0.0379%" height="15" fill="rgb(249,66,14)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="335.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="92.6571%" y="309" width="0.0379%" height="15" fill="rgb(213,166,5)" fg:x="2448" fg:w="1"/><text x="92.9071%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="92.6949%" y="565" width="0.0379%" height="15" fill="rgb(221,66,24)" fg:x="2449" fg:w="1"/><text x="92.9449%" y="575.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="92.6949%" y="549" width="0.0379%" height="15" fill="rgb(210,132,17)" fg:x="2449" fg:w="1"/><text x="92.9449%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="92.6949%" y="533" width="0.0379%" height="15" fill="rgb(243,202,5)" fg:x="2449" fg:w="1"/><text x="92.9449%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.08%)</title><rect x="92.7328%" y="549" width="0.0757%" height="15" fill="rgb(233,70,48)" fg:x="2450" fg:w="2"/><text x="92.9828%" y="559.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="92.7328%" y="533" width="0.0757%" height="15" fill="rgb(238,41,26)" fg:x="2450" fg:w="2"/><text x="92.9828%" y="543.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (2 samples, 0.08%)</title><rect x="92.7328%" y="517" width="0.0757%" height="15" fill="rgb(241,19,31)" fg:x="2450" fg:w="2"/><text x="92.9828%" y="527.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2 samples, 0.08%)</title><rect x="92.7328%" y="501" width="0.0757%" height="15" fill="rgb(214,76,10)" fg:x="2450" fg:w="2"/><text x="92.9828%" y="511.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (2 samples, 0.08%)</title><rect x="92.7328%" y="485" width="0.0757%" height="15" fill="rgb(254,202,22)" fg:x="2450" fg:w="2"/><text x="92.9828%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::poll_read_ready (2 samples, 0.08%)</title><rect x="92.9599%" y="469" width="0.0757%" height="15" fill="rgb(214,72,24)" fg:x="2456" fg:w="2"/><text x="93.2099%" y="479.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::poll_read_ready (2 samples, 0.08%)</title><rect x="92.9599%" y="453" width="0.0757%" height="15" fill="rgb(221,92,46)" fg:x="2456" fg:w="2"/><text x="93.2099%" y="463.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_ready (1 samples, 0.04%)</title><rect x="92.9977%" y="437" width="0.0379%" height="15" fill="rgb(246,13,50)" fg:x="2457" fg:w="1"/><text x="93.2477%" y="447.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (1 samples, 0.04%)</title><rect x="92.9977%" y="421" width="0.0379%" height="15" fill="rgb(240,165,38)" fg:x="2457" fg:w="1"/><text x="93.2477%" y="431.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.04%)</title><rect x="92.9977%" y="405" width="0.0379%" height="15" fill="rgb(241,24,51)" fg:x="2457" fg:w="1"/><text x="93.2477%" y="415.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.04%)</title><rect x="92.9977%" y="389" width="0.0379%" height="15" fill="rgb(227,51,44)" fg:x="2457" fg:w="1"/><text x="93.2477%" y="399.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="92.9977%" y="373" width="0.0379%" height="15" fill="rgb(231,121,3)" fg:x="2457" fg:w="1"/><text x="93.2477%" y="383.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.04%)</title><rect x="92.9977%" y="357" width="0.0379%" height="15" fill="rgb(245,3,41)" fg:x="2457" fg:w="1"/><text x="93.2477%" y="367.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (1 samples, 0.04%)</title><rect x="92.9977%" y="341" width="0.0379%" height="15" fill="rgb(214,13,26)" fg:x="2457" fg:w="1"/><text x="93.2477%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.04%)</title><rect x="92.9977%" y="325" width="0.0379%" height="15" fill="rgb(252,75,11)" fg:x="2457" fg:w="1"/><text x="93.2477%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.04%)</title><rect x="92.9977%" y="309" width="0.0379%" height="15" fill="rgb(218,226,17)" fg:x="2457" fg:w="1"/><text x="93.2477%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="93.0356%" y="405" width="0.0757%" height="15" fill="rgb(248,89,38)" fg:x="2458" fg:w="2"/><text x="93.2856%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.08%)</title><rect x="93.0356%" y="389" width="0.0757%" height="15" fill="rgb(237,73,46)" fg:x="2458" fg:w="2"/><text x="93.2856%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.08%)</title><rect x="93.0356%" y="373" width="0.0757%" height="15" fill="rgb(242,78,33)" fg:x="2458" fg:w="2"/><text x="93.2856%" y="383.50"></text></g><g><title>recv (1 samples, 0.04%)</title><rect x="93.1113%" y="261" width="0.0379%" height="15" fill="rgb(235,60,3)" fg:x="2460" fg:w="1"/><text x="93.3613%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.1113%" y="245" width="0.0379%" height="15" fill="rgb(216,172,19)" fg:x="2460" fg:w="1"/><text x="93.3613%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.1113%" y="229" width="0.0379%" height="15" fill="rgb(227,6,42)" fg:x="2460" fg:w="1"/><text x="93.3613%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.1113%" y="213" width="0.0379%" height="15" fill="rgb(223,207,42)" fg:x="2460" fg:w="1"/><text x="93.3613%" y="223.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="92.9220%" y="485" width="0.2650%" height="15" fill="rgb(246,138,30)" fg:x="2455" fg:w="7"/><text x="93.1720%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (4 samples, 0.15%)</title><rect x="93.0356%" y="469" width="0.1514%" height="15" fill="rgb(251,199,47)" fg:x="2458" fg:w="4"/><text x="93.2856%" y="479.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (4 samples, 0.15%)</title><rect x="93.0356%" y="453" width="0.1514%" height="15" fill="rgb(228,218,44)" fg:x="2458" fg:w="4"/><text x="93.2856%" y="463.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (4 samples, 0.15%)</title><rect x="93.0356%" y="437" width="0.1514%" height="15" fill="rgb(220,68,6)" fg:x="2458" fg:w="4"/><text x="93.2856%" y="447.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (4 samples, 0.15%)</title><rect x="93.0356%" y="421" width="0.1514%" height="15" fill="rgb(240,60,26)" fg:x="2458" fg:w="4"/><text x="93.2856%" y="431.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (2 samples, 0.08%)</title><rect x="93.1113%" y="405" width="0.0757%" height="15" fill="rgb(211,200,19)" fg:x="2460" fg:w="2"/><text x="93.3613%" y="415.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2 samples, 0.08%)</title><rect x="93.1113%" y="389" width="0.0757%" height="15" fill="rgb(242,145,30)" fg:x="2460" fg:w="2"/><text x="93.3613%" y="399.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.08%)</title><rect x="93.1113%" y="373" width="0.0757%" height="15" fill="rgb(225,64,13)" fg:x="2460" fg:w="2"/><text x="93.3613%" y="383.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2 samples, 0.08%)</title><rect x="93.1113%" y="357" width="0.0757%" height="15" fill="rgb(218,103,35)" fg:x="2460" fg:w="2"/><text x="93.3613%" y="367.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (2 samples, 0.08%)</title><rect x="93.1113%" y="341" width="0.0757%" height="15" fill="rgb(216,93,46)" fg:x="2460" fg:w="2"/><text x="93.3613%" y="351.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.08%)</title><rect x="93.1113%" y="325" width="0.0757%" height="15" fill="rgb(225,159,27)" fg:x="2460" fg:w="2"/><text x="93.3613%" y="335.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.08%)</title><rect x="93.1113%" y="309" width="0.0757%" height="15" fill="rgb(225,204,11)" fg:x="2460" fg:w="2"/><text x="93.3613%" y="319.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (2 samples, 0.08%)</title><rect x="93.1113%" y="293" width="0.0757%" height="15" fill="rgb(205,56,4)" fg:x="2460" fg:w="2"/><text x="93.3613%" y="303.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (2 samples, 0.08%)</title><rect x="93.1113%" y="277" width="0.0757%" height="15" fill="rgb(206,6,35)" fg:x="2460" fg:w="2"/><text x="93.3613%" y="287.50"></text></g><g><title>std::sys::pal::unix::cvt (1 samples, 0.04%)</title><rect x="93.1491%" y="261" width="0.0379%" height="15" fill="rgb(247,73,52)" fg:x="2461" fg:w="1"/><text x="93.3991%" y="271.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.04%)</title><rect x="93.1491%" y="245" width="0.0379%" height="15" fill="rgb(246,97,4)" fg:x="2461" fg:w="1"/><text x="93.3991%" y="255.50"></text></g><g><title>std::io::error::Error::from_raw_os_error (1 samples, 0.04%)</title><rect x="93.1491%" y="229" width="0.0379%" height="15" fill="rgb(212,37,15)" fg:x="2461" fg:w="1"/><text x="93.3991%" y="239.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::new_os (1 samples, 0.04%)</title><rect x="93.1491%" y="213" width="0.0379%" height="15" fill="rgb(208,130,40)" fg:x="2461" fg:w="1"/><text x="93.3991%" y="223.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (16 samples, 0.61%)</title><rect x="92.6192%" y="581" width="0.6056%" height="15" fill="rgb(236,55,29)" fg:x="2447" fg:w="16"/><text x="92.8692%" y="591.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (13 samples, 0.49%)</title><rect x="92.7328%" y="565" width="0.4921%" height="15" fill="rgb(209,156,45)" fg:x="2450" fg:w="13"/><text x="92.9828%" y="575.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (11 samples, 0.42%)</title><rect x="92.8085%" y="549" width="0.4164%" height="15" fill="rgb(249,107,4)" fg:x="2452" fg:w="11"/><text x="93.0585%" y="559.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (8 samples, 0.30%)</title><rect x="92.9220%" y="533" width="0.3028%" height="15" fill="rgb(227,7,13)" fg:x="2455" fg:w="8"/><text x="93.1720%" y="543.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (8 samples, 0.30%)</title><rect x="92.9220%" y="517" width="0.3028%" height="15" fill="rgb(250,129,14)" fg:x="2455" fg:w="8"/><text x="93.1720%" y="527.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (8 samples, 0.30%)</title><rect x="92.9220%" y="501" width="0.3028%" height="15" fill="rgb(229,92,13)" fg:x="2455" fg:w="8"/><text x="93.1720%" y="511.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::advance (1 samples, 0.04%)</title><rect x="93.1870%" y="485" width="0.0379%" height="15" fill="rgb(245,98,39)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="495.50"></text></g><g><title>bytes::bytes_mut::BytesMut::unsplit (1 samples, 0.04%)</title><rect x="93.1870%" y="469" width="0.0379%" height="15" fill="rgb(234,135,48)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (1 samples, 0.04%)</title><rect x="93.1870%" y="453" width="0.0379%" height="15" fill="rgb(230,98,28)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="463.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.1870%" y="437" width="0.0379%" height="15" fill="rgb(223,121,0)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="447.50"></text></g><g><title>bytes::bytes_mut::release_shared (1 samples, 0.04%)</title><rect x="93.1870%" y="421" width="0.0379%" height="15" fill="rgb(234,173,33)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="431.50"></text></g><g><title>core::mem::drop (1 samples, 0.04%)</title><rect x="93.1870%" y="405" width="0.0379%" height="15" fill="rgb(245,47,8)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (1 samples, 0.04%)</title><rect x="93.1870%" y="389" width="0.0379%" height="15" fill="rgb(205,17,20)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (1 samples, 0.04%)</title><rect x="93.1870%" y="373" width="0.0379%" height="15" fill="rgb(232,151,16)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.1870%" y="357" width="0.0379%" height="15" fill="rgb(208,30,32)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.1870%" y="341" width="0.0379%" height="15" fill="rgb(254,26,3)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.1870%" y="325" width="0.0379%" height="15" fill="rgb(240,177,30)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="93.1870%" y="309" width="0.0379%" height="15" fill="rgb(248,76,44)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="93.1870%" y="293" width="0.0379%" height="15" fill="rgb(241,186,54)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="303.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="93.1870%" y="277" width="0.0379%" height="15" fill="rgb(249,171,29)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="287.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="93.1870%" y="261" width="0.0379%" height="15" fill="rgb(237,151,44)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="271.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="93.1870%" y="245" width="0.0379%" height="15" fill="rgb(228,174,30)" fg:x="2462" fg:w="1"/><text x="93.4370%" y="255.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (19 samples, 0.72%)</title><rect x="92.5814%" y="597" width="0.7192%" height="15" fill="rgb(252,14,37)" fg:x="2446" fg:w="19"/><text x="92.8314%" y="607.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::ok (2 samples, 0.08%)</title><rect x="93.2248%" y="581" width="0.0757%" height="15" fill="rgb(207,111,40)" fg:x="2463" fg:w="2"/><text x="93.4748%" y="591.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode (2 samples, 0.08%)</title><rect x="93.2248%" y="565" width="0.0757%" height="15" fill="rgb(248,171,54)" fg:x="2463" fg:w="2"/><text x="93.4748%" y="575.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (2 samples, 0.08%)</title><rect x="93.2248%" y="549" width="0.0757%" height="15" fill="rgb(211,127,2)" fg:x="2463" fg:w="2"/><text x="93.4748%" y="559.50"></text></g><g><title>&lt;sqlx_mysql::protocol::response::ok::OkPacket as sqlx_core::io::decode::Decode&gt;::decode_with (2 samples, 0.08%)</title><rect x="93.2248%" y="533" width="0.0757%" height="15" fill="rgb(236,87,47)" fg:x="2463" fg:w="2"/><text x="93.4748%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.08%)</title><rect x="93.2248%" y="517" width="0.0757%" height="15" fill="rgb(223,190,45)" fg:x="2463" fg:w="2"/><text x="93.4748%" y="527.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="93.2248%" y="501" width="0.0757%" height="15" fill="rgb(215,5,16)" fg:x="2463" fg:w="2"/><text x="93.4748%" y="511.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (2 samples, 0.08%)</title><rect x="93.2248%" y="485" width="0.0757%" height="15" fill="rgb(252,82,33)" fg:x="2463" fg:w="2"/><text x="93.4748%" y="495.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.04%)</title><rect x="93.2627%" y="469" width="0.0379%" height="15" fill="rgb(247,213,44)" fg:x="2464" fg:w="1"/><text x="93.5127%" y="479.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (1 samples, 0.04%)</title><rect x="93.2627%" y="453" width="0.0379%" height="15" fill="rgb(205,196,44)" fg:x="2464" fg:w="1"/><text x="93.5127%" y="463.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24 samples, 0.91%)</title><rect x="92.5057%" y="629" width="0.9084%" height="15" fill="rgb(237,96,54)" fg:x="2444" fg:w="24"/><text x="92.7557%" y="639.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (24 samples, 0.91%)</title><rect x="92.5057%" y="613" width="0.9084%" height="15" fill="rgb(230,113,34)" fg:x="2444" fg:w="24"/><text x="92.7557%" y="623.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::send_packet::_{{closure}} (3 samples, 0.11%)</title><rect x="93.3005%" y="597" width="0.1136%" height="15" fill="rgb(221,224,12)" fg:x="2465" fg:w="3"/><text x="93.5505%" y="607.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::flush::_{{closure}} (3 samples, 0.11%)</title><rect x="93.3005%" y="581" width="0.1136%" height="15" fill="rgb(219,112,44)" fg:x="2465" fg:w="3"/><text x="93.5505%" y="591.50"></text></g><g><title>&lt;sqlx_core::net::socket::Write&lt;S&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="93.3384%" y="565" width="0.0757%" height="15" fill="rgb(210,31,13)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_write (2 samples, 0.08%)</title><rect x="93.3384%" y="549" width="0.0757%" height="15" fill="rgb(230,25,16)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="559.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write (2 samples, 0.08%)</title><rect x="93.3384%" y="533" width="0.0757%" height="15" fill="rgb(246,108,53)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="543.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (2 samples, 0.08%)</title><rect x="93.3384%" y="517" width="0.0757%" height="15" fill="rgb(241,172,50)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="527.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write::_{{closure}} (2 samples, 0.08%)</title><rect x="93.3384%" y="501" width="0.0757%" height="15" fill="rgb(235,141,10)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="511.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (2 samples, 0.08%)</title><rect x="93.3384%" y="485" width="0.0757%" height="15" fill="rgb(220,174,43)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="495.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.08%)</title><rect x="93.3384%" y="469" width="0.0757%" height="15" fill="rgb(215,181,40)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="479.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2 samples, 0.08%)</title><rect x="93.3384%" y="453" width="0.0757%" height="15" fill="rgb(230,97,2)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="463.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (2 samples, 0.08%)</title><rect x="93.3384%" y="437" width="0.0757%" height="15" fill="rgb(211,25,27)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="447.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.08%)</title><rect x="93.3384%" y="421" width="0.0757%" height="15" fill="rgb(230,87,26)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="431.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.08%)</title><rect x="93.3384%" y="405" width="0.0757%" height="15" fill="rgb(227,160,17)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="415.50"></text></g><g><title>__send (2 samples, 0.08%)</title><rect x="93.3384%" y="389" width="0.0757%" height="15" fill="rgb(244,85,34)" fg:x="2466" fg:w="2"/><text x="93.5884%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.3762%" y="373" width="0.0379%" height="15" fill="rgb(207,70,0)" fg:x="2467" fg:w="1"/><text x="93.6262%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.3762%" y="357" width="0.0379%" height="15" fill="rgb(223,129,7)" fg:x="2467" fg:w="1"/><text x="93.6262%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.3762%" y="341" width="0.0379%" height="15" fill="rgb(246,105,7)" fg:x="2467" fg:w="1"/><text x="93.6262%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.3762%" y="325" width="0.0379%" height="15" fill="rgb(215,154,42)" fg:x="2467" fg:w="1"/><text x="93.6262%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.3762%" y="309" width="0.0379%" height="15" fill="rgb(220,215,30)" fg:x="2467" fg:w="1"/><text x="93.6262%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.3762%" y="293" width="0.0379%" height="15" fill="rgb(228,81,51)" fg:x="2467" fg:w="1"/><text x="93.6262%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.4141%" y="597" width="0.0379%" height="15" fill="rgb(247,71,54)" fg:x="2468" fg:w="1"/><text x="93.6641%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="93.4141%" y="581" width="0.0379%" height="15" fill="rgb(234,176,34)" fg:x="2468" fg:w="1"/><text x="93.6641%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="93.4141%" y="565" width="0.0379%" height="15" fill="rgb(241,103,54)" fg:x="2468" fg:w="1"/><text x="93.6641%" y="575.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="93.4141%" y="549" width="0.0379%" height="15" fill="rgb(228,22,34)" fg:x="2468" fg:w="1"/><text x="93.6641%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="93.4141%" y="533" width="0.0379%" height="15" fill="rgb(241,179,48)" fg:x="2468" fg:w="1"/><text x="93.6641%" y="543.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="93.4141%" y="517" width="0.0379%" height="15" fill="rgb(235,167,37)" fg:x="2468" fg:w="1"/><text x="93.6641%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="93.4141%" y="629" width="0.0757%" height="15" fill="rgb(213,109,30)" fg:x="2468" fg:w="2"/><text x="93.6641%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (2 samples, 0.08%)</title><rect x="93.4141%" y="613" width="0.0757%" height="15" fill="rgb(222,172,16)" fg:x="2468" fg:w="2"/><text x="93.6641%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="93.4519%" y="597" width="0.0379%" height="15" fill="rgb(233,192,5)" fg:x="2469" fg:w="1"/><text x="93.7019%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (160 samples, 6.06%)</title><rect x="87.5473%" y="805" width="6.0560%" height="15" fill="rgb(247,189,41)" fg:x="2313" fg:w="160"/><text x="87.7973%" y="815.50">tokio::r..</text></g><g><title>std::panic::catch_unwind (160 samples, 6.06%)</title><rect x="87.5473%" y="789" width="6.0560%" height="15" fill="rgb(218,134,47)" fg:x="2313" fg:w="160"/><text x="87.7973%" y="799.50">std::pan..</text></g><g><title>std::panicking::try (160 samples, 6.06%)</title><rect x="87.5473%" y="773" width="6.0560%" height="15" fill="rgb(216,29,3)" fg:x="2313" fg:w="160"/><text x="87.7973%" y="783.50">std::pan..</text></g><g><title>std::panicking::try::do_call (160 samples, 6.06%)</title><rect x="87.5473%" y="757" width="6.0560%" height="15" fill="rgb(246,140,12)" fg:x="2313" fg:w="160"/><text x="87.7973%" y="767.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (160 samples, 6.06%)</title><rect x="87.5473%" y="741" width="6.0560%" height="15" fill="rgb(230,136,11)" fg:x="2313" fg:w="160"/><text x="87.7973%" y="751.50">&lt;core::p..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (160 samples, 6.06%)</title><rect x="87.5473%" y="725" width="6.0560%" height="15" fill="rgb(247,22,47)" fg:x="2313" fg:w="160"/><text x="87.7973%" y="735.50">tokio::r..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (160 samples, 6.06%)</title><rect x="87.5473%" y="709" width="6.0560%" height="15" fill="rgb(218,84,22)" fg:x="2313" fg:w="160"/><text x="87.7973%" y="719.50">tokio::r..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (160 samples, 6.06%)</title><rect x="87.5473%" y="693" width="6.0560%" height="15" fill="rgb(216,87,39)" fg:x="2313" fg:w="160"/><text x="87.7973%" y="703.50">tokio::l..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (160 samples, 6.06%)</title><rect x="87.5473%" y="677" width="6.0560%" height="15" fill="rgb(221,178,8)" fg:x="2313" fg:w="160"/><text x="87.7973%" y="687.50">tokio::r..</text></g><g><title>sqlx_core::pool::connection::PoolConnection&lt;DB&gt;::return_to_pool::_{{closure}} (34 samples, 1.29%)</title><rect x="92.3164%" y="661" width="1.2869%" height="15" fill="rgb(230,42,11)" fg:x="2439" fg:w="34"/><text x="92.5664%" y="671.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::return_to_pool::_{{closure}} (33 samples, 1.25%)</title><rect x="92.3543%" y="645" width="1.2491%" height="15" fill="rgb(237,229,4)" fg:x="2440" fg:w="33"/><text x="92.6043%" y="655.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::release (3 samples, 0.11%)</title><rect x="93.4898%" y="629" width="0.1136%" height="15" fill="rgb(222,31,33)" fg:x="2470" fg:w="3"/><text x="93.7398%" y="639.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::release (3 samples, 0.11%)</title><rect x="93.4898%" y="613" width="0.1136%" height="15" fill="rgb(210,17,39)" fg:x="2470" fg:w="3"/><text x="93.7398%" y="623.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (1 samples, 0.04%)</title><rect x="93.5655%" y="597" width="0.0379%" height="15" fill="rgb(244,93,20)" fg:x="2472" fg:w="1"/><text x="93.8155%" y="607.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push_or_else (1 samples, 0.04%)</title><rect x="93.5655%" y="581" width="0.0379%" height="15" fill="rgb(210,40,47)" fg:x="2472" fg:w="1"/><text x="93.8155%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="93.5655%" y="565" width="0.0379%" height="15" fill="rgb(239,211,47)" fg:x="2472" fg:w="1"/><text x="93.8155%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="93.5655%" y="549" width="0.0379%" height="15" fill="rgb(251,223,49)" fg:x="2472" fg:w="1"/><text x="93.8155%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.04%)</title><rect x="93.6412%" y="773" width="0.0379%" height="15" fill="rgb(221,149,5)" fg:x="2474" fg:w="1"/><text x="93.8912%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="93.6412%" y="757" width="0.0379%" height="15" fill="rgb(219,224,51)" fg:x="2474" fg:w="1"/><text x="93.8912%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="93.6412%" y="741" width="0.0379%" height="15" fill="rgb(223,7,8)" fg:x="2474" fg:w="1"/><text x="93.8912%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (3 samples, 0.11%)</title><rect x="93.6033%" y="805" width="0.1136%" height="15" fill="rgb(241,217,22)" fg:x="2473" fg:w="3"/><text x="93.8533%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (3 samples, 0.11%)</title><rect x="93.6033%" y="789" width="0.1136%" height="15" fill="rgb(248,209,0)" fg:x="2473" fg:w="3"/><text x="93.8533%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (1 samples, 0.04%)</title><rect x="93.6790%" y="773" width="0.0379%" height="15" fill="rgb(217,205,4)" fg:x="2475" fg:w="1"/><text x="93.9290%" y="783.50"></text></g><g><title>tokio::runtime::coop::budget (173 samples, 6.55%)</title><rect x="87.2067%" y="933" width="6.5481%" height="15" fill="rgb(228,124,39)" fg:x="2304" fg:w="173"/><text x="87.4567%" y="943.50">tokio::ru..</text></g><g><title>tokio::runtime::coop::with_budget (173 samples, 6.55%)</title><rect x="87.2067%" y="917" width="6.5481%" height="15" fill="rgb(250,116,42)" fg:x="2304" fg:w="173"/><text x="87.4567%" y="927.50">tokio::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (173 samples, 6.55%)</title><rect x="87.2067%" y="901" width="6.5481%" height="15" fill="rgb(223,202,9)" fg:x="2304" fg:w="173"/><text x="87.4567%" y="911.50">tokio::ru..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (172 samples, 6.51%)</title><rect x="87.2445%" y="885" width="6.5102%" height="15" fill="rgb(242,222,40)" fg:x="2305" fg:w="172"/><text x="87.4945%" y="895.50">tokio::ru..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (172 samples, 6.51%)</title><rect x="87.2445%" y="869" width="6.5102%" height="15" fill="rgb(229,99,46)" fg:x="2305" fg:w="172"/><text x="87.4945%" y="879.50">tokio::ru..</text></g><g><title>tokio::runtime::task::raw::poll (172 samples, 6.51%)</title><rect x="87.2445%" y="853" width="6.5102%" height="15" fill="rgb(225,56,46)" fg:x="2305" fg:w="172"/><text x="87.4945%" y="863.50">tokio::ru..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (168 samples, 6.36%)</title><rect x="87.3959%" y="837" width="6.3588%" height="15" fill="rgb(227,94,5)" fg:x="2309" fg:w="168"/><text x="87.6459%" y="847.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (167 samples, 6.32%)</title><rect x="87.4338%" y="821" width="6.3210%" height="15" fill="rgb(205,112,38)" fg:x="2310" fg:w="167"/><text x="87.6838%" y="831.50">tokio::r..</text></g><g><title>tokio::runtime::task::waker::waker_ref (1 samples, 0.04%)</title><rect x="93.7169%" y="805" width="0.0379%" height="15" fill="rgb(231,133,46)" fg:x="2476" fg:w="1"/><text x="93.9669%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (174 samples, 6.59%)</title><rect x="87.2067%" y="949" width="6.5859%" height="15" fill="rgb(217,16,9)" fg:x="2304" fg:w="174"/><text x="87.4567%" y="959.50">tokio::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (1 samples, 0.04%)</title><rect x="93.7547%" y="933" width="0.0379%" height="15" fill="rgb(249,173,9)" fg:x="2477" fg:w="1"/><text x="94.0047%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (1 samples, 0.04%)</title><rect x="93.7547%" y="917" width="0.0379%" height="15" fill="rgb(205,163,53)" fg:x="2477" fg:w="1"/><text x="94.0047%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (1 samples, 0.04%)</title><rect x="93.7547%" y="901" width="0.0379%" height="15" fill="rgb(217,54,41)" fg:x="2477" fg:w="1"/><text x="94.0047%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.04%)</title><rect x="93.7547%" y="885" width="0.0379%" height="15" fill="rgb(228,216,12)" fg:x="2477" fg:w="1"/><text x="94.0047%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (1 samples, 0.04%)</title><rect x="93.7547%" y="869" width="0.0379%" height="15" fill="rgb(244,228,15)" fg:x="2477" fg:w="1"/><text x="94.0047%" y="879.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="93.7926%" y="933" width="0.0379%" height="15" fill="rgb(221,176,53)" fg:x="2478" fg:w="1"/><text x="94.0426%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (1 samples, 0.04%)</title><rect x="93.7926%" y="917" width="0.0379%" height="15" fill="rgb(205,94,34)" fg:x="2478" fg:w="1"/><text x="94.0426%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (1 samples, 0.04%)</title><rect x="93.8304%" y="933" width="0.0379%" height="15" fill="rgb(213,110,48)" fg:x="2479" fg:w="1"/><text x="94.0804%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (1 samples, 0.04%)</title><rect x="93.8683%" y="933" width="0.0379%" height="15" fill="rgb(236,142,28)" fg:x="2480" fg:w="1"/><text x="94.1183%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.04%)</title><rect x="93.8683%" y="917" width="0.0379%" height="15" fill="rgb(225,135,29)" fg:x="2480" fg:w="1"/><text x="94.1183%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (1 samples, 0.04%)</title><rect x="93.8683%" y="901" width="0.0379%" height="15" fill="rgb(252,45,31)" fg:x="2480" fg:w="1"/><text x="94.1183%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="93.8683%" y="885" width="0.0379%" height="15" fill="rgb(211,187,50)" fg:x="2480" fg:w="1"/><text x="94.1183%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1 samples, 0.04%)</title><rect x="93.8683%" y="869" width="0.0379%" height="15" fill="rgb(229,109,7)" fg:x="2480" fg:w="1"/><text x="94.1183%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (4 samples, 0.15%)</title><rect x="93.7926%" y="949" width="0.1514%" height="15" fill="rgb(251,131,51)" fg:x="2478" fg:w="4"/><text x="94.0426%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (1 samples, 0.04%)</title><rect x="93.9061%" y="933" width="0.0379%" height="15" fill="rgb(251,180,35)" fg:x="2481" fg:w="1"/><text x="94.1561%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (1 samples, 0.04%)</title><rect x="93.9061%" y="917" width="0.0379%" height="15" fill="rgb(211,46,32)" fg:x="2481" fg:w="1"/><text x="94.1561%" y="927.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="93.9818%" y="933" width="0.0379%" height="15" fill="rgb(248,123,17)" fg:x="2483" fg:w="1"/><text x="94.2318%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="93.9818%" y="917" width="0.0379%" height="15" fill="rgb(227,141,18)" fg:x="2483" fg:w="1"/><text x="94.2318%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="93.9818%" y="901" width="0.0379%" height="15" fill="rgb(216,102,9)" fg:x="2483" fg:w="1"/><text x="94.2318%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (3 samples, 0.11%)</title><rect x="93.9440%" y="949" width="0.1136%" height="15" fill="rgb(253,47,13)" fg:x="2482" fg:w="3"/><text x="94.1940%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1 samples, 0.04%)</title><rect x="94.0197%" y="933" width="0.0379%" height="15" fill="rgb(226,93,23)" fg:x="2484" fg:w="1"/><text x="94.2697%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (1 samples, 0.04%)</title><rect x="94.0197%" y="917" width="0.0379%" height="15" fill="rgb(247,104,17)" fg:x="2484" fg:w="1"/><text x="94.2697%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.04%)</title><rect x="94.0197%" y="901" width="0.0379%" height="15" fill="rgb(233,203,26)" fg:x="2484" fg:w="1"/><text x="94.2697%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="94.0197%" y="885" width="0.0379%" height="15" fill="rgb(244,98,49)" fg:x="2484" fg:w="1"/><text x="94.2697%" y="895.50"></text></g><g><title>[libc.so.6] (372 samples, 14.08%)</title><rect x="80.0530%" y="1621" width="14.0802%" height="15" fill="rgb(235,134,22)" fg:x="2115" fg:w="372"/><text x="80.3030%" y="1631.50">[libc.so.6]</text></g><g><title>[libc.so.6] (372 samples, 14.08%)</title><rect x="80.0530%" y="1605" width="14.0802%" height="15" fill="rgb(221,70,32)" fg:x="2115" fg:w="372"/><text x="80.3030%" y="1615.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (367 samples, 13.89%)</title><rect x="80.2422%" y="1589" width="13.8910%" height="15" fill="rgb(238,15,50)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1599.50">std::sys::pal::unix::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (367 samples, 13.89%)</title><rect x="80.2422%" y="1573" width="13.8910%" height="15" fill="rgb(215,221,48)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1583.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (367 samples, 13.89%)</title><rect x="80.2422%" y="1557" width="13.8910%" height="15" fill="rgb(236,73,3)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1567.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (367 samples, 13.89%)</title><rect x="80.2422%" y="1541" width="13.8910%" height="15" fill="rgb(250,107,11)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1551.50">core::ops::function::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (367 samples, 13.89%)</title><rect x="80.2422%" y="1525" width="13.8910%" height="15" fill="rgb(242,39,14)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1535.50">std::thread::Builder:..</text></g><g><title>std::panic::catch_unwind (367 samples, 13.89%)</title><rect x="80.2422%" y="1509" width="13.8910%" height="15" fill="rgb(248,164,37)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1519.50">std::panic::catch_unw..</text></g><g><title>std::panicking::try (367 samples, 13.89%)</title><rect x="80.2422%" y="1493" width="13.8910%" height="15" fill="rgb(217,60,12)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1503.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (367 samples, 13.89%)</title><rect x="80.2422%" y="1477" width="13.8910%" height="15" fill="rgb(240,125,29)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1487.50">std::panicking::try::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (367 samples, 13.89%)</title><rect x="80.2422%" y="1461" width="13.8910%" height="15" fill="rgb(208,207,28)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1471.50">&lt;core::panic::unwind_..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (367 samples, 13.89%)</title><rect x="80.2422%" y="1445" width="13.8910%" height="15" fill="rgb(209,159,27)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1455.50">std::thread::Builder:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (367 samples, 13.89%)</title><rect x="80.2422%" y="1429" width="13.8910%" height="15" fill="rgb(251,176,53)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1439.50">std::sys_common::back..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (367 samples, 13.89%)</title><rect x="80.2422%" y="1413" width="13.8910%" height="15" fill="rgb(211,85,7)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1423.50">tokio::runtime::block..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (367 samples, 13.89%)</title><rect x="80.2422%" y="1397" width="13.8910%" height="15" fill="rgb(216,64,54)" fg:x="2120" fg:w="367"/><text x="80.4922%" y="1407.50">tokio::runtime::block..</text></g><g><title>tokio::runtime::blocking::pool::Task::run (351 samples, 13.29%)</title><rect x="80.8478%" y="1381" width="13.2854%" height="15" fill="rgb(217,54,24)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1391.50">tokio::runtime::bloc..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (351 samples, 13.29%)</title><rect x="80.8478%" y="1365" width="13.2854%" height="15" fill="rgb(208,206,53)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1375.50">tokio::runtime::task..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (351 samples, 13.29%)</title><rect x="80.8478%" y="1349" width="13.2854%" height="15" fill="rgb(251,74,39)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1359.50">tokio::runtime::task..</text></g><g><title>tokio::runtime::task::raw::poll (351 samples, 13.29%)</title><rect x="80.8478%" y="1333" width="13.2854%" height="15" fill="rgb(226,47,5)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1343.50">tokio::runtime::task..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (351 samples, 13.29%)</title><rect x="80.8478%" y="1317" width="13.2854%" height="15" fill="rgb(234,111,33)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1327.50">tokio::runtime::task..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (351 samples, 13.29%)</title><rect x="80.8478%" y="1301" width="13.2854%" height="15" fill="rgb(251,14,10)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1311.50">tokio::runtime::task..</text></g><g><title>tokio::runtime::task::harness::poll_future (351 samples, 13.29%)</title><rect x="80.8478%" y="1285" width="13.2854%" height="15" fill="rgb(232,43,0)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1295.50">tokio::runtime::task..</text></g><g><title>std::panic::catch_unwind (351 samples, 13.29%)</title><rect x="80.8478%" y="1269" width="13.2854%" height="15" fill="rgb(222,68,43)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1279.50">std::panic::catch_un..</text></g><g><title>std::panicking::try (351 samples, 13.29%)</title><rect x="80.8478%" y="1253" width="13.2854%" height="15" fill="rgb(217,24,23)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1263.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (351 samples, 13.29%)</title><rect x="80.8478%" y="1237" width="13.2854%" height="15" fill="rgb(229,209,14)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1247.50">std::panicking::try:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (351 samples, 13.29%)</title><rect x="80.8478%" y="1221" width="13.2854%" height="15" fill="rgb(250,149,48)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1231.50">&lt;core::panic::unwind..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (351 samples, 13.29%)</title><rect x="80.8478%" y="1205" width="13.2854%" height="15" fill="rgb(210,120,37)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1215.50">tokio::runtime::task..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (351 samples, 13.29%)</title><rect x="80.8478%" y="1189" width="13.2854%" height="15" fill="rgb(210,21,8)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1199.50">tokio::runtime::task..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (351 samples, 13.29%)</title><rect x="80.8478%" y="1173" width="13.2854%" height="15" fill="rgb(243,145,7)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1183.50">tokio::loom::std::un..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (351 samples, 13.29%)</title><rect x="80.8478%" y="1157" width="13.2854%" height="15" fill="rgb(238,178,32)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1167.50">tokio::runtime::task..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (351 samples, 13.29%)</title><rect x="80.8478%" y="1141" width="13.2854%" height="15" fill="rgb(222,4,10)" fg:x="2136" fg:w="351"/><text x="81.0978%" y="1151.50">&lt;tokio::runtime::blo..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (350 samples, 13.25%)</title><rect x="80.8857%" y="1125" width="13.2475%" height="15" fill="rgb(239,7,37)" fg:x="2137" fg:w="350"/><text x="81.1357%" y="1135.50">tokio::runtime::sche..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (350 samples, 13.25%)</title><rect x="80.8857%" y="1109" width="13.2475%" height="15" fill="rgb(215,31,37)" fg:x="2137" fg:w="350"/><text x="81.1357%" y="1119.50">tokio::runtime::sche..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (349 samples, 13.21%)</title><rect x="80.9235%" y="1093" width="13.2097%" height="15" fill="rgb(224,83,33)" fg:x="2138" fg:w="349"/><text x="81.1735%" y="1103.50">tokio::runtime::cont..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (343 samples, 12.98%)</title><rect x="81.1506%" y="1077" width="12.9826%" height="15" fill="rgb(239,55,3)" fg:x="2144" fg:w="343"/><text x="81.4006%" y="1087.50">tokio::runtime::sche..</text></g><g><title>tokio::runtime::context::set_scheduler (343 samples, 12.98%)</title><rect x="81.1506%" y="1061" width="12.9826%" height="15" fill="rgb(247,92,11)" fg:x="2144" fg:w="343"/><text x="81.4006%" y="1071.50">tokio::runtime::cont..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (343 samples, 12.98%)</title><rect x="81.1506%" y="1045" width="12.9826%" height="15" fill="rgb(239,200,7)" fg:x="2144" fg:w="343"/><text x="81.4006%" y="1055.50">std::thread::local::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (343 samples, 12.98%)</title><rect x="81.1506%" y="1029" width="12.9826%" height="15" fill="rgb(227,115,8)" fg:x="2144" fg:w="343"/><text x="81.4006%" y="1039.50">std::thread::local::..</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (343 samples, 12.98%)</title><rect x="81.1506%" y="1013" width="12.9826%" height="15" fill="rgb(215,189,27)" fg:x="2144" fg:w="343"/><text x="81.4006%" y="1023.50">tokio::runtime::cont..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (343 samples, 12.98%)</title><rect x="81.1506%" y="997" width="12.9826%" height="15" fill="rgb(251,216,39)" fg:x="2144" fg:w="343"/><text x="81.4006%" y="1007.50">tokio::runtime::cont..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (343 samples, 12.98%)</title><rect x="81.1506%" y="981" width="12.9826%" height="15" fill="rgb(207,29,47)" fg:x="2144" fg:w="343"/><text x="81.4006%" y="991.50">tokio::runtime::sche..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (343 samples, 12.98%)</title><rect x="81.1506%" y="965" width="12.9826%" height="15" fill="rgb(210,71,34)" fg:x="2144" fg:w="343"/><text x="81.4006%" y="975.50">tokio::runtime::sche..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (2 samples, 0.08%)</title><rect x="94.0575%" y="949" width="0.0757%" height="15" fill="rgb(253,217,51)" fg:x="2485" fg:w="2"/><text x="94.3075%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.08%)</title><rect x="94.0575%" y="933" width="0.0757%" height="15" fill="rgb(222,117,46)" fg:x="2485" fg:w="2"/><text x="94.3075%" y="943.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.04%)</title><rect x="94.2468%" y="1605" width="0.0379%" height="15" fill="rgb(226,132,6)" fg:x="2490" fg:w="1"/><text x="94.4968%" y="1615.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.04%)</title><rect x="94.2468%" y="1589" width="0.0379%" height="15" fill="rgb(254,145,51)" fg:x="2490" fg:w="1"/><text x="94.4968%" y="1599.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.04%)</title><rect x="94.2468%" y="1573" width="0.0379%" height="15" fill="rgb(231,199,27)" fg:x="2490" fg:w="1"/><text x="94.4968%" y="1583.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_key (1 samples, 0.04%)</title><rect x="94.2468%" y="1557" width="0.0379%" height="15" fill="rgb(245,158,14)" fg:x="2490" fg:w="1"/><text x="94.4968%" y="1567.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.04%)</title><rect x="94.2468%" y="1541" width="0.0379%" height="15" fill="rgb(240,113,14)" fg:x="2490" fg:w="1"/><text x="94.4968%" y="1551.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.04%)</title><rect x="94.2468%" y="1525" width="0.0379%" height="15" fill="rgb(210,20,13)" fg:x="2490" fg:w="1"/><text x="94.4968%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="94.2468%" y="1509" width="0.0379%" height="15" fill="rgb(241,144,13)" fg:x="2490" fg:w="1"/><text x="94.4968%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="94.2468%" y="1493" width="0.0379%" height="15" fill="rgb(235,43,34)" fg:x="2490" fg:w="1"/><text x="94.4968%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="94.2468%" y="1477" width="0.0379%" height="15" fill="rgb(208,36,20)" fg:x="2490" fg:w="1"/><text x="94.4968%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.2468%" y="1461" width="0.0379%" height="15" fill="rgb(239,204,10)" fg:x="2490" fg:w="1"/><text x="94.4968%" y="1471.50"></text></g><g><title>[unknown] (7 samples, 0.26%)</title><rect x="94.1332%" y="1621" width="0.2650%" height="15" fill="rgb(217,84,43)" fg:x="2487" fg:w="7"/><text x="94.3832%" y="1631.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (3 samples, 0.11%)</title><rect x="94.2846%" y="1605" width="0.1136%" height="15" fill="rgb(241,170,50)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3 samples, 0.11%)</title><rect x="94.2846%" y="1589" width="0.1136%" height="15" fill="rgb(226,205,29)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1599.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="94.2846%" y="1573" width="0.1136%" height="15" fill="rgb(233,113,1)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1583.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (3 samples, 0.11%)</title><rect x="94.2846%" y="1557" width="0.1136%" height="15" fill="rgb(253,98,13)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1567.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (3 samples, 0.11%)</title><rect x="94.2846%" y="1541" width="0.1136%" height="15" fill="rgb(211,115,12)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1551.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (3 samples, 0.11%)</title><rect x="94.2846%" y="1525" width="0.1136%" height="15" fill="rgb(208,12,16)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1535.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (3 samples, 0.11%)</title><rect x="94.2846%" y="1509" width="0.1136%" height="15" fill="rgb(237,193,54)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1519.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::drain (3 samples, 0.11%)</title><rect x="94.2846%" y="1493" width="0.1136%" height="15" fill="rgb(243,22,42)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1503.50"></text></g><g><title>bytes::bytes_mut::BytesMut::unsplit (3 samples, 0.11%)</title><rect x="94.2846%" y="1477" width="0.1136%" height="15" fill="rgb(233,151,36)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1487.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (3 samples, 0.11%)</title><rect x="94.2846%" y="1461" width="0.1136%" height="15" fill="rgb(237,57,45)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.11%)</title><rect x="94.2846%" y="1445" width="0.1136%" height="15" fill="rgb(221,88,17)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1455.50"></text></g><g><title>recv (3 samples, 0.11%)</title><rect x="94.2846%" y="1429" width="0.1136%" height="15" fill="rgb(230,79,15)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1439.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="94.2846%" y="1413" width="0.1136%" height="15" fill="rgb(213,57,13)" fg:x="2491" fg:w="3"/><text x="94.5346%" y="1423.50"></text></g><g><title>epoll_wait (1 samples, 0.04%)</title><rect x="94.3982%" y="1621" width="0.0379%" height="15" fill="rgb(222,116,39)" fg:x="2494" fg:w="1"/><text x="94.6482%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.3982%" y="1605" width="0.0379%" height="15" fill="rgb(245,107,2)" fg:x="2494" fg:w="1"/><text x="94.6482%" y="1615.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="94.4360%" y="1237" width="0.0379%" height="15" fill="rgb(238,1,10)" fg:x="2495" fg:w="1"/><text x="94.6860%" y="1247.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="94.4360%" y="1221" width="0.0379%" height="15" fill="rgb(249,4,48)" fg:x="2495" fg:w="1"/><text x="94.6860%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="94.4360%" y="1269" width="0.1136%" height="15" fill="rgb(223,151,18)" fg:x="2495" fg:w="3"/><text x="94.6860%" y="1279.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="94.4360%" y="1253" width="0.1136%" height="15" fill="rgb(227,65,43)" fg:x="2495" fg:w="3"/><text x="94.6860%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;poem::response::Response,poem::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="94.4739%" y="1237" width="0.0757%" height="15" fill="rgb(218,40,45)" fg:x="2496" fg:w="2"/><text x="94.7239%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;poem::response::Response,poem::error::Error&gt;+core::marker::Send&gt;&gt; (2 samples, 0.08%)</title><rect x="94.4739%" y="1221" width="0.0757%" height="15" fill="rgb(252,121,31)" fg:x="2496" fg:w="2"/><text x="94.7239%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="94.4739%" y="1205" width="0.0757%" height="15" fill="rgb(219,158,43)" fg:x="2496" fg:w="2"/><text x="94.7239%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="94.4739%" y="1189" width="0.0757%" height="15" fill="rgb(231,162,42)" fg:x="2496" fg:w="2"/><text x="94.7239%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="94.4739%" y="1173" width="0.0757%" height="15" fill="rgb(217,179,25)" fg:x="2496" fg:w="2"/><text x="94.7239%" y="1183.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.08%)</title><rect x="94.4739%" y="1157" width="0.0757%" height="15" fill="rgb(206,212,31)" fg:x="2496" fg:w="2"/><text x="94.7239%" y="1167.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.08%)</title><rect x="94.4739%" y="1141" width="0.0757%" height="15" fill="rgb(235,144,12)" fg:x="2496" fg:w="2"/><text x="94.7239%" y="1151.50"></text></g><g><title>cfree (2 samples, 0.08%)</title><rect x="94.4739%" y="1125" width="0.0757%" height="15" fill="rgb(213,51,10)" fg:x="2496" fg:w="2"/><text x="94.7239%" y="1135.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="94.4739%" y="1109" width="0.0757%" height="15" fill="rgb(231,145,14)" fg:x="2496" fg:w="2"/><text x="94.7239%" y="1119.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="94.5117%" y="1093" width="0.0379%" height="15" fill="rgb(235,15,28)" fg:x="2497" fg:w="1"/><text x="94.7617%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="94.5117%" y="1077" width="0.0379%" height="15" fill="rgb(237,206,10)" fg:x="2497" fg:w="1"/><text x="94.7617%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.04%)</title><rect x="94.5496%" y="1221" width="0.0379%" height="15" fill="rgb(236,227,27)" fg:x="2498" fg:w="1"/><text x="94.7996%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="94.5496%" y="1205" width="0.0379%" height="15" fill="rgb(246,83,35)" fg:x="2498" fg:w="1"/><text x="94.7996%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::strip_prefix (2 samples, 0.08%)</title><rect x="94.5874%" y="1205" width="0.0757%" height="15" fill="rgb(220,136,24)" fg:x="2499" fg:w="2"/><text x="94.8374%" y="1215.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.08%)</title><rect x="94.5874%" y="1189" width="0.0757%" height="15" fill="rgb(217,3,25)" fg:x="2499" fg:w="2"/><text x="94.8374%" y="1199.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (2 samples, 0.08%)</title><rect x="94.5874%" y="1173" width="0.0757%" height="15" fill="rgb(239,24,14)" fg:x="2499" fg:w="2"/><text x="94.8374%" y="1183.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.08%)</title><rect x="94.5874%" y="1157" width="0.0757%" height="15" fill="rgb(244,16,53)" fg:x="2499" fg:w="2"/><text x="94.8374%" y="1167.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="94.5874%" y="1141" width="0.0757%" height="15" fill="rgb(208,175,44)" fg:x="2499" fg:w="2"/><text x="94.8374%" y="1151.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (7 samples, 0.26%)</title><rect x="94.4360%" y="1621" width="0.2650%" height="15" fill="rgb(252,18,48)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1631.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (7 samples, 0.26%)</title><rect x="94.4360%" y="1605" width="0.2650%" height="15" fill="rgb(234,199,32)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1615.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (7 samples, 0.26%)</title><rect x="94.4360%" y="1589" width="0.2650%" height="15" fill="rgb(225,77,54)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1599.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1573" width="0.2650%" height="15" fill="rgb(225,42,25)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1583.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1557" width="0.2650%" height="15" fill="rgb(242,227,46)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1541" width="0.2650%" height="15" fill="rgb(246,197,35)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1551.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1525" width="0.2650%" height="15" fill="rgb(215,159,26)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1535.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="94.4360%" y="1509" width="0.2650%" height="15" fill="rgb(212,194,50)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1519.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1493" width="0.2650%" height="15" fill="rgb(246,132,1)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1503.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1477" width="0.2650%" height="15" fill="rgb(217,71,7)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1461" width="0.2650%" height="15" fill="rgb(252,59,32)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1471.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1445" width="0.2650%" height="15" fill="rgb(253,204,25)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1455.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="94.4360%" y="1429" width="0.2650%" height="15" fill="rgb(232,21,16)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1439.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1413" width="0.2650%" height="15" fill="rgb(248,90,29)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1397" width="0.2650%" height="15" fill="rgb(249,223,7)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1407.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1381" width="0.2650%" height="15" fill="rgb(231,119,42)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1391.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1365" width="0.2650%" height="15" fill="rgb(215,41,35)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="94.4360%" y="1349" width="0.2650%" height="15" fill="rgb(220,44,45)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1359.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1333" width="0.2650%" height="15" fill="rgb(253,197,36)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1343.50"></text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1317" width="0.2650%" height="15" fill="rgb(245,225,54)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1327.50"></text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1301" width="0.2650%" height="15" fill="rgb(239,94,37)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1311.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.4360%" y="1285" width="0.2650%" height="15" fill="rgb(242,217,10)" fg:x="2495" fg:w="7"/><text x="94.6860%" y="1295.50"></text></g><g><title>poem::route::internal::radix_tree::RadixTree&lt;T&gt;::matches (4 samples, 0.15%)</title><rect x="94.5496%" y="1269" width="0.1514%" height="15" fill="rgb(250,193,7)" fg:x="2498" fg:w="4"/><text x="94.7996%" y="1279.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::matches (4 samples, 0.15%)</title><rect x="94.5496%" y="1253" width="0.1514%" height="15" fill="rgb(230,104,19)" fg:x="2498" fg:w="4"/><text x="94.7996%" y="1263.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::matches (4 samples, 0.15%)</title><rect x="94.5496%" y="1237" width="0.1514%" height="15" fill="rgb(230,181,4)" fg:x="2498" fg:w="4"/><text x="94.7996%" y="1247.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::matches (3 samples, 0.11%)</title><rect x="94.5874%" y="1221" width="0.1136%" height="15" fill="rgb(216,219,49)" fg:x="2499" fg:w="3"/><text x="94.8374%" y="1231.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::matches (1 samples, 0.04%)</title><rect x="94.6631%" y="1205" width="0.0379%" height="15" fill="rgb(254,144,0)" fg:x="2501" fg:w="1"/><text x="94.9131%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="94.8145%" y="1205" width="0.0379%" height="15" fill="rgb(205,209,38)" fg:x="2505" fg:w="1"/><text x="95.0645%" y="1215.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="94.8145%" y="1189" width="0.0379%" height="15" fill="rgb(240,21,42)" fg:x="2505" fg:w="1"/><text x="95.0645%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="94.8145%" y="1173" width="0.0379%" height="15" fill="rgb(241,132,3)" fg:x="2505" fg:w="1"/><text x="95.0645%" y="1183.50"></text></g><g><title>&lt;poem::endpoint::endpoint::ToDynEndpoint&lt;E&gt; as poem::endpoint::endpoint::DynEndpoint&gt;::call (1 samples, 0.04%)</title><rect x="94.8524%" y="1205" width="0.0379%" height="15" fill="rgb(225,14,2)" fg:x="2506" fg:w="1"/><text x="95.1024%" y="1215.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="94.8524%" y="1189" width="0.0379%" height="15" fill="rgb(210,141,35)" fg:x="2506" fg:w="1"/><text x="95.1024%" y="1199.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="94.8524%" y="1173" width="0.0379%" height="15" fill="rgb(251,14,44)" fg:x="2506" fg:w="1"/><text x="95.1024%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="94.8524%" y="1157" width="0.0379%" height="15" fill="rgb(247,48,18)" fg:x="2506" fg:w="1"/><text x="95.1024%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="94.8524%" y="1141" width="0.0379%" height="15" fill="rgb(225,0,40)" fg:x="2506" fg:w="1"/><text x="95.1024%" y="1151.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="94.8145%" y="1253" width="0.1136%" height="15" fill="rgb(221,31,33)" fg:x="2505" fg:w="3"/><text x="95.0645%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="94.8145%" y="1237" width="0.1136%" height="15" fill="rgb(237,42,40)" fg:x="2505" fg:w="3"/><text x="95.0645%" y="1247.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="94.8145%" y="1221" width="0.1136%" height="15" fill="rgb(233,51,29)" fg:x="2505" fg:w="3"/><text x="95.0645%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;poem::response::Response,poem::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="94.8902%" y="1205" width="0.0379%" height="15" fill="rgb(226,58,20)" fg:x="2507" fg:w="1"/><text x="95.1402%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;poem::response::Response,poem::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="94.8902%" y="1189" width="0.0379%" height="15" fill="rgb(208,98,7)" fg:x="2507" fg:w="1"/><text x="95.1402%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="94.8902%" y="1173" width="0.0379%" height="15" fill="rgb(228,143,44)" fg:x="2507" fg:w="1"/><text x="95.1402%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="94.8902%" y="1157" width="0.0379%" height="15" fill="rgb(246,55,38)" fg:x="2507" fg:w="1"/><text x="95.1402%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="94.8902%" y="1141" width="0.0379%" height="15" fill="rgb(247,87,16)" fg:x="2507" fg:w="1"/><text x="95.1402%" y="1151.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="94.8902%" y="1125" width="0.0379%" height="15" fill="rgb(234,129,42)" fg:x="2507" fg:w="1"/><text x="95.1402%" y="1135.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="94.8902%" y="1109" width="0.0379%" height="15" fill="rgb(220,82,16)" fg:x="2507" fg:w="1"/><text x="95.1402%" y="1119.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="94.8902%" y="1093" width="0.0379%" height="15" fill="rgb(211,88,4)" fg:x="2507" fg:w="1"/><text x="95.1402%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="94.8902%" y="1077" width="0.0379%" height="15" fill="rgb(248,151,21)" fg:x="2507" fg:w="1"/><text x="95.1402%" y="1087.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1621" width="0.2650%" height="15" fill="rgb(238,163,6)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1631.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1605" width="0.2650%" height="15" fill="rgb(209,183,11)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1615.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1589" width="0.2650%" height="15" fill="rgb(219,37,20)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1599.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1573" width="0.2650%" height="15" fill="rgb(210,158,4)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1583.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="94.7010%" y="1557" width="0.2650%" height="15" fill="rgb(221,167,53)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1567.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1541" width="0.2650%" height="15" fill="rgb(237,151,45)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1551.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1525" width="0.2650%" height="15" fill="rgb(231,39,3)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1535.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1509" width="0.2650%" height="15" fill="rgb(212,167,28)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1519.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1493" width="0.2650%" height="15" fill="rgb(232,178,8)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1503.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="94.7010%" y="1477" width="0.2650%" height="15" fill="rgb(225,151,20)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1487.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1461" width="0.2650%" height="15" fill="rgb(238,3,37)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1471.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1445" width="0.2650%" height="15" fill="rgb(251,147,42)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1455.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1429" width="0.2650%" height="15" fill="rgb(208,173,10)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1439.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1413" width="0.2650%" height="15" fill="rgb(246,225,4)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="94.7010%" y="1397" width="0.2650%" height="15" fill="rgb(248,102,6)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1407.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1381" width="0.2650%" height="15" fill="rgb(232,6,21)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1391.50"></text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1365" width="0.2650%" height="15" fill="rgb(221,179,22)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1375.50"></text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1349" width="0.2650%" height="15" fill="rgb(252,50,20)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1359.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1333" width="0.2650%" height="15" fill="rgb(222,56,38)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1343.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1317" width="0.2650%" height="15" fill="rgb(206,193,29)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1327.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1301" width="0.2650%" height="15" fill="rgb(239,192,45)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="94.7010%" y="1285" width="0.2650%" height="15" fill="rgb(254,18,36)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1295.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (7 samples, 0.26%)</title><rect x="94.7010%" y="1269" width="0.2650%" height="15" fill="rgb(221,127,11)" fg:x="2502" fg:w="7"/><text x="94.9510%" y="1279.50"></text></g><g><title>&lt;poem::route::router_method::RouteMethod as poem::endpoint::endpoint::Endpoint&gt;::call (1 samples, 0.04%)</title><rect x="94.9281%" y="1253" width="0.0379%" height="15" fill="rgb(234,146,35)" fg:x="2508" fg:w="1"/><text x="95.1781%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="94.9281%" y="1237" width="0.0379%" height="15" fill="rgb(254,201,37)" fg:x="2508" fg:w="1"/><text x="95.1781%" y="1247.50"></text></g><g><title>[libc.so.6] (4 samples, 0.15%)</title><rect x="95.1173%" y="1605" width="0.1514%" height="15" fill="rgb(211,202,23)" fg:x="2513" fg:w="4"/><text x="95.3673%" y="1615.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::to_bits (2 samples, 0.08%)</title><rect x="95.2687%" y="1605" width="0.0757%" height="15" fill="rgb(237,91,2)" fg:x="2517" fg:w="2"/><text x="95.5187%" y="1615.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::to_bits::rt_f64_to_u64 (2 samples, 0.08%)</title><rect x="95.2687%" y="1589" width="0.0757%" height="15" fill="rgb(226,228,36)" fg:x="2517" fg:w="2"/><text x="95.5187%" y="1599.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (14 samples, 0.53%)</title><rect x="96.3664%" y="1589" width="0.5299%" height="15" fill="rgb(213,63,50)" fg:x="2546" fg:w="14"/><text x="96.6164%" y="1599.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (4 samples, 0.15%)</title><rect x="96.8963%" y="1589" width="0.1514%" height="15" fill="rgb(235,194,19)" fg:x="2560" fg:w="4"/><text x="97.1463%" y="1599.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="97.0477%" y="1589" width="0.0757%" height="15" fill="rgb(207,204,18)" fg:x="2564" fg:w="2"/><text x="97.2977%" y="1599.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="97.0477%" y="1573" width="0.0757%" height="15" fill="rgb(248,8,7)" fg:x="2564" fg:w="2"/><text x="97.2977%" y="1583.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.08%)</title><rect x="97.0477%" y="1557" width="0.0757%" height="15" fill="rgb(223,145,47)" fg:x="2564" fg:w="2"/><text x="97.2977%" y="1567.50"></text></g><g><title>ryu::d2s_intrinsics::div10 (27 samples, 1.02%)</title><rect x="97.1234%" y="1589" width="1.0220%" height="15" fill="rgb(228,84,11)" fg:x="2566" fg:w="27"/><text x="97.3734%" y="1599.50"></text></g><g><title>ryu::d2s::d2d (80 samples, 3.03%)</title><rect x="95.3444%" y="1605" width="3.0280%" height="15" fill="rgb(218,76,45)" fg:x="2519" fg:w="80"/><text x="95.5944%" y="1615.50">ryu..</text></g><g><title>ryu::d2s_intrinsics::mul_shift_all_64 (6 samples, 0.23%)</title><rect x="98.1453%" y="1589" width="0.2271%" height="15" fill="rgb(223,80,15)" fg:x="2593" fg:w="6"/><text x="98.3953%" y="1599.50"></text></g><g><title>ryu::d2s_intrinsics::mul_shift_64 (6 samples, 0.23%)</title><rect x="98.1453%" y="1573" width="0.2271%" height="15" fill="rgb(219,218,33)" fg:x="2593" fg:w="6"/><text x="98.3953%" y="1583.50"></text></g><g><title>ryu::pretty::format64 (95 samples, 3.60%)</title><rect x="94.9659%" y="1621" width="3.5958%" height="15" fill="rgb(208,51,11)" fg:x="2509" fg:w="95"/><text x="95.2159%" y="1631.50">ryu:..</text></g><g><title>ryu::d2s::decimal_length17 (5 samples, 0.19%)</title><rect x="98.3724%" y="1605" width="0.1893%" height="15" fill="rgb(229,165,39)" fg:x="2599" fg:w="5"/><text x="98.6224%" y="1615.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa_long (1 samples, 0.04%)</title><rect x="98.5617%" y="1621" width="0.0379%" height="15" fill="rgb(241,100,24)" fg:x="2604" fg:w="1"/><text x="98.8117%" y="1631.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.04%)</title><rect x="98.5995%" y="1621" width="0.0379%" height="15" fill="rgb(228,14,23)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1631.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="1605" width="0.0379%" height="15" fill="rgb(247,116,52)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1615.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.04%)</title><rect x="98.5995%" y="1589" width="0.0379%" height="15" fill="rgb(216,149,33)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1599.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (1 samples, 0.04%)</title><rect x="98.5995%" y="1573" width="0.0379%" height="15" fill="rgb(238,142,29)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1583.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (1 samples, 0.04%)</title><rect x="98.5995%" y="1557" width="0.0379%" height="15" fill="rgb(224,83,40)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1567.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="1541" width="0.0379%" height="15" fill="rgb(234,165,11)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1551.50"></text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="1525" width="0.0379%" height="15" fill="rgb(215,96,23)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1535.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="1509" width="0.0379%" height="15" fill="rgb(233,179,26)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1519.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.04%)</title><rect x="98.5995%" y="1493" width="0.0379%" height="15" fill="rgb(225,129,33)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1503.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.04%)</title><rect x="98.5995%" y="1477" width="0.0379%" height="15" fill="rgb(237,49,13)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.04%)</title><rect x="98.5995%" y="1461" width="0.0379%" height="15" fill="rgb(211,3,31)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1471.50"></text></g><g><title>std::panicking::try (1 samples, 0.04%)</title><rect x="98.5995%" y="1445" width="0.0379%" height="15" fill="rgb(216,152,19)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.04%)</title><rect x="98.5995%" y="1429" width="0.0379%" height="15" fill="rgb(251,121,35)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1439.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.04%)</title><rect x="98.5995%" y="1413" width="0.0379%" height="15" fill="rgb(210,217,47)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1423.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="1397" width="0.0379%" height="15" fill="rgb(244,116,22)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1407.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="1381" width="0.0379%" height="15" fill="rgb(228,17,21)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1391.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.04%)</title><rect x="98.5995%" y="1365" width="0.0379%" height="15" fill="rgb(240,149,34)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1375.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="1349" width="0.0379%" height="15" fill="rgb(208,125,47)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1359.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="1333" width="0.0379%" height="15" fill="rgb(249,186,39)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="1317" width="0.0379%" height="15" fill="rgb(240,220,33)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1 samples, 0.04%)</title><rect x="98.5995%" y="1301" width="0.0379%" height="15" fill="rgb(243,110,23)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1311.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1 samples, 0.04%)</title><rect x="98.5995%" y="1285" width="0.0379%" height="15" fill="rgb(219,163,46)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="1269" width="0.0379%" height="15" fill="rgb(216,126,30)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1279.50"></text></g><g><title>tokio::runtime::context::set_scheduler (1 samples, 0.04%)</title><rect x="98.5995%" y="1253" width="0.0379%" height="15" fill="rgb(208,139,11)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="98.5995%" y="1237" width="0.0379%" height="15" fill="rgb(213,118,36)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="98.5995%" y="1221" width="0.0379%" height="15" fill="rgb(226,43,17)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1231.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="1205" width="0.0379%" height="15" fill="rgb(254,217,4)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1215.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="98.5995%" y="1189" width="0.0379%" height="15" fill="rgb(210,134,47)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="1173" width="0.0379%" height="15" fill="rgb(237,24,49)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1 samples, 0.04%)</title><rect x="98.5995%" y="1157" width="0.0379%" height="15" fill="rgb(251,39,46)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1 samples, 0.04%)</title><rect x="98.5995%" y="1141" width="0.0379%" height="15" fill="rgb(251,220,3)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1151.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.04%)</title><rect x="98.5995%" y="1125" width="0.0379%" height="15" fill="rgb(228,105,12)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1135.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.04%)</title><rect x="98.5995%" y="1109" width="0.0379%" height="15" fill="rgb(215,196,1)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="1093" width="0.0379%" height="15" fill="rgb(214,33,39)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1103.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.04%)</title><rect x="98.5995%" y="1077" width="0.0379%" height="15" fill="rgb(220,19,52)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1087.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="1061" width="0.0379%" height="15" fill="rgb(221,78,38)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1071.50"></text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="1045" width="0.0379%" height="15" fill="rgb(253,30,16)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="1029" width="0.0379%" height="15" fill="rgb(242,65,0)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.04%)</title><rect x="98.5995%" y="1013" width="0.0379%" height="15" fill="rgb(235,201,12)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.04%)</title><rect x="98.5995%" y="997" width="0.0379%" height="15" fill="rgb(233,161,9)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.04%)</title><rect x="98.5995%" y="981" width="0.0379%" height="15" fill="rgb(241,207,41)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="991.50"></text></g><g><title>std::panicking::try (1 samples, 0.04%)</title><rect x="98.5995%" y="965" width="0.0379%" height="15" fill="rgb(212,69,46)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="975.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.04%)</title><rect x="98.5995%" y="949" width="0.0379%" height="15" fill="rgb(239,69,45)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="959.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.04%)</title><rect x="98.5995%" y="933" width="0.0379%" height="15" fill="rgb(242,117,48)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="917" width="0.0379%" height="15" fill="rgb(228,41,36)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="901" width="0.0379%" height="15" fill="rgb(212,3,32)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="911.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.04%)</title><rect x="98.5995%" y="885" width="0.0379%" height="15" fill="rgb(233,41,49)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="869" width="0.0379%" height="15" fill="rgb(252,170,49)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="879.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="853" width="0.0379%" height="15" fill="rgb(229,53,26)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="863.50"></text></g><g><title>poem::server::serve_connection::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="837" width="0.0379%" height="15" fill="rgb(217,157,12)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="847.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="821" width="0.0379%" height="15" fill="rgb(227,17,9)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="831.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="805" width="0.0379%" height="15" fill="rgb(218,84,12)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="815.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="789" width="0.0379%" height="15" fill="rgb(212,79,24)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="773" width="0.0379%" height="15" fill="rgb(217,222,37)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="783.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="757" width="0.0379%" height="15" fill="rgb(246,208,8)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="767.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="741" width="0.0379%" height="15" fill="rgb(244,133,10)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="751.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="725" width="0.0379%" height="15" fill="rgb(209,219,41)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="735.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (1 samples, 0.04%)</title><rect x="98.5995%" y="709" width="0.0379%" height="15" fill="rgb(253,175,45)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="719.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (1 samples, 0.04%)</title><rect x="98.5995%" y="693" width="0.0379%" height="15" fill="rgb(235,100,37)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="703.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (1 samples, 0.04%)</title><rect x="98.5995%" y="677" width="0.0379%" height="15" fill="rgb(225,87,19)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="687.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (1 samples, 0.04%)</title><rect x="98.5995%" y="661" width="0.0379%" height="15" fill="rgb(217,152,17)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="671.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (1 samples, 0.04%)</title><rect x="98.5995%" y="645" width="0.0379%" height="15" fill="rgb(235,72,13)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="655.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="629" width="0.0379%" height="15" fill="rgb(233,140,18)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="639.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="613" width="0.0379%" height="15" fill="rgb(207,212,28)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="597" width="0.0379%" height="15" fill="rgb(220,130,25)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="607.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="581" width="0.0379%" height="15" fill="rgb(205,55,34)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="565" width="0.0379%" height="15" fill="rgb(237,54,35)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="575.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="549" width="0.0379%" height="15" fill="rgb(208,67,23)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="559.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="533" width="0.0379%" height="15" fill="rgb(206,207,50)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="517" width="0.0379%" height="15" fill="rgb(213,211,42)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="527.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="501" width="0.0379%" height="15" fill="rgb(252,197,50)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.5995%" y="485" width="0.0379%" height="15" fill="rgb(251,211,41)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="495.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5995%" y="469" width="0.0379%" height="15" fill="rgb(229,211,5)" fg:x="2605" fg:w="1"/><text x="98.8495%" y="479.50"></text></g><g><title>&lt;http::uri::path::PathAndQuery as core::str::traits::FromStr&gt;::from_str (1 samples, 0.04%)</title><rect x="98.6374%" y="549" width="0.0379%" height="15" fill="rgb(239,36,31)" fg:x="2606" fg:w="1"/><text x="98.8874%" y="559.50"></text></g><g><title>&lt;http::uri::path::PathAndQuery as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (1 samples, 0.04%)</title><rect x="98.6374%" y="533" width="0.0379%" height="15" fill="rgb(248,67,31)" fg:x="2606" fg:w="1"/><text x="98.8874%" y="543.50"></text></g><g><title>&lt;http::uri::path::PathAndQuery as core::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::try_from (1 samples, 0.04%)</title><rect x="98.6374%" y="517" width="0.0379%" height="15" fill="rgb(249,55,44)" fg:x="2606" fg:w="1"/><text x="98.8874%" y="527.50"></text></g><g><title>http::uri::path::PathAndQuery::from_shared (1 samples, 0.04%)</title><rect x="98.6374%" y="501" width="0.0379%" height="15" fill="rgb(216,82,12)" fg:x="2606" fg:w="1"/><text x="98.8874%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="98.6374%" y="485" width="0.0379%" height="15" fill="rgb(242,174,1)" fg:x="2606" fg:w="1"/><text x="98.8874%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="98.6374%" y="469" width="0.0379%" height="15" fill="rgb(208,120,29)" fg:x="2606" fg:w="1"/><text x="98.8874%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="98.6374%" y="453" width="0.0379%" height="15" fill="rgb(221,105,43)" fg:x="2606" fg:w="1"/><text x="98.8874%" y="463.50"></text></g><g><title>http::uri::Uri::into_parts (1 samples, 0.04%)</title><rect x="98.6752%" y="549" width="0.0379%" height="15" fill="rgb(234,124,22)" fg:x="2607" fg:w="1"/><text x="98.9252%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="98.6752%" y="533" width="0.0379%" height="15" fill="rgb(212,23,30)" fg:x="2607" fg:w="1"/><text x="98.9252%" y="543.50"></text></g><g><title>&lt;http::uri::Parts as core::convert::From&lt;http::uri::Uri&gt;&gt;::from (1 samples, 0.04%)</title><rect x="98.6752%" y="517" width="0.0379%" height="15" fill="rgb(219,122,53)" fg:x="2607" fg:w="1"/><text x="98.9252%" y="527.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="1429" width="0.1136%" height="15" fill="rgb(248,84,24)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="1413" width="0.1136%" height="15" fill="rgb(245,115,18)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (3 samples, 0.11%)</title><rect x="98.6374%" y="1397" width="0.1136%" height="15" fill="rgb(227,176,51)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1407.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (3 samples, 0.11%)</title><rect x="98.6374%" y="1381" width="0.1136%" height="15" fill="rgb(229,63,42)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="1365" width="0.1136%" height="15" fill="rgb(247,202,24)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1375.50"></text></g><g><title>tokio::runtime::context::set_scheduler (3 samples, 0.11%)</title><rect x="98.6374%" y="1349" width="0.1136%" height="15" fill="rgb(244,173,20)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.11%)</title><rect x="98.6374%" y="1333" width="0.1136%" height="15" fill="rgb(242,81,47)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.11%)</title><rect x="98.6374%" y="1317" width="0.1136%" height="15" fill="rgb(231,185,54)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1327.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="1301" width="0.1136%" height="15" fill="rgb(243,55,32)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1311.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (3 samples, 0.11%)</title><rect x="98.6374%" y="1285" width="0.1136%" height="15" fill="rgb(208,167,19)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="1269" width="0.1136%" height="15" fill="rgb(231,72,35)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (3 samples, 0.11%)</title><rect x="98.6374%" y="1253" width="0.1136%" height="15" fill="rgb(250,173,51)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (3 samples, 0.11%)</title><rect x="98.6374%" y="1237" width="0.1136%" height="15" fill="rgb(209,5,22)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1247.50"></text></g><g><title>tokio::runtime::coop::budget (3 samples, 0.11%)</title><rect x="98.6374%" y="1221" width="0.1136%" height="15" fill="rgb(250,174,19)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1231.50"></text></g><g><title>tokio::runtime::coop::with_budget (3 samples, 0.11%)</title><rect x="98.6374%" y="1205" width="0.1136%" height="15" fill="rgb(217,3,49)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="1189" width="0.1136%" height="15" fill="rgb(218,225,5)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1199.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (3 samples, 0.11%)</title><rect x="98.6374%" y="1173" width="0.1136%" height="15" fill="rgb(236,89,11)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="1157" width="0.1136%" height="15" fill="rgb(206,33,28)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="1141" width="0.1136%" height="15" fill="rgb(241,56,42)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="1125" width="0.1136%" height="15" fill="rgb(222,44,11)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3 samples, 0.11%)</title><rect x="98.6374%" y="1109" width="0.1136%" height="15" fill="rgb(234,111,20)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.11%)</title><rect x="98.6374%" y="1093" width="0.1136%" height="15" fill="rgb(237,77,6)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.11%)</title><rect x="98.6374%" y="1077" width="0.1136%" height="15" fill="rgb(235,111,23)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1087.50"></text></g><g><title>std::panicking::try (3 samples, 0.11%)</title><rect x="98.6374%" y="1061" width="0.1136%" height="15" fill="rgb(251,135,29)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.11%)</title><rect x="98.6374%" y="1045" width="0.1136%" height="15" fill="rgb(217,57,1)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.11%)</title><rect x="98.6374%" y="1029" width="0.1136%" height="15" fill="rgb(249,119,31)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="1013" width="0.1136%" height="15" fill="rgb(233,164,33)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="997" width="0.1136%" height="15" fill="rgb(250,217,43)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="1007.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.11%)</title><rect x="98.6374%" y="981" width="0.1136%" height="15" fill="rgb(232,154,50)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="991.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="965" width="0.1136%" height="15" fill="rgb(227,190,8)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="975.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}}::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="949" width="0.1136%" height="15" fill="rgb(209,217,32)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="959.50"></text></g><g><title>poem::server::serve_connection::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="933" width="0.1136%" height="15" fill="rgb(243,203,50)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="943.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="917" width="0.1136%" height="15" fill="rgb(232,152,27)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="927.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="901" width="0.1136%" height="15" fill="rgb(240,34,29)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="911.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="885" width="0.1136%" height="15" fill="rgb(215,185,52)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="895.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="869" width="0.1136%" height="15" fill="rgb(240,89,49)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="879.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="853" width="0.1136%" height="15" fill="rgb(225,12,52)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="863.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="837" width="0.1136%" height="15" fill="rgb(239,128,45)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="847.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="821" width="0.1136%" height="15" fill="rgb(211,78,47)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="831.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3 samples, 0.11%)</title><rect x="98.6374%" y="805" width="0.1136%" height="15" fill="rgb(232,31,21)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="815.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (3 samples, 0.11%)</title><rect x="98.6374%" y="789" width="0.1136%" height="15" fill="rgb(222,168,14)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="799.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (3 samples, 0.11%)</title><rect x="98.6374%" y="773" width="0.1136%" height="15" fill="rgb(209,128,24)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="783.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (3 samples, 0.11%)</title><rect x="98.6374%" y="757" width="0.1136%" height="15" fill="rgb(249,35,13)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="767.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (3 samples, 0.11%)</title><rect x="98.6374%" y="741" width="0.1136%" height="15" fill="rgb(218,7,2)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="751.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="725" width="0.1136%" height="15" fill="rgb(238,107,27)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="735.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="709" width="0.1136%" height="15" fill="rgb(217,88,38)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="693" width="0.1136%" height="15" fill="rgb(230,207,0)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="703.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="677" width="0.1136%" height="15" fill="rgb(249,64,54)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="661" width="0.1136%" height="15" fill="rgb(231,7,11)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="671.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="645" width="0.1136%" height="15" fill="rgb(205,149,21)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="655.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="629" width="0.1136%" height="15" fill="rgb(215,126,34)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="613" width="0.1136%" height="15" fill="rgb(241,132,45)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="623.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="597" width="0.1136%" height="15" fill="rgb(252,69,32)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="98.6374%" y="581" width="0.1136%" height="15" fill="rgb(232,204,19)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="591.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="98.6374%" y="565" width="0.1136%" height="15" fill="rgb(249,15,47)" fg:x="2606" fg:w="3"/><text x="98.8874%" y="575.50"></text></g><g><title>poem::request::Request::set_data (1 samples, 0.04%)</title><rect x="98.7131%" y="549" width="0.0379%" height="15" fill="rgb(209,227,23)" fg:x="2608" fg:w="1"/><text x="98.9631%" y="559.50"></text></g><g><title>http::extensions::Extensions::insert (1 samples, 0.04%)</title><rect x="98.7131%" y="533" width="0.0379%" height="15" fill="rgb(248,92,24)" fg:x="2608" fg:w="1"/><text x="98.9631%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.04%)</title><rect x="98.7131%" y="517" width="0.0379%" height="15" fill="rgb(247,59,2)" fg:x="2608" fg:w="1"/><text x="98.9631%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="98.7131%" y="501" width="0.0379%" height="15" fill="rgb(221,30,5)" fg:x="2608" fg:w="1"/><text x="98.9631%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.04%)</title><rect x="98.7131%" y="485" width="0.0379%" height="15" fill="rgb(208,108,53)" fg:x="2608" fg:w="1"/><text x="98.9631%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.04%)</title><rect x="98.7131%" y="469" width="0.0379%" height="15" fill="rgb(211,183,26)" fg:x="2608" fg:w="1"/><text x="98.9631%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.04%)</title><rect x="98.7131%" y="453" width="0.0379%" height="15" fill="rgb(232,132,4)" fg:x="2608" fg:w="1"/><text x="98.9631%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="98.9023%" y="1141" width="0.0379%" height="15" fill="rgb(253,128,37)" fg:x="2613" fg:w="1"/><text x="99.1523%" y="1151.50"></text></g><g><title>bytes::bytes::Bytes::slice (1 samples, 0.04%)</title><rect x="98.9402%" y="1141" width="0.0379%" height="15" fill="rgb(221,58,24)" fg:x="2614" fg:w="1"/><text x="99.1902%" y="1151.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="98.9402%" y="1125" width="0.0379%" height="15" fill="rgb(230,54,45)" fg:x="2614" fg:w="1"/><text x="99.1902%" y="1135.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (1 samples, 0.04%)</title><rect x="98.9402%" y="1109" width="0.0379%" height="15" fill="rgb(254,21,18)" fg:x="2614" fg:w="1"/><text x="99.1902%" y="1119.50"></text></g><g><title>bytes::bytes_mut::increment_shared (1 samples, 0.04%)</title><rect x="98.9402%" y="1093" width="0.0379%" height="15" fill="rgb(221,108,0)" fg:x="2614" fg:w="1"/><text x="99.1902%" y="1103.50"></text></g><g><title>bytes::bytes::Bytes::slice_ref (1 samples, 0.04%)</title><rect x="98.9780%" y="1141" width="0.0379%" height="15" fill="rgb(206,95,1)" fg:x="2615" fg:w="1"/><text x="99.2280%" y="1151.50"></text></g><g><title>bytes::bytes::Bytes::slice (1 samples, 0.04%)</title><rect x="98.9780%" y="1125" width="0.0379%" height="15" fill="rgb(237,52,5)" fg:x="2615" fg:w="1"/><text x="99.2280%" y="1135.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="98.9780%" y="1109" width="0.0379%" height="15" fill="rgb(218,150,34)" fg:x="2615" fg:w="1"/><text x="99.2280%" y="1119.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (1 samples, 0.04%)</title><rect x="98.9780%" y="1093" width="0.0379%" height="15" fill="rgb(235,194,28)" fg:x="2615" fg:w="1"/><text x="99.2280%" y="1103.50"></text></g><g><title>bytes::bytes_mut::increment_shared (1 samples, 0.04%)</title><rect x="98.9780%" y="1077" width="0.0379%" height="15" fill="rgb(245,92,18)" fg:x="2615" fg:w="1"/><text x="99.2280%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.04%)</title><rect x="98.9780%" y="1061" width="0.0379%" height="15" fill="rgb(253,203,53)" fg:x="2615" fg:w="1"/><text x="99.2280%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.04%)</title><rect x="98.9780%" y="1045" width="0.0379%" height="15" fill="rgb(249,185,47)" fg:x="2615" fg:w="1"/><text x="99.2280%" y="1055.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (4 samples, 0.15%)</title><rect x="99.0159%" y="1141" width="0.1514%" height="15" fill="rgb(252,194,52)" fg:x="2616" fg:w="4"/><text x="99.2659%" y="1151.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (2 samples, 0.08%)</title><rect x="99.0916%" y="1125" width="0.0757%" height="15" fill="rgb(210,53,36)" fg:x="2618" fg:w="2"/><text x="99.3416%" y="1135.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (2 samples, 0.08%)</title><rect x="99.0916%" y="1109" width="0.0757%" height="15" fill="rgb(237,37,25)" fg:x="2618" fg:w="2"/><text x="99.3416%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="99.1294%" y="1093" width="0.0379%" height="15" fill="rgb(242,116,27)" fg:x="2619" fg:w="1"/><text x="99.3794%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="99.1294%" y="1077" width="0.0379%" height="15" fill="rgb(213,185,26)" fg:x="2619" fg:w="1"/><text x="99.3794%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="99.1294%" y="1061" width="0.0379%" height="15" fill="rgb(225,204,8)" fg:x="2619" fg:w="1"/><text x="99.3794%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="99.1294%" y="1045" width="0.0379%" height="15" fill="rgb(254,111,37)" fg:x="2619" fg:w="1"/><text x="99.3794%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="99.1294%" y="1029" width="0.0379%" height="15" fill="rgb(242,35,9)" fg:x="2619" fg:w="1"/><text x="99.3794%" y="1039.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="99.1294%" y="1013" width="0.0379%" height="15" fill="rgb(232,138,49)" fg:x="2619" fg:w="1"/><text x="99.3794%" y="1023.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="99.1294%" y="997" width="0.0379%" height="15" fill="rgb(247,56,4)" fg:x="2619" fg:w="1"/><text x="99.3794%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="99.1294%" y="981" width="0.0379%" height="15" fill="rgb(226,179,17)" fg:x="2619" fg:w="1"/><text x="99.3794%" y="991.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (1 samples, 0.04%)</title><rect x="99.1673%" y="1141" width="0.0379%" height="15" fill="rgb(216,163,45)" fg:x="2620" fg:w="1"/><text x="99.4173%" y="1151.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append (1 samples, 0.04%)</title><rect x="99.1673%" y="1125" width="0.0379%" height="15" fill="rgb(211,157,3)" fg:x="2620" fg:w="1"/><text x="99.4173%" y="1135.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append (1 samples, 0.04%)</title><rect x="99.1673%" y="1109" width="0.0379%" height="15" fill="rgb(234,44,20)" fg:x="2620" fg:w="1"/><text x="99.4173%" y="1119.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (1 samples, 0.04%)</title><rect x="99.1673%" y="1093" width="0.0379%" height="15" fill="rgb(254,138,23)" fg:x="2620" fg:w="1"/><text x="99.4173%" y="1103.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (1 samples, 0.04%)</title><rect x="99.1673%" y="1077" width="0.0379%" height="15" fill="rgb(206,119,39)" fg:x="2620" fg:w="1"/><text x="99.4173%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.04%)</title><rect x="99.1673%" y="1061" width="0.0379%" height="15" fill="rgb(231,105,52)" fg:x="2620" fg:w="1"/><text x="99.4173%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="99.2051%" y="1109" width="0.0379%" height="15" fill="rgb(250,20,5)" fg:x="2621" fg:w="1"/><text x="99.4551%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="99.2051%" y="1093" width="0.0379%" height="15" fill="rgb(215,198,30)" fg:x="2621" fg:w="1"/><text x="99.4551%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="99.2051%" y="1077" width="0.0379%" height="15" fill="rgb(246,142,8)" fg:x="2621" fg:w="1"/><text x="99.4551%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="99.2051%" y="1061" width="0.0379%" height="15" fill="rgb(243,26,38)" fg:x="2621" fg:w="1"/><text x="99.4551%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="99.2051%" y="1045" width="0.0379%" height="15" fill="rgb(205,133,28)" fg:x="2621" fg:w="1"/><text x="99.4551%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="99.2051%" y="1029" width="0.0379%" height="15" fill="rgb(212,34,0)" fg:x="2621" fg:w="1"/><text x="99.4551%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="99.2051%" y="1013" width="0.0379%" height="15" fill="rgb(251,226,22)" fg:x="2621" fg:w="1"/><text x="99.4551%" y="1023.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="99.2051%" y="997" width="0.0379%" height="15" fill="rgb(252,119,9)" fg:x="2621" fg:w="1"/><text x="99.4551%" y="1007.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve (2 samples, 0.08%)</title><rect x="99.2051%" y="1141" width="0.0757%" height="15" fill="rgb(213,150,50)" fg:x="2621" fg:w="2"/><text x="99.4551%" y="1151.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve (2 samples, 0.08%)</title><rect x="99.2051%" y="1125" width="0.0757%" height="15" fill="rgb(212,24,39)" fg:x="2621" fg:w="2"/><text x="99.4551%" y="1135.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.04%)</title><rect x="99.2430%" y="1109" width="0.0379%" height="15" fill="rgb(213,46,39)" fg:x="2622" fg:w="1"/><text x="99.4930%" y="1119.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.04%)</title><rect x="99.2430%" y="1093" width="0.0379%" height="15" fill="rgb(239,106,12)" fg:x="2622" fg:w="1"/><text x="99.4930%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="99.2430%" y="1077" width="0.0379%" height="15" fill="rgb(249,229,21)" fg:x="2622" fg:w="1"/><text x="99.4930%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="99.2430%" y="1061" width="0.0379%" height="15" fill="rgb(212,158,3)" fg:x="2622" fg:w="1"/><text x="99.4930%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="99.2430%" y="1045" width="0.0379%" height="15" fill="rgb(253,26,48)" fg:x="2622" fg:w="1"/><text x="99.4930%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="99.2430%" y="1029" width="0.0379%" height="15" fill="rgb(238,178,20)" fg:x="2622" fg:w="1"/><text x="99.4930%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="99.2430%" y="1013" width="0.0379%" height="15" fill="rgb(208,86,15)" fg:x="2622" fg:w="1"/><text x="99.4930%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="99.2430%" y="997" width="0.0379%" height="15" fill="rgb(239,42,53)" fg:x="2622" fg:w="1"/><text x="99.4930%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="99.2430%" y="981" width="0.0379%" height="15" fill="rgb(245,226,8)" fg:x="2622" fg:w="1"/><text x="99.4930%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="99.2808%" y="1109" width="0.0379%" height="15" fill="rgb(216,176,32)" fg:x="2623" fg:w="1"/><text x="99.5308%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.2808%" y="1093" width="0.0379%" height="15" fill="rgb(231,186,21)" fg:x="2623" fg:w="1"/><text x="99.5308%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1 samples, 0.04%)</title><rect x="99.2808%" y="1077" width="0.0379%" height="15" fill="rgb(205,95,49)" fg:x="2623" fg:w="1"/><text x="99.5308%" y="1087.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (3 samples, 0.11%)</title><rect x="99.2808%" y="1141" width="0.1136%" height="15" fill="rgb(217,145,8)" fg:x="2623" fg:w="3"/><text x="99.5308%" y="1151.50"></text></g><g><title>http::header::name::parse_hdr (3 samples, 0.11%)</title><rect x="99.2808%" y="1125" width="0.1136%" height="15" fill="rgb(239,144,48)" fg:x="2623" fg:w="3"/><text x="99.5308%" y="1135.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (2 samples, 0.08%)</title><rect x="99.3187%" y="1109" width="0.0757%" height="15" fill="rgb(214,189,23)" fg:x="2624" fg:w="2"/><text x="99.5687%" y="1119.50"></text></g><g><title>http::method::Method::from_bytes (2 samples, 0.08%)</title><rect x="99.3944%" y="1141" width="0.0757%" height="15" fill="rgb(229,157,17)" fg:x="2626" fg:w="2"/><text x="99.6444%" y="1151.50"></text></g><g><title>http::uri::Uri::from_maybe_shared (3 samples, 0.11%)</title><rect x="99.4701%" y="1141" width="0.1136%" height="15" fill="rgb(230,5,48)" fg:x="2628" fg:w="3"/><text x="99.7201%" y="1151.50"></text></g><g><title>http::uri::Uri::from_shared (3 samples, 0.11%)</title><rect x="99.4701%" y="1125" width="0.1136%" height="15" fill="rgb(224,156,48)" fg:x="2628" fg:w="3"/><text x="99.7201%" y="1135.50"></text></g><g><title>http::uri::path::PathAndQuery::from_shared (2 samples, 0.08%)</title><rect x="99.5079%" y="1109" width="0.0757%" height="15" fill="rgb(223,14,29)" fg:x="2629" fg:w="2"/><text x="99.7579%" y="1119.50"></text></g><g><title>httparse::parse_headers_iter_uninit (2 samples, 0.08%)</title><rect x="99.6215%" y="1109" width="0.0757%" height="15" fill="rgb(229,96,36)" fg:x="2632" fg:w="2"/><text x="99.8715%" y="1119.50"></text></g><g><title>httparse::iter::Bytes::slice (1 samples, 0.04%)</title><rect x="99.6593%" y="1093" width="0.0379%" height="15" fill="rgb(231,102,53)" fg:x="2633" fg:w="1"/><text x="99.9093%" y="1103.50"></text></g><g><title>httparse::iter::Bytes::slice_skip (1 samples, 0.04%)</title><rect x="99.6593%" y="1077" width="0.0379%" height="15" fill="rgb(210,77,38)" fg:x="2633" fg:w="1"/><text x="99.9093%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="99.6593%" y="1061" width="0.0379%" height="15" fill="rgb(235,131,6)" fg:x="2633" fg:w="1"/><text x="99.9093%" y="1071.50"></text></g><g><title>httparse::iter::Bytes::slice_skip (1 samples, 0.04%)</title><rect x="99.6972%" y="1093" width="0.0379%" height="15" fill="rgb(252,55,38)" fg:x="2634" fg:w="1"/><text x="99.9472%" y="1103.50"></text></g><g><title>httparse::Request::parse_with_uninit_headers (5 samples, 0.19%)</title><rect x="99.5836%" y="1141" width="0.1893%" height="15" fill="rgb(246,38,14)" fg:x="2631" fg:w="5"/><text x="99.8336%" y="1151.50"></text></g><g><title>httparse::Request::parse_with_config_and_uninit_headers (5 samples, 0.19%)</title><rect x="99.5836%" y="1125" width="0.1893%" height="15" fill="rgb(242,27,5)" fg:x="2631" fg:w="5"/><text x="99.8336%" y="1135.50"></text></g><g><title>httparse::parse_uri (2 samples, 0.08%)</title><rect x="99.6972%" y="1109" width="0.0757%" height="15" fill="rgb(228,65,35)" fg:x="2634" fg:w="2"/><text x="99.9472%" y="1119.50"></text></g><g><title>httparse::simd::avx2_compile_time::match_uri_vectored (1 samples, 0.04%)</title><rect x="99.7350%" y="1093" width="0.0379%" height="15" fill="rgb(245,93,11)" fg:x="2635" fg:w="1"/><text x="99.9850%" y="1103.50"></text></g><g><title>httparse::simd::avx2::parse_uri_batch_32 (1 samples, 0.04%)</title><rect x="99.7350%" y="1077" width="0.0379%" height="15" fill="rgb(213,1,31)" fg:x="2635" fg:w="1"/><text x="99.9850%" y="1087.50"></text></g><g><title>&lt;&amp;mut T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (1 samples, 0.04%)</title><rect x="99.7350%" y="1061" width="0.0379%" height="15" fill="rgb(237,205,14)" fg:x="2635" fg:w="1"/><text x="99.9850%" y="1071.50"></text></g><g><title>&lt;httparse::iter::Bytes as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (1 samples, 0.04%)</title><rect x="99.7350%" y="1045" width="0.0379%" height="15" fill="rgb(232,118,45)" fg:x="2635" fg:w="1"/><text x="99.9850%" y="1055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="99.7350%" y="1029" width="0.0379%" height="15" fill="rgb(218,5,6)" fg:x="2635" fg:w="1"/><text x="99.9850%" y="1039.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="99.7350%" y="1013" width="0.0379%" height="15" fill="rgb(251,87,51)" fg:x="2635" fg:w="1"/><text x="99.9850%" y="1023.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (28 samples, 1.06%)</title><rect x="98.7509%" y="1237" width="1.0598%" height="15" fill="rgb(207,225,20)" fg:x="2609" fg:w="28"/><text x="99.0009%" y="1247.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (28 samples, 1.06%)</title><rect x="98.7509%" y="1221" width="1.0598%" height="15" fill="rgb(222,78,54)" fg:x="2609" fg:w="28"/><text x="99.0009%" y="1231.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (28 samples, 1.06%)</title><rect x="98.7509%" y="1205" width="1.0598%" height="15" fill="rgb(232,85,16)" fg:x="2609" fg:w="28"/><text x="99.0009%" y="1215.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (28 samples, 1.06%)</title><rect x="98.7509%" y="1189" width="1.0598%" height="15" fill="rgb(244,25,33)" fg:x="2609" fg:w="28"/><text x="99.0009%" y="1199.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (28 samples, 1.06%)</title><rect x="98.7509%" y="1173" width="1.0598%" height="15" fill="rgb(233,24,36)" fg:x="2609" fg:w="28"/><text x="99.0009%" y="1183.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (28 samples, 1.06%)</title><rect x="98.7509%" y="1157" width="1.0598%" height="15" fill="rgb(253,49,54)" fg:x="2609" fg:w="28"/><text x="99.0009%" y="1167.50"></text></g><g><title>hyper::proto::h1::role::record_header_indices (1 samples, 0.04%)</title><rect x="99.7729%" y="1141" width="0.0379%" height="15" fill="rgb(245,12,22)" fg:x="2636" fg:w="1"/><text x="100.0229%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="99.8107%" y="981" width="0.0757%" height="15" fill="rgb(253,141,28)" fg:x="2637" fg:w="2"/><text x="100.0607%" y="991.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (2 samples, 0.08%)</title><rect x="99.8107%" y="965" width="0.0757%" height="15" fill="rgb(225,207,27)" fg:x="2637" fg:w="2"/><text x="100.0607%" y="975.50"></text></g><g><title>&lt;poem::endpoint::endpoint::ToDynEndpoint&lt;E&gt; as poem::endpoint::endpoint::DynEndpoint&gt;::call (1 samples, 0.04%)</title><rect x="99.8864%" y="981" width="0.0379%" height="15" fill="rgb(220,84,2)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="991.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="99.8864%" y="965" width="0.0379%" height="15" fill="rgb(224,37,37)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="99.8864%" y="949" width="0.0379%" height="15" fill="rgb(220,143,18)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="99.8864%" y="933" width="0.0379%" height="15" fill="rgb(210,88,33)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="99.8864%" y="917" width="0.0379%" height="15" fill="rgb(219,87,51)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="99.8864%" y="901" width="0.0379%" height="15" fill="rgb(211,7,35)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="99.8864%" y="885" width="0.0379%" height="15" fill="rgb(232,77,2)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="99.8864%" y="869" width="0.0379%" height="15" fill="rgb(249,94,25)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="879.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="99.8864%" y="853" width="0.0379%" height="15" fill="rgb(215,112,2)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="863.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="99.8864%" y="837" width="0.0379%" height="15" fill="rgb(226,115,48)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="847.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="99.8864%" y="821" width="0.0379%" height="15" fill="rgb(249,196,10)" fg:x="2639" fg:w="1"/><text x="100.1364%" y="831.50"></text></g><g><title>all (2,642 samples, 100%)</title><rect x="0.0000%" y="1653" width="100.0000%" height="15" fill="rgb(237,109,14)" fg:x="0" fg:w="2642"/><text x="0.2500%" y="1663.50"></text></g><g><title>tokio-runtime-w (2,563 samples, 97.01%)</title><rect x="2.9902%" y="1637" width="97.0098%" height="15" fill="rgb(217,103,53)" fg:x="79" fg:w="2563"/><text x="3.2402%" y="1647.50">tokio-runtime-w</text></g><g><title>tokio::runtime::task::raw::poll (36 samples, 1.36%)</title><rect x="98.6374%" y="1621" width="1.3626%" height="15" fill="rgb(244,137,9)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1631.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (36 samples, 1.36%)</title><rect x="98.6374%" y="1605" width="1.3626%" height="15" fill="rgb(227,201,3)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1615.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (36 samples, 1.36%)</title><rect x="98.6374%" y="1589" width="1.3626%" height="15" fill="rgb(243,94,6)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1599.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (36 samples, 1.36%)</title><rect x="98.6374%" y="1573" width="1.3626%" height="15" fill="rgb(235,118,5)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1583.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 1.36%)</title><rect x="98.6374%" y="1557" width="1.3626%" height="15" fill="rgb(247,10,30)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1567.50"></text></g><g><title>std::panicking::try (36 samples, 1.36%)</title><rect x="98.6374%" y="1541" width="1.3626%" height="15" fill="rgb(205,26,28)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1551.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 1.36%)</title><rect x="98.6374%" y="1525" width="1.3626%" height="15" fill="rgb(206,99,35)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1535.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 1.36%)</title><rect x="98.6374%" y="1509" width="1.3626%" height="15" fill="rgb(238,130,40)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1519.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (36 samples, 1.36%)</title><rect x="98.6374%" y="1493" width="1.3626%" height="15" fill="rgb(224,126,31)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1503.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (36 samples, 1.36%)</title><rect x="98.6374%" y="1477" width="1.3626%" height="15" fill="rgb(254,105,17)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1487.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (36 samples, 1.36%)</title><rect x="98.6374%" y="1461" width="1.3626%" height="15" fill="rgb(216,87,36)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1471.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (36 samples, 1.36%)</title><rect x="98.6374%" y="1445" width="1.3626%" height="15" fill="rgb(240,21,12)" fg:x="2606" fg:w="36"/><text x="98.8874%" y="1455.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}}::_{{closure}} (33 samples, 1.25%)</title><rect x="98.7509%" y="1429" width="1.2491%" height="15" fill="rgb(245,192,34)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1439.50"></text></g><g><title>poem::server::serve_connection::_{{closure}} (33 samples, 1.25%)</title><rect x="98.7509%" y="1413" width="1.2491%" height="15" fill="rgb(226,100,49)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1423.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (33 samples, 1.25%)</title><rect x="98.7509%" y="1397" width="1.2491%" height="15" fill="rgb(245,188,27)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1407.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}} (33 samples, 1.25%)</title><rect x="98.7509%" y="1381" width="1.2491%" height="15" fill="rgb(212,170,8)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1391.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (33 samples, 1.25%)</title><rect x="98.7509%" y="1365" width="1.2491%" height="15" fill="rgb(217,113,29)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (33 samples, 1.25%)</title><rect x="98.7509%" y="1349" width="1.2491%" height="15" fill="rgb(237,30,3)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1359.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (33 samples, 1.25%)</title><rect x="98.7509%" y="1333" width="1.2491%" height="15" fill="rgb(227,19,28)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1343.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (33 samples, 1.25%)</title><rect x="98.7509%" y="1317" width="1.2491%" height="15" fill="rgb(239,172,45)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1327.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (33 samples, 1.25%)</title><rect x="98.7509%" y="1301" width="1.2491%" height="15" fill="rgb(254,55,39)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1311.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (33 samples, 1.25%)</title><rect x="98.7509%" y="1285" width="1.2491%" height="15" fill="rgb(249,208,12)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1295.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (33 samples, 1.25%)</title><rect x="98.7509%" y="1269" width="1.2491%" height="15" fill="rgb(240,52,13)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1279.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (33 samples, 1.25%)</title><rect x="98.7509%" y="1253" width="1.2491%" height="15" fill="rgb(252,149,13)" fg:x="2609" fg:w="33"/><text x="99.0009%" y="1263.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (5 samples, 0.19%)</title><rect x="99.8107%" y="1237" width="0.1893%" height="15" fill="rgb(232,81,48)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1247.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (5 samples, 0.19%)</title><rect x="99.8107%" y="1221" width="0.1893%" height="15" fill="rgb(222,144,2)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1231.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1205" width="0.1893%" height="15" fill="rgb(216,81,32)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1215.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1189" width="0.1893%" height="15" fill="rgb(244,78,51)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1173" width="0.1893%" height="15" fill="rgb(217,66,21)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1183.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1157" width="0.1893%" height="15" fill="rgb(247,101,42)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="99.8107%" y="1141" width="0.1893%" height="15" fill="rgb(227,81,39)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1151.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1125" width="0.1893%" height="15" fill="rgb(220,223,44)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1135.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1109" width="0.1893%" height="15" fill="rgb(205,218,2)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1093" width="0.1893%" height="15" fill="rgb(212,207,28)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1103.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1077" width="0.1893%" height="15" fill="rgb(224,12,41)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="99.8107%" y="1061" width="0.1893%" height="15" fill="rgb(216,118,12)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1071.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1045" width="0.1893%" height="15" fill="rgb(252,97,46)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1029" width="0.1893%" height="15" fill="rgb(244,206,19)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="1013" width="0.1893%" height="15" fill="rgb(231,84,31)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1023.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="99.8107%" y="997" width="0.1893%" height="15" fill="rgb(244,133,0)" fg:x="2637" fg:w="5"/><text x="100.0607%" y="1007.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="99.9243%" y="981" width="0.0757%" height="15" fill="rgb(223,15,50)" fg:x="2640" fg:w="2"/><text x="100.1743%" y="991.50"></text></g></svg></svg>