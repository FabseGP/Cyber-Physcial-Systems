<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1702" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1685.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1685.00"> </text><svg id="frames" x="10" width="1180" total_samples="2679"><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.07%)</title><rect x="0.0000%" y="1589" width="0.0747%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1599.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.07%)</title><rect x="0.0000%" y="1573" width="0.0747%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1583.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0373%" y="1557" width="0.0373%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1567.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.04%)</title><rect x="0.0373%" y="1541" width="0.0373%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1551.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0373%" y="1525" width="0.0373%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1535.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0373%" y="1509" width="0.0373%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1519.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0373%" y="1493" width="0.0373%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1503.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.0373%" y="1477" width="0.0373%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.0373%" y="1461" width="0.0373%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.0373%" y="1445" width="0.0373%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.0373%" y="1429" width="0.0373%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.0373%" y="1413" width="0.0373%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.0373%" y="1397" width="0.0373%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.0373%" y="1381" width="0.0373%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.2873%" y="1391.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.19%)</title><rect x="0.0000%" y="1605" width="0.1866%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1615.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="0.0747%" y="1589" width="0.1120%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="3"/><text x="0.3247%" y="1599.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="0.1120%" y="1573" width="0.0747%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="2"/><text x="0.3620%" y="1583.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="0.1120%" y="1557" width="0.0747%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="2"/><text x="0.3620%" y="1567.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="0.1120%" y="1541" width="0.0747%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="2"/><text x="0.3620%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.1493%" y="1525" width="0.0373%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="1"/><text x="0.3993%" y="1535.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.26%)</title><rect x="0.0000%" y="1621" width="0.2613%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="7"/><text x="0.2500%" y="1631.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="0.1866%" y="1605" width="0.0747%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="2"/><text x="0.4366%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.2240%" y="1589" width="0.0373%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.4740%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.2240%" y="1573" width="0.0373%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.4740%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.2240%" y="1557" width="0.0373%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.4740%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.2240%" y="1541" width="0.0373%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.4740%" y="1551.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="0.3359%" y="1573" width="0.0747%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="2"/><text x="0.5859%" y="1583.50"></text></g><g><title>__tunable_get_val (1 samples, 0.04%)</title><rect x="0.3733%" y="1557" width="0.0373%" height="15" fill="rgb(238,160,17)" fg:x="10" fg:w="1"/><text x="0.6233%" y="1567.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="1.4184%" y="1509" width="0.0373%" height="15" fill="rgb(214,148,48)" fg:x="38" fg:w="1"/><text x="1.6684%" y="1519.50"></text></g><g><title>[libc.so.6] (31 samples, 1.16%)</title><rect x="0.3359%" y="1589" width="1.1571%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="31"/><text x="0.5859%" y="1599.50"></text></g><g><title>snprintf (29 samples, 1.08%)</title><rect x="0.4106%" y="1573" width="1.0825%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="29"/><text x="0.6606%" y="1583.50"></text></g><g><title>[libc.so.6] (26 samples, 0.97%)</title><rect x="0.5226%" y="1557" width="0.9705%" height="15" fill="rgb(229,88,8)" fg:x="14" fg:w="26"/><text x="0.7726%" y="1567.50"></text></g><g><title>[libc.so.6] (25 samples, 0.93%)</title><rect x="0.5599%" y="1541" width="0.9332%" height="15" fill="rgb(213,181,19)" fg:x="15" fg:w="25"/><text x="0.8099%" y="1551.50"></text></g><g><title>[libc.so.6] (18 samples, 0.67%)</title><rect x="0.8212%" y="1525" width="0.6719%" height="15" fill="rgb(254,191,54)" fg:x="22" fg:w="18"/><text x="1.0712%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="1.4558%" y="1509" width="0.0373%" height="15" fill="rgb(241,83,37)" fg:x="39" fg:w="1"/><text x="1.7058%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="1.4558%" y="1493" width="0.0373%" height="15" fill="rgb(233,36,39)" fg:x="39" fg:w="1"/><text x="1.7058%" y="1503.50"></text></g><g><title>[unknown] (14 samples, 0.52%)</title><rect x="1.4931%" y="1589" width="0.5226%" height="15" fill="rgb(226,3,54)" fg:x="40" fg:w="14"/><text x="1.7431%" y="1599.50"></text></g><g><title>[unknown] (14 samples, 0.52%)</title><rect x="1.4931%" y="1573" width="0.5226%" height="15" fill="rgb(245,192,40)" fg:x="40" fg:w="14"/><text x="1.7431%" y="1583.50"></text></g><g><title>[unknown] (9 samples, 0.34%)</title><rect x="1.6797%" y="1557" width="0.3359%" height="15" fill="rgb(238,167,29)" fg:x="45" fg:w="9"/><text x="1.9297%" y="1567.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="1.9037%" y="1541" width="0.1120%" height="15" fill="rgb(232,182,51)" fg:x="51" fg:w="3"/><text x="2.1537%" y="1551.50"></text></g><g><title>sigaltstack (3 samples, 0.11%)</title><rect x="2.0157%" y="1541" width="0.1120%" height="15" fill="rgb(231,60,39)" fg:x="54" fg:w="3"/><text x="2.2657%" y="1551.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="2.0530%" y="1525" width="0.0747%" height="15" fill="rgb(208,69,12)" fg:x="55" fg:w="2"/><text x="2.3030%" y="1535.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="2.0530%" y="1509" width="0.0747%" height="15" fill="rgb(235,93,37)" fg:x="55" fg:w="2"/><text x="2.3030%" y="1519.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="2.0530%" y="1493" width="0.0747%" height="15" fill="rgb(213,116,39)" fg:x="55" fg:w="2"/><text x="2.3030%" y="1503.50"></text></g><g><title>__mmap (4 samples, 0.15%)</title><rect x="2.2770%" y="1445" width="0.1493%" height="15" fill="rgb(222,207,29)" fg:x="61" fg:w="4"/><text x="2.5270%" y="1455.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="2.2770%" y="1429" width="0.1493%" height="15" fill="rgb(206,96,30)" fg:x="61" fg:w="4"/><text x="2.5270%" y="1439.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="2.2770%" y="1413" width="0.1493%" height="15" fill="rgb(218,138,4)" fg:x="61" fg:w="4"/><text x="2.5270%" y="1423.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="2.2770%" y="1397" width="0.1493%" height="15" fill="rgb(250,191,14)" fg:x="61" fg:w="4"/><text x="2.5270%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.3890%" y="1381" width="0.0373%" height="15" fill="rgb(239,60,40)" fg:x="64" fg:w="1"/><text x="2.6390%" y="1391.50"></text></g><g><title>[libc.so.6] (59 samples, 2.20%)</title><rect x="0.2613%" y="1621" width="2.2023%" height="15" fill="rgb(206,27,48)" fg:x="7" fg:w="59"/><text x="0.5113%" y="1631.50">[..</text></g><g><title>[libc.so.6] (59 samples, 2.20%)</title><rect x="0.2613%" y="1605" width="2.2023%" height="15" fill="rgb(225,35,8)" fg:x="7" fg:w="59"/><text x="0.5113%" y="1615.50">[..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (12 samples, 0.45%)</title><rect x="2.0157%" y="1589" width="0.4479%" height="15" fill="rgb(250,213,24)" fg:x="54" fg:w="12"/><text x="2.2657%" y="1599.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (12 samples, 0.45%)</title><rect x="2.0157%" y="1573" width="0.4479%" height="15" fill="rgb(247,123,22)" fg:x="54" fg:w="12"/><text x="2.2657%" y="1583.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (12 samples, 0.45%)</title><rect x="2.0157%" y="1557" width="0.4479%" height="15" fill="rgb(231,138,38)" fg:x="54" fg:w="12"/><text x="2.2657%" y="1567.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (9 samples, 0.34%)</title><rect x="2.1277%" y="1541" width="0.3359%" height="15" fill="rgb(231,145,46)" fg:x="57" fg:w="9"/><text x="2.3777%" y="1551.50"></text></g><g><title>pthread_getattr_np (9 samples, 0.34%)</title><rect x="2.1277%" y="1525" width="0.3359%" height="15" fill="rgb(251,118,11)" fg:x="57" fg:w="9"/><text x="2.3777%" y="1535.50"></text></g><g><title>malloc (9 samples, 0.34%)</title><rect x="2.1277%" y="1509" width="0.3359%" height="15" fill="rgb(217,147,25)" fg:x="57" fg:w="9"/><text x="2.3777%" y="1519.50"></text></g><g><title>[libc.so.6] (8 samples, 0.30%)</title><rect x="2.1650%" y="1493" width="0.2986%" height="15" fill="rgb(247,81,37)" fg:x="58" fg:w="8"/><text x="2.4150%" y="1503.50"></text></g><g><title>[libc.so.6] (8 samples, 0.30%)</title><rect x="2.1650%" y="1477" width="0.2986%" height="15" fill="rgb(209,12,38)" fg:x="58" fg:w="8"/><text x="2.4150%" y="1487.50"></text></g><g><title>[libc.so.6] (5 samples, 0.19%)</title><rect x="2.2770%" y="1461" width="0.1866%" height="15" fill="rgb(227,1,9)" fg:x="61" fg:w="5"/><text x="2.5270%" y="1471.50"></text></g><g><title>__mprotect (1 samples, 0.04%)</title><rect x="2.4263%" y="1445" width="0.0373%" height="15" fill="rgb(248,47,43)" fg:x="65" fg:w="1"/><text x="2.6763%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.4263%" y="1429" width="0.0373%" height="15" fill="rgb(221,10,30)" fg:x="65" fg:w="1"/><text x="2.6763%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="2.4263%" y="1413" width="0.0373%" height="15" fill="rgb(210,229,1)" fg:x="65" fg:w="1"/><text x="2.6763%" y="1423.50"></text></g><g><title>[unknown] (13 samples, 0.49%)</title><rect x="2.4636%" y="1621" width="0.4853%" height="15" fill="rgb(222,148,37)" fg:x="66" fg:w="13"/><text x="2.7136%" y="1631.50"></text></g><g><title>[unknown] (5 samples, 0.19%)</title><rect x="2.7622%" y="1605" width="0.1866%" height="15" fill="rgb(234,67,33)" fg:x="74" fg:w="5"/><text x="3.0122%" y="1615.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="2.8742%" y="1589" width="0.0747%" height="15" fill="rgb(247,98,35)" fg:x="77" fg:w="2"/><text x="3.1242%" y="1599.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.04%)</title><rect x="2.9489%" y="1221" width="0.0373%" height="15" fill="rgb(247,138,52)" fg:x="79" fg:w="1"/><text x="3.1989%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="2.9489%" y="1205" width="0.0373%" height="15" fill="rgb(213,79,30)" fg:x="79" fg:w="1"/><text x="3.1989%" y="1215.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.04%)</title><rect x="2.9489%" y="1189" width="0.0373%" height="15" fill="rgb(246,177,23)" fg:x="79" fg:w="1"/><text x="3.1989%" y="1199.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="2.9489%" y="1173" width="0.0373%" height="15" fill="rgb(230,62,27)" fg:x="79" fg:w="1"/><text x="3.1989%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::listener::Acceptor&gt;::accept::_{{closure}} (1 samples, 0.04%)</title><rect x="3.0235%" y="1125" width="0.0373%" height="15" fill="rgb(216,154,8)" fg:x="81" fg:w="1"/><text x="3.2735%" y="1135.50"></text></g><g><title>&lt;dyn poem::listener::DynAcceptor as poem::listener::Acceptor&gt;::accept::_{{closure}} (1 samples, 0.04%)</title><rect x="3.0235%" y="1109" width="0.0373%" height="15" fill="rgb(244,35,45)" fg:x="81" fg:w="1"/><text x="3.2735%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="3.0235%" y="1093" width="0.0373%" height="15" fill="rgb(251,115,12)" fg:x="81" fg:w="1"/><text x="3.2735%" y="1103.50"></text></g><g><title>&lt;poem::listener::ToDynAcceptor&lt;A&gt; as poem::listener::DynAcceptor&gt;::accept::_{{closure}} (1 samples, 0.04%)</title><rect x="3.0235%" y="1077" width="0.0373%" height="15" fill="rgb(240,54,50)" fg:x="81" fg:w="1"/><text x="3.2735%" y="1087.50"></text></g><g><title>poem::listener::BoxIo::new (1 samples, 0.04%)</title><rect x="3.0235%" y="1061" width="0.0373%" height="15" fill="rgb(233,84,52)" fg:x="81" fg:w="1"/><text x="3.2735%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="3.0235%" y="1045" width="0.0373%" height="15" fill="rgb(207,117,47)" fg:x="81" fg:w="1"/><text x="3.2735%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="3.0235%" y="1029" width="0.0373%" height="15" fill="rgb(249,43,39)" fg:x="81" fg:w="1"/><text x="3.2735%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="3.0235%" y="1013" width="0.0373%" height="15" fill="rgb(209,38,44)" fg:x="81" fg:w="1"/><text x="3.2735%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="3.0235%" y="997" width="0.0373%" height="15" fill="rgb(236,212,23)" fg:x="81" fg:w="1"/><text x="3.2735%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="3.0235%" y="981" width="0.0373%" height="15" fill="rgb(242,79,21)" fg:x="81" fg:w="1"/><text x="3.2735%" y="991.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="3.0235%" y="965" width="0.0373%" height="15" fill="rgb(211,96,35)" fg:x="81" fg:w="1"/><text x="3.2735%" y="975.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="3.0235%" y="949" width="0.0373%" height="15" fill="rgb(253,215,40)" fg:x="81" fg:w="1"/><text x="3.2735%" y="959.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="3.0235%" y="933" width="0.0373%" height="15" fill="rgb(211,81,21)" fg:x="81" fg:w="1"/><text x="3.2735%" y="943.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run::_{{closure}} (2 samples, 0.07%)</title><rect x="3.0235%" y="1189" width="0.0747%" height="15" fill="rgb(208,190,38)" fg:x="81" fg:w="2"/><text x="3.2735%" y="1199.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}} (2 samples, 0.07%)</title><rect x="3.0235%" y="1173" width="0.0747%" height="15" fill="rgb(235,213,38)" fg:x="81" fg:w="2"/><text x="3.2735%" y="1183.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.0235%" y="1157" width="0.0747%" height="15" fill="rgb(237,122,38)" fg:x="81" fg:w="2"/><text x="3.2735%" y="1167.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}}::_{{closure}} (2 samples, 0.07%)</title><rect x="3.0235%" y="1141" width="0.0747%" height="15" fill="rgb(244,218,35)" fg:x="81" fg:w="2"/><text x="3.2735%" y="1151.50"></text></g><g><title>tokio::macros::support::thread_rng_n (1 samples, 0.04%)</title><rect x="3.0608%" y="1125" width="0.0373%" height="15" fill="rgb(240,68,47)" fg:x="82" fg:w="1"/><text x="3.3108%" y="1135.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (1 samples, 0.04%)</title><rect x="3.0608%" y="1109" width="0.0373%" height="15" fill="rgb(210,16,53)" fg:x="82" fg:w="1"/><text x="3.3108%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="3.0608%" y="1093" width="0.0373%" height="15" fill="rgb(235,124,12)" fg:x="82" fg:w="1"/><text x="3.3108%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="3.0608%" y="1077" width="0.0373%" height="15" fill="rgb(224,169,11)" fg:x="82" fg:w="1"/><text x="3.3108%" y="1087.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (1 samples, 0.04%)</title><rect x="3.0608%" y="1061" width="0.0373%" height="15" fill="rgb(250,166,2)" fg:x="82" fg:w="1"/><text x="3.3108%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.04%)</title><rect x="3.0608%" y="1045" width="0.0373%" height="15" fill="rgb(242,216,29)" fg:x="82" fg:w="1"/><text x="3.3108%" y="1055.50"></text></g><g><title>tokio::runtime::coop::budget (5 samples, 0.19%)</title><rect x="2.9489%" y="1253" width="0.1866%" height="15" fill="rgb(230,116,27)" fg:x="79" fg:w="5"/><text x="3.1989%" y="1263.50"></text></g><g><title>tokio::runtime::coop::with_budget (5 samples, 0.19%)</title><rect x="2.9489%" y="1237" width="0.1866%" height="15" fill="rgb(228,99,48)" fg:x="79" fg:w="5"/><text x="3.1989%" y="1247.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (4 samples, 0.15%)</title><rect x="2.9862%" y="1221" width="0.1493%" height="15" fill="rgb(253,11,6)" fg:x="80" fg:w="4"/><text x="3.2362%" y="1231.50"></text></g><g><title>fabseapi::main::_{{closure}} (4 samples, 0.15%)</title><rect x="2.9862%" y="1205" width="0.1493%" height="15" fill="rgb(247,143,39)" fg:x="80" fg:w="4"/><text x="3.2362%" y="1215.50"></text></g><g><title>poem_openapi::openapi::OpenApiService&lt;T,W&gt;::swagger_ui (1 samples, 0.04%)</title><rect x="3.0982%" y="1189" width="0.0373%" height="15" fill="rgb(236,97,10)" fg:x="83" fg:w="1"/><text x="3.3482%" y="1199.50"></text></g><g><title>poem_openapi::ui::swagger_ui::create_endpoint (1 samples, 0.04%)</title><rect x="3.0982%" y="1173" width="0.0373%" height="15" fill="rgb(233,208,19)" fg:x="83" fg:w="1"/><text x="3.3482%" y="1183.50"></text></g><g><title>poem_openapi::ui::swagger_ui::create_html (1 samples, 0.04%)</title><rect x="3.0982%" y="1157" width="0.0373%" height="15" fill="rgb(216,164,2)" fg:x="83" fg:w="1"/><text x="3.3482%" y="1167.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (1 samples, 0.04%)</title><rect x="3.0982%" y="1141" width="0.0373%" height="15" fill="rgb(220,129,5)" fg:x="83" fg:w="1"/><text x="3.3482%" y="1151.50"></text></g><g><title>&lt;core::str::iter::MatchIndices&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="3.0982%" y="1125" width="0.0373%" height="15" fill="rgb(242,17,10)" fg:x="83" fg:w="1"/><text x="3.3482%" y="1135.50"></text></g><g><title>core::str::iter::MatchIndicesInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="3.0982%" y="1109" width="0.0373%" height="15" fill="rgb(242,107,0)" fg:x="83" fg:w="1"/><text x="3.3482%" y="1119.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="3.0982%" y="1093" width="0.0373%" height="15" fill="rgb(251,28,31)" fg:x="83" fg:w="1"/><text x="3.3482%" y="1103.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="3.0982%" y="1077" width="0.0373%" height="15" fill="rgb(233,223,10)" fg:x="83" fg:w="1"/><text x="3.3482%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.04%)</title><rect x="3.1355%" y="1157" width="0.0373%" height="15" fill="rgb(215,21,27)" fg:x="84" fg:w="1"/><text x="3.3855%" y="1167.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="3.1355%" y="1141" width="0.0373%" height="15" fill="rgb(232,23,21)" fg:x="84" fg:w="1"/><text x="3.3855%" y="1151.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.04%)</title><rect x="3.1355%" y="1125" width="0.0373%" height="15" fill="rgb(244,5,23)" fg:x="84" fg:w="1"/><text x="3.3855%" y="1135.50"></text></g><g><title>std::thread::panicking (1 samples, 0.04%)</title><rect x="3.1355%" y="1109" width="0.0373%" height="15" fill="rgb(226,81,46)" fg:x="84" fg:w="1"/><text x="3.3855%" y="1119.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.04%)</title><rect x="3.1355%" y="1093" width="0.0373%" height="15" fill="rgb(247,70,30)" fg:x="84" fg:w="1"/><text x="3.3855%" y="1103.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="3.1355%" y="1077" width="0.0373%" height="15" fill="rgb(212,68,19)" fg:x="84" fg:w="1"/><text x="3.3855%" y="1087.50"></text></g><g><title>_start (7 samples, 0.26%)</title><rect x="2.9489%" y="1621" width="0.2613%" height="15" fill="rgb(240,187,13)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1631.50"></text></g><g><title>__libc_start_main (7 samples, 0.26%)</title><rect x="2.9489%" y="1605" width="0.2613%" height="15" fill="rgb(223,113,26)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1615.50"></text></g><g><title>[libc.so.6] (7 samples, 0.26%)</title><rect x="2.9489%" y="1589" width="0.2613%" height="15" fill="rgb(206,192,2)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1599.50"></text></g><g><title>main (7 samples, 0.26%)</title><rect x="2.9489%" y="1573" width="0.2613%" height="15" fill="rgb(241,108,4)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1583.50"></text></g><g><title>std::rt::lang_start_internal (7 samples, 0.26%)</title><rect x="2.9489%" y="1557" width="0.2613%" height="15" fill="rgb(247,173,49)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.26%)</title><rect x="2.9489%" y="1541" width="0.2613%" height="15" fill="rgb(224,114,35)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1551.50"></text></g><g><title>std::panicking::try (7 samples, 0.26%)</title><rect x="2.9489%" y="1525" width="0.2613%" height="15" fill="rgb(245,159,27)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.26%)</title><rect x="2.9489%" y="1509" width="0.2613%" height="15" fill="rgb(245,172,44)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1519.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (7 samples, 0.26%)</title><rect x="2.9489%" y="1493" width="0.2613%" height="15" fill="rgb(236,23,11)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.26%)</title><rect x="2.9489%" y="1477" width="0.2613%" height="15" fill="rgb(205,117,38)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1487.50"></text></g><g><title>std::panicking::try (7 samples, 0.26%)</title><rect x="2.9489%" y="1461" width="0.2613%" height="15" fill="rgb(237,72,25)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.26%)</title><rect x="2.9489%" y="1445" width="0.2613%" height="15" fill="rgb(244,70,9)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1455.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7 samples, 0.26%)</title><rect x="2.9489%" y="1429" width="0.2613%" height="15" fill="rgb(217,125,39)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1439.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (7 samples, 0.26%)</title><rect x="2.9489%" y="1413" width="0.2613%" height="15" fill="rgb(235,36,10)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1423.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.26%)</title><rect x="2.9489%" y="1397" width="0.2613%" height="15" fill="rgb(251,123,47)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.26%)</title><rect x="2.9489%" y="1381" width="0.2613%" height="15" fill="rgb(221,13,13)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1391.50"></text></g><g><title>fabseapi::main (7 samples, 0.26%)</title><rect x="2.9489%" y="1365" width="0.2613%" height="15" fill="rgb(238,131,9)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1375.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (7 samples, 0.26%)</title><rect x="2.9489%" y="1349" width="0.2613%" height="15" fill="rgb(211,50,8)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (7 samples, 0.26%)</title><rect x="2.9489%" y="1333" width="0.2613%" height="15" fill="rgb(245,182,24)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1343.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (7 samples, 0.26%)</title><rect x="2.9489%" y="1317" width="0.2613%" height="15" fill="rgb(242,14,37)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (7 samples, 0.26%)</title><rect x="2.9489%" y="1301" width="0.2613%" height="15" fill="rgb(246,228,12)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1311.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (7 samples, 0.26%)</title><rect x="2.9489%" y="1285" width="0.2613%" height="15" fill="rgb(213,55,15)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1295.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (7 samples, 0.26%)</title><rect x="2.9489%" y="1269" width="0.2613%" height="15" fill="rgb(209,9,3)" fg:x="79" fg:w="7"/><text x="3.1989%" y="1279.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park (2 samples, 0.07%)</title><rect x="3.1355%" y="1253" width="0.0747%" height="15" fill="rgb(230,59,30)" fg:x="84" fg:w="2"/><text x="3.3855%" y="1263.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current (2 samples, 0.07%)</title><rect x="3.1355%" y="1237" width="0.0747%" height="15" fill="rgb(209,121,21)" fg:x="84" fg:w="2"/><text x="3.3855%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.07%)</title><rect x="3.1355%" y="1221" width="0.0747%" height="15" fill="rgb(220,109,13)" fg:x="84" fg:w="2"/><text x="3.3855%" y="1231.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current::_{{closure}} (2 samples, 0.07%)</title><rect x="3.1355%" y="1205" width="0.0747%" height="15" fill="rgb(232,18,1)" fg:x="84" fg:w="2"/><text x="3.3855%" y="1215.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park::_{{closure}} (2 samples, 0.07%)</title><rect x="3.1355%" y="1189" width="0.0747%" height="15" fill="rgb(215,41,42)" fg:x="84" fg:w="2"/><text x="3.3855%" y="1199.50"></text></g><g><title>tokio::runtime::park::Inner::park (2 samples, 0.07%)</title><rect x="3.1355%" y="1173" width="0.0747%" height="15" fill="rgb(224,123,36)" fg:x="84" fg:w="2"/><text x="3.3855%" y="1183.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.04%)</title><rect x="3.1728%" y="1157" width="0.0373%" height="15" fill="rgb(240,125,3)" fg:x="85" fg:w="1"/><text x="3.4228%" y="1167.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.04%)</title><rect x="3.1728%" y="1141" width="0.0373%" height="15" fill="rgb(205,98,50)" fg:x="85" fg:w="1"/><text x="3.4228%" y="1151.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (1 samples, 0.04%)</title><rect x="3.1728%" y="1125" width="0.0373%" height="15" fill="rgb(205,185,37)" fg:x="85" fg:w="1"/><text x="3.4228%" y="1135.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.04%)</title><rect x="3.1728%" y="1109" width="0.0373%" height="15" fill="rgb(238,207,15)" fg:x="85" fg:w="1"/><text x="3.4228%" y="1119.50"></text></g><g><title>fabseapi (87 samples, 3.25%)</title><rect x="0.0000%" y="1637" width="3.2475%" height="15" fill="rgb(213,199,42)" fg:x="0" fg:w="87"/><text x="0.2500%" y="1647.50">fab..</text></g><g><title>fabseapi::main (1 samples, 0.04%)</title><rect x="3.2102%" y="1621" width="0.0373%" height="15" fill="rgb(235,201,11)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1631.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (1 samples, 0.04%)</title><rect x="3.2102%" y="1605" width="0.0373%" height="15" fill="rgb(207,46,11)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (1 samples, 0.04%)</title><rect x="3.2102%" y="1589" width="0.0373%" height="15" fill="rgb(241,35,35)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1599.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1 samples, 0.04%)</title><rect x="3.2102%" y="1573" width="0.0373%" height="15" fill="rgb(243,32,47)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (1 samples, 0.04%)</title><rect x="3.2102%" y="1557" width="0.0373%" height="15" fill="rgb(247,202,23)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1567.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (1 samples, 0.04%)</title><rect x="3.2102%" y="1541" width="0.0373%" height="15" fill="rgb(219,102,11)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1551.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1 samples, 0.04%)</title><rect x="3.2102%" y="1525" width="0.0373%" height="15" fill="rgb(243,110,44)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1535.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.04%)</title><rect x="3.2102%" y="1509" width="0.0373%" height="15" fill="rgb(222,74,54)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1519.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.04%)</title><rect x="3.2102%" y="1493" width="0.0373%" height="15" fill="rgb(216,99,12)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1503.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (1 samples, 0.04%)</title><rect x="3.2102%" y="1477" width="0.0373%" height="15" fill="rgb(226,22,26)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1487.50"></text></g><g><title>fabseapi::main::_{{closure}} (1 samples, 0.04%)</title><rect x="3.2102%" y="1461" width="0.0373%" height="15" fill="rgb(217,163,10)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1471.50"></text></g><g><title>poem_openapi::openapi::OpenApiService&lt;T,W&gt;::swagger_ui (1 samples, 0.04%)</title><rect x="3.2102%" y="1445" width="0.0373%" height="15" fill="rgb(213,25,53)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1455.50"></text></g><g><title>poem_openapi::openapi::OpenApiService&lt;T,W&gt;::spec (1 samples, 0.04%)</title><rect x="3.2102%" y="1429" width="0.0373%" height="15" fill="rgb(252,105,26)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1439.50"></text></g><g><title>serde_json::ser::to_string_pretty (1 samples, 0.04%)</title><rect x="3.2102%" y="1413" width="0.0373%" height="15" fill="rgb(220,39,43)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1423.50"></text></g><g><title>serde_json::ser::to_vec_pretty (1 samples, 0.04%)</title><rect x="3.2102%" y="1397" width="0.0373%" height="15" fill="rgb(229,68,48)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1407.50"></text></g><g><title>serde_json::ser::to_writer_pretty (1 samples, 0.04%)</title><rect x="3.2102%" y="1381" width="0.0373%" height="15" fill="rgb(252,8,32)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1391.50"></text></g><g><title>&lt;poem_openapi::registry::ser::Document as serde::ser::Serialize&gt;::serialize (1 samples, 0.04%)</title><rect x="3.2102%" y="1365" width="0.0373%" height="15" fill="rgb(223,20,43)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1375.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.04%)</title><rect x="3.2102%" y="1349" width="0.0373%" height="15" fill="rgb(229,81,49)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1359.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.04%)</title><rect x="3.2102%" y="1333" width="0.0373%" height="15" fill="rgb(236,28,36)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1343.50"></text></g><g><title>&lt;poem_openapi::registry::ser::PathMap as serde::ser::Serialize&gt;::serialize (1 samples, 0.04%)</title><rect x="3.2102%" y="1317" width="0.0373%" height="15" fill="rgb(249,185,26)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1327.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.04%)</title><rect x="3.2102%" y="1301" width="0.0373%" height="15" fill="rgb(249,174,33)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1311.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.04%)</title><rect x="3.2102%" y="1285" width="0.0373%" height="15" fill="rgb(233,201,37)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1295.50"></text></g><g><title>poem_openapi::registry::ser::&lt;impl serde::ser::Serialize for poem_openapi::registry::MetaPath&gt;::serialize (1 samples, 0.04%)</title><rect x="3.2102%" y="1269" width="0.0373%" height="15" fill="rgb(221,78,26)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1279.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.04%)</title><rect x="3.2102%" y="1253" width="0.0373%" height="15" fill="rgb(250,127,30)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1263.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.04%)</title><rect x="3.2102%" y="1237" width="0.0373%" height="15" fill="rgb(230,49,44)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1247.50"></text></g><g><title>poem_openapi::registry::_::&lt;impl serde::ser::Serialize for poem_openapi::registry::MetaOperation&gt;::serialize (1 samples, 0.04%)</title><rect x="3.2102%" y="1221" width="0.0373%" height="15" fill="rgb(229,67,23)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1231.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.04%)</title><rect x="3.2102%" y="1205" width="0.0373%" height="15" fill="rgb(249,83,47)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1215.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.04%)</title><rect x="3.2102%" y="1189" width="0.0373%" height="15" fill="rgb(215,43,3)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1199.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.04%)</title><rect x="3.2102%" y="1173" width="0.0373%" height="15" fill="rgb(238,154,13)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1183.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.04%)</title><rect x="3.2102%" y="1157" width="0.0373%" height="15" fill="rgb(219,56,2)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1167.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.04%)</title><rect x="3.2102%" y="1141" width="0.0373%" height="15" fill="rgb(233,0,4)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.04%)</title><rect x="3.2102%" y="1125" width="0.0373%" height="15" fill="rgb(235,30,7)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="3.2102%" y="1109" width="0.0373%" height="15" fill="rgb(250,79,13)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (1 samples, 0.04%)</title><rect x="3.2102%" y="1093" width="0.0373%" height="15" fill="rgb(211,146,34)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1103.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (1 samples, 0.04%)</title><rect x="3.2102%" y="1077" width="0.0373%" height="15" fill="rgb(228,22,38)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1087.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.04%)</title><rect x="3.2102%" y="1061" width="0.0373%" height="15" fill="rgb(235,168,5)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1071.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.04%)</title><rect x="3.2102%" y="1045" width="0.0373%" height="15" fill="rgb(221,155,16)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1055.50"></text></g><g><title>poem_openapi::registry::_::&lt;impl serde::ser::Serialize for poem_openapi::registry::MetaOperationParam&gt;::serialize (1 samples, 0.04%)</title><rect x="3.2102%" y="1029" width="0.0373%" height="15" fill="rgb(215,215,53)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1039.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.04%)</title><rect x="3.2102%" y="1013" width="0.0373%" height="15" fill="rgb(223,4,10)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1023.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.04%)</title><rect x="3.2102%" y="997" width="0.0373%" height="15" fill="rgb(234,103,6)" fg:x="86" fg:w="1"/><text x="3.4602%" y="1007.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.04%)</title><rect x="3.2102%" y="981" width="0.0373%" height="15" fill="rgb(227,97,0)" fg:x="86" fg:w="1"/><text x="3.4602%" y="991.50"></text></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::begin_object_key (1 samples, 0.04%)</title><rect x="3.2102%" y="965" width="0.0373%" height="15" fill="rgb(234,150,53)" fg:x="86" fg:w="1"/><text x="3.4602%" y="975.50"></text></g><g><title>serde_json::ser::indent (1 samples, 0.04%)</title><rect x="3.2102%" y="949" width="0.0373%" height="15" fill="rgb(228,201,54)" fg:x="86" fg:w="1"/><text x="3.4602%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.04%)</title><rect x="3.2102%" y="933" width="0.0373%" height="15" fill="rgb(222,22,37)" fg:x="86" fg:w="1"/><text x="3.4602%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.04%)</title><rect x="3.2102%" y="917" width="0.0373%" height="15" fill="rgb(237,53,32)" fg:x="86" fg:w="1"/><text x="3.4602%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="3.2102%" y="901" width="0.0373%" height="15" fill="rgb(233,25,53)" fg:x="86" fg:w="1"/><text x="3.4602%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="3.2102%" y="885" width="0.0373%" height="15" fill="rgb(210,40,34)" fg:x="86" fg:w="1"/><text x="3.4602%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="3.2102%" y="869" width="0.0373%" height="15" fill="rgb(241,220,44)" fg:x="86" fg:w="1"/><text x="3.4602%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="3.2102%" y="853" width="0.0373%" height="15" fill="rgb(235,28,35)" fg:x="86" fg:w="1"/><text x="3.4602%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="3.2102%" y="837" width="0.0373%" height="15" fill="rgb(210,56,17)" fg:x="86" fg:w="1"/><text x="3.4602%" y="847.50"></text></g><g><title>fabseapi::Api::traffic_light_insert::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1477" width="0.0747%" height="15" fill="rgb(224,130,29)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1487.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1461" width="0.0747%" height="15" fill="rgb(235,212,8)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1471.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.2475%" y="1445" width="0.0747%" height="15" fill="rgb(223,33,50)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1455.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.2475%" y="1429" width="0.0747%" height="15" fill="rgb(219,149,13)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1439.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (2 samples, 0.07%)</title><rect x="3.2475%" y="1413" width="0.0747%" height="15" fill="rgb(250,156,29)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="3.2475%" y="1397" width="0.0747%" height="15" fill="rgb(216,193,19)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="3.2475%" y="1381" width="0.0747%" height="15" fill="rgb(216,135,14)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1391.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (2 samples, 0.07%)</title><rect x="3.2475%" y="1365" width="0.0747%" height="15" fill="rgb(241,47,5)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="3.2475%" y="1349" width="0.0747%" height="15" fill="rgb(233,42,35)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1359.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="3.2475%" y="1333" width="0.0747%" height="15" fill="rgb(231,13,6)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1343.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (2 samples, 0.07%)</title><rect x="3.2475%" y="1317" width="0.0747%" height="15" fill="rgb(207,181,40)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1327.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.2475%" y="1301" width="0.0747%" height="15" fill="rgb(254,173,49)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.2475%" y="1285" width="0.0747%" height="15" fill="rgb(221,1,38)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1295.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1269" width="0.0747%" height="15" fill="rgb(206,124,46)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1279.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1253" width="0.0747%" height="15" fill="rgb(249,21,11)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1263.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1237" width="0.0747%" height="15" fill="rgb(222,201,40)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1247.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1221" width="0.0747%" height="15" fill="rgb(235,61,29)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1231.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.2475%" y="1205" width="0.0747%" height="15" fill="rgb(219,207,3)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1215.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1189" width="0.0747%" height="15" fill="rgb(222,56,46)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1199.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1173" width="0.0747%" height="15" fill="rgb(239,76,54)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1183.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1157" width="0.0747%" height="15" fill="rgb(231,124,27)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.2475%" y="1141" width="0.0747%" height="15" fill="rgb(249,195,6)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1151.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1125" width="0.0747%" height="15" fill="rgb(237,174,47)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1135.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1109" width="0.0747%" height="15" fill="rgb(206,201,31)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1119.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1093" width="0.0747%" height="15" fill="rgb(231,57,52)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1077" width="0.0747%" height="15" fill="rgb(248,177,22)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1087.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1061" width="0.0747%" height="15" fill="rgb(215,211,37)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1071.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1045" width="0.0747%" height="15" fill="rgb(241,128,51)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1055.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1029" width="0.0747%" height="15" fill="rgb(227,165,31)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1039.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (2 samples, 0.07%)</title><rect x="3.2475%" y="1013" width="0.0747%" height="15" fill="rgb(228,167,24)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1023.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.2475%" y="997" width="0.0747%" height="15" fill="rgb(228,143,12)" fg:x="87" fg:w="2"/><text x="3.4975%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (1 samples, 0.04%)</title><rect x="3.2848%" y="981" width="0.0373%" height="15" fill="rgb(249,149,8)" fg:x="88" fg:w="1"/><text x="3.5348%" y="991.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (1 samples, 0.04%)</title><rect x="3.2848%" y="965" width="0.0373%" height="15" fill="rgb(243,35,44)" fg:x="88" fg:w="1"/><text x="3.5348%" y="975.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="3.3221%" y="901" width="0.0373%" height="15" fill="rgb(246,89,9)" fg:x="89" fg:w="1"/><text x="3.5721%" y="911.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="3.3221%" y="885" width="0.0373%" height="15" fill="rgb(233,213,13)" fg:x="89" fg:w="1"/><text x="3.5721%" y="895.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="3.3221%" y="869" width="0.0373%" height="15" fill="rgb(233,141,41)" fg:x="89" fg:w="1"/><text x="3.5721%" y="879.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3221%" y="853" width="0.0373%" height="15" fill="rgb(239,167,4)" fg:x="89" fg:w="1"/><text x="3.5721%" y="863.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="3.3221%" y="837" width="0.0373%" height="15" fill="rgb(209,217,16)" fg:x="89" fg:w="1"/><text x="3.5721%" y="847.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.04%)</title><rect x="3.3221%" y="821" width="0.0373%" height="15" fill="rgb(219,88,35)" fg:x="89" fg:w="1"/><text x="3.5721%" y="831.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1 samples, 0.04%)</title><rect x="3.3221%" y="805" width="0.0373%" height="15" fill="rgb(220,193,23)" fg:x="89" fg:w="1"/><text x="3.5721%" y="815.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1 samples, 0.04%)</title><rect x="3.3221%" y="789" width="0.0373%" height="15" fill="rgb(230,90,52)" fg:x="89" fg:w="1"/><text x="3.5721%" y="799.50"></text></g><g><title>recv (1 samples, 0.04%)</title><rect x="3.3221%" y="773" width="0.0373%" height="15" fill="rgb(252,106,19)" fg:x="89" fg:w="1"/><text x="3.5721%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="3.3221%" y="757" width="0.0373%" height="15" fill="rgb(206,74,20)" fg:x="89" fg:w="1"/><text x="3.5721%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="3.3221%" y="741" width="0.0373%" height="15" fill="rgb(230,138,44)" fg:x="89" fg:w="1"/><text x="3.5721%" y="751.50"></text></g><g><title>fabseapi::Api::vehicle_insert::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1477" width="0.0747%" height="15" fill="rgb(235,182,43)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1487.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1461" width="0.0747%" height="15" fill="rgb(242,16,51)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1471.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.3221%" y="1445" width="0.0747%" height="15" fill="rgb(248,9,4)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1455.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.3221%" y="1429" width="0.0747%" height="15" fill="rgb(210,31,22)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1439.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (2 samples, 0.07%)</title><rect x="3.3221%" y="1413" width="0.0747%" height="15" fill="rgb(239,54,39)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="3.3221%" y="1397" width="0.0747%" height="15" fill="rgb(230,99,41)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="3.3221%" y="1381" width="0.0747%" height="15" fill="rgb(253,106,12)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1391.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (2 samples, 0.07%)</title><rect x="3.3221%" y="1365" width="0.0747%" height="15" fill="rgb(213,46,41)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="3.3221%" y="1349" width="0.0747%" height="15" fill="rgb(215,133,35)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1359.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="3.3221%" y="1333" width="0.0747%" height="15" fill="rgb(213,28,5)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1343.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (2 samples, 0.07%)</title><rect x="3.3221%" y="1317" width="0.0747%" height="15" fill="rgb(215,77,49)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1327.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.3221%" y="1301" width="0.0747%" height="15" fill="rgb(248,100,22)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.3221%" y="1285" width="0.0747%" height="15" fill="rgb(208,67,9)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1295.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1269" width="0.0747%" height="15" fill="rgb(219,133,21)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1279.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1253" width="0.0747%" height="15" fill="rgb(246,46,29)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1263.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1237" width="0.0747%" height="15" fill="rgb(246,185,52)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1247.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1221" width="0.0747%" height="15" fill="rgb(252,136,11)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1231.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.3221%" y="1205" width="0.0747%" height="15" fill="rgb(219,138,53)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1215.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1189" width="0.0747%" height="15" fill="rgb(211,51,23)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1199.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1173" width="0.0747%" height="15" fill="rgb(247,221,28)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1183.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1157" width="0.0747%" height="15" fill="rgb(251,222,45)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.3221%" y="1141" width="0.0747%" height="15" fill="rgb(217,162,53)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1151.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1125" width="0.0747%" height="15" fill="rgb(229,93,14)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1135.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1109" width="0.0747%" height="15" fill="rgb(209,67,49)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1119.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1093" width="0.0747%" height="15" fill="rgb(213,87,29)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1077" width="0.0747%" height="15" fill="rgb(205,151,52)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1087.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1061" width="0.0747%" height="15" fill="rgb(253,215,39)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1071.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1045" width="0.0747%" height="15" fill="rgb(221,220,41)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1055.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1029" width="0.0747%" height="15" fill="rgb(218,133,21)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1039.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="1013" width="0.0747%" height="15" fill="rgb(221,193,43)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1023.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="3.3221%" y="997" width="0.0747%" height="15" fill="rgb(240,128,52)" fg:x="89" fg:w="2"/><text x="3.5721%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (2 samples, 0.07%)</title><rect x="3.3221%" y="981" width="0.0747%" height="15" fill="rgb(253,114,12)" fg:x="89" fg:w="2"/><text x="3.5721%" y="991.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (2 samples, 0.07%)</title><rect x="3.3221%" y="965" width="0.0747%" height="15" fill="rgb(215,223,47)" fg:x="89" fg:w="2"/><text x="3.5721%" y="975.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (2 samples, 0.07%)</title><rect x="3.3221%" y="949" width="0.0747%" height="15" fill="rgb(248,225,23)" fg:x="89" fg:w="2"/><text x="3.5721%" y="959.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (2 samples, 0.07%)</title><rect x="3.3221%" y="933" width="0.0747%" height="15" fill="rgb(250,108,0)" fg:x="89" fg:w="2"/><text x="3.5721%" y="943.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (2 samples, 0.07%)</title><rect x="3.3221%" y="917" width="0.0747%" height="15" fill="rgb(228,208,7)" fg:x="89" fg:w="2"/><text x="3.5721%" y="927.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (1 samples, 0.04%)</title><rect x="3.3595%" y="901" width="0.0373%" height="15" fill="rgb(244,45,10)" fg:x="90" fg:w="1"/><text x="3.6095%" y="911.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (1 samples, 0.04%)</title><rect x="3.3595%" y="885" width="0.0373%" height="15" fill="rgb(207,125,25)" fg:x="90" fg:w="1"/><text x="3.6095%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="3.2475%" y="1557" width="0.1866%" height="15" fill="rgb(210,195,18)" fg:x="87" fg:w="5"/><text x="3.4975%" y="1567.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="3.2475%" y="1541" width="0.1866%" height="15" fill="rgb(249,80,12)" fg:x="87" fg:w="5"/><text x="3.4975%" y="1551.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="3.2475%" y="1525" width="0.1866%" height="15" fill="rgb(221,65,9)" fg:x="87" fg:w="5"/><text x="3.4975%" y="1535.50"></text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="3.2475%" y="1509" width="0.1866%" height="15" fill="rgb(235,49,36)" fg:x="87" fg:w="5"/><text x="3.4975%" y="1519.50"></text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (5 samples, 0.19%)</title><rect x="3.2475%" y="1493" width="0.1866%" height="15" fill="rgb(225,32,20)" fg:x="87" fg:w="5"/><text x="3.4975%" y="1503.50"></text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1477" width="0.0373%" height="15" fill="rgb(215,141,46)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1487.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="3.3968%" y="1461" width="0.0373%" height="15" fill="rgb(250,160,47)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1471.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="3.3968%" y="1445" width="0.0373%" height="15" fill="rgb(216,222,40)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1455.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="3.3968%" y="1429" width="0.0373%" height="15" fill="rgb(234,217,39)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1439.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="3.3968%" y="1413" width="0.0373%" height="15" fill="rgb(207,178,40)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1423.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="3.3968%" y="1397" width="0.0373%" height="15" fill="rgb(221,136,13)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1407.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="3.3968%" y="1381" width="0.0373%" height="15" fill="rgb(249,199,10)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1391.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="3.3968%" y="1365" width="0.0373%" height="15" fill="rgb(249,222,13)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="3.3968%" y="1349" width="0.0373%" height="15" fill="rgb(244,185,38)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1359.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="3.3968%" y="1333" width="0.0373%" height="15" fill="rgb(236,202,9)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1343.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.04%)</title><rect x="3.3968%" y="1317" width="0.0373%" height="15" fill="rgb(250,229,37)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1327.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="3.3968%" y="1301" width="0.0373%" height="15" fill="rgb(206,174,23)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="3.3968%" y="1285" width="0.0373%" height="15" fill="rgb(211,33,43)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1295.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1269" width="0.0373%" height="15" fill="rgb(245,58,50)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1279.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1253" width="0.0373%" height="15" fill="rgb(244,68,36)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1263.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1237" width="0.0373%" height="15" fill="rgb(232,229,15)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1247.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1221" width="0.0373%" height="15" fill="rgb(254,30,23)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1231.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="3.3968%" y="1205" width="0.0373%" height="15" fill="rgb(235,160,14)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1215.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1189" width="0.0373%" height="15" fill="rgb(212,155,44)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1199.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1173" width="0.0373%" height="15" fill="rgb(226,2,50)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1183.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1157" width="0.0373%" height="15" fill="rgb(234,177,6)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="3.3968%" y="1141" width="0.0373%" height="15" fill="rgb(217,24,9)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1151.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1125" width="0.0373%" height="15" fill="rgb(220,13,46)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1135.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1109" width="0.0373%" height="15" fill="rgb(239,221,27)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1119.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1093" width="0.0373%" height="15" fill="rgb(222,198,25)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1077" width="0.0373%" height="15" fill="rgb(211,99,13)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1087.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1061" width="0.0373%" height="15" fill="rgb(232,111,31)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1071.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1045" width="0.0373%" height="15" fill="rgb(245,82,37)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1055.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1029" width="0.0373%" height="15" fill="rgb(227,149,46)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1039.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="1013" width="0.0373%" height="15" fill="rgb(218,36,50)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1023.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="3.3968%" y="997" width="0.0373%" height="15" fill="rgb(226,80,48)" fg:x="91" fg:w="1"/><text x="3.6468%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (1 samples, 0.04%)</title><rect x="3.3968%" y="981" width="0.0373%" height="15" fill="rgb(238,224,15)" fg:x="91" fg:w="1"/><text x="3.6468%" y="991.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (1 samples, 0.04%)</title><rect x="3.3968%" y="965" width="0.0373%" height="15" fill="rgb(241,136,10)" fg:x="91" fg:w="1"/><text x="3.6468%" y="975.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (1 samples, 0.04%)</title><rect x="3.3968%" y="949" width="0.0373%" height="15" fill="rgb(208,32,45)" fg:x="91" fg:w="1"/><text x="3.6468%" y="959.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="3.3968%" y="933" width="0.0373%" height="15" fill="rgb(207,135,9)" fg:x="91" fg:w="1"/><text x="3.6468%" y="943.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="917" width="0.0373%" height="15" fill="rgb(206,86,44)" fg:x="91" fg:w="1"/><text x="3.6468%" y="927.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="3.3968%" y="901" width="0.0373%" height="15" fill="rgb(245,177,15)" fg:x="91" fg:w="1"/><text x="3.6468%" y="911.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="3.3968%" y="885" width="0.0373%" height="15" fill="rgb(206,64,50)" fg:x="91" fg:w="1"/><text x="3.6468%" y="895.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="3.3968%" y="869" width="0.0373%" height="15" fill="rgb(234,36,40)" fg:x="91" fg:w="1"/><text x="3.6468%" y="879.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3968%" y="853" width="0.0373%" height="15" fill="rgb(213,64,8)" fg:x="91" fg:w="1"/><text x="3.6468%" y="863.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="3.3968%" y="837" width="0.0373%" height="15" fill="rgb(210,75,36)" fg:x="91" fg:w="1"/><text x="3.6468%" y="847.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.04%)</title><rect x="3.3968%" y="821" width="0.0373%" height="15" fill="rgb(229,88,21)" fg:x="91" fg:w="1"/><text x="3.6468%" y="831.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1 samples, 0.04%)</title><rect x="3.3968%" y="805" width="0.0373%" height="15" fill="rgb(252,204,47)" fg:x="91" fg:w="1"/><text x="3.6468%" y="815.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1 samples, 0.04%)</title><rect x="3.3968%" y="789" width="0.0373%" height="15" fill="rgb(208,77,27)" fg:x="91" fg:w="1"/><text x="3.6468%" y="799.50"></text></g><g><title>recv (1 samples, 0.04%)</title><rect x="3.3968%" y="773" width="0.0373%" height="15" fill="rgb(221,76,26)" fg:x="91" fg:w="1"/><text x="3.6468%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="3.3968%" y="757" width="0.0373%" height="15" fill="rgb(225,139,18)" fg:x="91" fg:w="1"/><text x="3.6468%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::web::json::Json&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt;&gt; (15 samples, 0.56%)</title><rect x="3.4341%" y="1221" width="0.5599%" height="15" fill="rgb(230,137,11)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (15 samples, 0.56%)</title><rect x="3.4341%" y="1205" width="0.5599%" height="15" fill="rgb(212,28,1)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 0.56%)</title><rect x="3.4341%" y="1189" width="0.5599%" height="15" fill="rgb(248,164,17)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (15 samples, 0.56%)</title><rect x="3.4341%" y="1173" width="0.5599%" height="15" fill="rgb(222,171,42)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.56%)</title><rect x="3.4341%" y="1157" width="0.5599%" height="15" fill="rgb(243,84,45)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (15 samples, 0.56%)</title><rect x="3.4341%" y="1141" width="0.5599%" height="15" fill="rgb(252,49,23)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 0.56%)</title><rect x="3.4341%" y="1125" width="0.5599%" height="15" fill="rgb(215,19,7)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 0.56%)</title><rect x="3.4341%" y="1109" width="0.5599%" height="15" fill="rgb(238,81,41)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 0.56%)</title><rect x="3.4341%" y="1093" width="0.5599%" height="15" fill="rgb(210,199,37)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.56%)</title><rect x="3.4341%" y="1077" width="0.5599%" height="15" fill="rgb(244,192,49)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1087.50"></text></g><g><title>core::mem::drop (15 samples, 0.56%)</title><rect x="3.4341%" y="1061" width="0.5599%" height="15" fill="rgb(226,211,11)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 0.56%)</title><rect x="3.4341%" y="1045" width="0.5599%" height="15" fill="rgb(236,162,54)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.56%)</title><rect x="3.4341%" y="1029" width="0.5599%" height="15" fill="rgb(220,229,9)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 samples, 0.56%)</title><rect x="3.4341%" y="1013" width="0.5599%" height="15" fill="rgb(250,87,22)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (15 samples, 0.56%)</title><rect x="3.4341%" y="997" width="0.5599%" height="15" fill="rgb(239,43,17)" fg:x="92" fg:w="15"/><text x="3.6841%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (15 samples, 0.56%)</title><rect x="3.4341%" y="981" width="0.5599%" height="15" fill="rgb(231,177,25)" fg:x="92" fg:w="15"/><text x="3.6841%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (15 samples, 0.56%)</title><rect x="3.4341%" y="965" width="0.5599%" height="15" fill="rgb(219,179,1)" fg:x="92" fg:w="15"/><text x="3.6841%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.56%)</title><rect x="3.4341%" y="949" width="0.5599%" height="15" fill="rgb(238,219,53)" fg:x="92" fg:w="15"/><text x="3.6841%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.56%)</title><rect x="3.4341%" y="933" width="0.5599%" height="15" fill="rgb(232,167,36)" fg:x="92" fg:w="15"/><text x="3.6841%" y="943.50"></text></g><g><title>__rdl_dealloc (15 samples, 0.56%)</title><rect x="3.4341%" y="917" width="0.5599%" height="15" fill="rgb(244,19,51)" fg:x="92" fg:w="15"/><text x="3.6841%" y="927.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (15 samples, 0.56%)</title><rect x="3.4341%" y="901" width="0.5599%" height="15" fill="rgb(224,6,22)" fg:x="92" fg:w="15"/><text x="3.6841%" y="911.50"></text></g><g><title>cfree (15 samples, 0.56%)</title><rect x="3.4341%" y="885" width="0.5599%" height="15" fill="rgb(224,145,5)" fg:x="92" fg:w="15"/><text x="3.6841%" y="895.50"></text></g><g><title>[libc.so.6] (15 samples, 0.56%)</title><rect x="3.4341%" y="869" width="0.5599%" height="15" fill="rgb(234,130,49)" fg:x="92" fg:w="15"/><text x="3.6841%" y="879.50"></text></g><g><title>[libc.so.6] (11 samples, 0.41%)</title><rect x="3.5834%" y="853" width="0.4106%" height="15" fill="rgb(254,6,2)" fg:x="96" fg:w="11"/><text x="3.8334%" y="863.50"></text></g><g><title>[libc.so.6] (6 samples, 0.22%)</title><rect x="3.7701%" y="837" width="0.2240%" height="15" fill="rgb(208,96,46)" fg:x="101" fg:w="6"/><text x="4.0201%" y="847.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.04%)</title><rect x="3.9940%" y="901" width="0.0373%" height="15" fill="rgb(239,3,39)" fg:x="107" fg:w="1"/><text x="4.2440%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.04%)</title><rect x="3.9940%" y="885" width="0.0373%" height="15" fill="rgb(233,210,1)" fg:x="107" fg:w="1"/><text x="4.2440%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.04%)</title><rect x="3.9940%" y="869" width="0.0373%" height="15" fill="rgb(244,137,37)" fg:x="107" fg:w="1"/><text x="4.2440%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="3.9940%" y="853" width="0.0373%" height="15" fill="rgb(240,136,2)" fg:x="107" fg:w="1"/><text x="4.2440%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="3.9940%" y="837" width="0.0373%" height="15" fill="rgb(239,18,37)" fg:x="107" fg:w="1"/><text x="4.2440%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="3.9940%" y="821" width="0.0373%" height="15" fill="rgb(218,185,22)" fg:x="107" fg:w="1"/><text x="4.2440%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="3.9940%" y="805" width="0.0373%" height="15" fill="rgb(225,218,4)" fg:x="107" fg:w="1"/><text x="4.2440%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="3.9940%" y="789" width="0.0373%" height="15" fill="rgb(230,182,32)" fg:x="107" fg:w="1"/><text x="4.2440%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="3.9940%" y="773" width="0.0373%" height="15" fill="rgb(242,56,43)" fg:x="107" fg:w="1"/><text x="4.2440%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="3.9940%" y="757" width="0.0373%" height="15" fill="rgb(233,99,24)" fg:x="107" fg:w="1"/><text x="4.2440%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="3.9940%" y="741" width="0.0373%" height="15" fill="rgb(234,209,42)" fg:x="107" fg:w="1"/><text x="4.2440%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="3.9940%" y="725" width="0.0373%" height="15" fill="rgb(227,7,12)" fg:x="107" fg:w="1"/><text x="4.2440%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="3.9940%" y="709" width="0.0373%" height="15" fill="rgb(245,203,43)" fg:x="107" fg:w="1"/><text x="4.2440%" y="719.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="3.9940%" y="693" width="0.0373%" height="15" fill="rgb(238,205,33)" fg:x="107" fg:w="1"/><text x="4.2440%" y="703.50"></text></g><g><title>__rdl_realloc (1 samples, 0.04%)</title><rect x="3.9940%" y="677" width="0.0373%" height="15" fill="rgb(231,56,7)" fg:x="107" fg:w="1"/><text x="4.2440%" y="687.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.04%)</title><rect x="3.9940%" y="661" width="0.0373%" height="15" fill="rgb(244,186,29)" fg:x="107" fg:w="1"/><text x="4.2440%" y="671.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="3.9940%" y="645" width="0.0373%" height="15" fill="rgb(234,111,31)" fg:x="107" fg:w="1"/><text x="4.2440%" y="655.50"></text></g><g><title>serde_json::ser::Formatter::end_string (2 samples, 0.07%)</title><rect x="4.0314%" y="901" width="0.0747%" height="15" fill="rgb(241,149,10)" fg:x="108" fg:w="2"/><text x="4.2814%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.07%)</title><rect x="4.0314%" y="885" width="0.0747%" height="15" fill="rgb(249,206,44)" fg:x="108" fg:w="2"/><text x="4.2814%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.07%)</title><rect x="4.0314%" y="869" width="0.0747%" height="15" fill="rgb(251,153,30)" fg:x="108" fg:w="2"/><text x="4.2814%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.07%)</title><rect x="4.0314%" y="853" width="0.0747%" height="15" fill="rgb(239,152,38)" fg:x="108" fg:w="2"/><text x="4.2814%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.07%)</title><rect x="4.0314%" y="837" width="0.0747%" height="15" fill="rgb(249,139,47)" fg:x="108" fg:w="2"/><text x="4.2814%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.07%)</title><rect x="4.0314%" y="821" width="0.0747%" height="15" fill="rgb(244,64,35)" fg:x="108" fg:w="2"/><text x="4.2814%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.07%)</title><rect x="4.0314%" y="805" width="0.0747%" height="15" fill="rgb(216,46,15)" fg:x="108" fg:w="2"/><text x="4.2814%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.07%)</title><rect x="4.0314%" y="789" width="0.0747%" height="15" fill="rgb(250,74,19)" fg:x="108" fg:w="2"/><text x="4.2814%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.07%)</title><rect x="4.0314%" y="773" width="0.0747%" height="15" fill="rgb(249,42,33)" fg:x="108" fg:w="2"/><text x="4.2814%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="4.0314%" y="757" width="0.0747%" height="15" fill="rgb(242,149,17)" fg:x="108" fg:w="2"/><text x="4.2814%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.07%)</title><rect x="4.0314%" y="741" width="0.0747%" height="15" fill="rgb(244,29,21)" fg:x="108" fg:w="2"/><text x="4.2814%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.07%)</title><rect x="4.0314%" y="725" width="0.0747%" height="15" fill="rgb(220,130,37)" fg:x="108" fg:w="2"/><text x="4.2814%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.07%)</title><rect x="4.0314%" y="709" width="0.0747%" height="15" fill="rgb(211,67,2)" fg:x="108" fg:w="2"/><text x="4.2814%" y="719.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.07%)</title><rect x="4.0314%" y="693" width="0.0747%" height="15" fill="rgb(235,68,52)" fg:x="108" fg:w="2"/><text x="4.2814%" y="703.50"></text></g><g><title>__rdl_realloc (2 samples, 0.07%)</title><rect x="4.0314%" y="677" width="0.0747%" height="15" fill="rgb(246,142,3)" fg:x="108" fg:w="2"/><text x="4.2814%" y="687.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.07%)</title><rect x="4.0314%" y="661" width="0.0747%" height="15" fill="rgb(241,25,7)" fg:x="108" fg:w="2"/><text x="4.2814%" y="671.50"></text></g><g><title>realloc (2 samples, 0.07%)</title><rect x="4.0314%" y="645" width="0.0747%" height="15" fill="rgb(242,119,39)" fg:x="108" fg:w="2"/><text x="4.2814%" y="655.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="4.0314%" y="629" width="0.0747%" height="15" fill="rgb(241,98,45)" fg:x="108" fg:w="2"/><text x="4.2814%" y="639.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="4.0314%" y="613" width="0.0747%" height="15" fill="rgb(254,28,30)" fg:x="108" fg:w="2"/><text x="4.2814%" y="623.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (9 samples, 0.34%)</title><rect x="3.9940%" y="981" width="0.3359%" height="15" fill="rgb(241,142,54)" fg:x="107" fg:w="9"/><text x="4.2440%" y="991.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (9 samples, 0.34%)</title><rect x="3.9940%" y="965" width="0.3359%" height="15" fill="rgb(222,85,15)" fg:x="107" fg:w="9"/><text x="4.2440%" y="975.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (9 samples, 0.34%)</title><rect x="3.9940%" y="949" width="0.3359%" height="15" fill="rgb(210,85,47)" fg:x="107" fg:w="9"/><text x="4.2440%" y="959.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (9 samples, 0.34%)</title><rect x="3.9940%" y="933" width="0.3359%" height="15" fill="rgb(224,206,25)" fg:x="107" fg:w="9"/><text x="4.2440%" y="943.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.34%)</title><rect x="3.9940%" y="917" width="0.3359%" height="15" fill="rgb(243,201,19)" fg:x="107" fg:w="9"/><text x="4.2440%" y="927.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (6 samples, 0.22%)</title><rect x="4.1060%" y="901" width="0.2240%" height="15" fill="rgb(236,59,4)" fg:x="110" fg:w="6"/><text x="4.3560%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (6 samples, 0.22%)</title><rect x="4.1060%" y="885" width="0.2240%" height="15" fill="rgb(254,179,45)" fg:x="110" fg:w="6"/><text x="4.3560%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.22%)</title><rect x="4.1060%" y="869" width="0.2240%" height="15" fill="rgb(226,14,10)" fg:x="110" fg:w="6"/><text x="4.3560%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.22%)</title><rect x="4.1060%" y="853" width="0.2240%" height="15" fill="rgb(244,27,41)" fg:x="110" fg:w="6"/><text x="4.3560%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.22%)</title><rect x="4.1060%" y="837" width="0.2240%" height="15" fill="rgb(235,35,32)" fg:x="110" fg:w="6"/><text x="4.3560%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.22%)</title><rect x="4.1060%" y="821" width="0.2240%" height="15" fill="rgb(218,68,31)" fg:x="110" fg:w="6"/><text x="4.3560%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.22%)</title><rect x="4.1060%" y="805" width="0.2240%" height="15" fill="rgb(207,120,37)" fg:x="110" fg:w="6"/><text x="4.3560%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.22%)</title><rect x="4.1060%" y="789" width="0.2240%" height="15" fill="rgb(227,98,0)" fg:x="110" fg:w="6"/><text x="4.3560%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.22%)</title><rect x="4.1060%" y="773" width="0.2240%" height="15" fill="rgb(207,7,3)" fg:x="110" fg:w="6"/><text x="4.3560%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.22%)</title><rect x="4.1060%" y="757" width="0.2240%" height="15" fill="rgb(206,98,19)" fg:x="110" fg:w="6"/><text x="4.3560%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.22%)</title><rect x="4.1060%" y="741" width="0.2240%" height="15" fill="rgb(217,5,26)" fg:x="110" fg:w="6"/><text x="4.3560%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.22%)</title><rect x="4.1060%" y="725" width="0.2240%" height="15" fill="rgb(235,190,38)" fg:x="110" fg:w="6"/><text x="4.3560%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.22%)</title><rect x="4.1060%" y="709" width="0.2240%" height="15" fill="rgb(247,86,24)" fg:x="110" fg:w="6"/><text x="4.3560%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.22%)</title><rect x="4.1060%" y="693" width="0.2240%" height="15" fill="rgb(205,101,16)" fg:x="110" fg:w="6"/><text x="4.3560%" y="703.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.22%)</title><rect x="4.1060%" y="677" width="0.2240%" height="15" fill="rgb(246,168,33)" fg:x="110" fg:w="6"/><text x="4.3560%" y="687.50"></text></g><g><title>__rdl_realloc (6 samples, 0.22%)</title><rect x="4.1060%" y="661" width="0.2240%" height="15" fill="rgb(231,114,1)" fg:x="110" fg:w="6"/><text x="4.3560%" y="671.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (6 samples, 0.22%)</title><rect x="4.1060%" y="645" width="0.2240%" height="15" fill="rgb(207,184,53)" fg:x="110" fg:w="6"/><text x="4.3560%" y="655.50"></text></g><g><title>realloc (6 samples, 0.22%)</title><rect x="4.1060%" y="629" width="0.2240%" height="15" fill="rgb(224,95,51)" fg:x="110" fg:w="6"/><text x="4.3560%" y="639.50"></text></g><g><title>[libc.so.6] (6 samples, 0.22%)</title><rect x="4.1060%" y="613" width="0.2240%" height="15" fill="rgb(212,188,45)" fg:x="110" fg:w="6"/><text x="4.3560%" y="623.50"></text></g><g><title>[libc.so.6] (6 samples, 0.22%)</title><rect x="4.1060%" y="597" width="0.2240%" height="15" fill="rgb(223,154,38)" fg:x="110" fg:w="6"/><text x="4.3560%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (32 samples, 1.19%)</title><rect x="3.4341%" y="1285" width="1.1945%" height="15" fill="rgb(251,22,52)" fg:x="92" fg:w="32"/><text x="3.6841%" y="1295.50"></text></g><g><title>core::ops::function::FnOnce::call_once (32 samples, 1.19%)</title><rect x="3.4341%" y="1269" width="1.1945%" height="15" fill="rgb(229,209,22)" fg:x="92" fg:w="32"/><text x="3.6841%" y="1279.50"></text></g><g><title>&lt;poem_openapi::payload::json::Json&lt;T&gt; as poem::web::IntoResponse&gt;::into_response (32 samples, 1.19%)</title><rect x="3.4341%" y="1253" width="1.1945%" height="15" fill="rgb(234,138,34)" fg:x="92" fg:w="32"/><text x="3.6841%" y="1263.50"></text></g><g><title>&lt;poem::web::json::Json&lt;T&gt; as poem::web::IntoResponse&gt;::into_response (32 samples, 1.19%)</title><rect x="3.4341%" y="1237" width="1.1945%" height="15" fill="rgb(212,95,11)" fg:x="92" fg:w="32"/><text x="3.6841%" y="1247.50"></text></g><g><title>serde_json::ser::to_vec (17 samples, 0.63%)</title><rect x="3.9940%" y="1221" width="0.6346%" height="15" fill="rgb(240,179,47)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1231.50"></text></g><g><title>serde_json::ser::to_writer (17 samples, 0.63%)</title><rect x="3.9940%" y="1205" width="0.6346%" height="15" fill="rgb(240,163,11)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1215.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (17 samples, 0.63%)</title><rect x="3.9940%" y="1189" width="0.6346%" height="15" fill="rgb(236,37,12)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1199.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (17 samples, 0.63%)</title><rect x="3.9940%" y="1173" width="0.6346%" height="15" fill="rgb(232,164,16)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1183.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 0.63%)</title><rect x="3.9940%" y="1157" width="0.6346%" height="15" fill="rgb(244,205,15)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1167.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (17 samples, 0.63%)</title><rect x="3.9940%" y="1141" width="0.6346%" height="15" fill="rgb(223,117,47)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1151.50"></text></g><g><title>serde::ser::Serializer::collect_seq (17 samples, 0.63%)</title><rect x="3.9940%" y="1125" width="0.6346%" height="15" fill="rgb(244,107,35)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (17 samples, 0.63%)</title><rect x="3.9940%" y="1109" width="0.6346%" height="15" fill="rgb(205,140,8)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.63%)</title><rect x="3.9940%" y="1093" width="0.6346%" height="15" fill="rgb(228,84,46)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (17 samples, 0.63%)</title><rect x="3.9940%" y="1077" width="0.6346%" height="15" fill="rgb(254,188,9)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1087.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (17 samples, 0.63%)</title><rect x="3.9940%" y="1061" width="0.6346%" height="15" fill="rgb(206,112,54)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1071.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (17 samples, 0.63%)</title><rect x="3.9940%" y="1045" width="0.6346%" height="15" fill="rgb(216,84,49)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1055.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 0.63%)</title><rect x="3.9940%" y="1029" width="0.6346%" height="15" fill="rgb(214,194,35)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1039.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 0.63%)</title><rect x="3.9940%" y="1013" width="0.6346%" height="15" fill="rgb(249,28,3)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1023.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (17 samples, 0.63%)</title><rect x="3.9940%" y="997" width="0.6346%" height="15" fill="rgb(222,56,52)" fg:x="107" fg:w="17"/><text x="4.2440%" y="1007.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.30%)</title><rect x="4.3300%" y="981" width="0.2986%" height="15" fill="rgb(245,217,50)" fg:x="116" fg:w="8"/><text x="4.5800%" y="991.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.30%)</title><rect x="4.3300%" y="965" width="0.2986%" height="15" fill="rgb(213,201,24)" fg:x="116" fg:w="8"/><text x="4.5800%" y="975.50"></text></g><g><title>&lt;serde_json::number::Number as serde::ser::Serialize&gt;::serialize (8 samples, 0.30%)</title><rect x="4.3300%" y="949" width="0.2986%" height="15" fill="rgb(248,116,28)" fg:x="116" fg:w="8"/><text x="4.5800%" y="959.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_f64 (8 samples, 0.30%)</title><rect x="4.3300%" y="933" width="0.2986%" height="15" fill="rgb(219,72,43)" fg:x="116" fg:w="8"/><text x="4.5800%" y="943.50"></text></g><g><title>serde_json::ser::Formatter::write_f64 (8 samples, 0.30%)</title><rect x="4.3300%" y="917" width="0.2986%" height="15" fill="rgb(209,138,14)" fg:x="116" fg:w="8"/><text x="4.5800%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.30%)</title><rect x="4.3300%" y="901" width="0.2986%" height="15" fill="rgb(222,18,33)" fg:x="116" fg:w="8"/><text x="4.5800%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.30%)</title><rect x="4.3300%" y="885" width="0.2986%" height="15" fill="rgb(213,199,7)" fg:x="116" fg:w="8"/><text x="4.5800%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.30%)</title><rect x="4.3300%" y="869" width="0.2986%" height="15" fill="rgb(250,110,10)" fg:x="116" fg:w="8"/><text x="4.5800%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.30%)</title><rect x="4.3300%" y="853" width="0.2986%" height="15" fill="rgb(248,123,6)" fg:x="116" fg:w="8"/><text x="4.5800%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.30%)</title><rect x="4.3300%" y="837" width="0.2986%" height="15" fill="rgb(206,91,31)" fg:x="116" fg:w="8"/><text x="4.5800%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.30%)</title><rect x="4.3300%" y="821" width="0.2986%" height="15" fill="rgb(211,154,13)" fg:x="116" fg:w="8"/><text x="4.5800%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.30%)</title><rect x="4.3300%" y="805" width="0.2986%" height="15" fill="rgb(225,148,7)" fg:x="116" fg:w="8"/><text x="4.5800%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.30%)</title><rect x="4.3300%" y="789" width="0.2986%" height="15" fill="rgb(220,160,43)" fg:x="116" fg:w="8"/><text x="4.5800%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.30%)</title><rect x="4.3300%" y="773" width="0.2986%" height="15" fill="rgb(213,52,39)" fg:x="116" fg:w="8"/><text x="4.5800%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.30%)</title><rect x="4.3300%" y="757" width="0.2986%" height="15" fill="rgb(243,137,7)" fg:x="116" fg:w="8"/><text x="4.5800%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.30%)</title><rect x="4.3300%" y="741" width="0.2986%" height="15" fill="rgb(230,79,13)" fg:x="116" fg:w="8"/><text x="4.5800%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.30%)</title><rect x="4.3300%" y="725" width="0.2986%" height="15" fill="rgb(247,105,23)" fg:x="116" fg:w="8"/><text x="4.5800%" y="735.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.30%)</title><rect x="4.3300%" y="709" width="0.2986%" height="15" fill="rgb(223,179,41)" fg:x="116" fg:w="8"/><text x="4.5800%" y="719.50"></text></g><g><title>__rdl_realloc (8 samples, 0.30%)</title><rect x="4.3300%" y="693" width="0.2986%" height="15" fill="rgb(218,9,34)" fg:x="116" fg:w="8"/><text x="4.5800%" y="703.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8 samples, 0.30%)</title><rect x="4.3300%" y="677" width="0.2986%" height="15" fill="rgb(222,106,8)" fg:x="116" fg:w="8"/><text x="4.5800%" y="687.50"></text></g><g><title>realloc (8 samples, 0.30%)</title><rect x="4.3300%" y="661" width="0.2986%" height="15" fill="rgb(211,220,0)" fg:x="116" fg:w="8"/><text x="4.5800%" y="671.50"></text></g><g><title>[libc.so.6] (8 samples, 0.30%)</title><rect x="4.3300%" y="645" width="0.2986%" height="15" fill="rgb(229,52,16)" fg:x="116" fg:w="8"/><text x="4.5800%" y="655.50"></text></g><g><title>[libc.so.6] (8 samples, 0.30%)</title><rect x="4.3300%" y="629" width="0.2986%" height="15" fill="rgb(212,155,18)" fg:x="116" fg:w="8"/><text x="4.5800%" y="639.50"></text></g><g><title>fabseapi::Api::traffic_light_insert::_{{closure}} (1 samples, 0.04%)</title><rect x="4.6286%" y="1285" width="0.0373%" height="15" fill="rgb(242,21,14)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1295.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (1 samples, 0.04%)</title><rect x="4.6286%" y="1269" width="0.0373%" height="15" fill="rgb(222,19,48)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="4.6286%" y="1253" width="0.0373%" height="15" fill="rgb(232,45,27)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="4.6286%" y="1237" width="0.0373%" height="15" fill="rgb(249,103,42)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1247.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="4.6286%" y="1221" width="0.0373%" height="15" fill="rgb(246,81,33)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.6286%" y="1205" width="0.0373%" height="15" fill="rgb(252,33,42)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1215.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.6286%" y="1189" width="0.0373%" height="15" fill="rgb(209,212,41)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1199.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="4.6286%" y="1173" width="0.0373%" height="15" fill="rgb(207,154,6)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.6286%" y="1157" width="0.0373%" height="15" fill="rgb(223,64,47)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1167.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.6286%" y="1141" width="0.0373%" height="15" fill="rgb(211,161,38)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1151.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.04%)</title><rect x="4.6286%" y="1125" width="0.0373%" height="15" fill="rgb(219,138,40)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1135.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="4.6286%" y="1109" width="0.0373%" height="15" fill="rgb(241,228,46)" fg:x="124" fg:w="1"/><text x="4.8786%" y="1119.50"></text></g><g><title>fabseapi::Api::traffic_light_retrieve::_{{closure}} (1 samples, 0.04%)</title><rect x="4.6659%" y="1285" width="0.0373%" height="15" fill="rgb(223,209,38)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1295.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="4.6659%" y="1269" width="0.0373%" height="15" fill="rgb(236,164,45)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1279.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.6659%" y="1253" width="0.0373%" height="15" fill="rgb(231,15,5)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.6659%" y="1237" width="0.0373%" height="15" fill="rgb(252,35,15)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.6659%" y="1221" width="0.0373%" height="15" fill="rgb(248,181,18)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1231.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="4.6659%" y="1205" width="0.0373%" height="15" fill="rgb(233,39,42)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.6659%" y="1189" width="0.0373%" height="15" fill="rgb(238,110,33)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1199.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.6659%" y="1173" width="0.0373%" height="15" fill="rgb(233,195,10)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="4.6659%" y="1157" width="0.0373%" height="15" fill="rgb(254,105,3)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (1 samples, 0.04%)</title><rect x="4.6659%" y="1141" width="0.0373%" height="15" fill="rgb(221,225,9)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1151.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (1 samples, 0.04%)</title><rect x="4.6659%" y="1125" width="0.0373%" height="15" fill="rgb(224,227,45)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1135.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many::_{{closure}} (1 samples, 0.04%)</title><rect x="4.6659%" y="1109" width="0.0373%" height="15" fill="rgb(229,198,43)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1119.50"></text></g><g><title>&lt;(T1,T2,T3,T4,T5) as sqlx_core::from_row::FromRow&lt;R&gt;&gt;::from_row (1 samples, 0.04%)</title><rect x="4.6659%" y="1093" width="0.0373%" height="15" fill="rgb(206,209,35)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1103.50"></text></g><g><title>sqlx_core::row::Row::try_get (1 samples, 0.04%)</title><rect x="4.6659%" y="1077" width="0.0373%" height="15" fill="rgb(245,195,53)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1087.50"></text></g><g><title>sqlx_mysql::types::str::&lt;impl sqlx_core::decode::Decode&lt;sqlx_mysql::database::MySql&gt; for alloc::string::String&gt;::decode (1 samples, 0.04%)</title><rect x="4.6659%" y="1061" width="0.0373%" height="15" fill="rgb(240,92,26)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="4.6659%" y="1045" width="0.0373%" height="15" fill="rgb(207,40,23)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="4.6659%" y="1029" width="0.0373%" height="15" fill="rgb(223,111,35)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="4.6659%" y="1013" width="0.0373%" height="15" fill="rgb(229,147,28)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="4.6659%" y="997" width="0.0373%" height="15" fill="rgb(211,29,28)" fg:x="125" fg:w="1"/><text x="4.9159%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="4.6659%" y="981" width="0.0373%" height="15" fill="rgb(228,72,33)" fg:x="125" fg:w="1"/><text x="4.9159%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="4.6659%" y="965" width="0.0373%" height="15" fill="rgb(205,214,31)" fg:x="125" fg:w="1"/><text x="4.9159%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="4.6659%" y="949" width="0.0373%" height="15" fill="rgb(224,111,15)" fg:x="125" fg:w="1"/><text x="4.9159%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="4.6659%" y="933" width="0.0373%" height="15" fill="rgb(253,21,26)" fg:x="125" fg:w="1"/><text x="4.9159%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="4.6659%" y="917" width="0.0373%" height="15" fill="rgb(245,139,43)" fg:x="125" fg:w="1"/><text x="4.9159%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="4.6659%" y="901" width="0.0373%" height="15" fill="rgb(252,170,7)" fg:x="125" fg:w="1"/><text x="4.9159%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="4.6659%" y="885" width="0.0373%" height="15" fill="rgb(231,118,14)" fg:x="125" fg:w="1"/><text x="4.9159%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="4.6659%" y="869" width="0.0373%" height="15" fill="rgb(238,83,0)" fg:x="125" fg:w="1"/><text x="4.9159%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="4.6659%" y="853" width="0.0373%" height="15" fill="rgb(221,39,39)" fg:x="125" fg:w="1"/><text x="4.9159%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="4.6659%" y="837" width="0.0373%" height="15" fill="rgb(222,119,46)" fg:x="125" fg:w="1"/><text x="4.9159%" y="847.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="4.6659%" y="821" width="0.0373%" height="15" fill="rgb(222,165,49)" fg:x="125" fg:w="1"/><text x="4.9159%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="4.6659%" y="805" width="0.0373%" height="15" fill="rgb(219,113,52)" fg:x="125" fg:w="1"/><text x="4.9159%" y="815.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="4.6659%" y="789" width="0.0373%" height="15" fill="rgb(214,7,15)" fg:x="125" fg:w="1"/><text x="4.9159%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="4.6659%" y="773" width="0.0373%" height="15" fill="rgb(235,32,4)" fg:x="125" fg:w="1"/><text x="4.9159%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="4.6659%" y="757" width="0.0373%" height="15" fill="rgb(238,90,54)" fg:x="125" fg:w="1"/><text x="4.9159%" y="767.50"></text></g><g><title>fabseapi::Api::vehicle_insert::_{{closure}} (1 samples, 0.04%)</title><rect x="4.7032%" y="1285" width="0.0373%" height="15" fill="rgb(213,208,19)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1295.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (1 samples, 0.04%)</title><rect x="4.7032%" y="1269" width="0.0373%" height="15" fill="rgb(233,156,4)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="4.7032%" y="1253" width="0.0373%" height="15" fill="rgb(207,194,5)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="4.7032%" y="1237" width="0.0373%" height="15" fill="rgb(206,111,30)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1247.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="4.7032%" y="1221" width="0.0373%" height="15" fill="rgb(243,70,54)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.7032%" y="1205" width="0.0373%" height="15" fill="rgb(242,28,8)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1215.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.7032%" y="1189" width="0.0373%" height="15" fill="rgb(219,106,18)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1199.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="4.7032%" y="1173" width="0.0373%" height="15" fill="rgb(244,222,10)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.7032%" y="1157" width="0.0373%" height="15" fill="rgb(236,179,52)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1167.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="4.7032%" y="1141" width="0.0373%" height="15" fill="rgb(213,23,39)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1151.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.04%)</title><rect x="4.7032%" y="1125" width="0.0373%" height="15" fill="rgb(238,48,10)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1135.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="4.7032%" y="1109" width="0.0373%" height="15" fill="rgb(251,196,23)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1119.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="4.7032%" y="1093" width="0.0373%" height="15" fill="rgb(250,152,24)" fg:x="126" fg:w="1"/><text x="4.9532%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="4.8152%" y="1029" width="0.0373%" height="15" fill="rgb(209,150,17)" fg:x="129" fg:w="1"/><text x="5.0652%" y="1039.50"></text></g><g><title>&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_uint (5 samples, 0.19%)</title><rect x="4.8526%" y="1013" width="0.1866%" height="15" fill="rgb(234,202,34)" fg:x="130" fg:w="5"/><text x="5.1026%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (5 samples, 0.19%)</title><rect x="4.8526%" y="997" width="0.1866%" height="15" fill="rgb(253,148,53)" fg:x="130" fg:w="5"/><text x="5.1026%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.19%)</title><rect x="4.8526%" y="981" width="0.1866%" height="15" fill="rgb(218,129,16)" fg:x="130" fg:w="5"/><text x="5.1026%" y="991.50"></text></g><g><title>[libc.so.6] (5 samples, 0.19%)</title><rect x="4.8526%" y="965" width="0.1866%" height="15" fill="rgb(216,85,19)" fg:x="130" fg:w="5"/><text x="5.1026%" y="975.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (86 samples, 3.21%)</title><rect x="3.2475%" y="1573" width="3.2102%" height="15" fill="rgb(235,228,7)" fg:x="87" fg:w="86"/><text x="3.4975%" y="1583.50">&lt;po..</text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1557" width="3.0235%" height="15" fill="rgb(245,175,0)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1567.50">&lt;po..</text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1541" width="3.0235%" height="15" fill="rgb(208,168,36)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1551.50">&lt;po..</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1525" width="3.0235%" height="15" fill="rgb(246,171,24)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1535.50">&lt;po..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1509" width="3.0235%" height="15" fill="rgb(215,142,24)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1519.50">&lt;al..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1493" width="3.0235%" height="15" fill="rgb(250,187,7)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1503.50">&lt;dy..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (81 samples, 3.02%)</title><rect x="3.4341%" y="1477" width="3.0235%" height="15" fill="rgb(228,66,33)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1487.50">&lt;co..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1461" width="3.0235%" height="15" fill="rgb(234,215,21)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1471.50">&lt;po..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (81 samples, 3.02%)</title><rect x="3.4341%" y="1445" width="3.0235%" height="15" fill="rgb(222,191,20)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1455.50">&lt;fu..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1429" width="3.0235%" height="15" fill="rgb(245,79,54)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1439.50">&lt;al..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1413" width="3.0235%" height="15" fill="rgb(240,10,37)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1423.50">&lt;dy..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (81 samples, 3.02%)</title><rect x="3.4341%" y="1397" width="3.0235%" height="15" fill="rgb(214,192,32)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1407.50">&lt;co..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1381" width="3.0235%" height="15" fill="rgb(209,36,54)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1391.50">&lt;po..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1365" width="3.0235%" height="15" fill="rgb(220,10,11)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1375.50">&lt;al..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1349" width="3.0235%" height="15" fill="rgb(221,106,17)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1359.50">&lt;dy..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (81 samples, 3.02%)</title><rect x="3.4341%" y="1333" width="3.0235%" height="15" fill="rgb(251,142,44)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1343.50">&lt;co..</text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1317" width="3.0235%" height="15" fill="rgb(238,13,15)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1327.50">&lt;po..</text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (81 samples, 3.02%)</title><rect x="3.4341%" y="1301" width="3.0235%" height="15" fill="rgb(208,107,27)" fg:x="92" fg:w="81"/><text x="3.6841%" y="1311.50">&lt;fa..</text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (46 samples, 1.72%)</title><rect x="4.7406%" y="1285" width="1.7171%" height="15" fill="rgb(205,136,37)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1295.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (46 samples, 1.72%)</title><rect x="4.7406%" y="1269" width="1.7171%" height="15" fill="rgb(250,205,27)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1279.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (46 samples, 1.72%)</title><rect x="4.7406%" y="1253" width="1.7171%" height="15" fill="rgb(210,80,43)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (46 samples, 1.72%)</title><rect x="4.7406%" y="1237" width="1.7171%" height="15" fill="rgb(247,160,36)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (46 samples, 1.72%)</title><rect x="4.7406%" y="1221" width="1.7171%" height="15" fill="rgb(234,13,49)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1231.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (46 samples, 1.72%)</title><rect x="4.7406%" y="1205" width="1.7171%" height="15" fill="rgb(234,122,0)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (46 samples, 1.72%)</title><rect x="4.7406%" y="1189" width="1.7171%" height="15" fill="rgb(207,146,38)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1199.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (46 samples, 1.72%)</title><rect x="4.7406%" y="1173" width="1.7171%" height="15" fill="rgb(207,177,25)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (46 samples, 1.72%)</title><rect x="4.7406%" y="1157" width="1.7171%" height="15" fill="rgb(211,178,42)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (46 samples, 1.72%)</title><rect x="4.7406%" y="1141" width="1.7171%" height="15" fill="rgb(230,69,54)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1151.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (46 samples, 1.72%)</title><rect x="4.7406%" y="1125" width="1.7171%" height="15" fill="rgb(214,135,41)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1135.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many::_{{closure}} (46 samples, 1.72%)</title><rect x="4.7406%" y="1109" width="1.7171%" height="15" fill="rgb(237,67,25)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1119.50"></text></g><g><title>&lt;(T1,T2,T3,T4,T5,T6) as sqlx_core::from_row::FromRow&lt;R&gt;&gt;::from_row (46 samples, 1.72%)</title><rect x="4.7406%" y="1093" width="1.7171%" height="15" fill="rgb(222,189,50)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1103.50"></text></g><g><title>sqlx_core::row::Row::try_get (46 samples, 1.72%)</title><rect x="4.7406%" y="1077" width="1.7171%" height="15" fill="rgb(245,148,34)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1087.50"></text></g><g><title>sqlx_mysql::types::int::&lt;impl sqlx_core::decode::Decode&lt;sqlx_mysql::database::MySql&gt; for i64&gt;::decode (46 samples, 1.72%)</title><rect x="4.7406%" y="1061" width="1.7171%" height="15" fill="rgb(222,29,6)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1071.50"></text></g><g><title>sqlx_mysql::types::int::int_decode (46 samples, 1.72%)</title><rect x="4.7406%" y="1045" width="1.7171%" height="15" fill="rgb(221,189,43)" fg:x="127" fg:w="46"/><text x="4.9906%" y="1055.50"></text></g><g><title>byteorder::ByteOrder::read_int (43 samples, 1.61%)</title><rect x="4.8526%" y="1029" width="1.6051%" height="15" fill="rgb(207,36,27)" fg:x="130" fg:w="43"/><text x="5.1026%" y="1039.50"></text></g><g><title>byteorder::extend_sign (38 samples, 1.42%)</title><rect x="5.0392%" y="1013" width="1.4184%" height="15" fill="rgb(217,90,24)" fg:x="135" fg:w="38"/><text x="5.2892%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.04%)</title><rect x="6.4950%" y="1189" width="0.0373%" height="15" fill="rgb(224,66,35)" fg:x="174" fg:w="1"/><text x="6.7450%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::path::PathAndQuery&gt; (1 samples, 0.04%)</title><rect x="6.4950%" y="1173" width="0.0373%" height="15" fill="rgb(221,13,50)" fg:x="174" fg:w="1"/><text x="6.7450%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (1 samples, 0.04%)</title><rect x="6.4950%" y="1157" width="0.0373%" height="15" fill="rgb(236,68,49)" fg:x="174" fg:w="1"/><text x="6.7450%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.04%)</title><rect x="6.4950%" y="1141" width="0.0373%" height="15" fill="rgb(229,146,28)" fg:x="174" fg:w="1"/><text x="6.7450%" y="1151.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="6.4950%" y="1125" width="0.0373%" height="15" fill="rgb(225,31,38)" fg:x="174" fg:w="1"/><text x="6.7450%" y="1135.50"></text></g><g><title>bytes::bytes::promotable_even_drop (1 samples, 0.04%)</title><rect x="6.4950%" y="1109" width="0.0373%" height="15" fill="rgb(250,208,3)" fg:x="174" fg:w="1"/><text x="6.7450%" y="1119.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.04%)</title><rect x="6.4950%" y="1093" width="0.0373%" height="15" fill="rgb(246,54,23)" fg:x="174" fg:w="1"/><text x="6.7450%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::request::Request&gt; (2 samples, 0.07%)</title><rect x="6.4950%" y="1205" width="0.0747%" height="15" fill="rgb(243,76,11)" fg:x="174" fg:w="2"/><text x="6.7450%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::request::RequestState&gt; (1 samples, 0.04%)</title><rect x="6.5323%" y="1189" width="0.0373%" height="15" fill="rgb(245,21,50)" fg:x="175" fg:w="1"/><text x="6.7823%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::scheme::Scheme&gt; (1 samples, 0.04%)</title><rect x="6.5323%" y="1173" width="0.0373%" height="15" fill="rgb(228,9,43)" fg:x="175" fg:w="1"/><text x="6.7823%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::scheme::Scheme2&gt; (1 samples, 0.04%)</title><rect x="6.5323%" y="1157" width="0.0373%" height="15" fill="rgb(208,100,47)" fg:x="175" fg:w="1"/><text x="6.7823%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem_openapi::payload::json::Json&lt;alloc::vec::Vec&lt;fabseapi::Car&gt;&gt;&gt; (9 samples, 0.34%)</title><rect x="6.5696%" y="1157" width="0.3359%" height="15" fill="rgb(232,26,8)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fabseapi::Car&gt;&gt; (9 samples, 0.34%)</title><rect x="6.5696%" y="1141" width="0.3359%" height="15" fill="rgb(216,166,38)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.34%)</title><rect x="6.5696%" y="1125" width="0.3359%" height="15" fill="rgb(251,202,51)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[fabseapi::Car]&gt; (9 samples, 0.34%)</title><rect x="6.5696%" y="1109" width="0.3359%" height="15" fill="rgb(254,216,34)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;fabseapi::Car&gt; (9 samples, 0.34%)</title><rect x="6.5696%" y="1093" width="0.3359%" height="15" fill="rgb(251,32,27)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (9 samples, 0.34%)</title><rect x="6.5696%" y="1077" width="0.3359%" height="15" fill="rgb(208,127,28)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.34%)</title><rect x="6.5696%" y="1061" width="0.3359%" height="15" fill="rgb(224,137,22)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.34%)</title><rect x="6.5696%" y="1045" width="0.3359%" height="15" fill="rgb(254,70,32)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.34%)</title><rect x="6.5696%" y="1029" width="0.3359%" height="15" fill="rgb(229,75,37)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.34%)</title><rect x="6.5696%" y="1013" width="0.3359%" height="15" fill="rgb(252,64,23)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.34%)</title><rect x="6.5696%" y="997" width="0.3359%" height="15" fill="rgb(232,162,48)" fg:x="176" fg:w="9"/><text x="6.8196%" y="1007.50"></text></g><g><title>__rdl_dealloc (9 samples, 0.34%)</title><rect x="6.5696%" y="981" width="0.3359%" height="15" fill="rgb(246,160,12)" fg:x="176" fg:w="9"/><text x="6.8196%" y="991.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9 samples, 0.34%)</title><rect x="6.5696%" y="965" width="0.3359%" height="15" fill="rgb(247,166,0)" fg:x="176" fg:w="9"/><text x="6.8196%" y="975.50"></text></g><g><title>cfree (9 samples, 0.34%)</title><rect x="6.5696%" y="949" width="0.3359%" height="15" fill="rgb(249,219,21)" fg:x="176" fg:w="9"/><text x="6.8196%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (60 samples, 2.24%)</title><rect x="7.3162%" y="997" width="2.2396%" height="15" fill="rgb(205,209,3)" fg:x="196" fg:w="60"/><text x="7.5662%" y="1007.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (60 samples, 2.24%)</title><rect x="7.3162%" y="981" width="2.2396%" height="15" fill="rgb(243,44,1)" fg:x="196" fg:w="60"/><text x="7.5662%" y="991.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (60 samples, 2.24%)</title><rect x="7.3162%" y="965" width="2.2396%" height="15" fill="rgb(206,159,16)" fg:x="196" fg:w="60"/><text x="7.5662%" y="975.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 2.16%)</title><rect x="7.3908%" y="949" width="2.1650%" height="15" fill="rgb(244,77,30)" fg:x="198" fg:w="58"/><text x="7.6408%" y="959.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 2.16%)</title><rect x="7.3908%" y="933" width="2.1650%" height="15" fill="rgb(218,69,12)" fg:x="198" fg:w="58"/><text x="7.6408%" y="943.50">a..</text></g><g><title>alloc::alloc::alloc (58 samples, 2.16%)</title><rect x="7.3908%" y="917" width="2.1650%" height="15" fill="rgb(212,87,7)" fg:x="198" fg:w="58"/><text x="7.6408%" y="927.50">a..</text></g><g><title>__rdl_alloc (58 samples, 2.16%)</title><rect x="7.3908%" y="901" width="2.1650%" height="15" fill="rgb(245,114,25)" fg:x="198" fg:w="58"/><text x="7.6408%" y="911.50">_..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (58 samples, 2.16%)</title><rect x="7.3908%" y="885" width="2.1650%" height="15" fill="rgb(210,61,42)" fg:x="198" fg:w="58"/><text x="7.6408%" y="895.50">s..</text></g><g><title>malloc (56 samples, 2.09%)</title><rect x="7.4655%" y="869" width="2.0903%" height="15" fill="rgb(211,52,33)" fg:x="200" fg:w="56"/><text x="7.7155%" y="879.50">m..</text></g><g><title>[libc.so.6] (8 samples, 0.30%)</title><rect x="9.2572%" y="853" width="0.2986%" height="15" fill="rgb(234,58,33)" fg:x="248" fg:w="8"/><text x="9.5072%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (61 samples, 2.28%)</title><rect x="7.3162%" y="1077" width="2.2770%" height="15" fill="rgb(220,115,36)" fg:x="196" fg:w="61"/><text x="7.5662%" y="1087.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (61 samples, 2.28%)</title><rect x="7.3162%" y="1061" width="2.2770%" height="15" fill="rgb(243,153,54)" fg:x="196" fg:w="61"/><text x="7.5662%" y="1071.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61 samples, 2.28%)</title><rect x="7.3162%" y="1045" width="2.2770%" height="15" fill="rgb(251,47,18)" fg:x="196" fg:w="61"/><text x="7.5662%" y="1055.50">a..</text></g><g><title>alloc::slice::hack::to_vec (61 samples, 2.28%)</title><rect x="7.3162%" y="1029" width="2.2770%" height="15" fill="rgb(242,102,42)" fg:x="196" fg:w="61"/><text x="7.5662%" y="1039.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61 samples, 2.28%)</title><rect x="7.3162%" y="1013" width="2.2770%" height="15" fill="rgb(234,31,38)" fg:x="196" fg:w="61"/><text x="7.5662%" y="1023.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="9.5558%" y="997" width="0.0373%" height="15" fill="rgb(221,117,51)" fg:x="256" fg:w="1"/><text x="9.8058%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="9.5558%" y="981" width="0.0373%" height="15" fill="rgb(212,20,18)" fg:x="256" fg:w="1"/><text x="9.8058%" y="991.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (63 samples, 2.35%)</title><rect x="7.3162%" y="1125" width="2.3516%" height="15" fill="rgb(245,133,36)" fg:x="196" fg:w="63"/><text x="7.5662%" y="1135.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (63 samples, 2.35%)</title><rect x="7.3162%" y="1109" width="2.3516%" height="15" fill="rgb(212,6,19)" fg:x="196" fg:w="63"/><text x="7.5662%" y="1119.50">&lt;..</text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (63 samples, 2.35%)</title><rect x="7.3162%" y="1093" width="2.3516%" height="15" fill="rgb(218,1,36)" fg:x="196" fg:w="63"/><text x="7.5662%" y="1103.50">a..</text></g><g><title>alloc::string::String::from_utf8_unchecked (2 samples, 0.07%)</title><rect x="9.5931%" y="1077" width="0.0747%" height="15" fill="rgb(246,84,54)" fg:x="257" fg:w="2"/><text x="9.8431%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (2 samples, 0.07%)</title><rect x="9.6678%" y="1125" width="0.0747%" height="15" fill="rgb(242,110,6)" fg:x="259" fg:w="2"/><text x="9.9178%" y="1135.50"></text></g><g><title>poem_openapi::types::external::floats::&lt;impl poem_openapi::types::ToJSON for f64&gt;::to_json (1 samples, 0.04%)</title><rect x="9.7424%" y="1125" width="0.0373%" height="15" fill="rgb(214,47,5)" fg:x="261" fg:w="1"/><text x="9.9924%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.30%)</title><rect x="9.8171%" y="1029" width="0.2986%" height="15" fill="rgb(218,159,25)" fg:x="263" fg:w="8"/><text x="10.0671%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.30%)</title><rect x="9.8171%" y="1013" width="0.2986%" height="15" fill="rgb(215,211,28)" fg:x="263" fg:w="8"/><text x="10.0671%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.30%)</title><rect x="9.8171%" y="997" width="0.2986%" height="15" fill="rgb(238,59,32)" fg:x="263" fg:w="8"/><text x="10.0671%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.30%)</title><rect x="9.8171%" y="981" width="0.2986%" height="15" fill="rgb(226,82,3)" fg:x="263" fg:w="8"/><text x="10.0671%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.30%)</title><rect x="9.8171%" y="965" width="0.2986%" height="15" fill="rgb(240,164,32)" fg:x="263" fg:w="8"/><text x="10.0671%" y="975.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.30%)</title><rect x="9.8171%" y="949" width="0.2986%" height="15" fill="rgb(232,46,7)" fg:x="263" fg:w="8"/><text x="10.0671%" y="959.50"></text></g><g><title>__rdl_alloc (8 samples, 0.30%)</title><rect x="9.8171%" y="933" width="0.2986%" height="15" fill="rgb(229,129,53)" fg:x="263" fg:w="8"/><text x="10.0671%" y="943.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (8 samples, 0.30%)</title><rect x="9.8171%" y="917" width="0.2986%" height="15" fill="rgb(234,188,29)" fg:x="263" fg:w="8"/><text x="10.0671%" y="927.50"></text></g><g><title>malloc (8 samples, 0.30%)</title><rect x="9.8171%" y="901" width="0.2986%" height="15" fill="rgb(246,141,4)" fg:x="263" fg:w="8"/><text x="10.0671%" y="911.50"></text></g><g><title>[libc.so.6] (4 samples, 0.15%)</title><rect x="9.9664%" y="885" width="0.1493%" height="15" fill="rgb(229,23,39)" fg:x="267" fg:w="4"/><text x="10.2164%" y="895.50"></text></g><g><title>poem_openapi::types::external::string::&lt;impl poem_openapi::types::ToJSON for alloc::string::String&gt;::to_json (10 samples, 0.37%)</title><rect x="9.7798%" y="1125" width="0.3733%" height="15" fill="rgb(206,12,3)" fg:x="262" fg:w="10"/><text x="10.0298%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.37%)</title><rect x="9.7798%" y="1109" width="0.3733%" height="15" fill="rgb(252,226,20)" fg:x="262" fg:w="10"/><text x="10.0298%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.34%)</title><rect x="9.8171%" y="1093" width="0.3359%" height="15" fill="rgb(216,123,35)" fg:x="263" fg:w="9"/><text x="10.0671%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.34%)</title><rect x="9.8171%" y="1077" width="0.3359%" height="15" fill="rgb(212,68,40)" fg:x="263" fg:w="9"/><text x="10.0671%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.34%)</title><rect x="9.8171%" y="1061" width="0.3359%" height="15" fill="rgb(254,125,32)" fg:x="263" fg:w="9"/><text x="10.0671%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.34%)</title><rect x="9.8171%" y="1045" width="0.3359%" height="15" fill="rgb(253,97,22)" fg:x="263" fg:w="9"/><text x="10.0671%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="10.1157%" y="1029" width="0.0373%" height="15" fill="rgb(241,101,14)" fg:x="271" fg:w="1"/><text x="10.3657%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="10.1157%" y="1013" width="0.0373%" height="15" fill="rgb(238,103,29)" fg:x="271" fg:w="1"/><text x="10.3657%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="10.1157%" y="997" width="0.0373%" height="15" fill="rgb(233,195,47)" fg:x="271" fg:w="1"/><text x="10.3657%" y="1007.50"></text></g><g><title>&lt;fabseapi::Car as poem_openapi::types::ToJSON&gt;::to_json (101 samples, 3.77%)</title><rect x="6.9056%" y="1141" width="3.7701%" height="15" fill="rgb(246,218,30)" fg:x="185" fg:w="101"/><text x="7.1556%" y="1151.50">&lt;fab..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (14 samples, 0.52%)</title><rect x="10.1530%" y="1125" width="0.5226%" height="15" fill="rgb(219,145,47)" fg:x="272" fg:w="14"/><text x="10.4030%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.41%)</title><rect x="10.2650%" y="1109" width="0.4106%" height="15" fill="rgb(243,12,26)" fg:x="275" fg:w="11"/><text x="10.5150%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (4 samples, 0.15%)</title><rect x="10.5263%" y="1093" width="0.1493%" height="15" fill="rgb(214,87,16)" fg:x="282" fg:w="4"/><text x="10.7763%" y="1103.50"></text></g><g><title>&lt;fabseapi::TrafficLight as poem_openapi::types::ToJSON&gt;::to_json (1 samples, 0.04%)</title><rect x="10.6756%" y="1141" width="0.0373%" height="15" fill="rgb(208,99,42)" fg:x="286" fg:w="1"/><text x="10.9256%" y="1151.50"></text></g><g><title>poem_openapi::types::external::string::&lt;impl poem_openapi::types::ToJSON for alloc::string::String&gt;::to_json (1 samples, 0.04%)</title><rect x="10.6756%" y="1125" width="0.0373%" height="15" fill="rgb(253,99,2)" fg:x="286" fg:w="1"/><text x="10.9256%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="10.6756%" y="1109" width="0.0373%" height="15" fill="rgb(220,168,23)" fg:x="286" fg:w="1"/><text x="10.9256%" y="1119.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (128 samples, 4.78%)</title><rect x="6.5696%" y="1205" width="4.7779%" height="15" fill="rgb(242,38,24)" fg:x="176" fg:w="128"/><text x="6.8196%" y="1215.50">core::..</text></g><g><title>core::ops::function::FnOnce::call_once (128 samples, 4.78%)</title><rect x="6.5696%" y="1189" width="4.7779%" height="15" fill="rgb(225,182,9)" fg:x="176" fg:w="128"/><text x="6.8196%" y="1199.50">core::..</text></g><g><title>&lt;poem_openapi::payload::json::Json&lt;T&gt; as poem::web::IntoResponse&gt;::into_response (128 samples, 4.78%)</title><rect x="6.5696%" y="1173" width="4.7779%" height="15" fill="rgb(243,178,37)" fg:x="176" fg:w="128"/><text x="6.8196%" y="1183.50">&lt;poem_..</text></g><g><title>poem_openapi::types::external::vec::&lt;impl poem_openapi::types::ToJSON for alloc::vec::Vec&lt;T&gt;&gt;::to_json (119 samples, 4.44%)</title><rect x="6.9056%" y="1157" width="4.4420%" height="15" fill="rgb(232,139,19)" fg:x="185" fg:w="119"/><text x="7.1556%" y="1167.50">poem_..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.63%)</title><rect x="10.7130%" y="1141" width="0.6346%" height="15" fill="rgb(225,201,24)" fg:x="287" fg:w="17"/><text x="10.9630%" y="1151.50"></text></g><g><title>core::ptr::write (17 samples, 0.63%)</title><rect x="10.7130%" y="1125" width="0.6346%" height="15" fill="rgb(221,47,46)" fg:x="287" fg:w="17"/><text x="10.9630%" y="1135.50"></text></g><g><title>fabseapi::Api::traffic_light_retrieve::_{{closure}} (1 samples, 0.04%)</title><rect x="11.3475%" y="1205" width="0.0373%" height="15" fill="rgb(249,23,13)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1215.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch (1 samples, 0.04%)</title><rect x="11.3475%" y="1189" width="0.0373%" height="15" fill="rgb(219,9,5)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1199.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many (1 samples, 0.04%)</title><rect x="11.3475%" y="1173" width="0.0373%" height="15" fill="rgb(254,171,16)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1183.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many (1 samples, 0.04%)</title><rect x="11.3475%" y="1157" width="0.0373%" height="15" fill="rgb(230,171,20)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1167.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="11.3475%" y="1141" width="0.0373%" height="15" fill="rgb(210,71,41)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1151.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="11.3475%" y="1125" width="0.0373%" height="15" fill="rgb(206,173,20)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="11.3475%" y="1109" width="0.0373%" height="15" fill="rgb(233,88,34)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="11.3475%" y="1093" width="0.0373%" height="15" fill="rgb(223,209,46)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="11.3475%" y="1077" width="0.0373%" height="15" fill="rgb(250,43,18)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="11.3475%" y="1061" width="0.0373%" height="15" fill="rgb(208,13,10)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="11.3475%" y="1045" width="0.0373%" height="15" fill="rgb(212,200,36)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="11.3475%" y="1029" width="0.0373%" height="15" fill="rgb(225,90,30)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1039.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="11.3475%" y="1013" width="0.0373%" height="15" fill="rgb(236,182,39)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1023.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="11.3475%" y="997" width="0.0373%" height="15" fill="rgb(212,144,35)" fg:x="304" fg:w="1"/><text x="11.5975%" y="1007.50"></text></g><g><title>&lt;time::time::Time as core::fmt::Display&gt;::fmt (2 samples, 0.07%)</title><rect x="11.7581%" y="1173" width="0.0747%" height="15" fill="rgb(228,63,44)" fg:x="315" fg:w="2"/><text x="12.0081%" y="1183.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.04%)</title><rect x="11.8328%" y="1173" width="0.0373%" height="15" fill="rgb(228,109,6)" fg:x="317" fg:w="1"/><text x="12.0828%" y="1183.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (4 samples, 0.15%)</title><rect x="11.7581%" y="1189" width="0.1493%" height="15" fill="rgb(238,117,24)" fg:x="315" fg:w="4"/><text x="12.0081%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.04%)</title><rect x="11.8701%" y="1173" width="0.0373%" height="15" fill="rgb(242,26,26)" fg:x="318" fg:w="1"/><text x="12.1201%" y="1183.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="11.9074%" y="1189" width="0.0747%" height="15" fill="rgb(221,92,48)" fg:x="319" fg:w="2"/><text x="12.1574%" y="1199.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="11.9074%" y="1173" width="0.0747%" height="15" fill="rgb(209,209,32)" fg:x="319" fg:w="2"/><text x="12.1574%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="11.9448%" y="1157" width="0.0373%" height="15" fill="rgb(221,70,22)" fg:x="320" fg:w="1"/><text x="12.1948%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="11.9448%" y="1141" width="0.0373%" height="15" fill="rgb(248,145,5)" fg:x="320" fg:w="1"/><text x="12.1948%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.07%)</title><rect x="12.0567%" y="1173" width="0.0747%" height="15" fill="rgb(226,116,26)" fg:x="323" fg:w="2"/><text x="12.3067%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.30%)</title><rect x="11.9821%" y="1189" width="0.2986%" height="15" fill="rgb(244,5,17)" fg:x="321" fg:w="8"/><text x="12.2321%" y="1199.50"></text></g><g><title>core::ptr::write (4 samples, 0.15%)</title><rect x="12.1314%" y="1173" width="0.1493%" height="15" fill="rgb(252,159,33)" fg:x="325" fg:w="4"/><text x="12.3814%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (243 samples, 9.07%)</title><rect x="3.2475%" y="1621" width="9.0705%" height="15" fill="rgb(206,71,0)" fg:x="87" fg:w="243"/><text x="3.4975%" y="1631.50">&lt;alloc::boxed..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (243 samples, 9.07%)</title><rect x="3.2475%" y="1605" width="9.0705%" height="15" fill="rgb(233,118,54)" fg:x="87" fg:w="243"/><text x="3.4975%" y="1615.50">&lt;dyn poem::en..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (243 samples, 9.07%)</title><rect x="3.2475%" y="1589" width="9.0705%" height="15" fill="rgb(234,83,48)" fg:x="87" fg:w="243"/><text x="3.4975%" y="1599.50">&lt;core::pin::P..</text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1573" width="5.8604%" height="15" fill="rgb(228,3,54)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1583.50">&lt;poem::..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1557" width="5.8604%" height="15" fill="rgb(226,155,13)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1567.50">&lt;alloc:..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1541" width="5.8604%" height="15" fill="rgb(241,28,37)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1551.50">&lt;alloc:..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1525" width="5.8604%" height="15" fill="rgb(233,93,10)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1535.50">&lt;dyn po..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (157 samples, 5.86%)</title><rect x="6.4576%" y="1509" width="5.8604%" height="15" fill="rgb(225,113,19)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1519.50">&lt;core::..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1493" width="5.8604%" height="15" fill="rgb(241,2,18)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1503.50">&lt;poem::..</text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1477" width="5.8604%" height="15" fill="rgb(228,207,21)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1487.50">&lt;poem::..</text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1461" width="5.8604%" height="15" fill="rgb(213,211,35)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1471.50">&lt;poem::..</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1445" width="5.8604%" height="15" fill="rgb(209,83,10)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1455.50">&lt;poem::..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1429" width="5.8604%" height="15" fill="rgb(209,164,1)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1439.50">&lt;alloc:..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1413" width="5.8604%" height="15" fill="rgb(213,184,43)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1423.50">&lt;dyn po..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (157 samples, 5.86%)</title><rect x="6.4576%" y="1397" width="5.8604%" height="15" fill="rgb(231,61,34)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1407.50">&lt;core::..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1381" width="5.8604%" height="15" fill="rgb(235,75,3)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1391.50">&lt;poem::..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (157 samples, 5.86%)</title><rect x="6.4576%" y="1365" width="5.8604%" height="15" fill="rgb(220,106,47)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1375.50">&lt;future..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1349" width="5.8604%" height="15" fill="rgb(210,196,33)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1359.50">&lt;alloc:..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1333" width="5.8604%" height="15" fill="rgb(229,154,42)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1343.50">&lt;dyn po..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (157 samples, 5.86%)</title><rect x="6.4576%" y="1317" width="5.8604%" height="15" fill="rgb(228,114,26)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1327.50">&lt;core::..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1301" width="5.8604%" height="15" fill="rgb(208,144,1)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1311.50">&lt;poem::..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1285" width="5.8604%" height="15" fill="rgb(239,112,37)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1295.50">&lt;alloc:..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1269" width="5.8604%" height="15" fill="rgb(210,96,50)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1279.50">&lt;dyn po..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (157 samples, 5.86%)</title><rect x="6.4576%" y="1253" width="5.8604%" height="15" fill="rgb(222,178,2)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1263.50">&lt;core::..</text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (157 samples, 5.86%)</title><rect x="6.4576%" y="1237" width="5.8604%" height="15" fill="rgb(226,74,18)" fg:x="173" fg:w="157"/><text x="6.7076%" y="1247.50">&lt;poem::..</text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (156 samples, 5.82%)</title><rect x="6.4950%" y="1221" width="5.8231%" height="15" fill="rgb(225,67,54)" fg:x="174" fg:w="156"/><text x="6.7450%" y="1231.50">&lt;fabsea..</text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (25 samples, 0.93%)</title><rect x="11.3848%" y="1205" width="0.9332%" height="15" fill="rgb(251,92,32)" fg:x="305" fg:w="25"/><text x="11.6348%" y="1215.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="12.2807%" y="1189" width="0.0373%" height="15" fill="rgb(228,149,22)" fg:x="329" fg:w="1"/><text x="12.5307%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.07%)</title><rect x="12.3927%" y="1205" width="0.0747%" height="15" fill="rgb(243,54,13)" fg:x="332" fg:w="2"/><text x="12.6427%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="12.4300%" y="1189" width="0.0373%" height="15" fill="rgb(243,180,28)" fg:x="333" fg:w="1"/><text x="12.6800%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="12.7286%" y="1173" width="0.0373%" height="15" fill="rgb(208,167,24)" fg:x="341" fg:w="1"/><text x="12.9786%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="12.7660%" y="1173" width="0.0373%" height="15" fill="rgb(245,73,45)" fg:x="342" fg:w="1"/><text x="13.0160%" y="1183.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.07%)</title><rect x="12.8033%" y="1173" width="0.0747%" height="15" fill="rgb(237,203,48)" fg:x="343" fg:w="2"/><text x="13.0533%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2 samples, 0.07%)</title><rect x="12.8033%" y="1157" width="0.0747%" height="15" fill="rgb(211,197,16)" fg:x="343" fg:w="2"/><text x="13.0533%" y="1167.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (2 samples, 0.07%)</title><rect x="12.8033%" y="1141" width="0.0747%" height="15" fill="rgb(243,99,51)" fg:x="343" fg:w="2"/><text x="13.0533%" y="1151.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.07%)</title><rect x="12.8033%" y="1125" width="0.0747%" height="15" fill="rgb(215,123,29)" fg:x="343" fg:w="2"/><text x="13.0533%" y="1135.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="12.8406%" y="1109" width="0.0373%" height="15" fill="rgb(239,186,37)" fg:x="344" fg:w="1"/><text x="13.0906%" y="1119.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.04%)</title><rect x="12.8406%" y="1093" width="0.0373%" height="15" fill="rgb(252,136,39)" fg:x="344" fg:w="1"/><text x="13.0906%" y="1103.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="12.8406%" y="1077" width="0.0373%" height="15" fill="rgb(223,213,32)" fg:x="344" fg:w="1"/><text x="13.0906%" y="1087.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.04%)</title><rect x="12.8406%" y="1061" width="0.0373%" height="15" fill="rgb(233,115,5)" fg:x="344" fg:w="1"/><text x="13.0906%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="12.8406%" y="1045" width="0.0373%" height="15" fill="rgb(207,226,44)" fg:x="344" fg:w="1"/><text x="13.0906%" y="1055.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="12.8406%" y="1029" width="0.0373%" height="15" fill="rgb(208,126,0)" fg:x="344" fg:w="1"/><text x="13.0906%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="12.8406%" y="1013" width="0.0373%" height="15" fill="rgb(244,66,21)" fg:x="344" fg:w="1"/><text x="13.0906%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="12.8406%" y="997" width="0.0373%" height="15" fill="rgb(222,97,12)" fg:x="344" fg:w="1"/><text x="13.0906%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="12.8406%" y="981" width="0.0373%" height="15" fill="rgb(219,213,19)" fg:x="344" fg:w="1"/><text x="13.0906%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="12.8406%" y="965" width="0.0373%" height="15" fill="rgb(252,169,30)" fg:x="344" fg:w="1"/><text x="13.0906%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="12.8406%" y="949" width="0.0373%" height="15" fill="rgb(206,32,51)" fg:x="344" fg:w="1"/><text x="13.0906%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="12.8406%" y="933" width="0.0373%" height="15" fill="rgb(250,172,42)" fg:x="344" fg:w="1"/><text x="13.0906%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="12.8406%" y="917" width="0.0373%" height="15" fill="rgb(209,34,43)" fg:x="344" fg:w="1"/><text x="13.0906%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="12.8406%" y="901" width="0.0373%" height="15" fill="rgb(223,11,35)" fg:x="344" fg:w="1"/><text x="13.0906%" y="911.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="12.8406%" y="885" width="0.0373%" height="15" fill="rgb(251,219,26)" fg:x="344" fg:w="1"/><text x="13.0906%" y="895.50"></text></g><g><title>core::str::&lt;impl str&gt;::strip_suffix (1 samples, 0.04%)</title><rect x="12.8779%" y="1173" width="0.0373%" height="15" fill="rgb(231,119,3)" fg:x="345" fg:w="1"/><text x="13.1279%" y="1183.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_suffix_of (1 samples, 0.04%)</title><rect x="12.8779%" y="1157" width="0.0373%" height="15" fill="rgb(216,97,11)" fg:x="345" fg:w="1"/><text x="13.1279%" y="1167.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (1 samples, 0.04%)</title><rect x="12.8779%" y="1141" width="0.0373%" height="15" fill="rgb(223,59,9)" fg:x="345" fg:w="1"/><text x="13.1279%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (1 samples, 0.04%)</title><rect x="12.8779%" y="1125" width="0.0373%" height="15" fill="rgb(233,93,31)" fg:x="345" fg:w="1"/><text x="13.1279%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="12.8779%" y="1109" width="0.0373%" height="15" fill="rgb(239,81,33)" fg:x="345" fg:w="1"/><text x="13.1279%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1 samples, 0.04%)</title><rect x="12.8779%" y="1093" width="0.0373%" height="15" fill="rgb(213,120,34)" fg:x="345" fg:w="1"/><text x="13.1279%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="12.8779%" y="1077" width="0.0373%" height="15" fill="rgb(243,49,53)" fg:x="345" fg:w="1"/><text x="13.1279%" y="1087.50"></text></g><g><title>poem::request::Request::data (2 samples, 0.07%)</title><rect x="12.9153%" y="1173" width="0.0747%" height="15" fill="rgb(247,216,33)" fg:x="346" fg:w="2"/><text x="13.1653%" y="1183.50"></text></g><g><title>http::extensions::Extensions::get (2 samples, 0.07%)</title><rect x="12.9153%" y="1157" width="0.0747%" height="15" fill="rgb(226,26,14)" fg:x="346" fg:w="2"/><text x="13.1653%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.07%)</title><rect x="12.9153%" y="1141" width="0.0747%" height="15" fill="rgb(215,49,53)" fg:x="346" fg:w="2"/><text x="13.1653%" y="1151.50"></text></g><g><title>http::extensions::Extensions::get::_{{closure}} (2 samples, 0.07%)</title><rect x="12.9153%" y="1125" width="0.0747%" height="15" fill="rgb(245,162,40)" fg:x="346" fg:w="2"/><text x="13.1653%" y="1135.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (2 samples, 0.07%)</title><rect x="12.9153%" y="1109" width="0.0747%" height="15" fill="rgb(229,68,17)" fg:x="346" fg:w="2"/><text x="13.1653%" y="1119.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2 samples, 0.07%)</title><rect x="12.9153%" y="1093" width="0.0747%" height="15" fill="rgb(213,182,10)" fg:x="346" fg:w="2"/><text x="13.1653%" y="1103.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2 samples, 0.07%)</title><rect x="12.9153%" y="1077" width="0.0747%" height="15" fill="rgb(245,125,30)" fg:x="346" fg:w="2"/><text x="13.1653%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="12.9899%" y="1093" width="0.0373%" height="15" fill="rgb(232,202,2)" fg:x="348" fg:w="1"/><text x="13.2399%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="12.9899%" y="1077" width="0.0373%" height="15" fill="rgb(237,140,51)" fg:x="348" fg:w="1"/><text x="13.2399%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.04%)</title><rect x="12.9899%" y="1061" width="0.0373%" height="15" fill="rgb(236,157,25)" fg:x="348" fg:w="1"/><text x="13.2399%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.04%)</title><rect x="12.9899%" y="1045" width="0.0373%" height="15" fill="rgb(219,209,0)" fg:x="348" fg:w="1"/><text x="13.2399%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.04%)</title><rect x="12.9899%" y="1029" width="0.0373%" height="15" fill="rgb(240,116,54)" fg:x="348" fg:w="1"/><text x="13.2399%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.04%)</title><rect x="12.9899%" y="1013" width="0.0373%" height="15" fill="rgb(216,10,36)" fg:x="348" fg:w="1"/><text x="13.2399%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.04%)</title><rect x="12.9899%" y="997" width="0.0373%" height="15" fill="rgb(222,72,44)" fg:x="348" fg:w="1"/><text x="13.2399%" y="1007.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.04%)</title><rect x="12.9899%" y="981" width="0.0373%" height="15" fill="rgb(232,159,9)" fg:x="348" fg:w="1"/><text x="13.2399%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="12.9899%" y="965" width="0.0373%" height="15" fill="rgb(210,39,32)" fg:x="348" fg:w="1"/><text x="13.2399%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="12.9899%" y="949" width="0.0373%" height="15" fill="rgb(216,194,45)" fg:x="348" fg:w="1"/><text x="13.2399%" y="959.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="12.9899%" y="933" width="0.0373%" height="15" fill="rgb(218,18,35)" fg:x="348" fg:w="1"/><text x="13.2399%" y="943.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="12.9899%" y="917" width="0.0373%" height="15" fill="rgb(207,83,51)" fg:x="348" fg:w="1"/><text x="13.2399%" y="927.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="12.9899%" y="901" width="0.0373%" height="15" fill="rgb(225,63,43)" fg:x="348" fg:w="1"/><text x="13.2399%" y="911.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="12.9899%" y="885" width="0.0373%" height="15" fill="rgb(207,57,36)" fg:x="348" fg:w="1"/><text x="13.2399%" y="895.50"></text></g><g><title>poem::request::Request::set_data (2 samples, 0.07%)</title><rect x="12.9899%" y="1173" width="0.0747%" height="15" fill="rgb(216,99,33)" fg:x="348" fg:w="2"/><text x="13.2399%" y="1183.50"></text></g><g><title>http::extensions::Extensions::insert (2 samples, 0.07%)</title><rect x="12.9899%" y="1157" width="0.0747%" height="15" fill="rgb(225,42,16)" fg:x="348" fg:w="2"/><text x="13.2399%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.07%)</title><rect x="12.9899%" y="1141" width="0.0747%" height="15" fill="rgb(220,201,45)" fg:x="348" fg:w="2"/><text x="13.2399%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.07%)</title><rect x="12.9899%" y="1125" width="0.0747%" height="15" fill="rgb(225,33,4)" fg:x="348" fg:w="2"/><text x="13.2399%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.07%)</title><rect x="12.9899%" y="1109" width="0.0747%" height="15" fill="rgb(224,33,50)" fg:x="348" fg:w="2"/><text x="13.2399%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.04%)</title><rect x="13.0272%" y="1093" width="0.0373%" height="15" fill="rgb(246,198,51)" fg:x="349" fg:w="1"/><text x="13.2772%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="13.0272%" y="1077" width="0.0373%" height="15" fill="rgb(205,22,4)" fg:x="349" fg:w="1"/><text x="13.2772%" y="1087.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.04%)</title><rect x="13.0272%" y="1061" width="0.0373%" height="15" fill="rgb(206,3,8)" fg:x="349" fg:w="1"/><text x="13.2772%" y="1071.50"></text></g><g><title>poem::response::Response::set_data (2 samples, 0.07%)</title><rect x="13.0646%" y="1173" width="0.0747%" height="15" fill="rgb(251,23,15)" fg:x="350" fg:w="2"/><text x="13.3146%" y="1183.50"></text></g><g><title>http::extensions::Extensions::insert (2 samples, 0.07%)</title><rect x="13.0646%" y="1157" width="0.0747%" height="15" fill="rgb(252,88,28)" fg:x="350" fg:w="2"/><text x="13.3146%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.04%)</title><rect x="13.1019%" y="1141" width="0.0373%" height="15" fill="rgb(212,127,14)" fg:x="351" fg:w="1"/><text x="13.3519%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="13.1019%" y="1125" width="0.0373%" height="15" fill="rgb(247,145,37)" fg:x="351" fg:w="1"/><text x="13.3519%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.04%)</title><rect x="13.1019%" y="1109" width="0.0373%" height="15" fill="rgb(209,117,53)" fg:x="351" fg:w="1"/><text x="13.3519%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="13.1019%" y="1093" width="0.0373%" height="15" fill="rgb(212,90,42)" fg:x="351" fg:w="1"/><text x="13.3519%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::strip_prefix (2 samples, 0.07%)</title><rect x="13.1392%" y="1141" width="0.0747%" height="15" fill="rgb(218,164,37)" fg:x="352" fg:w="2"/><text x="13.3892%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.07%)</title><rect x="13.1392%" y="1125" width="0.0747%" height="15" fill="rgb(246,65,34)" fg:x="352" fg:w="2"/><text x="13.3892%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (2 samples, 0.07%)</title><rect x="13.1392%" y="1109" width="0.0747%" height="15" fill="rgb(231,100,33)" fg:x="352" fg:w="2"/><text x="13.3892%" y="1119.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.07%)</title><rect x="13.1392%" y="1093" width="0.0747%" height="15" fill="rgb(228,126,14)" fg:x="352" fg:w="2"/><text x="13.3892%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="13.1766%" y="1077" width="0.0373%" height="15" fill="rgb(215,173,21)" fg:x="353" fg:w="1"/><text x="13.4266%" y="1087.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (19 samples, 0.71%)</title><rect x="12.5793%" y="1189" width="0.7092%" height="15" fill="rgb(210,6,40)" fg:x="337" fg:w="19"/><text x="12.8293%" y="1199.50"></text></g><g><title>poem::route::internal::radix_tree::RadixTree&lt;T&gt;::matches (4 samples, 0.15%)</title><rect x="13.1392%" y="1173" width="0.1493%" height="15" fill="rgb(212,48,18)" fg:x="352" fg:w="4"/><text x="13.3892%" y="1183.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::matches (4 samples, 0.15%)</title><rect x="13.1392%" y="1157" width="0.1493%" height="15" fill="rgb(230,214,11)" fg:x="352" fg:w="4"/><text x="13.3892%" y="1167.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::find_static_child (2 samples, 0.07%)</title><rect x="13.2139%" y="1141" width="0.0747%" height="15" fill="rgb(254,105,39)" fg:x="354" fg:w="2"/><text x="13.4639%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.07%)</title><rect x="13.2139%" y="1125" width="0.0747%" height="15" fill="rgb(245,158,5)" fg:x="354" fg:w="2"/><text x="13.4639%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.07%)</title><rect x="13.2139%" y="1109" width="0.0747%" height="15" fill="rgb(249,208,11)" fg:x="354" fg:w="2"/><text x="13.4639%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::web::cookie::CookieJar&gt; (1 samples, 0.04%)</title><rect x="13.2885%" y="1189" width="0.0373%" height="15" fill="rgb(210,39,28)" fg:x="356" fg:w="1"/><text x="13.5385%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,cookie::jar::CookieJar&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="13.2885%" y="1173" width="0.0373%" height="15" fill="rgb(211,56,53)" fg:x="356" fg:w="1"/><text x="13.5385%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="13.2885%" y="1157" width="0.0373%" height="15" fill="rgb(226,201,30)" fg:x="356" fg:w="1"/><text x="13.5385%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.04%)</title><rect x="13.2885%" y="1141" width="0.0373%" height="15" fill="rgb(239,101,34)" fg:x="356" fg:w="1"/><text x="13.5385%" y="1151.50"></text></g><g><title>core::mem::drop (1 samples, 0.04%)</title><rect x="13.2885%" y="1125" width="0.0373%" height="15" fill="rgb(226,209,5)" fg:x="356" fg:w="1"/><text x="13.5385%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,cookie::jar::CookieJar&gt;,&amp;alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="13.2885%" y="1109" width="0.0373%" height="15" fill="rgb(250,105,47)" fg:x="356" fg:w="1"/><text x="13.5385%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="13.2885%" y="1093" width="0.0373%" height="15" fill="rgb(230,72,3)" fg:x="356" fg:w="1"/><text x="13.5385%" y="1103.50"></text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (24 samples, 0.90%)</title><rect x="12.4673%" y="1205" width="0.8959%" height="15" fill="rgb(232,218,39)" fg:x="334" fg:w="24"/><text x="12.7173%" y="1215.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="13.3259%" y="1189" width="0.0373%" height="15" fill="rgb(248,166,6)" fg:x="357" fg:w="1"/><text x="13.5759%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="13.3632%" y="1189" width="0.0373%" height="15" fill="rgb(247,89,20)" fg:x="358" fg:w="1"/><text x="13.6132%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.15%)</title><rect x="13.4005%" y="1077" width="0.1493%" height="15" fill="rgb(248,130,54)" fg:x="359" fg:w="4"/><text x="13.6505%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.15%)</title><rect x="13.4005%" y="1061" width="0.1493%" height="15" fill="rgb(234,196,4)" fg:x="359" fg:w="4"/><text x="13.6505%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.15%)</title><rect x="13.4005%" y="1045" width="0.1493%" height="15" fill="rgb(250,143,31)" fg:x="359" fg:w="4"/><text x="13.6505%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.15%)</title><rect x="13.4005%" y="1029" width="0.1493%" height="15" fill="rgb(211,110,34)" fg:x="359" fg:w="4"/><text x="13.6505%" y="1039.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.15%)</title><rect x="13.4005%" y="1013" width="0.1493%" height="15" fill="rgb(215,124,48)" fg:x="359" fg:w="4"/><text x="13.6505%" y="1023.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.15%)</title><rect x="13.4005%" y="997" width="0.1493%" height="15" fill="rgb(216,46,13)" fg:x="359" fg:w="4"/><text x="13.6505%" y="1007.50"></text></g><g><title>__rdl_realloc (4 samples, 0.15%)</title><rect x="13.4005%" y="981" width="0.1493%" height="15" fill="rgb(205,184,25)" fg:x="359" fg:w="4"/><text x="13.6505%" y="991.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.15%)</title><rect x="13.4005%" y="965" width="0.1493%" height="15" fill="rgb(228,1,10)" fg:x="359" fg:w="4"/><text x="13.6505%" y="975.50"></text></g><g><title>realloc (4 samples, 0.15%)</title><rect x="13.4005%" y="949" width="0.1493%" height="15" fill="rgb(213,116,27)" fg:x="359" fg:w="4"/><text x="13.6505%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="13.4752%" y="933" width="0.0747%" height="15" fill="rgb(241,95,50)" fg:x="361" fg:w="2"/><text x="13.7252%" y="943.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="13.4752%" y="917" width="0.0747%" height="15" fill="rgb(238,48,32)" fg:x="361" fg:w="2"/><text x="13.7252%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.19%)</title><rect x="13.4005%" y="1093" width="0.1866%" height="15" fill="rgb(235,113,49)" fg:x="359" fg:w="5"/><text x="13.6505%" y="1103.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="13.5498%" y="1077" width="0.0373%" height="15" fill="rgb(205,127,43)" fg:x="363" fg:w="1"/><text x="13.7998%" y="1087.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.07%)</title><rect x="13.5872%" y="1061" width="0.0747%" height="15" fill="rgb(250,162,2)" fg:x="364" fg:w="2"/><text x="13.8372%" y="1071.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for (T0,T1)&gt;::deserialize (2 samples, 0.07%)</title><rect x="13.5872%" y="1045" width="0.0747%" height="15" fill="rgb(220,13,41)" fg:x="364" fg:w="2"/><text x="13.8372%" y="1055.50"></text></g><g><title>&lt;serde::de::value::PairDeserializer&lt;A,B,E&gt; as serde::de::Deserializer&gt;::deserialize_tuple (2 samples, 0.07%)</title><rect x="13.5872%" y="1029" width="0.0747%" height="15" fill="rgb(249,221,25)" fg:x="364" fg:w="2"/><text x="13.8372%" y="1039.50"></text></g><g><title>&lt;serde::de::value::PairDeserializer&lt;A,B,E&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 0.07%)</title><rect x="13.5872%" y="1013" width="0.0747%" height="15" fill="rgb(215,208,19)" fg:x="364" fg:w="2"/><text x="13.8372%" y="1023.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for (T0,T1)&gt;::deserialize::TupleVisitor&lt;T0,T1&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.07%)</title><rect x="13.5872%" y="997" width="0.0747%" height="15" fill="rgb(236,175,2)" fg:x="364" fg:w="2"/><text x="13.8372%" y="1007.50"></text></g><g><title>&lt;&amp;mut A as serde::de::SeqAccess&gt;::next_element (2 samples, 0.07%)</title><rect x="13.5872%" y="981" width="0.0747%" height="15" fill="rgb(241,52,2)" fg:x="364" fg:w="2"/><text x="13.8372%" y="991.50"></text></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.07%)</title><rect x="13.5872%" y="965" width="0.0747%" height="15" fill="rgb(248,140,14)" fg:x="364" fg:w="2"/><text x="13.8372%" y="975.50"></text></g><g><title>&lt;serde::de::value::PairVisitor&lt;A,B,E&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.07%)</title><rect x="13.5872%" y="949" width="0.0747%" height="15" fill="rgb(253,22,42)" fg:x="364" fg:w="2"/><text x="13.8372%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.07%)</title><rect x="13.5872%" y="933" width="0.0747%" height="15" fill="rgb(234,61,47)" fg:x="364" fg:w="2"/><text x="13.8372%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.07%)</title><rect x="13.5872%" y="917" width="0.0747%" height="15" fill="rgb(208,226,15)" fg:x="364" fg:w="2"/><text x="13.8372%" y="927.50"></text></g><g><title>&lt;serde_urlencoded::de::Part as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.07%)</title><rect x="13.5872%" y="901" width="0.0747%" height="15" fill="rgb(217,221,4)" fg:x="364" fg:w="2"/><text x="13.8372%" y="911.50"></text></g><g><title>&lt;serde_urlencoded::de::Part as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.07%)</title><rect x="13.5872%" y="885" width="0.0747%" height="15" fill="rgb(212,174,34)" fg:x="364" fg:w="2"/><text x="13.8372%" y="895.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.07%)</title><rect x="13.5872%" y="869" width="0.0747%" height="15" fill="rgb(253,83,4)" fg:x="364" fg:w="2"/><text x="13.8372%" y="879.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.07%)</title><rect x="13.5872%" y="853" width="0.0747%" height="15" fill="rgb(250,195,49)" fg:x="364" fg:w="2"/><text x="13.8372%" y="863.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.07%)</title><rect x="13.5872%" y="837" width="0.0747%" height="15" fill="rgb(241,192,25)" fg:x="364" fg:w="2"/><text x="13.8372%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.07%)</title><rect x="13.5872%" y="821" width="0.0747%" height="15" fill="rgb(208,124,10)" fg:x="364" fg:w="2"/><text x="13.8372%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.07%)</title><rect x="13.5872%" y="805" width="0.0747%" height="15" fill="rgb(222,33,0)" fg:x="364" fg:w="2"/><text x="13.8372%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.07%)</title><rect x="13.5872%" y="789" width="0.0747%" height="15" fill="rgb(234,209,28)" fg:x="364" fg:w="2"/><text x="13.8372%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.07%)</title><rect x="13.5872%" y="773" width="0.0747%" height="15" fill="rgb(224,11,23)" fg:x="364" fg:w="2"/><text x="13.8372%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.07%)</title><rect x="13.5872%" y="757" width="0.0747%" height="15" fill="rgb(232,99,1)" fg:x="364" fg:w="2"/><text x="13.8372%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="13.5872%" y="741" width="0.0747%" height="15" fill="rgb(237,95,45)" fg:x="364" fg:w="2"/><text x="13.8372%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="13.5872%" y="725" width="0.0747%" height="15" fill="rgb(208,109,11)" fg:x="364" fg:w="2"/><text x="13.8372%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.07%)</title><rect x="13.5872%" y="709" width="0.0747%" height="15" fill="rgb(216,190,48)" fg:x="364" fg:w="2"/><text x="13.8372%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="13.5872%" y="693" width="0.0747%" height="15" fill="rgb(251,171,36)" fg:x="364" fg:w="2"/><text x="13.8372%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="13.5872%" y="677" width="0.0747%" height="15" fill="rgb(230,62,22)" fg:x="364" fg:w="2"/><text x="13.8372%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="13.5872%" y="661" width="0.0747%" height="15" fill="rgb(225,114,35)" fg:x="364" fg:w="2"/><text x="13.8372%" y="671.50"></text></g><g><title>__rdl_alloc (2 samples, 0.07%)</title><rect x="13.5872%" y="645" width="0.0747%" height="15" fill="rgb(215,118,42)" fg:x="364" fg:w="2"/><text x="13.8372%" y="655.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.07%)</title><rect x="13.5872%" y="629" width="0.0747%" height="15" fill="rgb(243,119,21)" fg:x="364" fg:w="2"/><text x="13.8372%" y="639.50"></text></g><g><title>malloc (2 samples, 0.07%)</title><rect x="13.5872%" y="613" width="0.0747%" height="15" fill="rgb(252,177,53)" fg:x="364" fg:w="2"/><text x="13.8372%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.11%)</title><rect x="13.6991%" y="933" width="0.1120%" height="15" fill="rgb(237,209,29)" fg:x="367" fg:w="3"/><text x="13.9491%" y="943.50"></text></g><g><title>percent_encoding::&lt;impl core::convert::From&lt;percent_encoding::PercentDecode&gt; for alloc::borrow::Cow&lt;[u8]&gt;&gt;::from (3 samples, 0.11%)</title><rect x="13.6991%" y="917" width="0.1120%" height="15" fill="rgb(212,65,23)" fg:x="367" fg:w="3"/><text x="13.9491%" y="927.50"></text></g><g><title>percent_encoding::PercentDecode::if_any (1 samples, 0.04%)</title><rect x="13.7738%" y="901" width="0.0373%" height="15" fill="rgb(230,222,46)" fg:x="369" fg:w="1"/><text x="14.0238%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="13.7738%" y="885" width="0.0373%" height="15" fill="rgb(215,135,32)" fg:x="369" fg:w="1"/><text x="14.0238%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.04%)</title><rect x="13.7738%" y="869" width="0.0373%" height="15" fill="rgb(246,101,22)" fg:x="369" fg:w="1"/><text x="14.0238%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="13.7738%" y="853" width="0.0373%" height="15" fill="rgb(206,107,13)" fg:x="369" fg:w="1"/><text x="14.0238%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="13.7738%" y="837" width="0.0373%" height="15" fill="rgb(250,100,44)" fg:x="369" fg:w="1"/><text x="14.0238%" y="847.50"></text></g><g><title>&lt;poem_openapi::openapi::OpenApiService&lt;T,W&gt; as poem::endpoint::endpoint::IntoEndpoint&gt;::into_endpoint::extract_query::_{{closure}} (13 samples, 0.49%)</title><rect x="13.3632%" y="1205" width="0.4853%" height="15" fill="rgb(231,147,38)" fg:x="358" fg:w="13"/><text x="13.6132%" y="1215.50"></text></g><g><title>poem::request::Request::params (12 samples, 0.45%)</title><rect x="13.4005%" y="1189" width="0.4479%" height="15" fill="rgb(229,8,40)" fg:x="359" fg:w="12"/><text x="13.6505%" y="1199.50"></text></g><g><title>serde_urlencoded::de::from_str (12 samples, 0.45%)</title><rect x="13.4005%" y="1173" width="0.4479%" height="15" fill="rgb(221,135,30)" fg:x="359" fg:w="12"/><text x="13.6505%" y="1183.50"></text></g><g><title>serde_urlencoded::de::from_bytes (12 samples, 0.45%)</title><rect x="13.4005%" y="1157" width="0.4479%" height="15" fill="rgb(249,193,18)" fg:x="359" fg:w="12"/><text x="13.6505%" y="1167.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (12 samples, 0.45%)</title><rect x="13.4005%" y="1141" width="0.4479%" height="15" fill="rgb(209,133,39)" fg:x="359" fg:w="12"/><text x="13.6505%" y="1151.50"></text></g><g><title>&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (12 samples, 0.45%)</title><rect x="13.4005%" y="1125" width="0.4479%" height="15" fill="rgb(232,100,14)" fg:x="359" fg:w="12"/><text x="13.6505%" y="1135.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (12 samples, 0.45%)</title><rect x="13.4005%" y="1109" width="0.4479%" height="15" fill="rgb(224,185,1)" fg:x="359" fg:w="12"/><text x="13.6505%" y="1119.50"></text></g><g><title>serde::de::SeqAccess::next_element (7 samples, 0.26%)</title><rect x="13.5872%" y="1093" width="0.2613%" height="15" fill="rgb(223,139,8)" fg:x="364" fg:w="7"/><text x="13.8372%" y="1103.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.26%)</title><rect x="13.5872%" y="1077" width="0.2613%" height="15" fill="rgb(232,213,38)" fg:x="364" fg:w="7"/><text x="13.8372%" y="1087.50"></text></g><g><title>serde::de::value::MapDeserializer&lt;I,E&gt;::next_pair (5 samples, 0.19%)</title><rect x="13.6618%" y="1061" width="0.1866%" height="15" fill="rgb(207,94,22)" fg:x="366" fg:w="5"/><text x="13.9118%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.19%)</title><rect x="13.6618%" y="1045" width="0.1866%" height="15" fill="rgb(219,183,54)" fg:x="366" fg:w="5"/><text x="13.9118%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (5 samples, 0.19%)</title><rect x="13.6618%" y="1029" width="0.1866%" height="15" fill="rgb(216,185,54)" fg:x="366" fg:w="5"/><text x="13.9118%" y="1039.50"></text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (5 samples, 0.19%)</title><rect x="13.6618%" y="1013" width="0.1866%" height="15" fill="rgb(254,217,39)" fg:x="366" fg:w="5"/><text x="13.9118%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.19%)</title><rect x="13.6618%" y="997" width="0.1866%" height="15" fill="rgb(240,178,23)" fg:x="366" fg:w="5"/><text x="13.9118%" y="1007.50"></text></g><g><title>&lt;serde_urlencoded::de::PartIterator as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.19%)</title><rect x="13.6618%" y="981" width="0.1866%" height="15" fill="rgb(218,11,47)" fg:x="366" fg:w="5"/><text x="13.9118%" y="991.50"></text></g><g><title>&lt;form_urlencoded::Parse as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.19%)</title><rect x="13.6618%" y="965" width="0.1866%" height="15" fill="rgb(218,51,51)" fg:x="366" fg:w="5"/><text x="13.9118%" y="975.50"></text></g><g><title>form_urlencoded::decode (4 samples, 0.15%)</title><rect x="13.6991%" y="949" width="0.1493%" height="15" fill="rgb(238,126,27)" fg:x="367" fg:w="4"/><text x="13.9491%" y="959.50"></text></g><g><title>form_urlencoded::replace_plus (1 samples, 0.04%)</title><rect x="13.8111%" y="933" width="0.0373%" height="15" fill="rgb(249,202,22)" fg:x="370" fg:w="1"/><text x="14.0611%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (43 samples, 1.61%)</title><rect x="12.3180%" y="1621" width="1.6051%" height="15" fill="rgb(254,195,49)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1631.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (43 samples, 1.61%)</title><rect x="12.3180%" y="1605" width="1.6051%" height="15" fill="rgb(208,123,14)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1615.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (43 samples, 1.61%)</title><rect x="12.3180%" y="1589" width="1.6051%" height="15" fill="rgb(224,200,8)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1599.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (43 samples, 1.61%)</title><rect x="12.3180%" y="1573" width="1.6051%" height="15" fill="rgb(217,61,36)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1583.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (43 samples, 1.61%)</title><rect x="12.3180%" y="1557" width="1.6051%" height="15" fill="rgb(206,35,45)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1567.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (43 samples, 1.61%)</title><rect x="12.3180%" y="1541" width="1.6051%" height="15" fill="rgb(217,65,33)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1551.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (43 samples, 1.61%)</title><rect x="12.3180%" y="1525" width="1.6051%" height="15" fill="rgb(222,158,48)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1535.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (43 samples, 1.61%)</title><rect x="12.3180%" y="1509" width="1.6051%" height="15" fill="rgb(254,2,54)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1519.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (43 samples, 1.61%)</title><rect x="12.3180%" y="1493" width="1.6051%" height="15" fill="rgb(250,143,38)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1503.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1477" width="1.6051%" height="15" fill="rgb(248,25,0)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1487.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1461" width="1.6051%" height="15" fill="rgb(206,152,27)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1471.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1445" width="1.6051%" height="15" fill="rgb(240,77,30)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1455.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1429" width="1.6051%" height="15" fill="rgb(231,5,3)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1439.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (43 samples, 1.61%)</title><rect x="12.3180%" y="1413" width="1.6051%" height="15" fill="rgb(207,226,32)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1423.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1397" width="1.6051%" height="15" fill="rgb(222,207,47)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1407.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1381" width="1.6051%" height="15" fill="rgb(229,115,45)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1391.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1365" width="1.6051%" height="15" fill="rgb(224,191,6)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1375.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1349" width="1.6051%" height="15" fill="rgb(230,227,24)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1359.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (43 samples, 1.61%)</title><rect x="12.3180%" y="1333" width="1.6051%" height="15" fill="rgb(228,80,19)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1343.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1317" width="1.6051%" height="15" fill="rgb(247,229,0)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1301" width="1.6051%" height="15" fill="rgb(237,194,15)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1285" width="1.6051%" height="15" fill="rgb(219,203,20)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1295.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1269" width="1.6051%" height="15" fill="rgb(234,128,8)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (43 samples, 1.61%)</title><rect x="12.3180%" y="1253" width="1.6051%" height="15" fill="rgb(248,202,8)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1263.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (43 samples, 1.61%)</title><rect x="12.3180%" y="1237" width="1.6051%" height="15" fill="rgb(206,104,37)" fg:x="330" fg:w="43"/><text x="12.5680%" y="1247.50"></text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (41 samples, 1.53%)</title><rect x="12.3927%" y="1221" width="1.5304%" height="15" fill="rgb(223,8,27)" fg:x="332" fg:w="41"/><text x="12.6427%" y="1231.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="13.8485%" y="1205" width="0.0747%" height="15" fill="rgb(216,217,28)" fg:x="371" fg:w="2"/><text x="14.0985%" y="1215.50"></text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1621" width="0.0373%" height="15" fill="rgb(249,199,1)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1631.50"></text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1605" width="0.0373%" height="15" fill="rgb(240,85,17)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1615.50"></text></g><g><title>fabseapi::Api::traffic_light_retrieve::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1589" width="0.0373%" height="15" fill="rgb(206,108,45)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1599.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="13.9231%" y="1573" width="0.0373%" height="15" fill="rgb(245,210,41)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1583.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="13.9231%" y="1557" width="0.0373%" height="15" fill="rgb(206,13,37)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1567.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="13.9231%" y="1541" width="0.0373%" height="15" fill="rgb(250,61,18)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1551.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="13.9231%" y="1525" width="0.0373%" height="15" fill="rgb(235,172,48)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1535.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.04%)</title><rect x="13.9231%" y="1509" width="0.0373%" height="15" fill="rgb(249,201,17)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1519.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="13.9231%" y="1493" width="0.0373%" height="15" fill="rgb(219,208,6)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1503.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="13.9231%" y="1477" width="0.0373%" height="15" fill="rgb(248,31,23)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1487.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="13.9231%" y="1461" width="0.0373%" height="15" fill="rgb(245,15,42)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1471.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.04%)</title><rect x="13.9231%" y="1445" width="0.0373%" height="15" fill="rgb(222,217,39)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1455.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.04%)</title><rect x="13.9231%" y="1429" width="0.0373%" height="15" fill="rgb(210,219,27)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1439.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="13.9231%" y="1413" width="0.0373%" height="15" fill="rgb(252,166,36)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="13.9231%" y="1397" width="0.0373%" height="15" fill="rgb(245,132,34)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1407.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1381" width="0.0373%" height="15" fill="rgb(236,54,3)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1391.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1365" width="0.0373%" height="15" fill="rgb(241,173,43)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1375.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1349" width="0.0373%" height="15" fill="rgb(215,190,9)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1359.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1333" width="0.0373%" height="15" fill="rgb(242,101,16)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1343.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="13.9231%" y="1317" width="0.0373%" height="15" fill="rgb(223,190,21)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1327.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1301" width="0.0373%" height="15" fill="rgb(215,228,25)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1311.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::connect::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1285" width="0.0373%" height="15" fill="rgb(225,36,22)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1295.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1269" width="0.0373%" height="15" fill="rgb(251,106,46)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1279.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="13.9231%" y="1253" width="0.0373%" height="15" fill="rgb(208,90,1)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="13.9231%" y="1237" width="0.0373%" height="15" fill="rgb(243,10,4)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1247.50"></text></g><g><title>sqlx_mysql::options::connect::_&lt;impl sqlx_core::connection::ConnectOptions for sqlx_mysql::options::MySqlConnectOptions&gt;::connect::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1221" width="0.0373%" height="15" fill="rgb(212,137,27)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1231.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.04%)</title><rect x="13.9231%" y="1205" width="0.0373%" height="15" fill="rgb(231,220,49)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.04%)</title><rect x="13.9231%" y="1189" width="0.0373%" height="15" fill="rgb(237,96,20)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1199.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1 samples, 0.04%)</title><rect x="13.9231%" y="1173" width="0.0373%" height="15" fill="rgb(239,229,30)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1183.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.04%)</title><rect x="13.9231%" y="1157" width="0.0373%" height="15" fill="rgb(219,65,33)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1167.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="13.9231%" y="1141" width="0.0373%" height="15" fill="rgb(243,134,7)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1151.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.04%)</title><rect x="13.9231%" y="1125" width="0.0373%" height="15" fill="rgb(216,177,54)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1135.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="13.9231%" y="1109" width="0.0373%" height="15" fill="rgb(211,160,20)" fg:x="373" fg:w="1"/><text x="14.1731%" y="1119.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1 samples, 0.04%)</title><rect x="13.9604%" y="1173" width="0.0373%" height="15" fill="rgb(239,85,39)" fg:x="374" fg:w="1"/><text x="14.2104%" y="1183.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="13.9604%" y="1157" width="0.0373%" height="15" fill="rgb(232,125,22)" fg:x="374" fg:w="1"/><text x="14.2104%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (1 samples, 0.04%)</title><rect x="14.0351%" y="1125" width="0.0373%" height="15" fill="rgb(244,57,34)" fg:x="376" fg:w="1"/><text x="14.2851%" y="1135.50"></text></g><g><title>sqlx_core::pool::CloseEvent::do_until::_{{closure}} (2 samples, 0.07%)</title><rect x="14.0724%" y="1125" width="0.0747%" height="15" fill="rgb(214,203,32)" fg:x="377" fg:w="2"/><text x="14.3224%" y="1135.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="14.0724%" y="1109" width="0.0747%" height="15" fill="rgb(207,58,43)" fg:x="377" fg:w="2"/><text x="14.3224%" y="1119.50"></text></g><g><title>sqlx_core::pool::CloseEvent::do_until::_{{closure}}::_{{closure}} (2 samples, 0.07%)</title><rect x="14.0724%" y="1093" width="0.0747%" height="15" fill="rgb(215,193,15)" fg:x="377" fg:w="2"/><text x="14.3224%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="14.0724%" y="1077" width="0.0747%" height="15" fill="rgb(232,15,44)" fg:x="377" fg:w="2"/><text x="14.3224%" y="1087.50"></text></g><g><title>sqlx_core::sync::AsyncSemaphore::acquire::_{{closure}} (2 samples, 0.07%)</title><rect x="14.0724%" y="1061" width="0.0747%" height="15" fill="rgb(212,3,48)" fg:x="377" fg:w="2"/><text x="14.3224%" y="1071.50"></text></g><g><title>tokio::sync::semaphore::Semaphore::acquire_many::_{{closure}} (2 samples, 0.07%)</title><rect x="14.0724%" y="1045" width="0.0747%" height="15" fill="rgb(218,128,7)" fg:x="377" fg:w="2"/><text x="14.3224%" y="1055.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.1097%" y="1029" width="0.0373%" height="15" fill="rgb(226,216,39)" fg:x="378" fg:w="1"/><text x="14.3597%" y="1039.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (1 samples, 0.04%)</title><rect x="14.1097%" y="1013" width="0.0373%" height="15" fill="rgb(243,47,51)" fg:x="378" fg:w="1"/><text x="14.3597%" y="1023.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.04%)</title><rect x="14.1097%" y="997" width="0.0373%" height="15" fill="rgb(241,183,40)" fg:x="378" fg:w="1"/><text x="14.3597%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="14.1097%" y="981" width="0.0373%" height="15" fill="rgb(231,217,32)" fg:x="378" fg:w="1"/><text x="14.3597%" y="991.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1 samples, 0.04%)</title><rect x="14.1097%" y="965" width="0.0373%" height="15" fill="rgb(229,61,38)" fg:x="378" fg:w="1"/><text x="14.3597%" y="975.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (1 samples, 0.04%)</title><rect x="14.1097%" y="949" width="0.0373%" height="15" fill="rgb(225,210,5)" fg:x="378" fg:w="1"/><text x="14.3597%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="14.1097%" y="933" width="0.0373%" height="15" fill="rgb(231,79,45)" fg:x="378" fg:w="1"/><text x="14.3597%" y="943.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire_permit::_{{closure}} (4 samples, 0.15%)</title><rect x="14.0351%" y="1141" width="0.1493%" height="15" fill="rgb(224,100,7)" fg:x="376" fg:w="4"/><text x="14.2851%" y="1151.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::close_event (1 samples, 0.04%)</title><rect x="14.1471%" y="1125" width="0.0373%" height="15" fill="rgb(241,198,18)" fg:x="379" fg:w="1"/><text x="14.3971%" y="1135.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.04%)</title><rect x="14.1471%" y="1109" width="0.0373%" height="15" fill="rgb(252,97,53)" fg:x="379" fg:w="1"/><text x="14.3971%" y="1119.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::close_event::_{{closure}} (1 samples, 0.04%)</title><rect x="14.1471%" y="1093" width="0.0373%" height="15" fill="rgb(220,88,7)" fg:x="379" fg:w="1"/><text x="14.3971%" y="1103.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.04%)</title><rect x="14.1471%" y="1077" width="0.0373%" height="15" fill="rgb(213,176,14)" fg:x="379" fg:w="1"/><text x="14.3971%" y="1087.50"></text></g><g><title>event_listener::Event::inner (1 samples, 0.04%)</title><rect x="14.1471%" y="1061" width="0.0373%" height="15" fill="rgb(246,73,7)" fg:x="379" fg:w="1"/><text x="14.3971%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.04%)</title><rect x="14.1471%" y="1045" width="0.0373%" height="15" fill="rgb(245,64,36)" fg:x="379" fg:w="1"/><text x="14.3971%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="14.1471%" y="1029" width="0.0373%" height="15" fill="rgb(245,80,10)" fg:x="379" fg:w="1"/><text x="14.3971%" y="1039.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::pop_idle (2 samples, 0.07%)</title><rect x="14.1844%" y="1141" width="0.0747%" height="15" fill="rgb(232,107,50)" fg:x="380" fg:w="2"/><text x="14.4344%" y="1151.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (2 samples, 0.07%)</title><rect x="14.1844%" y="1125" width="0.0747%" height="15" fill="rgb(253,3,0)" fg:x="380" fg:w="2"/><text x="14.4344%" y="1135.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (1 samples, 0.04%)</title><rect x="14.2591%" y="1077" width="0.0373%" height="15" fill="rgb(212,99,53)" fg:x="382" fg:w="1"/><text x="14.5091%" y="1087.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="14.2591%" y="1061" width="0.0373%" height="15" fill="rgb(249,111,54)" fg:x="382" fg:w="1"/><text x="14.5091%" y="1071.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="14.2591%" y="1045" width="0.0373%" height="15" fill="rgb(249,55,30)" fg:x="382" fg:w="1"/><text x="14.5091%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="14.2591%" y="1029" width="0.0373%" height="15" fill="rgb(237,47,42)" fg:x="382" fg:w="1"/><text x="14.5091%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="14.2591%" y="1013" width="0.0373%" height="15" fill="rgb(211,20,18)" fg:x="382" fg:w="1"/><text x="14.5091%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="14.2591%" y="997" width="0.0373%" height="15" fill="rgb(231,203,46)" fg:x="382" fg:w="1"/><text x="14.5091%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="14.2591%" y="981" width="0.0373%" height="15" fill="rgb(237,142,3)" fg:x="382" fg:w="1"/><text x="14.5091%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="14.2591%" y="965" width="0.0373%" height="15" fill="rgb(241,107,1)" fg:x="382" fg:w="1"/><text x="14.5091%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="14.2591%" y="949" width="0.0373%" height="15" fill="rgb(229,83,13)" fg:x="382" fg:w="1"/><text x="14.5091%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="14.2591%" y="933" width="0.0373%" height="15" fill="rgb(241,91,40)" fg:x="382" fg:w="1"/><text x="14.5091%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="14.2591%" y="917" width="0.0373%" height="15" fill="rgb(225,3,45)" fg:x="382" fg:w="1"/><text x="14.5091%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="14.2591%" y="901" width="0.0373%" height="15" fill="rgb(244,223,14)" fg:x="382" fg:w="1"/><text x="14.5091%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="14.2591%" y="885" width="0.0373%" height="15" fill="rgb(224,124,37)" fg:x="382" fg:w="1"/><text x="14.5091%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="14.2591%" y="869" width="0.0373%" height="15" fill="rgb(251,171,30)" fg:x="382" fg:w="1"/><text x="14.5091%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="14.2591%" y="853" width="0.0373%" height="15" fill="rgb(236,46,54)" fg:x="382" fg:w="1"/><text x="14.5091%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="14.2591%" y="837" width="0.0373%" height="15" fill="rgb(245,213,5)" fg:x="382" fg:w="1"/><text x="14.5091%" y="847.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="14.2591%" y="821" width="0.0373%" height="15" fill="rgb(230,144,27)" fg:x="382" fg:w="1"/><text x="14.5091%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="14.2591%" y="805" width="0.0373%" height="15" fill="rgb(220,86,6)" fg:x="382" fg:w="1"/><text x="14.5091%" y="815.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="14.2591%" y="789" width="0.0373%" height="15" fill="rgb(240,20,13)" fg:x="382" fg:w="1"/><text x="14.5091%" y="799.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.34%)</title><rect x="13.9978%" y="1173" width="0.3359%" height="15" fill="rgb(217,89,34)" fg:x="375" fg:w="9"/><text x="14.2478%" y="1183.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (9 samples, 0.34%)</title><rect x="13.9978%" y="1157" width="0.3359%" height="15" fill="rgb(229,13,5)" fg:x="375" fg:w="9"/><text x="14.2478%" y="1167.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (2 samples, 0.07%)</title><rect x="14.2591%" y="1141" width="0.0747%" height="15" fill="rgb(244,67,35)" fg:x="382" fg:w="2"/><text x="14.5091%" y="1151.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (2 samples, 0.07%)</title><rect x="14.2591%" y="1125" width="0.0747%" height="15" fill="rgb(221,40,2)" fg:x="382" fg:w="2"/><text x="14.5091%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="14.2591%" y="1109" width="0.0747%" height="15" fill="rgb(237,157,21)" fg:x="382" fg:w="2"/><text x="14.5091%" y="1119.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (2 samples, 0.07%)</title><rect x="14.2591%" y="1093" width="0.0747%" height="15" fill="rgb(222,94,11)" fg:x="382" fg:w="2"/><text x="14.5091%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::send_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="14.2964%" y="1077" width="0.0373%" height="15" fill="rgb(249,113,6)" fg:x="383" fg:w="1"/><text x="14.5464%" y="1087.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::flush::_{{closure}} (1 samples, 0.04%)</title><rect x="14.2964%" y="1061" width="0.0373%" height="15" fill="rgb(238,137,36)" fg:x="383" fg:w="1"/><text x="14.5464%" y="1071.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (11 samples, 0.41%)</title><rect x="13.9604%" y="1189" width="0.4106%" height="15" fill="rgb(210,102,26)" fg:x="374" fg:w="11"/><text x="14.2104%" y="1199.50"></text></g><g><title>sqlx_core::rt::rt_tokio::available (1 samples, 0.04%)</title><rect x="14.3337%" y="1173" width="0.0373%" height="15" fill="rgb(218,30,30)" fg:x="384" fg:w="1"/><text x="14.5837%" y="1183.50"></text></g><g><title>tokio::runtime::handle::Handle::try_current (1 samples, 0.04%)</title><rect x="14.3337%" y="1157" width="0.0373%" height="15" fill="rgb(214,67,26)" fg:x="384" fg:w="1"/><text x="14.5837%" y="1167.50"></text></g><g><title>tokio::runtime::context::current::with_current (1 samples, 0.04%)</title><rect x="14.3337%" y="1141" width="0.0373%" height="15" fill="rgb(251,9,53)" fg:x="384" fg:w="1"/><text x="14.5837%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="14.3337%" y="1125" width="0.0373%" height="15" fill="rgb(228,204,25)" fg:x="384" fg:w="1"/><text x="14.5837%" y="1135.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.04%)</title><rect x="14.3337%" y="1109" width="0.0373%" height="15" fill="rgb(207,153,8)" fg:x="384" fg:w="1"/><text x="14.5837%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="14.3337%" y="1093" width="0.0373%" height="15" fill="rgb(242,9,16)" fg:x="384" fg:w="1"/><text x="14.5837%" y="1103.50"></text></g><g><title>fabseapi::Api::traffic_light_insert::_{{closure}} (12 samples, 0.45%)</title><rect x="13.9604%" y="1445" width="0.4479%" height="15" fill="rgb(217,211,10)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1455.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (12 samples, 0.45%)</title><rect x="13.9604%" y="1429" width="0.4479%" height="15" fill="rgb(219,228,52)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1439.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.45%)</title><rect x="13.9604%" y="1413" width="0.4479%" height="15" fill="rgb(231,92,29)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1423.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (12 samples, 0.45%)</title><rect x="13.9604%" y="1397" width="0.4479%" height="15" fill="rgb(232,8,23)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1407.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (12 samples, 0.45%)</title><rect x="13.9604%" y="1381" width="0.4479%" height="15" fill="rgb(216,211,34)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1391.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.45%)</title><rect x="13.9604%" y="1365" width="0.4479%" height="15" fill="rgb(236,151,0)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1375.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.45%)</title><rect x="13.9604%" y="1349" width="0.4479%" height="15" fill="rgb(209,168,3)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1359.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (12 samples, 0.45%)</title><rect x="13.9604%" y="1333" width="0.4479%" height="15" fill="rgb(208,129,28)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.45%)</title><rect x="13.9604%" y="1317" width="0.4479%" height="15" fill="rgb(229,78,22)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1327.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.45%)</title><rect x="13.9604%" y="1301" width="0.4479%" height="15" fill="rgb(228,187,13)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1311.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (12 samples, 0.45%)</title><rect x="13.9604%" y="1285" width="0.4479%" height="15" fill="rgb(240,119,24)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (12 samples, 0.45%)</title><rect x="13.9604%" y="1269" width="0.4479%" height="15" fill="rgb(209,194,42)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.45%)</title><rect x="13.9604%" y="1253" width="0.4479%" height="15" fill="rgb(247,200,46)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1263.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (12 samples, 0.45%)</title><rect x="13.9604%" y="1237" width="0.4479%" height="15" fill="rgb(218,76,16)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1247.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (12 samples, 0.45%)</title><rect x="13.9604%" y="1221" width="0.4479%" height="15" fill="rgb(225,21,48)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1231.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (12 samples, 0.45%)</title><rect x="13.9604%" y="1205" width="0.4479%" height="15" fill="rgb(239,223,50)" fg:x="374" fg:w="12"/><text x="14.2104%" y="1215.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="14.3710%" y="1189" width="0.0373%" height="15" fill="rgb(244,45,21)" fg:x="385" fg:w="1"/><text x="14.6210%" y="1199.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.04%)</title><rect x="14.3710%" y="1173" width="0.0373%" height="15" fill="rgb(232,33,43)" fg:x="385" fg:w="1"/><text x="14.6210%" y="1183.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="14.3710%" y="1157" width="0.0373%" height="15" fill="rgb(209,8,3)" fg:x="385" fg:w="1"/><text x="14.6210%" y="1167.50"></text></g><g><title>clock_gettime (1 samples, 0.04%)</title><rect x="14.3710%" y="1141" width="0.0373%" height="15" fill="rgb(214,25,53)" fg:x="385" fg:w="1"/><text x="14.6210%" y="1151.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire_permit::_{{closure}} (1 samples, 0.04%)</title><rect x="14.4084%" y="1141" width="0.0373%" height="15" fill="rgb(254,186,54)" fg:x="386" fg:w="1"/><text x="14.6584%" y="1151.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (5 samples, 0.19%)</title><rect x="14.4830%" y="1077" width="0.1866%" height="15" fill="rgb(208,174,49)" fg:x="388" fg:w="5"/><text x="14.7330%" y="1087.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (4 samples, 0.15%)</title><rect x="14.5203%" y="1061" width="0.1493%" height="15" fill="rgb(233,191,51)" fg:x="389" fg:w="4"/><text x="14.7703%" y="1071.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (3 samples, 0.11%)</title><rect x="14.5577%" y="1045" width="0.1120%" height="15" fill="rgb(222,134,10)" fg:x="390" fg:w="3"/><text x="14.8077%" y="1055.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (3 samples, 0.11%)</title><rect x="14.5577%" y="1029" width="0.1120%" height="15" fill="rgb(230,226,20)" fg:x="390" fg:w="3"/><text x="14.8077%" y="1039.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (3 samples, 0.11%)</title><rect x="14.5577%" y="1013" width="0.1120%" height="15" fill="rgb(251,111,25)" fg:x="390" fg:w="3"/><text x="14.8077%" y="1023.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (3 samples, 0.11%)</title><rect x="14.5577%" y="997" width="0.1120%" height="15" fill="rgb(224,40,46)" fg:x="390" fg:w="3"/><text x="14.8077%" y="1007.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (3 samples, 0.11%)</title><rect x="14.5577%" y="981" width="0.1120%" height="15" fill="rgb(236,108,47)" fg:x="390" fg:w="3"/><text x="14.8077%" y="991.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="14.5577%" y="965" width="0.1120%" height="15" fill="rgb(234,93,0)" fg:x="390" fg:w="3"/><text x="14.8077%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (2 samples, 0.07%)</title><rect x="14.5950%" y="949" width="0.0747%" height="15" fill="rgb(224,213,32)" fg:x="391" fg:w="2"/><text x="14.8450%" y="959.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (2 samples, 0.07%)</title><rect x="14.5950%" y="933" width="0.0747%" height="15" fill="rgb(251,11,48)" fg:x="391" fg:w="2"/><text x="14.8450%" y="943.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (2 samples, 0.07%)</title><rect x="14.5950%" y="917" width="0.0747%" height="15" fill="rgb(236,173,5)" fg:x="391" fg:w="2"/><text x="14.8450%" y="927.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (2 samples, 0.07%)</title><rect x="14.5950%" y="901" width="0.0747%" height="15" fill="rgb(230,95,12)" fg:x="391" fg:w="2"/><text x="14.8450%" y="911.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (2 samples, 0.07%)</title><rect x="14.5950%" y="885" width="0.0747%" height="15" fill="rgb(232,209,1)" fg:x="391" fg:w="2"/><text x="14.8450%" y="895.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2 samples, 0.07%)</title><rect x="14.5950%" y="869" width="0.0747%" height="15" fill="rgb(232,6,1)" fg:x="391" fg:w="2"/><text x="14.8450%" y="879.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.07%)</title><rect x="14.5950%" y="853" width="0.0747%" height="15" fill="rgb(210,224,50)" fg:x="391" fg:w="2"/><text x="14.8450%" y="863.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2 samples, 0.07%)</title><rect x="14.5950%" y="837" width="0.0747%" height="15" fill="rgb(228,127,35)" fg:x="391" fg:w="2"/><text x="14.8450%" y="847.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (2 samples, 0.07%)</title><rect x="14.5950%" y="821" width="0.0747%" height="15" fill="rgb(245,102,45)" fg:x="391" fg:w="2"/><text x="14.8450%" y="831.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.07%)</title><rect x="14.5950%" y="805" width="0.0747%" height="15" fill="rgb(214,1,49)" fg:x="391" fg:w="2"/><text x="14.8450%" y="815.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.07%)</title><rect x="14.5950%" y="789" width="0.0747%" height="15" fill="rgb(226,163,40)" fg:x="391" fg:w="2"/><text x="14.8450%" y="799.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (2 samples, 0.07%)</title><rect x="14.5950%" y="773" width="0.0747%" height="15" fill="rgb(239,212,28)" fg:x="391" fg:w="2"/><text x="14.8450%" y="783.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (2 samples, 0.07%)</title><rect x="14.5950%" y="757" width="0.0747%" height="15" fill="rgb(220,20,13)" fg:x="391" fg:w="2"/><text x="14.8450%" y="767.50"></text></g><g><title>recv (2 samples, 0.07%)</title><rect x="14.5950%" y="741" width="0.0747%" height="15" fill="rgb(210,164,35)" fg:x="391" fg:w="2"/><text x="14.8450%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="14.5950%" y="725" width="0.0747%" height="15" fill="rgb(248,109,41)" fg:x="391" fg:w="2"/><text x="14.8450%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="14.5950%" y="709" width="0.0747%" height="15" fill="rgb(238,23,50)" fg:x="391" fg:w="2"/><text x="14.8450%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="14.5950%" y="693" width="0.0747%" height="15" fill="rgb(211,48,49)" fg:x="391" fg:w="2"/><text x="14.8450%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="14.6323%" y="677" width="0.0373%" height="15" fill="rgb(223,36,21)" fg:x="392" fg:w="1"/><text x="14.8823%" y="687.50"></text></g><g><title>fabseapi::Api::traffic_light_retrieve::_{{closure}} (8 samples, 0.30%)</title><rect x="14.4084%" y="1445" width="0.2986%" height="15" fill="rgb(207,123,46)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1455.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (8 samples, 0.30%)</title><rect x="14.4084%" y="1429" width="0.2986%" height="15" fill="rgb(240,218,32)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1439.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="14.4084%" y="1413" width="0.2986%" height="15" fill="rgb(252,5,43)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="14.4084%" y="1397" width="0.2986%" height="15" fill="rgb(252,84,19)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="14.4084%" y="1381" width="0.2986%" height="15" fill="rgb(243,152,39)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1391.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (8 samples, 0.30%)</title><rect x="14.4084%" y="1365" width="0.2986%" height="15" fill="rgb(234,160,15)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="14.4084%" y="1349" width="0.2986%" height="15" fill="rgb(237,34,20)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1359.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="14.4084%" y="1333" width="0.2986%" height="15" fill="rgb(229,97,13)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="14.4084%" y="1317" width="0.2986%" height="15" fill="rgb(234,71,50)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1327.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="14.4084%" y="1301" width="0.2986%" height="15" fill="rgb(253,155,4)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1311.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (8 samples, 0.30%)</title><rect x="14.4084%" y="1285" width="0.2986%" height="15" fill="rgb(222,185,37)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (8 samples, 0.30%)</title><rect x="14.4084%" y="1269" width="0.2986%" height="15" fill="rgb(251,177,13)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8 samples, 0.30%)</title><rect x="14.4084%" y="1253" width="0.2986%" height="15" fill="rgb(250,179,40)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1263.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (8 samples, 0.30%)</title><rect x="14.4084%" y="1237" width="0.2986%" height="15" fill="rgb(242,44,2)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1247.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (8 samples, 0.30%)</title><rect x="14.4084%" y="1221" width="0.2986%" height="15" fill="rgb(216,177,13)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1231.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (8 samples, 0.30%)</title><rect x="14.4084%" y="1205" width="0.2986%" height="15" fill="rgb(216,106,43)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1215.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (8 samples, 0.30%)</title><rect x="14.4084%" y="1189" width="0.2986%" height="15" fill="rgb(216,183,2)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1199.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.30%)</title><rect x="14.4084%" y="1173" width="0.2986%" height="15" fill="rgb(249,75,3)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1183.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (8 samples, 0.30%)</title><rect x="14.4084%" y="1157" width="0.2986%" height="15" fill="rgb(219,67,39)" fg:x="386" fg:w="8"/><text x="14.6584%" y="1167.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (7 samples, 0.26%)</title><rect x="14.4457%" y="1141" width="0.2613%" height="15" fill="rgb(253,228,2)" fg:x="387" fg:w="7"/><text x="14.6957%" y="1151.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (7 samples, 0.26%)</title><rect x="14.4457%" y="1125" width="0.2613%" height="15" fill="rgb(235,138,27)" fg:x="387" fg:w="7"/><text x="14.6957%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="14.4457%" y="1109" width="0.2613%" height="15" fill="rgb(236,97,51)" fg:x="387" fg:w="7"/><text x="14.6957%" y="1119.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (7 samples, 0.26%)</title><rect x="14.4457%" y="1093" width="0.2613%" height="15" fill="rgb(240,80,30)" fg:x="387" fg:w="7"/><text x="14.6957%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::send_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="14.6697%" y="1077" width="0.0373%" height="15" fill="rgb(230,178,19)" fg:x="393" fg:w="1"/><text x="14.9197%" y="1087.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::flush::_{{closure}} (1 samples, 0.04%)</title><rect x="14.6697%" y="1061" width="0.0373%" height="15" fill="rgb(210,190,27)" fg:x="393" fg:w="1"/><text x="14.9197%" y="1071.50"></text></g><g><title>&lt;sqlx_core::net::socket::Write&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.6697%" y="1045" width="0.0373%" height="15" fill="rgb(222,107,31)" fg:x="393" fg:w="1"/><text x="14.9197%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_write (1 samples, 0.04%)</title><rect x="14.6697%" y="1029" width="0.0373%" height="15" fill="rgb(216,127,34)" fg:x="393" fg:w="1"/><text x="14.9197%" y="1039.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write (1 samples, 0.04%)</title><rect x="14.6697%" y="1013" width="0.0373%" height="15" fill="rgb(234,116,52)" fg:x="393" fg:w="1"/><text x="14.9197%" y="1023.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="14.6697%" y="997" width="0.0373%" height="15" fill="rgb(222,124,15)" fg:x="393" fg:w="1"/><text x="14.9197%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="14.6697%" y="981" width="0.0373%" height="15" fill="rgb(231,179,28)" fg:x="393" fg:w="1"/><text x="14.9197%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.04%)</title><rect x="14.6697%" y="965" width="0.0373%" height="15" fill="rgb(226,93,45)" fg:x="393" fg:w="1"/><text x="14.9197%" y="975.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="14.6697%" y="949" width="0.0373%" height="15" fill="rgb(215,8,51)" fg:x="393" fg:w="1"/><text x="14.9197%" y="959.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="14.7443%" y="1157" width="0.0373%" height="15" fill="rgb(223,106,5)" fg:x="395" fg:w="1"/><text x="14.9943%" y="1167.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.7443%" y="1141" width="0.0373%" height="15" fill="rgb(250,191,5)" fg:x="395" fg:w="1"/><text x="14.9943%" y="1151.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (1 samples, 0.04%)</title><rect x="14.7443%" y="1125" width="0.0373%" height="15" fill="rgb(242,132,44)" fg:x="395" fg:w="1"/><text x="14.9943%" y="1135.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (1 samples, 0.04%)</title><rect x="14.7443%" y="1109" width="0.0373%" height="15" fill="rgb(251,152,29)" fg:x="395" fg:w="1"/><text x="14.9943%" y="1119.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (1 samples, 0.04%)</title><rect x="14.7443%" y="1093" width="0.0373%" height="15" fill="rgb(218,179,5)" fg:x="395" fg:w="1"/><text x="14.9943%" y="1103.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1 samples, 0.04%)</title><rect x="14.7443%" y="1077" width="0.0373%" height="15" fill="rgb(227,67,19)" fg:x="395" fg:w="1"/><text x="14.9943%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (1 samples, 0.04%)</title><rect x="14.7443%" y="1061" width="0.0373%" height="15" fill="rgb(233,119,31)" fg:x="395" fg:w="1"/><text x="14.9943%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::add_entry (1 samples, 0.04%)</title><rect x="14.7443%" y="1045" width="0.0373%" height="15" fill="rgb(241,120,22)" fg:x="395" fg:w="1"/><text x="14.9943%" y="1055.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1 samples, 0.04%)</title><rect x="14.7443%" y="1029" width="0.0373%" height="15" fill="rgb(224,102,30)" fg:x="395" fg:w="1"/><text x="14.9943%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="14.7443%" y="1013" width="0.0373%" height="15" fill="rgb(210,164,37)" fg:x="395" fg:w="1"/><text x="14.9943%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::CloseEvent::do_until&lt;futures_util::future::future::fuse::Fuse&lt;sqlx_core::sync::AsyncSemaphore::acquire::{{closure}}&gt;&gt;::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="14.8563%" y="1125" width="0.0373%" height="15" fill="rgb(226,191,16)" fg:x="398" fg:w="1"/><text x="15.1063%" y="1135.50"></text></g><g><title>sqlx_core::pool::CloseEvent::do_until::_{{closure}} (1 samples, 0.04%)</title><rect x="14.8936%" y="1125" width="0.0373%" height="15" fill="rgb(214,40,45)" fg:x="399" fg:w="1"/><text x="15.1436%" y="1135.50"></text></g><g><title>&lt;futures_util::future::poll_immediate::PollImmediate&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.8936%" y="1109" width="0.0373%" height="15" fill="rgb(244,29,26)" fg:x="399" fg:w="1"/><text x="15.1436%" y="1119.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.8936%" y="1093" width="0.0373%" height="15" fill="rgb(216,16,5)" fg:x="399" fg:w="1"/><text x="15.1436%" y="1103.50"></text></g><g><title>&lt;sqlx_core::pool::CloseEvent as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.8936%" y="1077" width="0.0373%" height="15" fill="rgb(249,76,35)" fg:x="399" fg:w="1"/><text x="15.1436%" y="1087.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.04%)</title><rect x="14.8936%" y="1061" width="0.0373%" height="15" fill="rgb(207,11,44)" fg:x="399" fg:w="1"/><text x="15.1436%" y="1071.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="14.8936%" y="1045" width="0.0373%" height="15" fill="rgb(228,190,49)" fg:x="399" fg:w="1"/><text x="15.1436%" y="1055.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire_permit::_{{closure}} (3 samples, 0.11%)</title><rect x="14.8563%" y="1141" width="0.1120%" height="15" fill="rgb(214,173,12)" fg:x="398" fg:w="3"/><text x="15.1063%" y="1151.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::close_event (1 samples, 0.04%)</title><rect x="14.9309%" y="1125" width="0.0373%" height="15" fill="rgb(218,26,35)" fg:x="400" fg:w="1"/><text x="15.1809%" y="1135.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.04%)</title><rect x="14.9309%" y="1109" width="0.0373%" height="15" fill="rgb(220,200,19)" fg:x="400" fg:w="1"/><text x="15.1809%" y="1119.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::close_event::_{{closure}} (1 samples, 0.04%)</title><rect x="14.9309%" y="1093" width="0.0373%" height="15" fill="rgb(239,95,49)" fg:x="400" fg:w="1"/><text x="15.1809%" y="1103.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.04%)</title><rect x="14.9309%" y="1077" width="0.0373%" height="15" fill="rgb(235,85,53)" fg:x="400" fg:w="1"/><text x="15.1809%" y="1087.50"></text></g><g><title>event_listener::Event::inner (1 samples, 0.04%)</title><rect x="14.9309%" y="1061" width="0.0373%" height="15" fill="rgb(233,133,31)" fg:x="400" fg:w="1"/><text x="15.1809%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.04%)</title><rect x="14.9309%" y="1045" width="0.0373%" height="15" fill="rgb(218,25,20)" fg:x="400" fg:w="1"/><text x="15.1809%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="14.9309%" y="1029" width="0.0373%" height="15" fill="rgb(252,210,38)" fg:x="400" fg:w="1"/><text x="15.1809%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::connection::stream::MySqlStream&lt;alloc::boxed::Box&lt;dyn sqlx_core::net::socket::Socket&gt;&gt;::wait_until_ready::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="15.0056%" y="1077" width="0.0373%" height="15" fill="rgb(242,134,21)" fg:x="402" fg:w="1"/><text x="15.2556%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="15.0056%" y="1109" width="0.0747%" height="15" fill="rgb(213,28,48)" fg:x="402" fg:w="2"/><text x="15.2556%" y="1119.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (2 samples, 0.07%)</title><rect x="15.0056%" y="1093" width="0.0747%" height="15" fill="rgb(250,196,2)" fg:x="402" fg:w="2"/><text x="15.2556%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (1 samples, 0.04%)</title><rect x="15.0429%" y="1077" width="0.0373%" height="15" fill="rgb(227,5,17)" fg:x="403" fg:w="1"/><text x="15.2929%" y="1087.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::ok (1 samples, 0.04%)</title><rect x="15.0429%" y="1061" width="0.0373%" height="15" fill="rgb(221,226,24)" fg:x="403" fg:w="1"/><text x="15.2929%" y="1071.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode (1 samples, 0.04%)</title><rect x="15.0429%" y="1045" width="0.0373%" height="15" fill="rgb(211,5,48)" fg:x="403" fg:w="1"/><text x="15.2929%" y="1055.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (1 samples, 0.04%)</title><rect x="15.0429%" y="1029" width="0.0373%" height="15" fill="rgb(219,150,6)" fg:x="403" fg:w="1"/><text x="15.2929%" y="1039.50"></text></g><g><title>&lt;sqlx_mysql::protocol::response::ok::OkPacket as sqlx_core::io::decode::Decode&gt;::decode_with (1 samples, 0.04%)</title><rect x="15.0429%" y="1013" width="0.0373%" height="15" fill="rgb(251,46,16)" fg:x="403" fg:w="1"/><text x="15.2929%" y="1023.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (1 samples, 0.04%)</title><rect x="15.0429%" y="997" width="0.0373%" height="15" fill="rgb(220,204,40)" fg:x="403" fg:w="1"/><text x="15.2929%" y="1007.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (1 samples, 0.04%)</title><rect x="15.0429%" y="981" width="0.0373%" height="15" fill="rgb(211,85,2)" fg:x="403" fg:w="1"/><text x="15.2929%" y="991.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.41%)</title><rect x="14.7443%" y="1173" width="0.4106%" height="15" fill="rgb(229,17,7)" fg:x="395" fg:w="11"/><text x="14.9943%" y="1183.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (10 samples, 0.37%)</title><rect x="14.7816%" y="1157" width="0.3733%" height="15" fill="rgb(239,72,28)" fg:x="396" fg:w="10"/><text x="15.0316%" y="1167.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (5 samples, 0.19%)</title><rect x="14.9683%" y="1141" width="0.1866%" height="15" fill="rgb(230,47,54)" fg:x="401" fg:w="5"/><text x="15.2183%" y="1151.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (5 samples, 0.19%)</title><rect x="14.9683%" y="1125" width="0.1866%" height="15" fill="rgb(214,50,8)" fg:x="401" fg:w="5"/><text x="15.2183%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="15.0803%" y="1109" width="0.0747%" height="15" fill="rgb(216,198,43)" fg:x="404" fg:w="2"/><text x="15.3303%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (2 samples, 0.07%)</title><rect x="15.0803%" y="1093" width="0.0747%" height="15" fill="rgb(234,20,35)" fg:x="404" fg:w="2"/><text x="15.3303%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::{{closure}}&gt; (2 samples, 0.07%)</title><rect x="15.0803%" y="1077" width="0.0747%" height="15" fill="rgb(254,45,19)" fg:x="404" fg:w="2"/><text x="15.3303%" y="1087.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (1 samples, 0.04%)</title><rect x="15.1549%" y="1157" width="0.0373%" height="15" fill="rgb(219,14,44)" fg:x="406" fg:w="1"/><text x="15.4049%" y="1167.50"></text></g><g><title>fabseapi::Api::vehicle_insert::_{{closure}} (14 samples, 0.52%)</title><rect x="14.7070%" y="1445" width="0.5226%" height="15" fill="rgb(217,220,26)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1455.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (14 samples, 0.52%)</title><rect x="14.7070%" y="1429" width="0.5226%" height="15" fill="rgb(213,158,28)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1439.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 0.52%)</title><rect x="14.7070%" y="1413" width="0.5226%" height="15" fill="rgb(252,51,52)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1423.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (14 samples, 0.52%)</title><rect x="14.7070%" y="1397" width="0.5226%" height="15" fill="rgb(246,89,16)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1407.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (14 samples, 0.52%)</title><rect x="14.7070%" y="1381" width="0.5226%" height="15" fill="rgb(216,158,49)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1391.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.52%)</title><rect x="14.7070%" y="1365" width="0.5226%" height="15" fill="rgb(236,107,19)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1375.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.52%)</title><rect x="14.7070%" y="1349" width="0.5226%" height="15" fill="rgb(228,185,30)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1359.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (14 samples, 0.52%)</title><rect x="14.7070%" y="1333" width="0.5226%" height="15" fill="rgb(246,134,8)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.52%)</title><rect x="14.7070%" y="1317" width="0.5226%" height="15" fill="rgb(214,143,50)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1327.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.52%)</title><rect x="14.7070%" y="1301" width="0.5226%" height="15" fill="rgb(228,75,8)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1311.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (14 samples, 0.52%)</title><rect x="14.7070%" y="1285" width="0.5226%" height="15" fill="rgb(207,175,4)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (14 samples, 0.52%)</title><rect x="14.7070%" y="1269" width="0.5226%" height="15" fill="rgb(205,108,24)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 0.52%)</title><rect x="14.7070%" y="1253" width="0.5226%" height="15" fill="rgb(244,120,49)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1263.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (14 samples, 0.52%)</title><rect x="14.7070%" y="1237" width="0.5226%" height="15" fill="rgb(223,47,38)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1247.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (14 samples, 0.52%)</title><rect x="14.7070%" y="1221" width="0.5226%" height="15" fill="rgb(229,179,11)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1231.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (14 samples, 0.52%)</title><rect x="14.7070%" y="1205" width="0.5226%" height="15" fill="rgb(231,122,1)" fg:x="394" fg:w="14"/><text x="14.9570%" y="1215.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (13 samples, 0.49%)</title><rect x="14.7443%" y="1189" width="0.4853%" height="15" fill="rgb(245,119,9)" fg:x="395" fg:w="13"/><text x="14.9943%" y="1199.50"></text></g><g><title>tokio::time::timeout::timeout (2 samples, 0.07%)</title><rect x="15.1549%" y="1173" width="0.0747%" height="15" fill="rgb(241,163,25)" fg:x="406" fg:w="2"/><text x="15.4049%" y="1183.50"></text></g><g><title>tokio::time::timeout::Timeout&lt;T&gt;::new_with_delay (1 samples, 0.04%)</title><rect x="15.1922%" y="1157" width="0.0373%" height="15" fill="rgb(217,214,3)" fg:x="407" fg:w="1"/><text x="15.4422%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="15.1922%" y="1141" width="0.0373%" height="15" fill="rgb(240,86,28)" fg:x="407" fg:w="1"/><text x="15.4422%" y="1151.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="15.2296%" y="1157" width="0.0373%" height="15" fill="rgb(215,47,9)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1167.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="15.2296%" y="1141" width="0.0373%" height="15" fill="rgb(252,25,45)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1151.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (1 samples, 0.04%)</title><rect x="15.2296%" y="1125" width="0.0373%" height="15" fill="rgb(251,164,9)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1135.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (1 samples, 0.04%)</title><rect x="15.2296%" y="1109" width="0.0373%" height="15" fill="rgb(233,194,0)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1119.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (1 samples, 0.04%)</title><rect x="15.2296%" y="1093" width="0.0373%" height="15" fill="rgb(249,111,24)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1103.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1 samples, 0.04%)</title><rect x="15.2296%" y="1077" width="0.0373%" height="15" fill="rgb(250,223,3)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1087.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1 samples, 0.04%)</title><rect x="15.2296%" y="1061" width="0.0373%" height="15" fill="rgb(236,178,37)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1071.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (1 samples, 0.04%)</title><rect x="15.2296%" y="1045" width="0.0373%" height="15" fill="rgb(241,158,50)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1055.50"></text></g><g><title>mio::waker::Waker::wake (1 samples, 0.04%)</title><rect x="15.2296%" y="1029" width="0.0373%" height="15" fill="rgb(213,121,41)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1039.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (1 samples, 0.04%)</title><rect x="15.2296%" y="1013" width="0.0373%" height="15" fill="rgb(240,92,3)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1023.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (1 samples, 0.04%)</title><rect x="15.2296%" y="997" width="0.0373%" height="15" fill="rgb(205,123,3)" fg:x="408" fg:w="1"/><text x="15.4796%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="15.2296%" y="981" width="0.0373%" height="15" fill="rgb(205,97,47)" fg:x="408" fg:w="1"/><text x="15.4796%" y="991.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1 samples, 0.04%)</title><rect x="15.2296%" y="965" width="0.0373%" height="15" fill="rgb(247,152,14)" fg:x="408" fg:w="1"/><text x="15.4796%" y="975.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1 samples, 0.04%)</title><rect x="15.2296%" y="949" width="0.0373%" height="15" fill="rgb(248,195,53)" fg:x="408" fg:w="1"/><text x="15.4796%" y="959.50"></text></g><g><title>write (1 samples, 0.04%)</title><rect x="15.2296%" y="933" width="0.0373%" height="15" fill="rgb(226,201,16)" fg:x="408" fg:w="1"/><text x="15.4796%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.2296%" y="917" width="0.0373%" height="15" fill="rgb(205,98,0)" fg:x="408" fg:w="1"/><text x="15.4796%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.2296%" y="901" width="0.0373%" height="15" fill="rgb(214,191,48)" fg:x="408" fg:w="1"/><text x="15.4796%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.2296%" y="885" width="0.0373%" height="15" fill="rgb(237,112,39)" fg:x="408" fg:w="1"/><text x="15.4796%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.2296%" y="869" width="0.0373%" height="15" fill="rgb(247,203,27)" fg:x="408" fg:w="1"/><text x="15.4796%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.2296%" y="853" width="0.0373%" height="15" fill="rgb(235,124,28)" fg:x="408" fg:w="1"/><text x="15.4796%" y="863.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire_permit::_{{closure}} (1 samples, 0.04%)</title><rect x="15.3042%" y="1141" width="0.0373%" height="15" fill="rgb(208,207,46)" fg:x="410" fg:w="1"/><text x="15.5542%" y="1151.50"></text></g><g><title>sqlx_core::pool::CloseEvent::do_until::_{{closure}} (1 samples, 0.04%)</title><rect x="15.3042%" y="1125" width="0.0373%" height="15" fill="rgb(234,176,4)" fg:x="410" fg:w="1"/><text x="15.5542%" y="1135.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="15.3042%" y="1109" width="0.0373%" height="15" fill="rgb(230,133,28)" fg:x="410" fg:w="1"/><text x="15.5542%" y="1119.50"></text></g><g><title>sqlx_core::pool::CloseEvent::do_until::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="15.3042%" y="1093" width="0.0373%" height="15" fill="rgb(211,137,40)" fg:x="410" fg:w="1"/><text x="15.5542%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="15.3042%" y="1077" width="0.0373%" height="15" fill="rgb(254,35,13)" fg:x="410" fg:w="1"/><text x="15.5542%" y="1087.50"></text></g><g><title>sqlx_core::sync::AsyncSemaphore::acquire::_{{closure}} (1 samples, 0.04%)</title><rect x="15.3042%" y="1061" width="0.0373%" height="15" fill="rgb(225,49,51)" fg:x="410" fg:w="1"/><text x="15.5542%" y="1071.50"></text></g><g><title>tokio::sync::semaphore::Semaphore::acquire_many::_{{closure}} (1 samples, 0.04%)</title><rect x="15.3042%" y="1045" width="0.0373%" height="15" fill="rgb(251,10,15)" fg:x="410" fg:w="1"/><text x="15.5542%" y="1055.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="15.3042%" y="1029" width="0.0373%" height="15" fill="rgb(228,207,15)" fg:x="410" fg:w="1"/><text x="15.5542%" y="1039.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (1 samples, 0.04%)</title><rect x="15.3042%" y="1013" width="0.0373%" height="15" fill="rgb(241,99,19)" fg:x="410" fg:w="1"/><text x="15.5542%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="15.3415%" y="1045" width="0.0373%" height="15" fill="rgb(207,104,49)" fg:x="411" fg:w="1"/><text x="15.5915%" y="1055.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="15.3415%" y="1029" width="0.0373%" height="15" fill="rgb(234,99,18)" fg:x="411" fg:w="1"/><text x="15.5915%" y="1039.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (2 samples, 0.07%)</title><rect x="15.3415%" y="1077" width="0.0747%" height="15" fill="rgb(213,191,49)" fg:x="411" fg:w="2"/><text x="15.5915%" y="1087.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (2 samples, 0.07%)</title><rect x="15.3415%" y="1061" width="0.0747%" height="15" fill="rgb(210,226,19)" fg:x="411" fg:w="2"/><text x="15.5915%" y="1071.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (1 samples, 0.04%)</title><rect x="15.3789%" y="1045" width="0.0373%" height="15" fill="rgb(229,97,18)" fg:x="412" fg:w="1"/><text x="15.6289%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.04%)</title><rect x="15.3789%" y="1029" width="0.0373%" height="15" fill="rgb(211,167,15)" fg:x="412" fg:w="1"/><text x="15.6289%" y="1039.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.3789%" y="1013" width="0.0373%" height="15" fill="rgb(210,169,34)" fg:x="412" fg:w="1"/><text x="15.6289%" y="1023.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.04%)</title><rect x="15.3789%" y="997" width="0.0373%" height="15" fill="rgb(241,121,31)" fg:x="412" fg:w="1"/><text x="15.6289%" y="1007.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.04%)</title><rect x="15.3789%" y="981" width="0.0373%" height="15" fill="rgb(232,40,11)" fg:x="412" fg:w="1"/><text x="15.6289%" y="991.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (1 samples, 0.04%)</title><rect x="15.3789%" y="965" width="0.0373%" height="15" fill="rgb(205,86,26)" fg:x="412" fg:w="1"/><text x="15.6289%" y="975.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="15.2296%" y="1173" width="0.2613%" height="15" fill="rgb(231,126,28)" fg:x="408" fg:w="7"/><text x="15.4796%" y="1183.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}}::_{{closure}} (6 samples, 0.22%)</title><rect x="15.2669%" y="1157" width="0.2240%" height="15" fill="rgb(219,221,18)" fg:x="409" fg:w="6"/><text x="15.5169%" y="1167.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::_{{closure}} (4 samples, 0.15%)</title><rect x="15.3415%" y="1141" width="0.1493%" height="15" fill="rgb(211,40,0)" fg:x="411" fg:w="4"/><text x="15.5915%" y="1151.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::_{{closure}} (4 samples, 0.15%)</title><rect x="15.3415%" y="1125" width="0.1493%" height="15" fill="rgb(239,85,43)" fg:x="411" fg:w="4"/><text x="15.5915%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.15%)</title><rect x="15.3415%" y="1109" width="0.1493%" height="15" fill="rgb(231,55,21)" fg:x="411" fg:w="4"/><text x="15.5915%" y="1119.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (4 samples, 0.15%)</title><rect x="15.3415%" y="1093" width="0.1493%" height="15" fill="rgb(225,184,43)" fg:x="411" fg:w="4"/><text x="15.5915%" y="1103.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::send_packet::_{{closure}} (2 samples, 0.07%)</title><rect x="15.4162%" y="1077" width="0.0747%" height="15" fill="rgb(251,158,41)" fg:x="413" fg:w="2"/><text x="15.6662%" y="1087.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::flush::_{{closure}} (2 samples, 0.07%)</title><rect x="15.4162%" y="1061" width="0.0747%" height="15" fill="rgb(234,159,37)" fg:x="413" fg:w="2"/><text x="15.6662%" y="1071.50"></text></g><g><title>&lt;sqlx_core::net::socket::Write&lt;S&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="15.4162%" y="1045" width="0.0747%" height="15" fill="rgb(216,204,22)" fg:x="413" fg:w="2"/><text x="15.6662%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_write (2 samples, 0.07%)</title><rect x="15.4162%" y="1029" width="0.0747%" height="15" fill="rgb(214,17,3)" fg:x="413" fg:w="2"/><text x="15.6662%" y="1039.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write (2 samples, 0.07%)</title><rect x="15.4162%" y="1013" width="0.0747%" height="15" fill="rgb(212,111,17)" fg:x="413" fg:w="2"/><text x="15.6662%" y="1023.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="15.4535%" y="997" width="0.0373%" height="15" fill="rgb(221,157,24)" fg:x="414" fg:w="1"/><text x="15.7035%" y="1007.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write::_{{closure}} (1 samples, 0.04%)</title><rect x="15.4535%" y="981" width="0.0373%" height="15" fill="rgb(252,16,13)" fg:x="414" fg:w="1"/><text x="15.7035%" y="991.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="15.4535%" y="965" width="0.0373%" height="15" fill="rgb(221,62,2)" fg:x="414" fg:w="1"/><text x="15.7035%" y="975.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="15.4535%" y="949" width="0.0373%" height="15" fill="rgb(247,87,22)" fg:x="414" fg:w="1"/><text x="15.7035%" y="959.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="15.4535%" y="933" width="0.0373%" height="15" fill="rgb(215,73,9)" fg:x="414" fg:w="1"/><text x="15.7035%" y="943.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1 samples, 0.04%)</title><rect x="15.4535%" y="917" width="0.0373%" height="15" fill="rgb(207,175,33)" fg:x="414" fg:w="1"/><text x="15.7035%" y="927.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="15.4535%" y="901" width="0.0373%" height="15" fill="rgb(243,129,54)" fg:x="414" fg:w="1"/><text x="15.7035%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.04%)</title><rect x="15.4535%" y="885" width="0.0373%" height="15" fill="rgb(227,119,45)" fg:x="414" fg:w="1"/><text x="15.7035%" y="895.50"></text></g><g><title>__send (1 samples, 0.04%)</title><rect x="15.4535%" y="869" width="0.0373%" height="15" fill="rgb(205,109,36)" fg:x="414" fg:w="1"/><text x="15.7035%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.4535%" y="853" width="0.0373%" height="15" fill="rgb(205,6,39)" fg:x="414" fg:w="1"/><text x="15.7035%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.4535%" y="837" width="0.0373%" height="15" fill="rgb(221,32,16)" fg:x="414" fg:w="1"/><text x="15.7035%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.4535%" y="821" width="0.0373%" height="15" fill="rgb(228,144,50)" fg:x="414" fg:w="1"/><text x="15.7035%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="15.4535%" y="805" width="0.0373%" height="15" fill="rgb(229,201,53)" fg:x="414" fg:w="1"/><text x="15.7035%" y="815.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (42 samples, 1.57%)</title><rect x="13.9604%" y="1605" width="1.5677%" height="15" fill="rgb(249,153,27)" fg:x="374" fg:w="42"/><text x="14.2104%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (42 samples, 1.57%)</title><rect x="13.9604%" y="1589" width="1.5677%" height="15" fill="rgb(227,106,25)" fg:x="374" fg:w="42"/><text x="14.2104%" y="1599.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (42 samples, 1.57%)</title><rect x="13.9604%" y="1573" width="1.5677%" height="15" fill="rgb(230,65,29)" fg:x="374" fg:w="42"/><text x="14.2104%" y="1583.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (42 samples, 1.57%)</title><rect x="13.9604%" y="1557" width="1.5677%" height="15" fill="rgb(221,57,46)" fg:x="374" fg:w="42"/><text x="14.2104%" y="1567.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (42 samples, 1.57%)</title><rect x="13.9604%" y="1541" width="1.5677%" height="15" fill="rgb(229,161,17)" fg:x="374" fg:w="42"/><text x="14.2104%" y="1551.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (42 samples, 1.57%)</title><rect x="13.9604%" y="1525" width="1.5677%" height="15" fill="rgb(222,213,11)" fg:x="374" fg:w="42"/><text x="14.2104%" y="1535.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (42 samples, 1.57%)</title><rect x="13.9604%" y="1509" width="1.5677%" height="15" fill="rgb(235,35,13)" fg:x="374" fg:w="42"/><text x="14.2104%" y="1519.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (42 samples, 1.57%)</title><rect x="13.9604%" y="1493" width="1.5677%" height="15" fill="rgb(233,158,34)" fg:x="374" fg:w="42"/><text x="14.2104%" y="1503.50"></text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (42 samples, 1.57%)</title><rect x="13.9604%" y="1477" width="1.5677%" height="15" fill="rgb(215,151,48)" fg:x="374" fg:w="42"/><text x="14.2104%" y="1487.50"></text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (42 samples, 1.57%)</title><rect x="13.9604%" y="1461" width="1.5677%" height="15" fill="rgb(229,84,14)" fg:x="374" fg:w="42"/><text x="14.2104%" y="1471.50"></text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (8 samples, 0.30%)</title><rect x="15.2296%" y="1445" width="0.2986%" height="15" fill="rgb(229,68,14)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1455.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (8 samples, 0.30%)</title><rect x="15.2296%" y="1429" width="0.2986%" height="15" fill="rgb(243,106,26)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1439.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="15.2296%" y="1413" width="0.2986%" height="15" fill="rgb(206,45,38)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="15.2296%" y="1397" width="0.2986%" height="15" fill="rgb(226,6,15)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="15.2296%" y="1381" width="0.2986%" height="15" fill="rgb(232,22,54)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1391.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (8 samples, 0.30%)</title><rect x="15.2296%" y="1365" width="0.2986%" height="15" fill="rgb(229,222,32)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="15.2296%" y="1349" width="0.2986%" height="15" fill="rgb(228,62,29)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1359.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="15.2296%" y="1333" width="0.2986%" height="15" fill="rgb(251,103,34)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="15.2296%" y="1317" width="0.2986%" height="15" fill="rgb(233,12,30)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1327.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.30%)</title><rect x="15.2296%" y="1301" width="0.2986%" height="15" fill="rgb(238,52,0)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1311.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (8 samples, 0.30%)</title><rect x="15.2296%" y="1285" width="0.2986%" height="15" fill="rgb(223,98,5)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (8 samples, 0.30%)</title><rect x="15.2296%" y="1269" width="0.2986%" height="15" fill="rgb(228,75,37)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8 samples, 0.30%)</title><rect x="15.2296%" y="1253" width="0.2986%" height="15" fill="rgb(205,115,49)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1263.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (8 samples, 0.30%)</title><rect x="15.2296%" y="1237" width="0.2986%" height="15" fill="rgb(250,154,43)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1247.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::_{{closure}} (8 samples, 0.30%)</title><rect x="15.2296%" y="1221" width="0.2986%" height="15" fill="rgb(226,43,29)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1231.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::_{{closure}} (8 samples, 0.30%)</title><rect x="15.2296%" y="1205" width="0.2986%" height="15" fill="rgb(249,228,39)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1215.50"></text></g><g><title>sqlx_core::rt::timeout::_{{closure}} (8 samples, 0.30%)</title><rect x="15.2296%" y="1189" width="0.2986%" height="15" fill="rgb(216,79,43)" fg:x="408" fg:w="8"/><text x="15.4796%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="15.4909%" y="1173" width="0.0373%" height="15" fill="rgb(228,95,12)" fg:x="415" fg:w="1"/><text x="15.7409%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::logger::QueryLogger&gt; (1 samples, 0.04%)</title><rect x="15.6402%" y="805" width="0.0373%" height="15" fill="rgb(249,221,15)" fg:x="419" fg:w="1"/><text x="15.8902%" y="815.50"></text></g><g><title>&lt;sqlx_core::logger::QueryLogger as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.6402%" y="789" width="0.0373%" height="15" fill="rgb(233,34,13)" fg:x="419" fg:w="1"/><text x="15.8902%" y="799.50"></text></g><g><title>sqlx_core::logger::QueryLogger::finish (1 samples, 0.04%)</title><rect x="15.6402%" y="773" width="0.0373%" height="15" fill="rgb(214,103,39)" fg:x="419" fg:w="1"/><text x="15.8902%" y="783.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.04%)</title><rect x="15.6402%" y="757" width="0.0373%" height="15" fill="rgb(251,126,39)" fg:x="419" fg:w="1"/><text x="15.8902%" y="767.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="15.6402%" y="741" width="0.0373%" height="15" fill="rgb(214,216,36)" fg:x="419" fg:w="1"/><text x="15.8902%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.04%)</title><rect x="15.6402%" y="725" width="0.0373%" height="15" fill="rgb(220,221,8)" fg:x="419" fg:w="1"/><text x="15.8902%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="15.6402%" y="709" width="0.0373%" height="15" fill="rgb(240,216,3)" fg:x="419" fg:w="1"/><text x="15.8902%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::arguments::MySqlArguments&gt; (1 samples, 0.04%)</title><rect x="15.6775%" y="805" width="0.0373%" height="15" fill="rgb(232,218,17)" fg:x="420" fg:w="1"/><text x="15.9275%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sqlx_mysql::type_info::MySqlTypeInfo&gt;&gt; (1 samples, 0.04%)</title><rect x="15.6775%" y="789" width="0.0373%" height="15" fill="rgb(229,163,45)" fg:x="420" fg:w="1"/><text x="15.9275%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sqlx_mysql::type_info::MySqlTypeInfo&gt;&gt; (1 samples, 0.04%)</title><rect x="15.6775%" y="773" width="0.0373%" height="15" fill="rgb(231,110,42)" fg:x="420" fg:w="1"/><text x="15.9275%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.6775%" y="757" width="0.0373%" height="15" fill="rgb(208,170,48)" fg:x="420" fg:w="1"/><text x="15.9275%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="15.6775%" y="741" width="0.0373%" height="15" fill="rgb(239,116,25)" fg:x="420" fg:w="1"/><text x="15.9275%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="15.6775%" y="725" width="0.0373%" height="15" fill="rgb(219,200,50)" fg:x="420" fg:w="1"/><text x="15.9275%" y="735.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="15.6775%" y="709" width="0.0373%" height="15" fill="rgb(245,200,0)" fg:x="420" fg:w="1"/><text x="15.9275%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="15.6775%" y="693" width="0.0373%" height="15" fill="rgb(245,119,33)" fg:x="420" fg:w="1"/><text x="15.9275%" y="703.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="15.6775%" y="677" width="0.0373%" height="15" fill="rgb(231,125,12)" fg:x="420" fg:w="1"/><text x="15.9275%" y="687.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::get_or_prepare_statement::_{{closure}} (2 samples, 0.07%)</title><rect x="15.7148%" y="805" width="0.0747%" height="15" fill="rgb(216,96,41)" fg:x="421" fg:w="2"/><text x="15.9648%" y="815.50"></text></g><g><title>sqlx_core::common::statement_cache::StatementCache&lt;T&gt;::get_mut (2 samples, 0.07%)</title><rect x="15.7148%" y="789" width="0.0747%" height="15" fill="rgb(248,43,45)" fg:x="421" fg:w="2"/><text x="15.9648%" y="799.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::get_mut (2 samples, 0.07%)</title><rect x="15.7148%" y="773" width="0.0747%" height="15" fill="rgb(217,222,7)" fg:x="421" fg:w="2"/><text x="15.9648%" y="783.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (2 samples, 0.07%)</title><rect x="15.7148%" y="757" width="0.0747%" height="15" fill="rgb(233,28,6)" fg:x="421" fg:w="2"/><text x="15.9648%" y="767.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (2 samples, 0.07%)</title><rect x="15.7148%" y="741" width="0.0747%" height="15" fill="rgb(231,218,15)" fg:x="421" fg:w="2"/><text x="15.9648%" y="751.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (2 samples, 0.07%)</title><rect x="15.7148%" y="725" width="0.0747%" height="15" fill="rgb(226,171,48)" fg:x="421" fg:w="2"/><text x="15.9648%" y="735.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (2 samples, 0.07%)</title><rect x="15.7148%" y="709" width="0.0747%" height="15" fill="rgb(235,201,9)" fg:x="421" fg:w="2"/><text x="15.9648%" y="719.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (2 samples, 0.07%)</title><rect x="15.7148%" y="693" width="0.0747%" height="15" fill="rgb(217,80,15)" fg:x="421" fg:w="2"/><text x="15.9648%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.07%)</title><rect x="15.7148%" y="677" width="0.0747%" height="15" fill="rgb(219,152,8)" fg:x="421" fg:w="2"/><text x="15.9648%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_inner (2 samples, 0.07%)</title><rect x="15.7148%" y="661" width="0.0747%" height="15" fill="rgb(243,107,38)" fg:x="421" fg:w="2"/><text x="15.9648%" y="671.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (2 samples, 0.07%)</title><rect x="15.7148%" y="645" width="0.0747%" height="15" fill="rgb(231,17,5)" fg:x="421" fg:w="2"/><text x="15.9648%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.07%)</title><rect x="15.7148%" y="629" width="0.0747%" height="15" fill="rgb(209,25,54)" fg:x="421" fg:w="2"/><text x="15.9648%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="15.7148%" y="613" width="0.0747%" height="15" fill="rgb(219,0,2)" fg:x="421" fg:w="2"/><text x="15.9648%" y="623.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (2 samples, 0.07%)</title><rect x="15.7895%" y="805" width="0.0747%" height="15" fill="rgb(246,9,5)" fg:x="423" fg:w="2"/><text x="16.0395%" y="815.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (1 samples, 0.04%)</title><rect x="15.8268%" y="789" width="0.0373%" height="15" fill="rgb(226,159,4)" fg:x="424" fg:w="1"/><text x="16.0768%" y="799.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="15.8268%" y="773" width="0.0373%" height="15" fill="rgb(219,175,34)" fg:x="424" fg:w="1"/><text x="16.0768%" y="783.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (1 samples, 0.04%)</title><rect x="15.8268%" y="757" width="0.0373%" height="15" fill="rgb(236,10,46)" fg:x="424" fg:w="1"/><text x="16.0768%" y="767.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (1 samples, 0.04%)</title><rect x="15.8268%" y="741" width="0.0373%" height="15" fill="rgb(240,211,16)" fg:x="424" fg:w="1"/><text x="16.0768%" y="751.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (1 samples, 0.04%)</title><rect x="15.8268%" y="725" width="0.0373%" height="15" fill="rgb(205,3,43)" fg:x="424" fg:w="1"/><text x="16.0768%" y="735.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="15.8268%" y="709" width="0.0373%" height="15" fill="rgb(245,7,22)" fg:x="424" fg:w="1"/><text x="16.0768%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (1 samples, 0.04%)</title><rect x="15.8268%" y="693" width="0.0373%" height="15" fill="rgb(239,132,32)" fg:x="424" fg:w="1"/><text x="16.0768%" y="703.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (1 samples, 0.04%)</title><rect x="15.8268%" y="677" width="0.0373%" height="15" fill="rgb(228,202,34)" fg:x="424" fg:w="1"/><text x="16.0768%" y="687.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (1 samples, 0.04%)</title><rect x="15.8268%" y="661" width="0.0373%" height="15" fill="rgb(254,200,22)" fg:x="424" fg:w="1"/><text x="16.0768%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="15.8268%" y="645" width="0.0373%" height="15" fill="rgb(219,10,39)" fg:x="424" fg:w="1"/><text x="16.0768%" y="655.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (1 samples, 0.04%)</title><rect x="15.8268%" y="629" width="0.0373%" height="15" fill="rgb(226,210,39)" fg:x="424" fg:w="1"/><text x="16.0768%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="15.8268%" y="613" width="0.0373%" height="15" fill="rgb(208,219,16)" fg:x="424" fg:w="1"/><text x="16.0768%" y="623.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="15.8268%" y="597" width="0.0373%" height="15" fill="rgb(216,158,51)" fg:x="424" fg:w="1"/><text x="16.0768%" y="607.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="15.8268%" y="581" width="0.0373%" height="15" fill="rgb(233,14,44)" fg:x="424" fg:w="1"/><text x="16.0768%" y="591.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="15.8268%" y="565" width="0.0373%" height="15" fill="rgb(237,97,39)" fg:x="424" fg:w="1"/><text x="16.0768%" y="575.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="15.8268%" y="549" width="0.0373%" height="15" fill="rgb(218,198,43)" fg:x="424" fg:w="1"/><text x="16.0768%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.04%)</title><rect x="15.8268%" y="533" width="0.0373%" height="15" fill="rgb(231,104,20)" fg:x="424" fg:w="1"/><text x="16.0768%" y="543.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1 samples, 0.04%)</title><rect x="15.8268%" y="517" width="0.0373%" height="15" fill="rgb(254,36,13)" fg:x="424" fg:w="1"/><text x="16.0768%" y="527.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1 samples, 0.04%)</title><rect x="15.8268%" y="501" width="0.0373%" height="15" fill="rgb(248,14,50)" fg:x="424" fg:w="1"/><text x="16.0768%" y="511.50"></text></g><g><title>recv (1 samples, 0.04%)</title><rect x="15.8268%" y="485" width="0.0373%" height="15" fill="rgb(217,107,29)" fg:x="424" fg:w="1"/><text x="16.0768%" y="495.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (9 samples, 0.34%)</title><rect x="15.5655%" y="965" width="0.3359%" height="15" fill="rgb(251,169,33)" fg:x="417" fg:w="9"/><text x="15.8155%" y="975.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (9 samples, 0.34%)</title><rect x="15.5655%" y="949" width="0.3359%" height="15" fill="rgb(217,108,32)" fg:x="417" fg:w="9"/><text x="15.8155%" y="959.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (9 samples, 0.34%)</title><rect x="15.5655%" y="933" width="0.3359%" height="15" fill="rgb(219,66,42)" fg:x="417" fg:w="9"/><text x="15.8155%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (9 samples, 0.34%)</title><rect x="15.5655%" y="917" width="0.3359%" height="15" fill="rgb(206,180,7)" fg:x="417" fg:w="9"/><text x="15.8155%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (9 samples, 0.34%)</title><rect x="15.5655%" y="901" width="0.3359%" height="15" fill="rgb(208,226,31)" fg:x="417" fg:w="9"/><text x="15.8155%" y="911.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (9 samples, 0.34%)</title><rect x="15.5655%" y="885" width="0.3359%" height="15" fill="rgb(218,26,49)" fg:x="417" fg:w="9"/><text x="15.8155%" y="895.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (8 samples, 0.30%)</title><rect x="15.6028%" y="869" width="0.2986%" height="15" fill="rgb(233,197,48)" fg:x="418" fg:w="8"/><text x="15.8528%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (8 samples, 0.30%)</title><rect x="15.6028%" y="853" width="0.2986%" height="15" fill="rgb(252,181,51)" fg:x="418" fg:w="8"/><text x="15.8528%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8 samples, 0.30%)</title><rect x="15.6028%" y="837" width="0.2986%" height="15" fill="rgb(253,90,19)" fg:x="418" fg:w="8"/><text x="15.8528%" y="847.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}}::_{{closure}}::_{{closure}} (8 samples, 0.30%)</title><rect x="15.6028%" y="821" width="0.2986%" height="15" fill="rgb(215,171,30)" fg:x="418" fg:w="8"/><text x="15.8528%" y="831.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::ok (1 samples, 0.04%)</title><rect x="15.8641%" y="805" width="0.0373%" height="15" fill="rgb(214,222,9)" fg:x="425" fg:w="1"/><text x="16.1141%" y="815.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode (1 samples, 0.04%)</title><rect x="15.8641%" y="789" width="0.0373%" height="15" fill="rgb(223,3,22)" fg:x="425" fg:w="1"/><text x="16.1141%" y="799.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (1 samples, 0.04%)</title><rect x="15.8641%" y="773" width="0.0373%" height="15" fill="rgb(225,196,46)" fg:x="425" fg:w="1"/><text x="16.1141%" y="783.50"></text></g><g><title>&lt;sqlx_mysql::protocol::response::ok::OkPacket as sqlx_core::io::decode::Decode&gt;::decode_with (1 samples, 0.04%)</title><rect x="15.8641%" y="757" width="0.0373%" height="15" fill="rgb(209,110,37)" fg:x="425" fg:w="1"/><text x="16.1141%" y="767.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (1 samples, 0.04%)</title><rect x="15.8641%" y="741" width="0.0373%" height="15" fill="rgb(249,89,12)" fg:x="425" fg:w="1"/><text x="16.1141%" y="751.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (1 samples, 0.04%)</title><rect x="15.8641%" y="725" width="0.0373%" height="15" fill="rgb(226,27,33)" fg:x="425" fg:w="1"/><text x="16.1141%" y="735.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}} (1 samples, 0.04%)</title><rect x="15.9015%" y="965" width="0.0373%" height="15" fill="rgb(213,82,22)" fg:x="426" fg:w="1"/><text x="16.1515%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="15.9015%" y="949" width="0.0373%" height="15" fill="rgb(248,140,0)" fg:x="426" fg:w="1"/><text x="16.1515%" y="959.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (11 samples, 0.41%)</title><rect x="15.5655%" y="1109" width="0.4106%" height="15" fill="rgb(228,106,3)" fg:x="417" fg:w="11"/><text x="15.8155%" y="1119.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (11 samples, 0.41%)</title><rect x="15.5655%" y="1093" width="0.4106%" height="15" fill="rgb(209,23,37)" fg:x="417" fg:w="11"/><text x="15.8155%" y="1103.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (11 samples, 0.41%)</title><rect x="15.5655%" y="1077" width="0.4106%" height="15" fill="rgb(241,93,50)" fg:x="417" fg:w="11"/><text x="15.8155%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.41%)</title><rect x="15.5655%" y="1061" width="0.4106%" height="15" fill="rgb(253,46,43)" fg:x="417" fg:w="11"/><text x="15.8155%" y="1071.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.41%)</title><rect x="15.5655%" y="1045" width="0.4106%" height="15" fill="rgb(226,206,43)" fg:x="417" fg:w="11"/><text x="15.8155%" y="1055.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (11 samples, 0.41%)</title><rect x="15.5655%" y="1029" width="0.4106%" height="15" fill="rgb(217,54,7)" fg:x="417" fg:w="11"/><text x="15.8155%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (11 samples, 0.41%)</title><rect x="15.5655%" y="1013" width="0.4106%" height="15" fill="rgb(223,5,52)" fg:x="417" fg:w="11"/><text x="15.8155%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 0.41%)</title><rect x="15.5655%" y="997" width="0.4106%" height="15" fill="rgb(206,52,46)" fg:x="417" fg:w="11"/><text x="15.8155%" y="1007.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many::_{{closure}}::_{{closure}} (11 samples, 0.41%)</title><rect x="15.5655%" y="981" width="0.4106%" height="15" fill="rgb(253,136,11)" fg:x="417" fg:w="11"/><text x="15.8155%" y="991.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}} (1 samples, 0.04%)</title><rect x="15.9388%" y="965" width="0.0373%" height="15" fill="rgb(208,106,33)" fg:x="427" fg:w="1"/><text x="16.1888%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::connection::stream::MySqlStream&lt;alloc::boxed::Box&lt;dyn sqlx_core::net::socket::Socket&gt;&gt;::wait_until_ready::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="15.9388%" y="949" width="0.0373%" height="15" fill="rgb(206,54,4)" fg:x="427" fg:w="1"/><text x="16.1888%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="15.9761%" y="981" width="0.0373%" height="15" fill="rgb(213,3,15)" fg:x="428" fg:w="1"/><text x="16.2261%" y="991.50"></text></g><g><title>fabseapi::Api::traffic_light_insert::_{{closure}} (15 samples, 0.56%)</title><rect x="15.5282%" y="1333" width="0.5599%" height="15" fill="rgb(252,211,39)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1343.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (15 samples, 0.56%)</title><rect x="15.5282%" y="1317" width="0.5599%" height="15" fill="rgb(223,6,36)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1327.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15 samples, 0.56%)</title><rect x="15.5282%" y="1301" width="0.5599%" height="15" fill="rgb(252,169,45)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (15 samples, 0.56%)</title><rect x="15.5282%" y="1285" width="0.5599%" height="15" fill="rgb(212,48,26)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1295.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (15 samples, 0.56%)</title><rect x="15.5282%" y="1269" width="0.5599%" height="15" fill="rgb(251,102,48)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.56%)</title><rect x="15.5282%" y="1253" width="0.5599%" height="15" fill="rgb(243,208,16)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.56%)</title><rect x="15.5282%" y="1237" width="0.5599%" height="15" fill="rgb(219,96,24)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1247.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (15 samples, 0.56%)</title><rect x="15.5282%" y="1221" width="0.5599%" height="15" fill="rgb(219,33,29)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.56%)</title><rect x="15.5282%" y="1205" width="0.5599%" height="15" fill="rgb(223,176,5)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1215.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.56%)</title><rect x="15.5282%" y="1189" width="0.5599%" height="15" fill="rgb(228,140,14)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1199.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (15 samples, 0.56%)</title><rect x="15.5282%" y="1173" width="0.5599%" height="15" fill="rgb(217,179,31)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (15 samples, 0.56%)</title><rect x="15.5282%" y="1157" width="0.5599%" height="15" fill="rgb(230,9,30)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15 samples, 0.56%)</title><rect x="15.5282%" y="1141" width="0.5599%" height="15" fill="rgb(230,136,20)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1151.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (15 samples, 0.56%)</title><rect x="15.5282%" y="1125" width="0.5599%" height="15" fill="rgb(215,210,22)" fg:x="416" fg:w="15"/><text x="15.7782%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_mysql::database::MySql&gt;&gt; (3 samples, 0.11%)</title><rect x="15.9761%" y="1109" width="0.1120%" height="15" fill="rgb(218,43,5)" fg:x="428" fg:w="3"/><text x="16.2261%" y="1119.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="15.9761%" y="1093" width="0.1120%" height="15" fill="rgb(216,11,5)" fg:x="428" fg:w="3"/><text x="16.2261%" y="1103.50"></text></g><g><title>sqlx_core::rt::spawn (3 samples, 0.11%)</title><rect x="15.9761%" y="1077" width="0.1120%" height="15" fill="rgb(209,82,29)" fg:x="428" fg:w="3"/><text x="16.2261%" y="1087.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (3 samples, 0.11%)</title><rect x="15.9761%" y="1061" width="0.1120%" height="15" fill="rgb(244,115,12)" fg:x="428" fg:w="3"/><text x="16.2261%" y="1071.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_named (3 samples, 0.11%)</title><rect x="15.9761%" y="1045" width="0.1120%" height="15" fill="rgb(222,82,18)" fg:x="428" fg:w="3"/><text x="16.2261%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (3 samples, 0.11%)</title><rect x="15.9761%" y="1029" width="0.1120%" height="15" fill="rgb(249,227,8)" fg:x="428" fg:w="3"/><text x="16.2261%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (3 samples, 0.11%)</title><rect x="15.9761%" y="1013" width="0.1120%" height="15" fill="rgb(253,141,45)" fg:x="428" fg:w="3"/><text x="16.2261%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (3 samples, 0.11%)</title><rect x="15.9761%" y="997" width="0.1120%" height="15" fill="rgb(234,184,4)" fg:x="428" fg:w="3"/><text x="16.2261%" y="1007.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (2 samples, 0.07%)</title><rect x="16.0134%" y="981" width="0.0747%" height="15" fill="rgb(218,194,23)" fg:x="429" fg:w="2"/><text x="16.2634%" y="991.50"></text></g><g><title>tokio::runtime::task::new_task (2 samples, 0.07%)</title><rect x="16.0134%" y="965" width="0.0747%" height="15" fill="rgb(235,66,41)" fg:x="429" fg:w="2"/><text x="16.2634%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (2 samples, 0.07%)</title><rect x="16.0134%" y="949" width="0.0747%" height="15" fill="rgb(245,217,1)" fg:x="429" fg:w="2"/><text x="16.2634%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (2 samples, 0.07%)</title><rect x="16.0134%" y="933" width="0.0747%" height="15" fill="rgb(229,91,1)" fg:x="429" fg:w="2"/><text x="16.2634%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.07%)</title><rect x="16.0134%" y="917" width="0.0747%" height="15" fill="rgb(207,101,30)" fg:x="429" fg:w="2"/><text x="16.2634%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.07%)</title><rect x="16.0134%" y="901" width="0.0747%" height="15" fill="rgb(223,82,49)" fg:x="429" fg:w="2"/><text x="16.2634%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="16.0134%" y="885" width="0.0747%" height="15" fill="rgb(218,167,17)" fg:x="429" fg:w="2"/><text x="16.2634%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="16.0134%" y="869" width="0.0747%" height="15" fill="rgb(208,103,14)" fg:x="429" fg:w="2"/><text x="16.2634%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="16.0134%" y="853" width="0.0747%" height="15" fill="rgb(238,20,8)" fg:x="429" fg:w="2"/><text x="16.2634%" y="863.50"></text></g><g><title>__rdl_alloc (2 samples, 0.07%)</title><rect x="16.0134%" y="837" width="0.0747%" height="15" fill="rgb(218,80,54)" fg:x="429" fg:w="2"/><text x="16.2634%" y="847.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.07%)</title><rect x="16.0134%" y="821" width="0.0747%" height="15" fill="rgb(240,144,17)" fg:x="429" fg:w="2"/><text x="16.2634%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (2 samples, 0.07%)</title><rect x="16.0134%" y="805" width="0.0747%" height="15" fill="rgb(245,27,50)" fg:x="429" fg:w="2"/><text x="16.2634%" y="815.50"></text></g><g><title>posix_memalign (2 samples, 0.07%)</title><rect x="16.0134%" y="789" width="0.0747%" height="15" fill="rgb(251,51,7)" fg:x="429" fg:w="2"/><text x="16.2634%" y="799.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="16.0134%" y="773" width="0.0747%" height="15" fill="rgb(245,217,29)" fg:x="429" fg:w="2"/><text x="16.2634%" y="783.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="16.0134%" y="757" width="0.0747%" height="15" fill="rgb(221,176,29)" fg:x="429" fg:w="2"/><text x="16.2634%" y="767.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="16.0134%" y="741" width="0.0747%" height="15" fill="rgb(212,180,24)" fg:x="429" fg:w="2"/><text x="16.2634%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="16.0508%" y="725" width="0.0373%" height="15" fill="rgb(254,24,2)" fg:x="430" fg:w="1"/><text x="16.3008%" y="735.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="16.1254%" y="1093" width="0.0373%" height="15" fill="rgb(230,100,2)" fg:x="432" fg:w="1"/><text x="16.3754%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.04%)</title><rect x="16.2001%" y="869" width="0.0373%" height="15" fill="rgb(219,142,25)" fg:x="434" fg:w="1"/><text x="16.4501%" y="879.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (1 samples, 0.04%)</title><rect x="16.2001%" y="853" width="0.0373%" height="15" fill="rgb(240,73,43)" fg:x="434" fg:w="1"/><text x="16.4501%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::logger::QueryLogger&gt; (1 samples, 0.04%)</title><rect x="16.2374%" y="805" width="0.0373%" height="15" fill="rgb(214,114,15)" fg:x="435" fg:w="1"/><text x="16.4874%" y="815.50"></text></g><g><title>&lt;sqlx_core::logger::QueryLogger as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.2374%" y="789" width="0.0373%" height="15" fill="rgb(207,130,4)" fg:x="435" fg:w="1"/><text x="16.4874%" y="799.50"></text></g><g><title>sqlx_core::logger::QueryLogger::finish (1 samples, 0.04%)</title><rect x="16.2374%" y="773" width="0.0373%" height="15" fill="rgb(221,25,40)" fg:x="435" fg:w="1"/><text x="16.4874%" y="783.50"></text></g><g><title>sqlx_core::logger::private_level_filter_to_levels (1 samples, 0.04%)</title><rect x="16.2374%" y="757" width="0.0373%" height="15" fill="rgb(241,184,7)" fg:x="435" fg:w="1"/><text x="16.4874%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::arguments::MySqlArguments&gt; (1 samples, 0.04%)</title><rect x="16.2747%" y="805" width="0.0373%" height="15" fill="rgb(235,159,4)" fg:x="436" fg:w="1"/><text x="16.5247%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="16.2747%" y="789" width="0.0373%" height="15" fill="rgb(214,87,48)" fg:x="436" fg:w="1"/><text x="16.5247%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="16.2747%" y="773" width="0.0373%" height="15" fill="rgb(246,198,24)" fg:x="436" fg:w="1"/><text x="16.5247%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.2747%" y="757" width="0.0373%" height="15" fill="rgb(209,66,40)" fg:x="436" fg:w="1"/><text x="16.5247%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="16.2747%" y="741" width="0.0373%" height="15" fill="rgb(233,147,39)" fg:x="436" fg:w="1"/><text x="16.5247%" y="751.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (1 samples, 0.04%)</title><rect x="16.3121%" y="741" width="0.0373%" height="15" fill="rgb(231,145,52)" fg:x="437" fg:w="1"/><text x="16.5621%" y="751.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (1 samples, 0.04%)</title><rect x="16.3121%" y="725" width="0.0373%" height="15" fill="rgb(206,20,26)" fg:x="437" fg:w="1"/><text x="16.5621%" y="735.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (1 samples, 0.04%)</title><rect x="16.3121%" y="709" width="0.0373%" height="15" fill="rgb(238,220,4)" fg:x="437" fg:w="1"/><text x="16.5621%" y="719.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (1 samples, 0.04%)</title><rect x="16.3121%" y="693" width="0.0373%" height="15" fill="rgb(252,195,42)" fg:x="437" fg:w="1"/><text x="16.5621%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="16.3121%" y="677" width="0.0373%" height="15" fill="rgb(209,10,6)" fg:x="437" fg:w="1"/><text x="16.5621%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_inner (1 samples, 0.04%)</title><rect x="16.3121%" y="661" width="0.0373%" height="15" fill="rgb(229,3,52)" fg:x="437" fg:w="1"/><text x="16.5621%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.04%)</title><rect x="16.3121%" y="645" width="0.0373%" height="15" fill="rgb(253,49,37)" fg:x="437" fg:w="1"/><text x="16.5621%" y="655.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search::_{{closure}} (1 samples, 0.04%)</title><rect x="16.3121%" y="629" width="0.0373%" height="15" fill="rgb(240,103,49)" fg:x="437" fg:w="1"/><text x="16.5621%" y="639.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash::_{{closure}} (1 samples, 0.04%)</title><rect x="16.3121%" y="613" width="0.0373%" height="15" fill="rgb(250,182,30)" fg:x="437" fg:w="1"/><text x="16.5621%" y="623.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::_{{closure}} (1 samples, 0.04%)</title><rect x="16.3121%" y="597" width="0.0373%" height="15" fill="rgb(248,8,30)" fg:x="437" fg:w="1"/><text x="16.5621%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="16.3121%" y="581" width="0.0373%" height="15" fill="rgb(237,120,30)" fg:x="437" fg:w="1"/><text x="16.5621%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="16.3121%" y="565" width="0.0373%" height="15" fill="rgb(221,146,34)" fg:x="437" fg:w="1"/><text x="16.5621%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1 samples, 0.04%)</title><rect x="16.3121%" y="549" width="0.0373%" height="15" fill="rgb(242,55,13)" fg:x="437" fg:w="1"/><text x="16.5621%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="16.3121%" y="533" width="0.0373%" height="15" fill="rgb(242,112,31)" fg:x="437" fg:w="1"/><text x="16.5621%" y="543.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::get_or_prepare_statement::_{{closure}} (2 samples, 0.07%)</title><rect x="16.3121%" y="805" width="0.0747%" height="15" fill="rgb(249,192,27)" fg:x="437" fg:w="2"/><text x="16.5621%" y="815.50"></text></g><g><title>sqlx_core::common::statement_cache::StatementCache&lt;T&gt;::get_mut (2 samples, 0.07%)</title><rect x="16.3121%" y="789" width="0.0747%" height="15" fill="rgb(208,204,44)" fg:x="437" fg:w="2"/><text x="16.5621%" y="799.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::get_mut (2 samples, 0.07%)</title><rect x="16.3121%" y="773" width="0.0747%" height="15" fill="rgb(208,93,54)" fg:x="437" fg:w="2"/><text x="16.5621%" y="783.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (2 samples, 0.07%)</title><rect x="16.3121%" y="757" width="0.0747%" height="15" fill="rgb(242,1,31)" fg:x="437" fg:w="2"/><text x="16.5621%" y="767.50"></text></g><g><title>hashlink::linked_hash_map::hash_key (1 samples, 0.04%)</title><rect x="16.3494%" y="741" width="0.0373%" height="15" fill="rgb(241,83,25)" fg:x="438" fg:w="1"/><text x="16.5994%" y="751.50"></text></g><g><title>&lt;core::hash::BuildHasherDefault&lt;H&gt; as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="16.3494%" y="725" width="0.0373%" height="15" fill="rgb(205,169,50)" fg:x="438" fg:w="1"/><text x="16.5994%" y="735.50"></text></g><g><title>ahash::&lt;impl core::default::Default for ahash::aes_hash::AHasher&gt;::default (1 samples, 0.04%)</title><rect x="16.3494%" y="709" width="0.0373%" height="15" fill="rgb(239,186,37)" fg:x="438" fg:w="1"/><text x="16.5994%" y="719.50"></text></g><g><title>ahash::random_state::RandomState::with_fixed_keys (1 samples, 0.04%)</title><rect x="16.3494%" y="693" width="0.0373%" height="15" fill="rgb(205,221,10)" fg:x="438" fg:w="1"/><text x="16.5994%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="16.3867%" y="789" width="0.0373%" height="15" fill="rgb(218,196,15)" fg:x="439" fg:w="1"/><text x="16.6367%" y="799.50"></text></g><g><title>sqlx_mysql::protocol::text::column::ColumnDefinition::alias (1 samples, 0.04%)</title><rect x="16.4240%" y="773" width="0.0373%" height="15" fill="rgb(218,196,35)" fg:x="440" fg:w="1"/><text x="16.6740%" y="783.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="16.4240%" y="757" width="0.0373%" height="15" fill="rgb(233,63,24)" fg:x="440" fg:w="1"/><text x="16.6740%" y="767.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.04%)</title><rect x="16.4240%" y="741" width="0.0373%" height="15" fill="rgb(225,8,4)" fg:x="440" fg:w="1"/><text x="16.6740%" y="751.50"></text></g><g><title>sqlx_mysql::connection::executor::recv_next_result_column (2 samples, 0.07%)</title><rect x="16.4240%" y="789" width="0.0747%" height="15" fill="rgb(234,105,35)" fg:x="440" fg:w="2"/><text x="16.6740%" y="799.50"></text></g><g><title>sqlx_mysql::protocol::text::column::ColumnDefinition::name (1 samples, 0.04%)</title><rect x="16.4614%" y="773" width="0.0373%" height="15" fill="rgb(236,21,32)" fg:x="441" fg:w="1"/><text x="16.7114%" y="783.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="16.4614%" y="757" width="0.0373%" height="15" fill="rgb(228,109,6)" fg:x="441" fg:w="1"/><text x="16.7114%" y="767.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::maybe_recv_eof::_{{closure}} (1 samples, 0.04%)</title><rect x="16.4987%" y="789" width="0.0373%" height="15" fill="rgb(229,215,31)" fg:x="442" fg:w="1"/><text x="16.7487%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="16.5360%" y="741" width="0.0373%" height="15" fill="rgb(221,52,54)" fg:x="443" fg:w="1"/><text x="16.7860%" y="751.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (2 samples, 0.07%)</title><rect x="16.5360%" y="773" width="0.0747%" height="15" fill="rgb(252,129,43)" fg:x="443" fg:w="2"/><text x="16.7860%" y="783.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (2 samples, 0.07%)</title><rect x="16.5360%" y="757" width="0.0747%" height="15" fill="rgb(248,183,27)" fg:x="443" fg:w="2"/><text x="16.7860%" y="767.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="16.5733%" y="741" width="0.0373%" height="15" fill="rgb(250,0,22)" fg:x="444" fg:w="1"/><text x="16.8233%" y="751.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (1 samples, 0.04%)</title><rect x="16.5733%" y="725" width="0.0373%" height="15" fill="rgb(213,166,10)" fg:x="444" fg:w="1"/><text x="16.8233%" y="735.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (1 samples, 0.04%)</title><rect x="16.5733%" y="709" width="0.0373%" height="15" fill="rgb(207,163,36)" fg:x="444" fg:w="1"/><text x="16.8233%" y="719.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (1 samples, 0.04%)</title><rect x="16.5733%" y="693" width="0.0373%" height="15" fill="rgb(208,122,22)" fg:x="444" fg:w="1"/><text x="16.8233%" y="703.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::reserve (1 samples, 0.04%)</title><rect x="16.5733%" y="677" width="0.0373%" height="15" fill="rgb(207,104,49)" fg:x="444" fg:w="1"/><text x="16.8233%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (1 samples, 0.04%)</title><rect x="16.5733%" y="661" width="0.0373%" height="15" fill="rgb(248,211,50)" fg:x="444" fg:w="1"/><text x="16.8233%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.04%)</title><rect x="16.5733%" y="645" width="0.0373%" height="15" fill="rgb(217,13,45)" fg:x="444" fg:w="1"/><text x="16.8233%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="16.5733%" y="629" width="0.0373%" height="15" fill="rgb(211,216,49)" fg:x="444" fg:w="1"/><text x="16.8233%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="16.5733%" y="613" width="0.0373%" height="15" fill="rgb(221,58,53)" fg:x="444" fg:w="1"/><text x="16.8233%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="16.5733%" y="597" width="0.0373%" height="15" fill="rgb(220,112,41)" fg:x="444" fg:w="1"/><text x="16.8233%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="16.5733%" y="581" width="0.0373%" height="15" fill="rgb(236,38,28)" fg:x="444" fg:w="1"/><text x="16.8233%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="16.5733%" y="565" width="0.0373%" height="15" fill="rgb(227,195,22)" fg:x="444" fg:w="1"/><text x="16.8233%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="16.5733%" y="549" width="0.0373%" height="15" fill="rgb(214,55,33)" fg:x="444" fg:w="1"/><text x="16.8233%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="16.5733%" y="533" width="0.0373%" height="15" fill="rgb(248,80,13)" fg:x="444" fg:w="1"/><text x="16.8233%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="16.5733%" y="517" width="0.0373%" height="15" fill="rgb(238,52,6)" fg:x="444" fg:w="1"/><text x="16.8233%" y="527.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="16.5733%" y="501" width="0.0373%" height="15" fill="rgb(224,198,47)" fg:x="444" fg:w="1"/><text x="16.8233%" y="511.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="16.5733%" y="485" width="0.0373%" height="15" fill="rgb(233,171,20)" fg:x="444" fg:w="1"/><text x="16.8233%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="16.5733%" y="469" width="0.0373%" height="15" fill="rgb(241,30,25)" fg:x="444" fg:w="1"/><text x="16.8233%" y="479.50"></text></g><g><title>sqlx_mysql::connection::executor::recv_result_columns::_{{closure}} (7 samples, 0.26%)</title><rect x="16.3867%" y="805" width="0.2613%" height="15" fill="rgb(207,171,38)" fg:x="439" fg:w="7"/><text x="16.6367%" y="815.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv::_{{closure}} (3 samples, 0.11%)</title><rect x="16.5360%" y="789" width="0.1120%" height="15" fill="rgb(234,70,1)" fg:x="443" fg:w="3"/><text x="16.7860%" y="799.50"></text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (1 samples, 0.04%)</title><rect x="16.6107%" y="773" width="0.0373%" height="15" fill="rgb(232,178,18)" fg:x="445" fg:w="1"/><text x="16.8607%" y="783.50"></text></g><g><title>&lt;sqlx_mysql::protocol::text::column::ColumnDefinition as sqlx_core::io::decode::Decode&lt;sqlx_mysql::protocol::capabilities::Capabilities&gt;&gt;::decode_with (1 samples, 0.04%)</title><rect x="16.6107%" y="757" width="0.0373%" height="15" fill="rgb(241,78,40)" fg:x="445" fg:w="1"/><text x="16.8607%" y="767.50"></text></g><g><title>&lt;bytes::bytes::Bytes as sqlx_mysql::io::buf::MySqlBufExt&gt;::get_bytes_lenenc (1 samples, 0.04%)</title><rect x="16.6107%" y="741" width="0.0373%" height="15" fill="rgb(222,35,25)" fg:x="445" fg:w="1"/><text x="16.8607%" y="751.50"></text></g><g><title>bytes::bytes::Bytes::split_to (1 samples, 0.04%)</title><rect x="16.6107%" y="725" width="0.0373%" height="15" fill="rgb(207,92,16)" fg:x="445" fg:w="1"/><text x="16.8607%" y="735.50"></text></g><g><title>bytes::bytes::Bytes::len (1 samples, 0.04%)</title><rect x="16.6107%" y="709" width="0.0373%" height="15" fill="rgb(216,59,51)" fg:x="445" fg:w="1"/><text x="16.8607%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.07%)</title><rect x="16.6480%" y="789" width="0.0747%" height="15" fill="rgb(213,80,28)" fg:x="446" fg:w="2"/><text x="16.8980%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.07%)</title><rect x="16.6480%" y="773" width="0.0747%" height="15" fill="rgb(220,93,7)" fg:x="446" fg:w="2"/><text x="16.8980%" y="783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.07%)</title><rect x="16.6480%" y="757" width="0.0747%" height="15" fill="rgb(225,24,44)" fg:x="446" fg:w="2"/><text x="16.8980%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.07%)</title><rect x="16.6480%" y="741" width="0.0747%" height="15" fill="rgb(243,74,40)" fg:x="446" fg:w="2"/><text x="16.8980%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.07%)</title><rect x="16.6480%" y="725" width="0.0747%" height="15" fill="rgb(228,39,7)" fg:x="446" fg:w="2"/><text x="16.8980%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.07%)</title><rect x="16.6480%" y="709" width="0.0747%" height="15" fill="rgb(227,79,8)" fg:x="446" fg:w="2"/><text x="16.8980%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.07%)</title><rect x="16.6480%" y="693" width="0.0747%" height="15" fill="rgb(236,58,11)" fg:x="446" fg:w="2"/><text x="16.8980%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.07%)</title><rect x="16.6480%" y="677" width="0.0747%" height="15" fill="rgb(249,63,35)" fg:x="446" fg:w="2"/><text x="16.8980%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="16.6480%" y="661" width="0.0747%" height="15" fill="rgb(252,114,16)" fg:x="446" fg:w="2"/><text x="16.8980%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="16.6480%" y="645" width="0.0747%" height="15" fill="rgb(254,151,24)" fg:x="446" fg:w="2"/><text x="16.8980%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.07%)</title><rect x="16.6480%" y="629" width="0.0747%" height="15" fill="rgb(253,54,39)" fg:x="446" fg:w="2"/><text x="16.8980%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="16.6480%" y="613" width="0.0747%" height="15" fill="rgb(243,25,45)" fg:x="446" fg:w="2"/><text x="16.8980%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="16.6480%" y="597" width="0.0747%" height="15" fill="rgb(234,134,9)" fg:x="446" fg:w="2"/><text x="16.8980%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="16.6480%" y="581" width="0.0747%" height="15" fill="rgb(227,166,31)" fg:x="446" fg:w="2"/><text x="16.8980%" y="591.50"></text></g><g><title>__rdl_alloc (2 samples, 0.07%)</title><rect x="16.6480%" y="565" width="0.0747%" height="15" fill="rgb(245,143,41)" fg:x="446" fg:w="2"/><text x="16.8980%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.07%)</title><rect x="16.6480%" y="549" width="0.0747%" height="15" fill="rgb(238,181,32)" fg:x="446" fg:w="2"/><text x="16.8980%" y="559.50"></text></g><g><title>malloc (2 samples, 0.07%)</title><rect x="16.6480%" y="533" width="0.0747%" height="15" fill="rgb(224,113,18)" fg:x="446" fg:w="2"/><text x="16.8980%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="16.6853%" y="517" width="0.0373%" height="15" fill="rgb(240,229,28)" fg:x="447" fg:w="1"/><text x="16.9353%" y="527.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (16 samples, 0.60%)</title><rect x="16.2001%" y="965" width="0.5972%" height="15" fill="rgb(250,185,3)" fg:x="434" fg:w="16"/><text x="16.4501%" y="975.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (16 samples, 0.60%)</title><rect x="16.2001%" y="949" width="0.5972%" height="15" fill="rgb(212,59,25)" fg:x="434" fg:w="16"/><text x="16.4501%" y="959.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (16 samples, 0.60%)</title><rect x="16.2001%" y="933" width="0.5972%" height="15" fill="rgb(221,87,20)" fg:x="434" fg:w="16"/><text x="16.4501%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.60%)</title><rect x="16.2001%" y="917" width="0.5972%" height="15" fill="rgb(213,74,28)" fg:x="434" fg:w="16"/><text x="16.4501%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.60%)</title><rect x="16.2001%" y="901" width="0.5972%" height="15" fill="rgb(224,132,34)" fg:x="434" fg:w="16"/><text x="16.4501%" y="911.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.60%)</title><rect x="16.2001%" y="885" width="0.5972%" height="15" fill="rgb(222,101,24)" fg:x="434" fg:w="16"/><text x="16.4501%" y="895.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (15 samples, 0.56%)</title><rect x="16.2374%" y="869" width="0.5599%" height="15" fill="rgb(254,142,4)" fg:x="435" fg:w="15"/><text x="16.4874%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (15 samples, 0.56%)</title><rect x="16.2374%" y="853" width="0.5599%" height="15" fill="rgb(230,229,49)" fg:x="435" fg:w="15"/><text x="16.4874%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15 samples, 0.56%)</title><rect x="16.2374%" y="837" width="0.5599%" height="15" fill="rgb(238,70,47)" fg:x="435" fg:w="15"/><text x="16.4874%" y="847.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}}::_{{closure}}::_{{closure}} (15 samples, 0.56%)</title><rect x="16.2374%" y="821" width="0.5599%" height="15" fill="rgb(231,160,17)" fg:x="435" fg:w="15"/><text x="16.4874%" y="831.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (4 samples, 0.15%)</title><rect x="16.6480%" y="805" width="0.1493%" height="15" fill="rgb(218,68,53)" fg:x="446" fg:w="4"/><text x="16.8980%" y="815.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (2 samples, 0.07%)</title><rect x="16.7227%" y="789" width="0.0747%" height="15" fill="rgb(236,111,10)" fg:x="448" fg:w="2"/><text x="16.9727%" y="799.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (2 samples, 0.07%)</title><rect x="16.7227%" y="773" width="0.0747%" height="15" fill="rgb(224,34,41)" fg:x="448" fg:w="2"/><text x="16.9727%" y="783.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (2 samples, 0.07%)</title><rect x="16.7227%" y="757" width="0.0747%" height="15" fill="rgb(241,118,19)" fg:x="448" fg:w="2"/><text x="16.9727%" y="767.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (2 samples, 0.07%)</title><rect x="16.7227%" y="741" width="0.0747%" height="15" fill="rgb(238,129,25)" fg:x="448" fg:w="2"/><text x="16.9727%" y="751.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (2 samples, 0.07%)</title><rect x="16.7227%" y="725" width="0.0747%" height="15" fill="rgb(238,22,31)" fg:x="448" fg:w="2"/><text x="16.9727%" y="735.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="16.7227%" y="709" width="0.0747%" height="15" fill="rgb(222,174,48)" fg:x="448" fg:w="2"/><text x="16.9727%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (2 samples, 0.07%)</title><rect x="16.7227%" y="693" width="0.0747%" height="15" fill="rgb(206,152,40)" fg:x="448" fg:w="2"/><text x="16.9727%" y="703.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (2 samples, 0.07%)</title><rect x="16.7227%" y="677" width="0.0747%" height="15" fill="rgb(218,99,54)" fg:x="448" fg:w="2"/><text x="16.9727%" y="687.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (2 samples, 0.07%)</title><rect x="16.7227%" y="661" width="0.0747%" height="15" fill="rgb(220,174,26)" fg:x="448" fg:w="2"/><text x="16.9727%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (2 samples, 0.07%)</title><rect x="16.7227%" y="645" width="0.0747%" height="15" fill="rgb(245,116,9)" fg:x="448" fg:w="2"/><text x="16.9727%" y="655.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (2 samples, 0.07%)</title><rect x="16.7227%" y="629" width="0.0747%" height="15" fill="rgb(209,72,35)" fg:x="448" fg:w="2"/><text x="16.9727%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2 samples, 0.07%)</title><rect x="16.7227%" y="613" width="0.0747%" height="15" fill="rgb(226,126,21)" fg:x="448" fg:w="2"/><text x="16.9727%" y="623.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.07%)</title><rect x="16.7227%" y="597" width="0.0747%" height="15" fill="rgb(227,192,1)" fg:x="448" fg:w="2"/><text x="16.9727%" y="607.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2 samples, 0.07%)</title><rect x="16.7227%" y="581" width="0.0747%" height="15" fill="rgb(237,180,29)" fg:x="448" fg:w="2"/><text x="16.9727%" y="591.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (2 samples, 0.07%)</title><rect x="16.7227%" y="565" width="0.0747%" height="15" fill="rgb(230,197,35)" fg:x="448" fg:w="2"/><text x="16.9727%" y="575.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.07%)</title><rect x="16.7227%" y="549" width="0.0747%" height="15" fill="rgb(246,193,31)" fg:x="448" fg:w="2"/><text x="16.9727%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.07%)</title><rect x="16.7227%" y="533" width="0.0747%" height="15" fill="rgb(241,36,4)" fg:x="448" fg:w="2"/><text x="16.9727%" y="543.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (2 samples, 0.07%)</title><rect x="16.7227%" y="517" width="0.0747%" height="15" fill="rgb(241,130,17)" fg:x="448" fg:w="2"/><text x="16.9727%" y="527.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (2 samples, 0.07%)</title><rect x="16.7227%" y="501" width="0.0747%" height="15" fill="rgb(206,137,32)" fg:x="448" fg:w="2"/><text x="16.9727%" y="511.50"></text></g><g><title>recv (2 samples, 0.07%)</title><rect x="16.7227%" y="485" width="0.0747%" height="15" fill="rgb(237,228,51)" fg:x="448" fg:w="2"/><text x="16.9727%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="16.7227%" y="469" width="0.0747%" height="15" fill="rgb(243,6,42)" fg:x="448" fg:w="2"/><text x="16.9727%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="16.7227%" y="453" width="0.0747%" height="15" fill="rgb(251,74,28)" fg:x="448" fg:w="2"/><text x="16.9727%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="16.7227%" y="437" width="0.0747%" height="15" fill="rgb(218,20,49)" fg:x="448" fg:w="2"/><text x="16.9727%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="16.7227%" y="421" width="0.0747%" height="15" fill="rgb(238,28,14)" fg:x="448" fg:w="2"/><text x="16.9727%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.7600%" y="405" width="0.0373%" height="15" fill="rgb(229,40,46)" fg:x="449" fg:w="1"/><text x="17.0100%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.7600%" y="389" width="0.0373%" height="15" fill="rgb(244,195,20)" fg:x="449" fg:w="1"/><text x="17.0100%" y="399.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.7973%" y="949" width="0.0373%" height="15" fill="rgb(253,56,35)" fg:x="450" fg:w="1"/><text x="17.0473%" y="959.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.7973%" y="933" width="0.0373%" height="15" fill="rgb(210,149,44)" fg:x="450" fg:w="1"/><text x="17.0473%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.7973%" y="917" width="0.0373%" height="15" fill="rgb(240,135,12)" fg:x="450" fg:w="1"/><text x="17.0473%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.7973%" y="901" width="0.0373%" height="15" fill="rgb(251,24,50)" fg:x="450" fg:w="1"/><text x="17.0473%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="16.7973%" y="885" width="0.0373%" height="15" fill="rgb(243,200,47)" fg:x="450" fg:w="1"/><text x="17.0473%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="16.7973%" y="869" width="0.0373%" height="15" fill="rgb(224,166,26)" fg:x="450" fg:w="1"/><text x="17.0473%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="16.7973%" y="853" width="0.0373%" height="15" fill="rgb(233,0,47)" fg:x="450" fg:w="1"/><text x="17.0473%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="16.7973%" y="837" width="0.0373%" height="15" fill="rgb(253,80,5)" fg:x="450" fg:w="1"/><text x="17.0473%" y="847.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="16.7973%" y="821" width="0.0373%" height="15" fill="rgb(214,133,25)" fg:x="450" fg:w="1"/><text x="17.0473%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="16.7973%" y="805" width="0.0373%" height="15" fill="rgb(209,27,14)" fg:x="450" fg:w="1"/><text x="17.0473%" y="815.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="16.7973%" y="789" width="0.0373%" height="15" fill="rgb(219,102,51)" fg:x="450" fg:w="1"/><text x="17.0473%" y="799.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (20 samples, 0.75%)</title><rect x="16.1254%" y="1109" width="0.7465%" height="15" fill="rgb(237,18,16)" fg:x="432" fg:w="20"/><text x="16.3754%" y="1119.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (19 samples, 0.71%)</title><rect x="16.1627%" y="1093" width="0.7092%" height="15" fill="rgb(241,85,17)" fg:x="433" fg:w="19"/><text x="16.4127%" y="1103.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (19 samples, 0.71%)</title><rect x="16.1627%" y="1077" width="0.7092%" height="15" fill="rgb(236,90,42)" fg:x="433" fg:w="19"/><text x="16.4127%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (19 samples, 0.71%)</title><rect x="16.1627%" y="1061" width="0.7092%" height="15" fill="rgb(249,57,21)" fg:x="433" fg:w="19"/><text x="16.4127%" y="1071.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (19 samples, 0.71%)</title><rect x="16.1627%" y="1045" width="0.7092%" height="15" fill="rgb(243,12,36)" fg:x="433" fg:w="19"/><text x="16.4127%" y="1055.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (19 samples, 0.71%)</title><rect x="16.1627%" y="1029" width="0.7092%" height="15" fill="rgb(253,128,47)" fg:x="433" fg:w="19"/><text x="16.4127%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (19 samples, 0.71%)</title><rect x="16.1627%" y="1013" width="0.7092%" height="15" fill="rgb(207,33,20)" fg:x="433" fg:w="19"/><text x="16.4127%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (19 samples, 0.71%)</title><rect x="16.1627%" y="997" width="0.7092%" height="15" fill="rgb(233,215,35)" fg:x="433" fg:w="19"/><text x="16.4127%" y="1007.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many::_{{closure}}::_{{closure}} (19 samples, 0.71%)</title><rect x="16.1627%" y="981" width="0.7092%" height="15" fill="rgb(249,188,52)" fg:x="433" fg:w="19"/><text x="16.4127%" y="991.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}} (2 samples, 0.07%)</title><rect x="16.7973%" y="965" width="0.0747%" height="15" fill="rgb(225,12,32)" fg:x="450" fg:w="2"/><text x="17.0473%" y="975.50"></text></g><g><title>sqlx_core::logger::QueryLogger::new (1 samples, 0.04%)</title><rect x="16.8346%" y="949" width="0.0373%" height="15" fill="rgb(247,98,14)" fg:x="451" fg:w="1"/><text x="17.0846%" y="959.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="16.8346%" y="933" width="0.0373%" height="15" fill="rgb(247,219,48)" fg:x="451" fg:w="1"/><text x="17.0846%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.04%)</title><rect x="16.8346%" y="917" width="0.0373%" height="15" fill="rgb(253,60,48)" fg:x="451" fg:w="1"/><text x="17.0846%" y="927.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="16.8346%" y="901" width="0.0373%" height="15" fill="rgb(245,15,52)" fg:x="451" fg:w="1"/><text x="17.0846%" y="911.50"></text></g><g><title>clock_gettime (1 samples, 0.04%)</title><rect x="16.8346%" y="885" width="0.0373%" height="15" fill="rgb(220,133,28)" fg:x="451" fg:w="1"/><text x="17.0846%" y="895.50"></text></g><g><title>fabseapi::Api::traffic_light_retrieve::_{{closure}} (23 samples, 0.86%)</title><rect x="16.0881%" y="1333" width="0.8585%" height="15" fill="rgb(217,180,4)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1343.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (23 samples, 0.86%)</title><rect x="16.0881%" y="1317" width="0.8585%" height="15" fill="rgb(251,24,1)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1327.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.86%)</title><rect x="16.0881%" y="1301" width="0.8585%" height="15" fill="rgb(212,185,49)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.86%)</title><rect x="16.0881%" y="1285" width="0.8585%" height="15" fill="rgb(215,175,22)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.86%)</title><rect x="16.0881%" y="1269" width="0.8585%" height="15" fill="rgb(250,205,14)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1279.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (23 samples, 0.86%)</title><rect x="16.0881%" y="1253" width="0.8585%" height="15" fill="rgb(225,211,22)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.86%)</title><rect x="16.0881%" y="1237" width="0.8585%" height="15" fill="rgb(251,179,42)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.86%)</title><rect x="16.0881%" y="1221" width="0.8585%" height="15" fill="rgb(208,216,51)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.86%)</title><rect x="16.0881%" y="1205" width="0.8585%" height="15" fill="rgb(235,36,11)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1215.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.86%)</title><rect x="16.0881%" y="1189" width="0.8585%" height="15" fill="rgb(213,189,28)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1199.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (23 samples, 0.86%)</title><rect x="16.0881%" y="1173" width="0.8585%" height="15" fill="rgb(227,203,42)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (23 samples, 0.86%)</title><rect x="16.0881%" y="1157" width="0.8585%" height="15" fill="rgb(244,72,36)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (23 samples, 0.86%)</title><rect x="16.0881%" y="1141" width="0.8585%" height="15" fill="rgb(213,53,17)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1151.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (23 samples, 0.86%)</title><rect x="16.0881%" y="1125" width="0.8585%" height="15" fill="rgb(207,167,3)" fg:x="431" fg:w="23"/><text x="16.3381%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_mysql::database::MySql&gt;&gt; (2 samples, 0.07%)</title><rect x="16.8720%" y="1109" width="0.0747%" height="15" fill="rgb(216,98,30)" fg:x="452" fg:w="2"/><text x="17.1220%" y="1119.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="16.8720%" y="1093" width="0.0747%" height="15" fill="rgb(236,123,15)" fg:x="452" fg:w="2"/><text x="17.1220%" y="1103.50"></text></g><g><title>sqlx_core::rt::spawn (2 samples, 0.07%)</title><rect x="16.8720%" y="1077" width="0.0747%" height="15" fill="rgb(248,81,50)" fg:x="452" fg:w="2"/><text x="17.1220%" y="1087.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (2 samples, 0.07%)</title><rect x="16.8720%" y="1061" width="0.0747%" height="15" fill="rgb(214,120,4)" fg:x="452" fg:w="2"/><text x="17.1220%" y="1071.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_named (2 samples, 0.07%)</title><rect x="16.8720%" y="1045" width="0.0747%" height="15" fill="rgb(208,179,34)" fg:x="452" fg:w="2"/><text x="17.1220%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (2 samples, 0.07%)</title><rect x="16.8720%" y="1029" width="0.0747%" height="15" fill="rgb(227,140,7)" fg:x="452" fg:w="2"/><text x="17.1220%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (2 samples, 0.07%)</title><rect x="16.8720%" y="1013" width="0.0747%" height="15" fill="rgb(214,22,6)" fg:x="452" fg:w="2"/><text x="17.1220%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (2 samples, 0.07%)</title><rect x="16.8720%" y="997" width="0.0747%" height="15" fill="rgb(207,137,27)" fg:x="452" fg:w="2"/><text x="17.1220%" y="1007.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (2 samples, 0.07%)</title><rect x="16.8720%" y="981" width="0.0747%" height="15" fill="rgb(210,8,46)" fg:x="452" fg:w="2"/><text x="17.1220%" y="991.50"></text></g><g><title>tokio::runtime::task::new_task (2 samples, 0.07%)</title><rect x="16.8720%" y="965" width="0.0747%" height="15" fill="rgb(240,16,54)" fg:x="452" fg:w="2"/><text x="17.1220%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (2 samples, 0.07%)</title><rect x="16.8720%" y="949" width="0.0747%" height="15" fill="rgb(211,209,29)" fg:x="452" fg:w="2"/><text x="17.1220%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (2 samples, 0.07%)</title><rect x="16.8720%" y="933" width="0.0747%" height="15" fill="rgb(226,228,24)" fg:x="452" fg:w="2"/><text x="17.1220%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.07%)</title><rect x="16.8720%" y="917" width="0.0747%" height="15" fill="rgb(222,84,9)" fg:x="452" fg:w="2"/><text x="17.1220%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.07%)</title><rect x="16.8720%" y="901" width="0.0747%" height="15" fill="rgb(234,203,30)" fg:x="452" fg:w="2"/><text x="17.1220%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="16.8720%" y="885" width="0.0747%" height="15" fill="rgb(238,109,14)" fg:x="452" fg:w="2"/><text x="17.1220%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="16.8720%" y="869" width="0.0747%" height="15" fill="rgb(233,206,34)" fg:x="452" fg:w="2"/><text x="17.1220%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="16.8720%" y="853" width="0.0747%" height="15" fill="rgb(220,167,47)" fg:x="452" fg:w="2"/><text x="17.1220%" y="863.50"></text></g><g><title>__rdl_alloc (2 samples, 0.07%)</title><rect x="16.8720%" y="837" width="0.0747%" height="15" fill="rgb(238,105,10)" fg:x="452" fg:w="2"/><text x="17.1220%" y="847.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.07%)</title><rect x="16.8720%" y="821" width="0.0747%" height="15" fill="rgb(213,227,17)" fg:x="452" fg:w="2"/><text x="17.1220%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (2 samples, 0.07%)</title><rect x="16.8720%" y="805" width="0.0747%" height="15" fill="rgb(217,132,38)" fg:x="452" fg:w="2"/><text x="17.1220%" y="815.50"></text></g><g><title>posix_memalign (2 samples, 0.07%)</title><rect x="16.8720%" y="789" width="0.0747%" height="15" fill="rgb(242,146,4)" fg:x="452" fg:w="2"/><text x="17.1220%" y="799.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="16.8720%" y="773" width="0.0747%" height="15" fill="rgb(212,61,9)" fg:x="452" fg:w="2"/><text x="17.1220%" y="783.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="16.8720%" y="757" width="0.0747%" height="15" fill="rgb(247,126,22)" fg:x="452" fg:w="2"/><text x="17.1220%" y="767.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="16.8720%" y="741" width="0.0747%" height="15" fill="rgb(220,196,2)" fg:x="452" fg:w="2"/><text x="17.1220%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::logger::QueryLogger&gt; (1 samples, 0.04%)</title><rect x="17.0213%" y="805" width="0.0373%" height="15" fill="rgb(208,46,4)" fg:x="456" fg:w="1"/><text x="17.2713%" y="815.50"></text></g><g><title>&lt;sqlx_core::logger::QueryLogger as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="17.0213%" y="789" width="0.0373%" height="15" fill="rgb(252,104,46)" fg:x="456" fg:w="1"/><text x="17.2713%" y="799.50"></text></g><g><title>sqlx_core::logger::QueryLogger::finish (1 samples, 0.04%)</title><rect x="17.0213%" y="773" width="0.0373%" height="15" fill="rgb(237,152,48)" fg:x="456" fg:w="1"/><text x="17.2713%" y="783.50"></text></g><g><title>log::max_level (1 samples, 0.04%)</title><rect x="17.0213%" y="757" width="0.0373%" height="15" fill="rgb(221,59,37)" fg:x="456" fg:w="1"/><text x="17.2713%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="17.0213%" y="741" width="0.0373%" height="15" fill="rgb(209,202,51)" fg:x="456" fg:w="1"/><text x="17.2713%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="17.0213%" y="725" width="0.0373%" height="15" fill="rgb(228,81,30)" fg:x="456" fg:w="1"/><text x="17.2713%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="17.0586%" y="741" width="0.0373%" height="15" fill="rgb(227,42,39)" fg:x="457" fg:w="1"/><text x="17.3086%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="17.0586%" y="725" width="0.0373%" height="15" fill="rgb(221,26,2)" fg:x="457" fg:w="1"/><text x="17.3086%" y="735.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="17.0586%" y="709" width="0.0373%" height="15" fill="rgb(254,61,31)" fg:x="457" fg:w="1"/><text x="17.3086%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="17.0586%" y="693" width="0.0373%" height="15" fill="rgb(222,173,38)" fg:x="457" fg:w="1"/><text x="17.3086%" y="703.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="17.0586%" y="677" width="0.0373%" height="15" fill="rgb(218,50,12)" fg:x="457" fg:w="1"/><text x="17.3086%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="17.0586%" y="661" width="0.0373%" height="15" fill="rgb(223,88,40)" fg:x="457" fg:w="1"/><text x="17.3086%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::arguments::MySqlArguments&gt; (2 samples, 0.07%)</title><rect x="17.0586%" y="805" width="0.0747%" height="15" fill="rgb(237,54,19)" fg:x="457" fg:w="2"/><text x="17.3086%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.07%)</title><rect x="17.0586%" y="789" width="0.0747%" height="15" fill="rgb(251,129,25)" fg:x="457" fg:w="2"/><text x="17.3086%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.07%)</title><rect x="17.0586%" y="773" width="0.0747%" height="15" fill="rgb(238,97,19)" fg:x="457" fg:w="2"/><text x="17.3086%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="17.0586%" y="757" width="0.0747%" height="15" fill="rgb(240,169,18)" fg:x="457" fg:w="2"/><text x="17.3086%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="17.0959%" y="741" width="0.0373%" height="15" fill="rgb(230,187,49)" fg:x="458" fg:w="1"/><text x="17.3459%" y="751.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (3 samples, 0.11%)</title><rect x="17.1333%" y="805" width="0.1120%" height="15" fill="rgb(209,44,26)" fg:x="459" fg:w="3"/><text x="17.3833%" y="815.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (2 samples, 0.07%)</title><rect x="17.1706%" y="789" width="0.0747%" height="15" fill="rgb(244,0,6)" fg:x="460" fg:w="2"/><text x="17.4206%" y="799.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (2 samples, 0.07%)</title><rect x="17.1706%" y="773" width="0.0747%" height="15" fill="rgb(248,18,21)" fg:x="460" fg:w="2"/><text x="17.4206%" y="783.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (2 samples, 0.07%)</title><rect x="17.1706%" y="757" width="0.0747%" height="15" fill="rgb(245,180,19)" fg:x="460" fg:w="2"/><text x="17.4206%" y="767.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (2 samples, 0.07%)</title><rect x="17.1706%" y="741" width="0.0747%" height="15" fill="rgb(252,118,36)" fg:x="460" fg:w="2"/><text x="17.4206%" y="751.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (2 samples, 0.07%)</title><rect x="17.1706%" y="725" width="0.0747%" height="15" fill="rgb(210,224,19)" fg:x="460" fg:w="2"/><text x="17.4206%" y="735.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="17.1706%" y="709" width="0.0747%" height="15" fill="rgb(218,30,24)" fg:x="460" fg:w="2"/><text x="17.4206%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (1 samples, 0.04%)</title><rect x="17.2079%" y="693" width="0.0373%" height="15" fill="rgb(219,75,50)" fg:x="461" fg:w="1"/><text x="17.4579%" y="703.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (1 samples, 0.04%)</title><rect x="17.2079%" y="677" width="0.0373%" height="15" fill="rgb(234,72,50)" fg:x="461" fg:w="1"/><text x="17.4579%" y="687.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (1 samples, 0.04%)</title><rect x="17.2079%" y="661" width="0.0373%" height="15" fill="rgb(219,100,48)" fg:x="461" fg:w="1"/><text x="17.4579%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="17.2079%" y="645" width="0.0373%" height="15" fill="rgb(253,5,41)" fg:x="461" fg:w="1"/><text x="17.4579%" y="655.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (1 samples, 0.04%)</title><rect x="17.2079%" y="629" width="0.0373%" height="15" fill="rgb(247,181,11)" fg:x="461" fg:w="1"/><text x="17.4579%" y="639.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.04%)</title><rect x="17.2079%" y="613" width="0.0373%" height="15" fill="rgb(222,223,25)" fg:x="461" fg:w="1"/><text x="17.4579%" y="623.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.04%)</title><rect x="17.2079%" y="597" width="0.0373%" height="15" fill="rgb(214,198,28)" fg:x="461" fg:w="1"/><text x="17.4579%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 0.41%)</title><rect x="16.9839%" y="837" width="0.4106%" height="15" fill="rgb(230,46,43)" fg:x="455" fg:w="11"/><text x="17.2339%" y="847.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}}::_{{closure}}::_{{closure}} (11 samples, 0.41%)</title><rect x="16.9839%" y="821" width="0.4106%" height="15" fill="rgb(233,65,53)" fg:x="455" fg:w="11"/><text x="17.2339%" y="831.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::send_packet::_{{closure}} (4 samples, 0.15%)</title><rect x="17.2452%" y="805" width="0.1493%" height="15" fill="rgb(221,121,27)" fg:x="462" fg:w="4"/><text x="17.4952%" y="815.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::flush::_{{closure}} (3 samples, 0.11%)</title><rect x="17.2826%" y="789" width="0.1120%" height="15" fill="rgb(247,70,47)" fg:x="463" fg:w="3"/><text x="17.5326%" y="799.50"></text></g><g><title>&lt;sqlx_core::net::socket::Write&lt;S&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="17.3199%" y="773" width="0.0747%" height="15" fill="rgb(228,85,35)" fg:x="464" fg:w="2"/><text x="17.5699%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_write (1 samples, 0.04%)</title><rect x="17.3572%" y="757" width="0.0373%" height="15" fill="rgb(209,50,18)" fg:x="465" fg:w="1"/><text x="17.6072%" y="767.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write (1 samples, 0.04%)</title><rect x="17.3572%" y="741" width="0.0373%" height="15" fill="rgb(250,19,35)" fg:x="465" fg:w="1"/><text x="17.6072%" y="751.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="17.3572%" y="725" width="0.0373%" height="15" fill="rgb(253,107,29)" fg:x="465" fg:w="1"/><text x="17.6072%" y="735.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write::_{{closure}} (1 samples, 0.04%)</title><rect x="17.3572%" y="709" width="0.0373%" height="15" fill="rgb(252,179,29)" fg:x="465" fg:w="1"/><text x="17.6072%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="17.3572%" y="693" width="0.0373%" height="15" fill="rgb(238,194,6)" fg:x="465" fg:w="1"/><text x="17.6072%" y="703.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="17.3572%" y="677" width="0.0373%" height="15" fill="rgb(238,164,29)" fg:x="465" fg:w="1"/><text x="17.6072%" y="687.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="17.3572%" y="661" width="0.0373%" height="15" fill="rgb(224,25,9)" fg:x="465" fg:w="1"/><text x="17.6072%" y="671.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1 samples, 0.04%)</title><rect x="17.3572%" y="645" width="0.0373%" height="15" fill="rgb(244,153,23)" fg:x="465" fg:w="1"/><text x="17.6072%" y="655.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="17.3572%" y="629" width="0.0373%" height="15" fill="rgb(212,203,14)" fg:x="465" fg:w="1"/><text x="17.6072%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.04%)</title><rect x="17.3572%" y="613" width="0.0373%" height="15" fill="rgb(220,164,20)" fg:x="465" fg:w="1"/><text x="17.6072%" y="623.50"></text></g><g><title>__send (1 samples, 0.04%)</title><rect x="17.3572%" y="597" width="0.0373%" height="15" fill="rgb(222,203,48)" fg:x="465" fg:w="1"/><text x="17.6072%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="17.3572%" y="581" width="0.0373%" height="15" fill="rgb(215,159,22)" fg:x="465" fg:w="1"/><text x="17.6072%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="17.3572%" y="565" width="0.0373%" height="15" fill="rgb(216,183,47)" fg:x="465" fg:w="1"/><text x="17.6072%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="17.3572%" y="549" width="0.0373%" height="15" fill="rgb(229,195,25)" fg:x="465" fg:w="1"/><text x="17.6072%" y="559.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (12 samples, 0.45%)</title><rect x="16.9839%" y="965" width="0.4479%" height="15" fill="rgb(224,132,51)" fg:x="455" fg:w="12"/><text x="17.2339%" y="975.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (12 samples, 0.45%)</title><rect x="16.9839%" y="949" width="0.4479%" height="15" fill="rgb(240,63,7)" fg:x="455" fg:w="12"/><text x="17.2339%" y="959.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (12 samples, 0.45%)</title><rect x="16.9839%" y="933" width="0.4479%" height="15" fill="rgb(249,182,41)" fg:x="455" fg:w="12"/><text x="17.2339%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.45%)</title><rect x="16.9839%" y="917" width="0.4479%" height="15" fill="rgb(243,47,26)" fg:x="455" fg:w="12"/><text x="17.2339%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.45%)</title><rect x="16.9839%" y="901" width="0.4479%" height="15" fill="rgb(233,48,2)" fg:x="455" fg:w="12"/><text x="17.2339%" y="911.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.45%)</title><rect x="16.9839%" y="885" width="0.4479%" height="15" fill="rgb(244,165,34)" fg:x="455" fg:w="12"/><text x="17.2339%" y="895.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (12 samples, 0.45%)</title><rect x="16.9839%" y="869" width="0.4479%" height="15" fill="rgb(207,89,7)" fg:x="455" fg:w="12"/><text x="17.2339%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (12 samples, 0.45%)</title><rect x="16.9839%" y="853" width="0.4479%" height="15" fill="rgb(244,117,36)" fg:x="455" fg:w="12"/><text x="17.2339%" y="863.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="17.3946%" y="837" width="0.0373%" height="15" fill="rgb(226,144,34)" fg:x="466" fg:w="1"/><text x="17.6446%" y="847.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="17.3946%" y="821" width="0.0373%" height="15" fill="rgb(213,23,19)" fg:x="466" fg:w="1"/><text x="17.6446%" y="831.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (1 samples, 0.04%)</title><rect x="17.3946%" y="805" width="0.0373%" height="15" fill="rgb(217,75,12)" fg:x="466" fg:w="1"/><text x="17.6446%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.3946%" y="789" width="0.0373%" height="15" fill="rgb(224,159,17)" fg:x="466" fg:w="1"/><text x="17.6446%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.3946%" y="773" width="0.0373%" height="15" fill="rgb(217,118,1)" fg:x="466" fg:w="1"/><text x="17.6446%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="17.3946%" y="757" width="0.0373%" height="15" fill="rgb(232,180,48)" fg:x="466" fg:w="1"/><text x="17.6446%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::connection::executor::&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::{{closure}}::{{closure}}::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="17.3946%" y="741" width="0.0373%" height="15" fill="rgb(230,27,33)" fg:x="466" fg:w="1"/><text x="17.6446%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.4319%" y="965" width="0.0373%" height="15" fill="rgb(205,31,21)" fg:x="467" fg:w="1"/><text x="17.6819%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.4319%" y="949" width="0.0373%" height="15" fill="rgb(253,59,4)" fg:x="467" fg:w="1"/><text x="17.6819%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.4319%" y="933" width="0.0373%" height="15" fill="rgb(224,201,9)" fg:x="467" fg:w="1"/><text x="17.6819%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::Yielder&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.4319%" y="917" width="0.0373%" height="15" fill="rgb(229,206,30)" fg:x="467" fg:w="1"/><text x="17.6819%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.4319%" y="901" width="0.0373%" height="15" fill="rgb(212,67,47)" fg:x="467" fg:w="1"/><text x="17.6819%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="17.4319%" y="885" width="0.0373%" height="15" fill="rgb(211,96,50)" fg:x="467" fg:w="1"/><text x="17.6819%" y="895.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="17.4319%" y="869" width="0.0373%" height="15" fill="rgb(252,114,18)" fg:x="467" fg:w="1"/><text x="17.6819%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15 samples, 0.56%)</title><rect x="16.9466%" y="997" width="0.5599%" height="15" fill="rgb(223,58,37)" fg:x="454" fg:w="15"/><text x="17.1966%" y="1007.50"></text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many::_{{closure}}::_{{closure}} (15 samples, 0.56%)</title><rect x="16.9466%" y="981" width="0.5599%" height="15" fill="rgb(237,70,4)" fg:x="454" fg:w="15"/><text x="17.1966%" y="991.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}} (1 samples, 0.04%)</title><rect x="17.4692%" y="965" width="0.0373%" height="15" fill="rgb(244,85,46)" fg:x="468" fg:w="1"/><text x="17.7192%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="17.4692%" y="949" width="0.0373%" height="15" fill="rgb(223,39,52)" fg:x="468" fg:w="1"/><text x="17.7192%" y="959.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="17.4692%" y="933" width="0.0373%" height="15" fill="rgb(218,200,14)" fg:x="468" fg:w="1"/><text x="17.7192%" y="943.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="17.4692%" y="917" width="0.0373%" height="15" fill="rgb(208,171,16)" fg:x="468" fg:w="1"/><text x="17.7192%" y="927.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (16 samples, 0.60%)</title><rect x="16.9466%" y="1109" width="0.5972%" height="15" fill="rgb(234,200,18)" fg:x="454" fg:w="16"/><text x="17.1966%" y="1119.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (16 samples, 0.60%)</title><rect x="16.9466%" y="1093" width="0.5972%" height="15" fill="rgb(228,45,11)" fg:x="454" fg:w="16"/><text x="17.1966%" y="1103.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (16 samples, 0.60%)</title><rect x="16.9466%" y="1077" width="0.5972%" height="15" fill="rgb(237,182,11)" fg:x="454" fg:w="16"/><text x="17.1966%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.60%)</title><rect x="16.9466%" y="1061" width="0.5972%" height="15" fill="rgb(241,175,49)" fg:x="454" fg:w="16"/><text x="17.1966%" y="1071.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.60%)</title><rect x="16.9466%" y="1045" width="0.5972%" height="15" fill="rgb(247,38,35)" fg:x="454" fg:w="16"/><text x="17.1966%" y="1055.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (16 samples, 0.60%)</title><rect x="16.9466%" y="1029" width="0.5972%" height="15" fill="rgb(228,39,49)" fg:x="454" fg:w="16"/><text x="17.1966%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (16 samples, 0.60%)</title><rect x="16.9466%" y="1013" width="0.5972%" height="15" fill="rgb(226,101,26)" fg:x="454" fg:w="16"/><text x="17.1966%" y="1023.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="17.5065%" y="997" width="0.0373%" height="15" fill="rgb(206,141,19)" fg:x="469" fg:w="1"/><text x="17.7565%" y="1007.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="17.5065%" y="981" width="0.0373%" height="15" fill="rgb(211,200,13)" fg:x="469" fg:w="1"/><text x="17.7565%" y="991.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (1 samples, 0.04%)</title><rect x="17.5065%" y="965" width="0.0373%" height="15" fill="rgb(241,121,6)" fg:x="469" fg:w="1"/><text x="17.7565%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.5065%" y="949" width="0.0373%" height="15" fill="rgb(234,221,29)" fg:x="469" fg:w="1"/><text x="17.7565%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.5065%" y="933" width="0.0373%" height="15" fill="rgb(229,136,5)" fg:x="469" fg:w="1"/><text x="17.7565%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="17.5065%" y="917" width="0.0373%" height="15" fill="rgb(238,36,11)" fg:x="469" fg:w="1"/><text x="17.7565%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many&lt;sqlx_core::query::Query&lt;sqlx_mysql::database::MySql,sqlx_mysql::arguments::MySqlArguments&gt;&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="17.5065%" y="901" width="0.0373%" height="15" fill="rgb(251,55,41)" fg:x="469" fg:w="1"/><text x="17.7565%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.5439%" y="1109" width="0.0373%" height="15" fill="rgb(242,34,40)" fg:x="470" fg:w="1"/><text x="17.7939%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="17.5439%" y="1093" width="0.0373%" height="15" fill="rgb(215,42,17)" fg:x="470" fg:w="1"/><text x="17.7939%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="17.5439%" y="1077" width="0.0373%" height="15" fill="rgb(207,44,46)" fg:x="470" fg:w="1"/><text x="17.7939%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_mysql::database::MySql&gt;&gt; (2 samples, 0.07%)</title><rect x="17.5812%" y="1109" width="0.0747%" height="15" fill="rgb(211,206,28)" fg:x="471" fg:w="2"/><text x="17.8312%" y="1119.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="17.5812%" y="1093" width="0.0747%" height="15" fill="rgb(237,167,16)" fg:x="471" fg:w="2"/><text x="17.8312%" y="1103.50"></text></g><g><title>sqlx_core::rt::spawn (2 samples, 0.07%)</title><rect x="17.5812%" y="1077" width="0.0747%" height="15" fill="rgb(233,66,6)" fg:x="471" fg:w="2"/><text x="17.8312%" y="1087.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (2 samples, 0.07%)</title><rect x="17.5812%" y="1061" width="0.0747%" height="15" fill="rgb(246,123,29)" fg:x="471" fg:w="2"/><text x="17.8312%" y="1071.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_named (2 samples, 0.07%)</title><rect x="17.5812%" y="1045" width="0.0747%" height="15" fill="rgb(209,62,40)" fg:x="471" fg:w="2"/><text x="17.8312%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (2 samples, 0.07%)</title><rect x="17.5812%" y="1029" width="0.0747%" height="15" fill="rgb(218,4,25)" fg:x="471" fg:w="2"/><text x="17.8312%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (2 samples, 0.07%)</title><rect x="17.5812%" y="1013" width="0.0747%" height="15" fill="rgb(253,91,49)" fg:x="471" fg:w="2"/><text x="17.8312%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (2 samples, 0.07%)</title><rect x="17.5812%" y="997" width="0.0747%" height="15" fill="rgb(228,155,29)" fg:x="471" fg:w="2"/><text x="17.8312%" y="1007.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (2 samples, 0.07%)</title><rect x="17.5812%" y="981" width="0.0747%" height="15" fill="rgb(243,57,37)" fg:x="471" fg:w="2"/><text x="17.8312%" y="991.50"></text></g><g><title>tokio::runtime::task::new_task (2 samples, 0.07%)</title><rect x="17.5812%" y="965" width="0.0747%" height="15" fill="rgb(244,167,17)" fg:x="471" fg:w="2"/><text x="17.8312%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (2 samples, 0.07%)</title><rect x="17.5812%" y="949" width="0.0747%" height="15" fill="rgb(207,181,38)" fg:x="471" fg:w="2"/><text x="17.8312%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (2 samples, 0.07%)</title><rect x="17.5812%" y="933" width="0.0747%" height="15" fill="rgb(211,8,23)" fg:x="471" fg:w="2"/><text x="17.8312%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.07%)</title><rect x="17.5812%" y="917" width="0.0747%" height="15" fill="rgb(235,11,44)" fg:x="471" fg:w="2"/><text x="17.8312%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.07%)</title><rect x="17.5812%" y="901" width="0.0747%" height="15" fill="rgb(248,18,52)" fg:x="471" fg:w="2"/><text x="17.8312%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="17.5812%" y="885" width="0.0747%" height="15" fill="rgb(208,4,7)" fg:x="471" fg:w="2"/><text x="17.8312%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="17.5812%" y="869" width="0.0747%" height="15" fill="rgb(240,17,39)" fg:x="471" fg:w="2"/><text x="17.8312%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="17.5812%" y="853" width="0.0747%" height="15" fill="rgb(207,170,3)" fg:x="471" fg:w="2"/><text x="17.8312%" y="863.50"></text></g><g><title>__rdl_alloc (2 samples, 0.07%)</title><rect x="17.5812%" y="837" width="0.0747%" height="15" fill="rgb(236,100,52)" fg:x="471" fg:w="2"/><text x="17.8312%" y="847.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.07%)</title><rect x="17.5812%" y="821" width="0.0747%" height="15" fill="rgb(246,78,51)" fg:x="471" fg:w="2"/><text x="17.8312%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (2 samples, 0.07%)</title><rect x="17.5812%" y="805" width="0.0747%" height="15" fill="rgb(211,17,15)" fg:x="471" fg:w="2"/><text x="17.8312%" y="815.50"></text></g><g><title>posix_memalign (2 samples, 0.07%)</title><rect x="17.5812%" y="789" width="0.0747%" height="15" fill="rgb(209,59,46)" fg:x="471" fg:w="2"/><text x="17.8312%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="17.6185%" y="773" width="0.0373%" height="15" fill="rgb(210,92,25)" fg:x="472" fg:w="1"/><text x="17.8685%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="17.6185%" y="757" width="0.0373%" height="15" fill="rgb(238,174,52)" fg:x="472" fg:w="1"/><text x="17.8685%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="17.6185%" y="741" width="0.0373%" height="15" fill="rgb(230,73,7)" fg:x="472" fg:w="1"/><text x="17.8685%" y="751.50"></text></g><g><title>fabseapi::Api::vehicle_insert::_{{closure}} (20 samples, 0.75%)</title><rect x="16.9466%" y="1333" width="0.7465%" height="15" fill="rgb(243,124,40)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1343.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (20 samples, 0.75%)</title><rect x="16.9466%" y="1317" width="0.7465%" height="15" fill="rgb(244,170,11)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1327.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (20 samples, 0.75%)</title><rect x="16.9466%" y="1301" width="0.7465%" height="15" fill="rgb(207,114,54)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (20 samples, 0.75%)</title><rect x="16.9466%" y="1285" width="0.7465%" height="15" fill="rgb(205,42,20)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1295.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (20 samples, 0.75%)</title><rect x="16.9466%" y="1269" width="0.7465%" height="15" fill="rgb(230,30,28)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.75%)</title><rect x="16.9466%" y="1253" width="0.7465%" height="15" fill="rgb(205,73,54)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.75%)</title><rect x="16.9466%" y="1237" width="0.7465%" height="15" fill="rgb(254,227,23)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1247.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (20 samples, 0.75%)</title><rect x="16.9466%" y="1221" width="0.7465%" height="15" fill="rgb(228,202,34)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.75%)</title><rect x="16.9466%" y="1205" width="0.7465%" height="15" fill="rgb(222,225,37)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1215.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.75%)</title><rect x="16.9466%" y="1189" width="0.7465%" height="15" fill="rgb(221,14,54)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1199.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (20 samples, 0.75%)</title><rect x="16.9466%" y="1173" width="0.7465%" height="15" fill="rgb(254,102,2)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (20 samples, 0.75%)</title><rect x="16.9466%" y="1157" width="0.7465%" height="15" fill="rgb(232,104,17)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (20 samples, 0.75%)</title><rect x="16.9466%" y="1141" width="0.7465%" height="15" fill="rgb(250,220,14)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1151.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (20 samples, 0.75%)</title><rect x="16.9466%" y="1125" width="0.7465%" height="15" fill="rgb(241,158,9)" fg:x="454" fg:w="20"/><text x="17.1966%" y="1135.50"></text></g><g><title>sqlx_mysql::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many (1 samples, 0.04%)</title><rect x="17.6558%" y="1109" width="0.0373%" height="15" fill="rgb(246,9,43)" fg:x="473" fg:w="1"/><text x="17.9058%" y="1119.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="17.6558%" y="1093" width="0.0373%" height="15" fill="rgb(206,73,33)" fg:x="473" fg:w="1"/><text x="17.9058%" y="1103.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="17.6558%" y="1077" width="0.0373%" height="15" fill="rgb(222,79,8)" fg:x="473" fg:w="1"/><text x="17.9058%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="17.6558%" y="1061" width="0.0373%" height="15" fill="rgb(234,8,54)" fg:x="473" fg:w="1"/><text x="17.9058%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="17.6558%" y="1045" width="0.0373%" height="15" fill="rgb(209,134,38)" fg:x="473" fg:w="1"/><text x="17.9058%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="17.6558%" y="1029" width="0.0373%" height="15" fill="rgb(230,127,29)" fg:x="473" fg:w="1"/><text x="17.9058%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="17.6558%" y="1013" width="0.0373%" height="15" fill="rgb(242,44,41)" fg:x="473" fg:w="1"/><text x="17.9058%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="17.6558%" y="997" width="0.0373%" height="15" fill="rgb(222,56,43)" fg:x="473" fg:w="1"/><text x="17.9058%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="17.6558%" y="981" width="0.0373%" height="15" fill="rgb(238,39,47)" fg:x="473" fg:w="1"/><text x="17.9058%" y="991.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="17.6558%" y="965" width="0.0373%" height="15" fill="rgb(226,79,43)" fg:x="473" fg:w="1"/><text x="17.9058%" y="975.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="17.6558%" y="949" width="0.0373%" height="15" fill="rgb(242,105,53)" fg:x="473" fg:w="1"/><text x="17.9058%" y="959.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="17.6558%" y="933" width="0.0373%" height="15" fill="rgb(251,132,46)" fg:x="473" fg:w="1"/><text x="17.9058%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.19%)</title><rect x="18.4024%" y="1109" width="0.1866%" height="15" fill="rgb(231,77,14)" fg:x="493" fg:w="5"/><text x="18.6524%" y="1119.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.11%)</title><rect x="18.5890%" y="1093" width="0.1120%" height="15" fill="rgb(240,135,9)" fg:x="498" fg:w="3"/><text x="18.8390%" y="1103.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (2 samples, 0.07%)</title><rect x="18.7010%" y="1093" width="0.0747%" height="15" fill="rgb(248,109,14)" fg:x="501" fg:w="2"/><text x="18.9510%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (3 samples, 0.11%)</title><rect x="18.8130%" y="1029" width="0.1120%" height="15" fill="rgb(227,146,52)" fg:x="504" fg:w="3"/><text x="19.0630%" y="1039.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (3 samples, 0.11%)</title><rect x="18.8130%" y="1013" width="0.1120%" height="15" fill="rgb(232,54,3)" fg:x="504" fg:w="3"/><text x="19.0630%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.07%)</title><rect x="19.7462%" y="965" width="0.0747%" height="15" fill="rgb(229,201,43)" fg:x="529" fg:w="2"/><text x="19.9962%" y="975.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.11%)</title><rect x="19.8582%" y="949" width="0.1120%" height="15" fill="rgb(252,161,33)" fg:x="532" fg:w="3"/><text x="20.1082%" y="959.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (5 samples, 0.19%)</title><rect x="19.9701%" y="949" width="0.1866%" height="15" fill="rgb(226,146,40)" fg:x="535" fg:w="5"/><text x="20.2201%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as futures_core::future::FusedFuture&gt;::is_terminated (2 samples, 0.07%)</title><rect x="20.2314%" y="869" width="0.0747%" height="15" fill="rgb(219,47,25)" fg:x="542" fg:w="2"/><text x="20.4814%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.07%)</title><rect x="20.2314%" y="853" width="0.0747%" height="15" fill="rgb(250,135,13)" fg:x="542" fg:w="2"/><text x="20.4814%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.07%)</title><rect x="20.2314%" y="837" width="0.0747%" height="15" fill="rgb(219,229,18)" fg:x="542" fg:w="2"/><text x="20.4814%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (12 samples, 0.45%)</title><rect x="20.3061%" y="869" width="0.4479%" height="15" fill="rgb(217,152,27)" fg:x="544" fg:w="12"/><text x="20.5561%" y="879.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (12 samples, 0.45%)</title><rect x="20.3061%" y="853" width="0.4479%" height="15" fill="rgb(225,71,47)" fg:x="544" fg:w="12"/><text x="20.5561%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.22%)</title><rect x="21.6125%" y="805" width="0.2240%" height="15" fill="rgb(220,139,14)" fg:x="579" fg:w="6"/><text x="21.8625%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::Yielder&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;::yield::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="21.8365%" y="805" width="0.0373%" height="15" fill="rgb(247,54,32)" fg:x="585" fg:w="1"/><text x="22.0865%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;&gt; (1 samples, 0.04%)</title><rect x="21.8738%" y="805" width="0.0373%" height="15" fill="rgb(252,131,39)" fg:x="586" fg:w="1"/><text x="22.1238%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.04%)</title><rect x="21.8738%" y="789" width="0.0373%" height="15" fill="rgb(210,108,39)" fg:x="586" fg:w="1"/><text x="22.1238%" y="799.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="21.8738%" y="773" width="0.0373%" height="15" fill="rgb(205,23,29)" fg:x="586" fg:w="1"/><text x="22.1238%" y="783.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.04%)</title><rect x="21.8738%" y="757" width="0.0373%" height="15" fill="rgb(246,139,46)" fg:x="586" fg:w="1"/><text x="22.1238%" y="767.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.04%)</title><rect x="21.8738%" y="741" width="0.0373%" height="15" fill="rgb(250,81,26)" fg:x="586" fg:w="1"/><text x="22.1238%" y="751.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (1 samples, 0.04%)</title><rect x="21.8738%" y="725" width="0.0373%" height="15" fill="rgb(214,104,7)" fg:x="586" fg:w="1"/><text x="22.1238%" y="735.50"></text></g><g><title>bytes::bytes_mut::release_shared (1 samples, 0.04%)</title><rect x="21.8738%" y="709" width="0.0373%" height="15" fill="rgb(233,189,8)" fg:x="586" fg:w="1"/><text x="22.1238%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.07%)</title><rect x="22.6204%" y="789" width="0.0747%" height="15" fill="rgb(228,141,17)" fg:x="606" fg:w="2"/><text x="22.8704%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::replace (7 samples, 0.26%)</title><rect x="22.6950%" y="789" width="0.2613%" height="15" fill="rgb(247,157,1)" fg:x="608" fg:w="7"/><text x="22.9450%" y="799.50"></text></g><g><title>core::mem::replace (7 samples, 0.26%)</title><rect x="22.6950%" y="773" width="0.2613%" height="15" fill="rgb(249,225,5)" fg:x="608" fg:w="7"/><text x="22.9450%" y="783.50"></text></g><g><title>core::ptr::read (7 samples, 0.26%)</title><rect x="22.6950%" y="757" width="0.2613%" height="15" fill="rgb(242,55,13)" fg:x="608" fg:w="7"/><text x="22.9450%" y="767.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.04%)</title><rect x="22.9563%" y="757" width="0.0373%" height="15" fill="rgb(230,49,50)" fg:x="615" fg:w="1"/><text x="23.2063%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (3 samples, 0.11%)</title><rect x="22.9563%" y="789" width="0.1120%" height="15" fill="rgb(241,111,38)" fg:x="615" fg:w="3"/><text x="23.2063%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="22.9563%" y="773" width="0.1120%" height="15" fill="rgb(252,155,4)" fg:x="615" fg:w="3"/><text x="23.2063%" y="783.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (2 samples, 0.07%)</title><rect x="22.9937%" y="757" width="0.0747%" height="15" fill="rgb(212,69,32)" fg:x="616" fg:w="2"/><text x="23.2437%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.04%)</title><rect x="23.0310%" y="741" width="0.0373%" height="15" fill="rgb(243,107,47)" fg:x="617" fg:w="1"/><text x="23.2810%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.04%)</title><rect x="23.0310%" y="725" width="0.0373%" height="15" fill="rgb(247,130,12)" fg:x="617" fg:w="1"/><text x="23.2810%" y="735.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}} (32 samples, 1.19%)</title><rect x="21.9112%" y="805" width="1.1945%" height="15" fill="rgb(233,74,16)" fg:x="587" fg:w="32"/><text x="22.1612%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="23.0683%" y="789" width="0.0373%" height="15" fill="rgb(208,58,18)" fg:x="618" fg:w="1"/><text x="23.3183%" y="799.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="23.0683%" y="773" width="0.0373%" height="15" fill="rgb(242,225,1)" fg:x="618" fg:w="1"/><text x="23.3183%" y="783.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.04%)</title><rect x="23.0683%" y="757" width="0.0373%" height="15" fill="rgb(249,39,40)" fg:x="618" fg:w="1"/><text x="23.3183%" y="767.50"></text></g><g><title>std::thread::panicking (1 samples, 0.04%)</title><rect x="23.0683%" y="741" width="0.0373%" height="15" fill="rgb(207,72,44)" fg:x="618" fg:w="1"/><text x="23.3183%" y="751.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.04%)</title><rect x="23.0683%" y="725" width="0.0373%" height="15" fill="rgb(215,193,12)" fg:x="618" fg:w="1"/><text x="23.3183%" y="735.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="23.0683%" y="709" width="0.0373%" height="15" fill="rgb(248,41,39)" fg:x="618" fg:w="1"/><text x="23.3183%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="23.1056%" y="789" width="0.0373%" height="15" fill="rgb(253,85,4)" fg:x="619" fg:w="1"/><text x="23.3556%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="23.1056%" y="773" width="0.0373%" height="15" fill="rgb(243,70,31)" fg:x="619" fg:w="1"/><text x="23.3556%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="23.1056%" y="757" width="0.0373%" height="15" fill="rgb(253,195,26)" fg:x="619" fg:w="1"/><text x="23.3556%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="23.1056%" y="741" width="0.0373%" height="15" fill="rgb(243,42,11)" fg:x="619" fg:w="1"/><text x="23.3556%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="23.1056%" y="725" width="0.0373%" height="15" fill="rgb(239,66,17)" fg:x="619" fg:w="1"/><text x="23.3556%" y="735.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="23.1056%" y="709" width="0.0373%" height="15" fill="rgb(217,132,21)" fg:x="619" fg:w="1"/><text x="23.3556%" y="719.50"></text></g><g><title>sqlx_mysql::connection::executor::recv_next_result_column (1 samples, 0.04%)</title><rect x="23.1430%" y="789" width="0.0373%" height="15" fill="rgb(252,202,21)" fg:x="620" fg:w="1"/><text x="23.3930%" y="799.50"></text></g><g><title>sqlx_core::ext::ustr::UStr::new (1 samples, 0.04%)</title><rect x="23.1430%" y="773" width="0.0373%" height="15" fill="rgb(233,98,36)" fg:x="620" fg:w="1"/><text x="23.3930%" y="783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="23.1430%" y="757" width="0.0373%" height="15" fill="rgb(216,153,54)" fg:x="620" fg:w="1"/><text x="23.3930%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="23.1430%" y="741" width="0.0373%" height="15" fill="rgb(250,99,7)" fg:x="620" fg:w="1"/><text x="23.3930%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="23.1430%" y="725" width="0.0373%" height="15" fill="rgb(207,56,50)" fg:x="620" fg:w="1"/><text x="23.3930%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="23.1430%" y="709" width="0.0373%" height="15" fill="rgb(244,61,34)" fg:x="620" fg:w="1"/><text x="23.3930%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="23.1430%" y="693" width="0.0373%" height="15" fill="rgb(241,50,38)" fg:x="620" fg:w="1"/><text x="23.3930%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="23.1430%" y="677" width="0.0373%" height="15" fill="rgb(212,166,30)" fg:x="620" fg:w="1"/><text x="23.3930%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="23.1430%" y="661" width="0.0373%" height="15" fill="rgb(249,127,32)" fg:x="620" fg:w="1"/><text x="23.3930%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="23.1430%" y="645" width="0.0373%" height="15" fill="rgb(209,103,0)" fg:x="620" fg:w="1"/><text x="23.3930%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="23.1430%" y="629" width="0.0373%" height="15" fill="rgb(238,209,51)" fg:x="620" fg:w="1"/><text x="23.3930%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="23.1430%" y="613" width="0.0373%" height="15" fill="rgb(237,56,23)" fg:x="620" fg:w="1"/><text x="23.3930%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="23.1430%" y="597" width="0.0373%" height="15" fill="rgb(215,153,46)" fg:x="620" fg:w="1"/><text x="23.3930%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="23.1430%" y="581" width="0.0373%" height="15" fill="rgb(224,49,31)" fg:x="620" fg:w="1"/><text x="23.3930%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="23.1430%" y="565" width="0.0373%" height="15" fill="rgb(250,18,42)" fg:x="620" fg:w="1"/><text x="23.3930%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="23.1430%" y="549" width="0.0373%" height="15" fill="rgb(215,176,39)" fg:x="620" fg:w="1"/><text x="23.3930%" y="559.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="23.1430%" y="533" width="0.0373%" height="15" fill="rgb(223,77,29)" fg:x="620" fg:w="1"/><text x="23.3930%" y="543.50"></text></g><g><title>sqlx_mysql::connection::executor::recv_result_columns::_{{closure}} (3 samples, 0.11%)</title><rect x="23.1056%" y="805" width="0.1120%" height="15" fill="rgb(234,94,52)" fg:x="619" fg:w="3"/><text x="23.3556%" y="815.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv::_{{closure}} (1 samples, 0.04%)</title><rect x="23.1803%" y="789" width="0.0373%" height="15" fill="rgb(220,154,50)" fg:x="621" fg:w="1"/><text x="23.4303%" y="799.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (1 samples, 0.04%)</title><rect x="23.1803%" y="773" width="0.0373%" height="15" fill="rgb(212,11,10)" fg:x="621" fg:w="1"/><text x="23.4303%" y="783.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (1 samples, 0.04%)</title><rect x="23.1803%" y="757" width="0.0373%" height="15" fill="rgb(205,166,19)" fg:x="621" fg:w="1"/><text x="23.4303%" y="767.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="23.1803%" y="741" width="0.0373%" height="15" fill="rgb(244,198,16)" fg:x="621" fg:w="1"/><text x="23.4303%" y="751.50"></text></g><g><title>__rdl_alloc (25 samples, 0.93%)</title><rect x="24.1881%" y="565" width="0.9332%" height="15" fill="rgb(219,69,12)" fg:x="648" fg:w="25"/><text x="24.4381%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (25 samples, 0.93%)</title><rect x="24.1881%" y="549" width="0.9332%" height="15" fill="rgb(245,30,7)" fg:x="648" fg:w="25"/><text x="24.4381%" y="559.50"></text></g><g><title>malloc (25 samples, 0.93%)</title><rect x="24.1881%" y="533" width="0.9332%" height="15" fill="rgb(218,221,48)" fg:x="648" fg:w="25"/><text x="24.4381%" y="543.50"></text></g><g><title>[libc.so.6] (19 samples, 0.71%)</title><rect x="24.4121%" y="517" width="0.7092%" height="15" fill="rgb(216,66,15)" fg:x="654" fg:w="19"/><text x="24.6621%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="25.0840%" y="501" width="0.0373%" height="15" fill="rgb(226,122,50)" fg:x="672" fg:w="1"/><text x="25.3340%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (29 samples, 1.08%)</title><rect x="24.1881%" y="789" width="1.0825%" height="15" fill="rgb(239,156,16)" fg:x="648" fg:w="29"/><text x="24.4381%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (29 samples, 1.08%)</title><rect x="24.1881%" y="773" width="1.0825%" height="15" fill="rgb(224,27,38)" fg:x="648" fg:w="29"/><text x="24.4381%" y="783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (29 samples, 1.08%)</title><rect x="24.1881%" y="757" width="1.0825%" height="15" fill="rgb(224,39,27)" fg:x="648" fg:w="29"/><text x="24.4381%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (29 samples, 1.08%)</title><rect x="24.1881%" y="741" width="1.0825%" height="15" fill="rgb(215,92,29)" fg:x="648" fg:w="29"/><text x="24.4381%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (29 samples, 1.08%)</title><rect x="24.1881%" y="725" width="1.0825%" height="15" fill="rgb(207,159,16)" fg:x="648" fg:w="29"/><text x="24.4381%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 1.08%)</title><rect x="24.1881%" y="709" width="1.0825%" height="15" fill="rgb(238,163,47)" fg:x="648" fg:w="29"/><text x="24.4381%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 1.08%)</title><rect x="24.1881%" y="693" width="1.0825%" height="15" fill="rgb(219,91,49)" fg:x="648" fg:w="29"/><text x="24.4381%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29 samples, 1.08%)</title><rect x="24.1881%" y="677" width="1.0825%" height="15" fill="rgb(227,167,31)" fg:x="648" fg:w="29"/><text x="24.4381%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 1.08%)</title><rect x="24.1881%" y="661" width="1.0825%" height="15" fill="rgb(234,80,54)" fg:x="648" fg:w="29"/><text x="24.4381%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 1.08%)</title><rect x="24.1881%" y="645" width="1.0825%" height="15" fill="rgb(212,114,2)" fg:x="648" fg:w="29"/><text x="24.4381%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (29 samples, 1.08%)</title><rect x="24.1881%" y="629" width="1.0825%" height="15" fill="rgb(234,50,24)" fg:x="648" fg:w="29"/><text x="24.4381%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 1.08%)</title><rect x="24.1881%" y="613" width="1.0825%" height="15" fill="rgb(221,68,8)" fg:x="648" fg:w="29"/><text x="24.4381%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 1.08%)</title><rect x="24.1881%" y="597" width="1.0825%" height="15" fill="rgb(254,180,31)" fg:x="648" fg:w="29"/><text x="24.4381%" y="607.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 1.08%)</title><rect x="24.1881%" y="581" width="1.0825%" height="15" fill="rgb(247,130,50)" fg:x="648" fg:w="29"/><text x="24.4381%" y="591.50"></text></g><g><title>core::ptr::read_volatile (4 samples, 0.15%)</title><rect x="25.1213%" y="565" width="0.1493%" height="15" fill="rgb(211,109,4)" fg:x="673" fg:w="4"/><text x="25.3713%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.07%)</title><rect x="25.2706%" y="789" width="0.0747%" height="15" fill="rgb(238,50,21)" fg:x="677" fg:w="2"/><text x="25.5206%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u8&gt;::eq (1 samples, 0.04%)</title><rect x="25.3453%" y="789" width="0.0373%" height="15" fill="rgb(225,57,45)" fg:x="679" fg:w="1"/><text x="25.5953%" y="799.50"></text></g><g><title>cfree (18 samples, 0.67%)</title><rect x="25.3826%" y="773" width="0.6719%" height="15" fill="rgb(209,196,50)" fg:x="680" fg:w="18"/><text x="25.6326%" y="783.50"></text></g><g><title>[libc.so.6] (14 samples, 0.52%)</title><rect x="25.5319%" y="757" width="0.5226%" height="15" fill="rgb(242,140,13)" fg:x="684" fg:w="14"/><text x="25.7819%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (19 samples, 0.71%)</title><rect x="25.3826%" y="789" width="0.7092%" height="15" fill="rgb(217,111,7)" fg:x="680" fg:w="19"/><text x="25.6326%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::error::Error&gt; (1 samples, 0.04%)</title><rect x="26.0545%" y="773" width="0.0373%" height="15" fill="rgb(253,193,51)" fg:x="698" fg:w="1"/><text x="26.3045%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (32 samples, 1.19%)</title><rect x="26.6144%" y="773" width="1.1945%" height="15" fill="rgb(252,70,29)" fg:x="713" fg:w="32"/><text x="26.8644%" y="783.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_uint_le (7 samples, 0.26%)</title><rect x="27.8089%" y="773" width="0.2613%" height="15" fill="rgb(232,127,12)" fg:x="745" fg:w="7"/><text x="28.0589%" y="783.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (7 samples, 0.26%)</title><rect x="27.8089%" y="757" width="0.2613%" height="15" fill="rgb(211,180,21)" fg:x="745" fg:w="7"/><text x="28.0589%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.07%)</title><rect x="27.9955%" y="741" width="0.0747%" height="15" fill="rgb(229,72,13)" fg:x="750" fg:w="2"/><text x="28.2455%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="27.9955%" y="725" width="0.0747%" height="15" fill="rgb(240,211,49)" fg:x="750" fg:w="2"/><text x="28.2455%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (6 samples, 0.22%)</title><rect x="28.0702%" y="773" width="0.2240%" height="15" fill="rgb(219,149,40)" fg:x="752" fg:w="6"/><text x="28.3202%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (6 samples, 0.22%)</title><rect x="28.0702%" y="757" width="0.2240%" height="15" fill="rgb(210,127,46)" fg:x="752" fg:w="6"/><text x="28.3202%" y="767.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (6 samples, 0.22%)</title><rect x="28.0702%" y="741" width="0.2240%" height="15" fill="rgb(220,106,7)" fg:x="752" fg:w="6"/><text x="28.3202%" y="751.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (3 samples, 0.11%)</title><rect x="28.1822%" y="725" width="0.1120%" height="15" fill="rgb(249,31,22)" fg:x="755" fg:w="3"/><text x="28.4322%" y="735.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (3 samples, 0.11%)</title><rect x="28.1822%" y="709" width="0.1120%" height="15" fill="rgb(253,1,49)" fg:x="755" fg:w="3"/><text x="28.4322%" y="719.50"></text></g><g><title>bytes::bytes_mut::release_shared (2 samples, 0.07%)</title><rect x="28.2195%" y="693" width="0.0747%" height="15" fill="rgb(227,144,33)" fg:x="756" fg:w="2"/><text x="28.4695%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="28.7794%" y="741" width="0.0373%" height="15" fill="rgb(249,163,44)" fg:x="771" fg:w="1"/><text x="29.0294%" y="751.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="29.0034%" y="709" width="0.1120%" height="15" fill="rgb(234,15,39)" fg:x="777" fg:w="3"/><text x="29.2534%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (3 samples, 0.11%)</title><rect x="29.0034%" y="693" width="0.1120%" height="15" fill="rgb(207,66,16)" fg:x="777" fg:w="3"/><text x="29.2534%" y="703.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (3 samples, 0.11%)</title><rect x="29.0034%" y="677" width="0.1120%" height="15" fill="rgb(233,112,24)" fg:x="777" fg:w="3"/><text x="29.2534%" y="687.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (3 samples, 0.11%)</title><rect x="29.0034%" y="661" width="0.1120%" height="15" fill="rgb(230,90,22)" fg:x="777" fg:w="3"/><text x="29.2534%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (3 samples, 0.11%)</title><rect x="29.0034%" y="645" width="0.1120%" height="15" fill="rgb(229,61,13)" fg:x="777" fg:w="3"/><text x="29.2534%" y="655.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (3 samples, 0.11%)</title><rect x="29.0034%" y="629" width="0.1120%" height="15" fill="rgb(225,57,24)" fg:x="777" fg:w="3"/><text x="29.2534%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (3 samples, 0.11%)</title><rect x="29.0034%" y="613" width="0.1120%" height="15" fill="rgb(208,169,48)" fg:x="777" fg:w="3"/><text x="29.2534%" y="623.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (3 samples, 0.11%)</title><rect x="29.0034%" y="597" width="0.1120%" height="15" fill="rgb(244,218,51)" fg:x="777" fg:w="3"/><text x="29.2534%" y="607.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (3 samples, 0.11%)</title><rect x="29.0034%" y="581" width="0.1120%" height="15" fill="rgb(214,148,10)" fg:x="777" fg:w="3"/><text x="29.2534%" y="591.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (3 samples, 0.11%)</title><rect x="29.0034%" y="565" width="0.1120%" height="15" fill="rgb(225,174,27)" fg:x="777" fg:w="3"/><text x="29.2534%" y="575.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.11%)</title><rect x="29.0034%" y="549" width="0.1120%" height="15" fill="rgb(230,96,26)" fg:x="777" fg:w="3"/><text x="29.2534%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::read (3 samples, 0.11%)</title><rect x="29.0034%" y="533" width="0.1120%" height="15" fill="rgb(232,10,30)" fg:x="777" fg:w="3"/><text x="29.2534%" y="543.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (3 samples, 0.11%)</title><rect x="29.0034%" y="517" width="0.1120%" height="15" fill="rgb(222,8,50)" fg:x="777" fg:w="3"/><text x="29.2534%" y="527.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (3 samples, 0.11%)</title><rect x="29.0034%" y="501" width="0.1120%" height="15" fill="rgb(213,81,27)" fg:x="777" fg:w="3"/><text x="29.2534%" y="511.50"></text></g><g><title>recv (3 samples, 0.11%)</title><rect x="29.0034%" y="485" width="0.1120%" height="15" fill="rgb(245,50,10)" fg:x="777" fg:w="3"/><text x="29.2534%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="29.0034%" y="469" width="0.1120%" height="15" fill="rgb(216,100,18)" fg:x="777" fg:w="3"/><text x="29.2534%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="29.0034%" y="453" width="0.1120%" height="15" fill="rgb(236,147,54)" fg:x="777" fg:w="3"/><text x="29.2534%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="29.0407%" y="437" width="0.0747%" height="15" fill="rgb(205,143,26)" fg:x="778" fg:w="2"/><text x="29.2907%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="29.0780%" y="421" width="0.0373%" height="15" fill="rgb(236,26,9)" fg:x="779" fg:w="1"/><text x="29.3280%" y="431.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::advance (4 samples, 0.15%)</title><rect x="29.1153%" y="709" width="0.1493%" height="15" fill="rgb(221,165,53)" fg:x="780" fg:w="4"/><text x="29.3653%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::unsplit (4 samples, 0.15%)</title><rect x="29.1153%" y="693" width="0.1493%" height="15" fill="rgb(214,110,17)" fg:x="780" fg:w="4"/><text x="29.3653%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (3 samples, 0.11%)</title><rect x="29.1527%" y="677" width="0.1120%" height="15" fill="rgb(237,197,12)" fg:x="781" fg:w="3"/><text x="29.4027%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.11%)</title><rect x="29.1527%" y="661" width="0.1120%" height="15" fill="rgb(205,84,17)" fg:x="781" fg:w="3"/><text x="29.4027%" y="671.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="29.1527%" y="645" width="0.1120%" height="15" fill="rgb(237,18,45)" fg:x="781" fg:w="3"/><text x="29.4027%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (1 samples, 0.04%)</title><rect x="29.6006%" y="677" width="0.0373%" height="15" fill="rgb(221,87,14)" fg:x="793" fg:w="1"/><text x="29.8506%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (1 samples, 0.04%)</title><rect x="29.6379%" y="661" width="0.0373%" height="15" fill="rgb(238,186,15)" fg:x="794" fg:w="1"/><text x="29.8879%" y="671.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (174 samples, 6.49%)</title><rect x="23.2176%" y="805" width="6.4950%" height="15" fill="rgb(208,115,11)" fg:x="622" fg:w="174"/><text x="23.4676%" y="815.50">sqlx_mysq..</text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (97 samples, 3.62%)</title><rect x="26.0918%" y="789" width="3.6208%" height="15" fill="rgb(254,175,0)" fg:x="699" fg:w="97"/><text x="26.3418%" y="799.50">sqlx..</text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (38 samples, 1.42%)</title><rect x="28.2941%" y="773" width="1.4184%" height="15" fill="rgb(227,24,42)" fg:x="758" fg:w="38"/><text x="28.5441%" y="783.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (25 samples, 0.93%)</title><rect x="28.7794%" y="757" width="0.9332%" height="15" fill="rgb(223,211,37)" fg:x="771" fg:w="25"/><text x="29.0294%" y="767.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (24 samples, 0.90%)</title><rect x="28.8167%" y="741" width="0.8959%" height="15" fill="rgb(235,49,27)" fg:x="772" fg:w="24"/><text x="29.0667%" y="751.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (23 samples, 0.86%)</title><rect x="28.8541%" y="725" width="0.8585%" height="15" fill="rgb(254,97,51)" fg:x="773" fg:w="23"/><text x="29.1041%" y="735.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::drain (12 samples, 0.45%)</title><rect x="29.2647%" y="709" width="0.4479%" height="15" fill="rgb(249,51,40)" fg:x="784" fg:w="12"/><text x="29.5147%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (12 samples, 0.45%)</title><rect x="29.2647%" y="693" width="0.4479%" height="15" fill="rgb(210,128,45)" fg:x="784" fg:w="12"/><text x="29.5147%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (2 samples, 0.07%)</title><rect x="29.6379%" y="677" width="0.0747%" height="15" fill="rgb(224,137,50)" fg:x="794" fg:w="2"/><text x="29.8879%" y="687.50"></text></g><g><title>bytes::bytes_mut::increment_shared (1 samples, 0.04%)</title><rect x="29.6753%" y="661" width="0.0373%" height="15" fill="rgb(242,15,9)" fg:x="795" fg:w="1"/><text x="29.9253%" y="671.50"></text></g><g><title>&lt;sqlx_core::net::socket::Flush&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="29.7126%" y="773" width="0.0373%" height="15" fill="rgb(233,187,41)" fg:x="796" fg:w="1"/><text x="29.9626%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::poll_flush (1 samples, 0.04%)</title><rect x="29.7126%" y="757" width="0.0373%" height="15" fill="rgb(227,2,29)" fg:x="796" fg:w="1"/><text x="29.9626%" y="767.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write (1 samples, 0.04%)</title><rect x="29.7126%" y="741" width="0.0373%" height="15" fill="rgb(222,70,3)" fg:x="796" fg:w="1"/><text x="29.9626%" y="751.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="29.7126%" y="725" width="0.0373%" height="15" fill="rgb(213,11,42)" fg:x="796" fg:w="1"/><text x="29.9626%" y="735.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write::_{{closure}} (1 samples, 0.04%)</title><rect x="29.7126%" y="709" width="0.0373%" height="15" fill="rgb(225,150,9)" fg:x="796" fg:w="1"/><text x="29.9626%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="29.7126%" y="693" width="0.0373%" height="15" fill="rgb(230,162,45)" fg:x="796" fg:w="1"/><text x="29.9626%" y="703.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="29.7126%" y="677" width="0.0373%" height="15" fill="rgb(222,14,52)" fg:x="796" fg:w="1"/><text x="29.9626%" y="687.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="29.7126%" y="661" width="0.0373%" height="15" fill="rgb(254,198,14)" fg:x="796" fg:w="1"/><text x="29.9626%" y="671.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1 samples, 0.04%)</title><rect x="29.7126%" y="645" width="0.0373%" height="15" fill="rgb(220,217,30)" fg:x="796" fg:w="1"/><text x="29.9626%" y="655.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="29.7126%" y="629" width="0.0373%" height="15" fill="rgb(215,146,41)" fg:x="796" fg:w="1"/><text x="29.9626%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.04%)</title><rect x="29.7126%" y="613" width="0.0373%" height="15" fill="rgb(217,27,36)" fg:x="796" fg:w="1"/><text x="29.9626%" y="623.50"></text></g><g><title>__send (1 samples, 0.04%)</title><rect x="29.7126%" y="597" width="0.0373%" height="15" fill="rgb(219,218,39)" fg:x="796" fg:w="1"/><text x="29.9626%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="29.7126%" y="581" width="0.0373%" height="15" fill="rgb(219,4,42)" fg:x="796" fg:w="1"/><text x="29.9626%" y="591.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::send_packet::_{{closure}} (2 samples, 0.07%)</title><rect x="29.7126%" y="805" width="0.0747%" height="15" fill="rgb(249,119,36)" fg:x="796" fg:w="2"/><text x="29.9626%" y="815.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::flush::_{{closure}} (2 samples, 0.07%)</title><rect x="29.7126%" y="789" width="0.0747%" height="15" fill="rgb(209,23,33)" fg:x="796" fg:w="2"/><text x="29.9626%" y="799.50"></text></g><g><title>&lt;sqlx_core::net::socket::Write&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="29.7499%" y="773" width="0.0373%" height="15" fill="rgb(211,10,0)" fg:x="797" fg:w="1"/><text x="29.9999%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_write (1 samples, 0.04%)</title><rect x="29.7499%" y="757" width="0.0373%" height="15" fill="rgb(208,99,37)" fg:x="797" fg:w="1"/><text x="29.9999%" y="767.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write (1 samples, 0.04%)</title><rect x="29.7499%" y="741" width="0.0373%" height="15" fill="rgb(213,132,31)" fg:x="797" fg:w="1"/><text x="29.9999%" y="751.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (1 samples, 0.04%)</title><rect x="29.7499%" y="725" width="0.0373%" height="15" fill="rgb(243,129,40)" fg:x="797" fg:w="1"/><text x="29.9999%" y="735.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_write::_{{closure}} (1 samples, 0.04%)</title><rect x="29.7499%" y="709" width="0.0373%" height="15" fill="rgb(210,66,33)" fg:x="797" fg:w="1"/><text x="29.9999%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="29.7499%" y="693" width="0.0373%" height="15" fill="rgb(209,189,4)" fg:x="797" fg:w="1"/><text x="29.9999%" y="703.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="29.7499%" y="677" width="0.0373%" height="15" fill="rgb(214,107,37)" fg:x="797" fg:w="1"/><text x="29.9999%" y="687.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="29.7499%" y="661" width="0.0373%" height="15" fill="rgb(245,88,54)" fg:x="797" fg:w="1"/><text x="29.9999%" y="671.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1 samples, 0.04%)</title><rect x="29.7499%" y="645" width="0.0373%" height="15" fill="rgb(205,146,20)" fg:x="797" fg:w="1"/><text x="29.9999%" y="655.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="29.7499%" y="629" width="0.0373%" height="15" fill="rgb(220,161,25)" fg:x="797" fg:w="1"/><text x="29.9999%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.04%)</title><rect x="29.7499%" y="613" width="0.0373%" height="15" fill="rgb(215,152,15)" fg:x="797" fg:w="1"/><text x="29.9999%" y="623.50"></text></g><g><title>__send (1 samples, 0.04%)</title><rect x="29.7499%" y="597" width="0.0373%" height="15" fill="rgb(233,192,44)" fg:x="797" fg:w="1"/><text x="29.9999%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="29.7499%" y="581" width="0.0373%" height="15" fill="rgb(240,170,46)" fg:x="797" fg:w="1"/><text x="29.9999%" y="591.50"></text></g><g><title>bytes::bytes::Bytes::inc_start (2 samples, 0.07%)</title><rect x="30.4218%" y="757" width="0.0747%" height="15" fill="rgb(207,104,33)" fg:x="815" fg:w="2"/><text x="30.6718%" y="767.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::advance (4 samples, 0.15%)</title><rect x="30.3845%" y="773" width="0.1493%" height="15" fill="rgb(219,21,39)" fg:x="814" fg:w="4"/><text x="30.6345%" y="783.50"></text></g><g><title>bytes::bytes::Bytes::len (1 samples, 0.04%)</title><rect x="30.4965%" y="757" width="0.0373%" height="15" fill="rgb(214,133,29)" fg:x="817" fg:w="1"/><text x="30.7465%" y="767.50"></text></g><g><title>bytes::bytes_mut::increment_shared (1 samples, 0.04%)</title><rect x="30.5338%" y="741" width="0.0373%" height="15" fill="rgb(226,93,6)" fg:x="818" fg:w="1"/><text x="30.7838%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.04%)</title><rect x="30.5338%" y="725" width="0.0373%" height="15" fill="rgb(252,222,34)" fg:x="818" fg:w="1"/><text x="30.7838%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.04%)</title><rect x="30.5338%" y="709" width="0.0373%" height="15" fill="rgb(252,92,48)" fg:x="818" fg:w="1"/><text x="30.7838%" y="719.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (4 samples, 0.15%)</title><rect x="30.5338%" y="773" width="0.1493%" height="15" fill="rgb(245,223,24)" fg:x="818" fg:w="4"/><text x="30.7838%" y="783.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (4 samples, 0.15%)</title><rect x="30.5338%" y="757" width="0.1493%" height="15" fill="rgb(205,176,3)" fg:x="818" fg:w="4"/><text x="30.7838%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (3 samples, 0.11%)</title><rect x="30.5711%" y="741" width="0.1120%" height="15" fill="rgb(235,151,15)" fg:x="819" fg:w="3"/><text x="30.8211%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.11%)</title><rect x="30.5711%" y="725" width="0.1120%" height="15" fill="rgb(237,209,11)" fg:x="819" fg:w="3"/><text x="30.8211%" y="735.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (4 samples, 0.15%)</title><rect x="31.0190%" y="741" width="0.1493%" height="15" fill="rgb(243,227,24)" fg:x="831" fg:w="4"/><text x="31.2690%" y="751.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (3 samples, 0.11%)</title><rect x="31.0564%" y="725" width="0.1120%" height="15" fill="rgb(239,193,16)" fg:x="832" fg:w="3"/><text x="31.3064%" y="735.50"></text></g><g><title>bytes::bytes_mut::increment_shared (1 samples, 0.04%)</title><rect x="31.1310%" y="709" width="0.0373%" height="15" fill="rgb(231,27,9)" fg:x="834" fg:w="1"/><text x="31.3810%" y="719.50"></text></g><g><title>&lt;bytes::bytes::Bytes as sqlx_core::io::buf::BufExt&gt;::get_bytes (14 samples, 0.52%)</title><rect x="30.6831%" y="773" width="0.5226%" height="15" fill="rgb(219,169,10)" fg:x="822" fg:w="14"/><text x="30.9331%" y="783.50"></text></g><g><title>bytes::bytes::Bytes::slice (14 samples, 0.52%)</title><rect x="30.6831%" y="757" width="0.5226%" height="15" fill="rgb(244,229,43)" fg:x="822" fg:w="14"/><text x="30.9331%" y="767.50"></text></g><g><title>bytes::bytes::Bytes::len (1 samples, 0.04%)</title><rect x="31.1683%" y="741" width="0.0373%" height="15" fill="rgb(254,38,20)" fg:x="835" fg:w="1"/><text x="31.4183%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="31.2057%" y="773" width="0.0373%" height="15" fill="rgb(250,47,30)" fg:x="836" fg:w="1"/><text x="31.4557%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="31.2057%" y="757" width="0.0373%" height="15" fill="rgb(224,124,36)" fg:x="836" fg:w="1"/><text x="31.4557%" y="767.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="31.2057%" y="741" width="0.0373%" height="15" fill="rgb(246,68,51)" fg:x="836" fg:w="1"/><text x="31.4557%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.26%)</title><rect x="31.2430%" y="773" width="0.2613%" height="15" fill="rgb(253,43,49)" fg:x="837" fg:w="7"/><text x="31.4930%" y="783.50"></text></g><g><title>core::ptr::write (2 samples, 0.07%)</title><rect x="31.4296%" y="757" width="0.0747%" height="15" fill="rgb(219,54,36)" fg:x="842" fg:w="2"/><text x="31.6796%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.22%)</title><rect x="31.5043%" y="773" width="0.2240%" height="15" fill="rgb(227,133,34)" fg:x="844" fg:w="6"/><text x="31.7543%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.22%)</title><rect x="31.5043%" y="757" width="0.2240%" height="15" fill="rgb(247,227,15)" fg:x="844" fg:w="6"/><text x="31.7543%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="31.6909%" y="741" width="0.0373%" height="15" fill="rgb(229,96,14)" fg:x="849" fg:w="1"/><text x="31.9409%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="31.6909%" y="725" width="0.0373%" height="15" fill="rgb(220,79,17)" fg:x="849" fg:w="1"/><text x="31.9409%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="31.6909%" y="709" width="0.0373%" height="15" fill="rgb(205,131,53)" fg:x="849" fg:w="1"/><text x="31.9409%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="31.6909%" y="693" width="0.0373%" height="15" fill="rgb(209,50,29)" fg:x="849" fg:w="1"/><text x="31.9409%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="31.6909%" y="677" width="0.0373%" height="15" fill="rgb(245,86,46)" fg:x="849" fg:w="1"/><text x="31.9409%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="31.6909%" y="661" width="0.0373%" height="15" fill="rgb(235,66,46)" fg:x="849" fg:w="1"/><text x="31.9409%" y="671.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="31.6909%" y="645" width="0.0373%" height="15" fill="rgb(232,148,31)" fg:x="849" fg:w="1"/><text x="31.9409%" y="655.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="31.6909%" y="629" width="0.0373%" height="15" fill="rgb(217,149,8)" fg:x="849" fg:w="1"/><text x="31.9409%" y="639.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (1 samples, 0.04%)</title><rect x="31.7283%" y="757" width="0.0373%" height="15" fill="rgb(209,183,11)" fg:x="850" fg:w="1"/><text x="31.9783%" y="767.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (4 samples, 0.15%)</title><rect x="31.7283%" y="773" width="0.1493%" height="15" fill="rgb(208,55,20)" fg:x="850" fg:w="4"/><text x="31.9783%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::advance (3 samples, 0.11%)</title><rect x="31.7656%" y="757" width="0.1120%" height="15" fill="rgb(218,39,14)" fg:x="851" fg:w="3"/><text x="32.0156%" y="767.50"></text></g><g><title>bytes::bytes::Bytes::inc_start (3 samples, 0.11%)</title><rect x="31.7656%" y="741" width="0.1120%" height="15" fill="rgb(216,169,33)" fg:x="851" fg:w="3"/><text x="32.0156%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.11%)</title><rect x="31.7656%" y="725" width="0.1120%" height="15" fill="rgb(233,80,24)" fg:x="851" fg:w="3"/><text x="32.0156%" y="735.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (305 samples, 11.38%)</title><rect x="20.7540%" y="837" width="11.3848%" height="15" fill="rgb(213,179,31)" fg:x="556" fg:w="305"/><text x="21.0040%" y="847.50">&lt;core::pin::Pin&lt;P..</text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::_{{closure}}::_{{closure}}::_{{closure}} (305 samples, 11.38%)</title><rect x="20.7540%" y="821" width="11.3848%" height="15" fill="rgb(209,19,5)" fg:x="556" fg:w="305"/><text x="21.0040%" y="831.50">sqlx_mysql::conne..</text></g><g><title>sqlx_mysql::protocol::packet::Packet&lt;bytes::bytes::Bytes&gt;::decode_with (63 samples, 2.35%)</title><rect x="29.7872%" y="805" width="2.3516%" height="15" fill="rgb(219,18,35)" fg:x="798" fg:w="63"/><text x="30.0372%" y="815.50">s..</text></g><g><title>&lt;sqlx_mysql::protocol::statement::row::BinaryRow as sqlx_core::io::decode::Decode&lt;&amp;[sqlx_mysql::column::MySqlColumn]&gt;&gt;::decode_with (63 samples, 2.35%)</title><rect x="29.7872%" y="789" width="2.3516%" height="15" fill="rgb(209,169,16)" fg:x="798" fg:w="63"/><text x="30.0372%" y="799.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (7 samples, 0.26%)</title><rect x="31.8776%" y="773" width="0.2613%" height="15" fill="rgb(245,90,51)" fg:x="854" fg:w="7"/><text x="32.1276%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (7 samples, 0.26%)</title><rect x="31.8776%" y="757" width="0.2613%" height="15" fill="rgb(220,99,45)" fg:x="854" fg:w="7"/><text x="32.1276%" y="767.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (7 samples, 0.26%)</title><rect x="31.8776%" y="741" width="0.2613%" height="15" fill="rgb(249,89,25)" fg:x="854" fg:w="7"/><text x="32.1276%" y="751.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5 samples, 0.19%)</title><rect x="31.9522%" y="725" width="0.1866%" height="15" fill="rgb(239,193,0)" fg:x="856" fg:w="5"/><text x="32.2022%" y="735.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (5 samples, 0.19%)</title><rect x="31.9522%" y="709" width="0.1866%" height="15" fill="rgb(231,126,1)" fg:x="856" fg:w="5"/><text x="32.2022%" y="719.50"></text></g><g><title>bytes::bytes_mut::release_shared (3 samples, 0.11%)</title><rect x="32.0269%" y="693" width="0.1120%" height="15" fill="rgb(243,166,3)" fg:x="858" fg:w="3"/><text x="32.2769%" y="703.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (306 samples, 11.42%)</title><rect x="20.7540%" y="869" width="11.4222%" height="15" fill="rgb(223,22,34)" fg:x="556" fg:w="306"/><text x="21.0040%" y="879.50">futures_util::fut..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (306 samples, 11.42%)</title><rect x="20.7540%" y="853" width="11.4222%" height="15" fill="rgb(251,52,51)" fg:x="556" fg:w="306"/><text x="21.0040%" y="863.50">&lt;futures_util::fu..</text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="32.1389%" y="837" width="0.0373%" height="15" fill="rgb(221,165,28)" fg:x="861" fg:w="1"/><text x="32.3889%" y="847.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="32.1389%" y="821" width="0.0373%" height="15" fill="rgb(218,121,47)" fg:x="861" fg:w="1"/><text x="32.3889%" y="831.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (1 samples, 0.04%)</title><rect x="32.1389%" y="805" width="0.0373%" height="15" fill="rgb(209,120,9)" fg:x="861" fg:w="1"/><text x="32.3889%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="32.1389%" y="789" width="0.0373%" height="15" fill="rgb(236,68,12)" fg:x="861" fg:w="1"/><text x="32.3889%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="32.1389%" y="773" width="0.0373%" height="15" fill="rgb(225,194,26)" fg:x="861" fg:w="1"/><text x="32.3889%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="32.1389%" y="757" width="0.0373%" height="15" fill="rgb(231,84,39)" fg:x="861" fg:w="1"/><text x="32.3889%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::connection::executor::&lt;impl sqlx_mysql::connection::MySqlConnection&gt;::run::{{closure}}::{{closure}}::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="32.1389%" y="741" width="0.0373%" height="15" fill="rgb(210,11,45)" fg:x="861" fg:w="1"/><text x="32.3889%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 0.22%)</title><rect x="32.2508%" y="853" width="0.2240%" height="15" fill="rgb(224,54,52)" fg:x="864" fg:w="6"/><text x="32.5008%" y="863.50"></text></g><g><title>core::mem::replace (6 samples, 0.22%)</title><rect x="32.2508%" y="837" width="0.2240%" height="15" fill="rgb(238,102,14)" fg:x="864" fg:w="6"/><text x="32.5008%" y="847.50"></text></g><g><title>core::ptr::read (6 samples, 0.22%)</title><rect x="32.2508%" y="821" width="0.2240%" height="15" fill="rgb(243,160,52)" fg:x="864" fg:w="6"/><text x="32.5008%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="32.4748%" y="853" width="0.0747%" height="15" fill="rgb(216,114,19)" fg:x="870" fg:w="2"/><text x="32.7248%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="32.4748%" y="837" width="0.0747%" height="15" fill="rgb(244,166,37)" fg:x="870" fg:w="2"/><text x="32.7248%" y="847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (2 samples, 0.07%)</title><rect x="32.4748%" y="821" width="0.0747%" height="15" fill="rgb(246,29,44)" fg:x="870" fg:w="2"/><text x="32.7248%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.04%)</title><rect x="32.5495%" y="853" width="0.0373%" height="15" fill="rgb(215,56,53)" fg:x="872" fg:w="1"/><text x="32.7995%" y="863.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (343 samples, 12.80%)</title><rect x="19.8208%" y="965" width="12.8033%" height="15" fill="rgb(217,60,2)" fg:x="531" fg:w="343"/><text x="20.0708%" y="975.50">&lt;futures_util::stre..</text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (334 samples, 12.47%)</title><rect x="20.1568%" y="949" width="12.4673%" height="15" fill="rgb(207,26,24)" fg:x="540" fg:w="334"/><text x="20.4068%" y="959.50">futures_util::strea..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (334 samples, 12.47%)</title><rect x="20.1568%" y="933" width="12.4673%" height="15" fill="rgb(252,210,15)" fg:x="540" fg:w="334"/><text x="20.4068%" y="943.50">&lt;S as futures_core:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (334 samples, 12.47%)</title><rect x="20.1568%" y="917" width="12.4673%" height="15" fill="rgb(253,209,26)" fg:x="540" fg:w="334"/><text x="20.4068%" y="927.50">&lt;core::pin::Pin&lt;P&gt; ..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (334 samples, 12.47%)</title><rect x="20.1568%" y="901" width="12.4673%" height="15" fill="rgb(238,170,14)" fg:x="540" fg:w="334"/><text x="20.4068%" y="911.50">&lt;core::pin::Pin&lt;P&gt; ..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (334 samples, 12.47%)</title><rect x="20.1568%" y="885" width="12.4673%" height="15" fill="rgb(216,178,15)" fg:x="540" fg:w="334"/><text x="20.4068%" y="895.50">&lt;sqlx_core::ext::as..</text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::take (12 samples, 0.45%)</title><rect x="32.1762%" y="869" width="0.4479%" height="15" fill="rgb(250,197,2)" fg:x="862" fg:w="12"/><text x="32.4262%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="32.5868%" y="853" width="0.0373%" height="15" fill="rgb(212,70,42)" fg:x="873" fg:w="1"/><text x="32.8368%" y="863.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="32.5868%" y="837" width="0.0373%" height="15" fill="rgb(227,213,9)" fg:x="873" fg:w="1"/><text x="32.8368%" y="847.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.04%)</title><rect x="32.5868%" y="821" width="0.0373%" height="15" fill="rgb(245,99,25)" fg:x="873" fg:w="1"/><text x="32.8368%" y="831.50"></text></g><g><title>std::thread::panicking (1 samples, 0.04%)</title><rect x="32.5868%" y="805" width="0.0373%" height="15" fill="rgb(250,82,29)" fg:x="873" fg:w="1"/><text x="32.8368%" y="815.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.04%)</title><rect x="32.5868%" y="789" width="0.0373%" height="15" fill="rgb(241,226,54)" fg:x="873" fg:w="1"/><text x="32.8368%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="32.5868%" y="773" width="0.0373%" height="15" fill="rgb(221,99,41)" fg:x="873" fg:w="1"/><text x="32.8368%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="32.5868%" y="757" width="0.0373%" height="15" fill="rgb(213,90,21)" fg:x="873" fg:w="1"/><text x="32.8368%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="32.5868%" y="741" width="0.0373%" height="15" fill="rgb(205,208,24)" fg:x="873" fg:w="1"/><text x="32.8368%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.11%)</title><rect x="33.1840%" y="949" width="0.1120%" height="15" fill="rgb(246,31,12)" fg:x="889" fg:w="3"/><text x="33.4340%" y="959.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="33.2960%" y="949" width="0.0373%" height="15" fill="rgb(213,154,6)" fg:x="892" fg:w="1"/><text x="33.5460%" y="959.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="33.2960%" y="933" width="0.0373%" height="15" fill="rgb(222,163,29)" fg:x="892" fg:w="1"/><text x="33.5460%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::replace (9 samples, 0.34%)</title><rect x="33.3333%" y="949" width="0.3359%" height="15" fill="rgb(227,201,8)" fg:x="893" fg:w="9"/><text x="33.5833%" y="959.50"></text></g><g><title>core::mem::replace (9 samples, 0.34%)</title><rect x="33.3333%" y="933" width="0.3359%" height="15" fill="rgb(233,9,32)" fg:x="893" fg:w="9"/><text x="33.5833%" y="943.50"></text></g><g><title>core::ptr::read (9 samples, 0.34%)</title><rect x="33.3333%" y="917" width="0.3359%" height="15" fill="rgb(217,54,24)" fg:x="893" fg:w="9"/><text x="33.5833%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="33.6693%" y="949" width="0.0747%" height="15" fill="rgb(235,192,0)" fg:x="902" fg:w="2"/><text x="33.9193%" y="959.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.04%)</title><rect x="33.7439%" y="917" width="0.0373%" height="15" fill="rgb(235,45,9)" fg:x="904" fg:w="1"/><text x="33.9939%" y="927.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (399 samples, 14.89%)</title><rect x="18.9250%" y="1029" width="14.8936%" height="15" fill="rgb(246,42,40)" fg:x="507" fg:w="399"/><text x="19.1750%" y="1039.50">futures_util::future::f..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (399 samples, 14.89%)</title><rect x="18.9250%" y="1013" width="14.8936%" height="15" fill="rgb(248,111,24)" fg:x="507" fg:w="399"/><text x="19.1750%" y="1023.50">&lt;futures_util::future::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (399 samples, 14.89%)</title><rect x="18.9250%" y="997" width="14.8936%" height="15" fill="rgb(249,65,22)" fg:x="507" fg:w="399"/><text x="19.1750%" y="1007.50">&lt;core::pin::Pin&lt;P&gt; as c..</text></g><g><title>sqlx_mysql::connection::executor::_&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_mysql::connection::MySqlConnection&gt;::fetch_many::_{{closure}}::_{{closure}} (399 samples, 14.89%)</title><rect x="18.9250%" y="981" width="14.8936%" height="15" fill="rgb(238,111,51)" fg:x="507" fg:w="399"/><text x="19.1750%" y="991.50">sqlx_mysql::connection:..</text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}} (32 samples, 1.19%)</title><rect x="32.6241%" y="965" width="1.1945%" height="15" fill="rgb(250,118,22)" fg:x="874" fg:w="32"/><text x="32.8741%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="33.7439%" y="949" width="0.0747%" height="15" fill="rgb(234,84,26)" fg:x="904" fg:w="2"/><text x="33.9939%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="33.7439%" y="933" width="0.0747%" height="15" fill="rgb(243,172,12)" fg:x="904" fg:w="2"/><text x="33.9939%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.04%)</title><rect x="33.7813%" y="917" width="0.0373%" height="15" fill="rgb(236,150,49)" fg:x="905" fg:w="1"/><text x="34.0313%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (9 samples, 0.34%)</title><rect x="33.8559%" y="1013" width="0.3359%" height="15" fill="rgb(225,197,26)" fg:x="907" fg:w="9"/><text x="34.1059%" y="1023.50"></text></g><g><title>core::mem::replace (9 samples, 0.34%)</title><rect x="33.8559%" y="997" width="0.3359%" height="15" fill="rgb(214,17,42)" fg:x="907" fg:w="9"/><text x="34.1059%" y="1007.50"></text></g><g><title>core::ptr::read (9 samples, 0.34%)</title><rect x="33.8559%" y="981" width="0.3359%" height="15" fill="rgb(224,165,40)" fg:x="907" fg:w="9"/><text x="34.1059%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (3 samples, 0.11%)</title><rect x="34.1919%" y="1013" width="0.1120%" height="15" fill="rgb(246,100,4)" fg:x="916" fg:w="3"/><text x="34.4419%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="34.1919%" y="997" width="0.1120%" height="15" fill="rgb(222,103,0)" fg:x="916" fg:w="3"/><text x="34.4419%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (3 samples, 0.11%)</title><rect x="34.1919%" y="981" width="0.1120%" height="15" fill="rgb(227,189,26)" fg:x="916" fg:w="3"/><text x="34.4419%" y="991.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (423 samples, 15.79%)</title><rect x="18.5890%" y="1109" width="15.7895%" height="15" fill="rgb(214,202,17)" fg:x="498" fg:w="423"/><text x="18.8390%" y="1119.50">&lt;futures_util::stream::t..</text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (418 samples, 15.60%)</title><rect x="18.7757%" y="1093" width="15.6028%" height="15" fill="rgb(229,111,3)" fg:x="503" fg:w="418"/><text x="19.0257%" y="1103.50">futures_util::stream::tr..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (418 samples, 15.60%)</title><rect x="18.7757%" y="1077" width="15.6028%" height="15" fill="rgb(229,172,15)" fg:x="503" fg:w="418"/><text x="19.0257%" y="1087.50">&lt;S as futures_core::stre..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (418 samples, 15.60%)</title><rect x="18.7757%" y="1061" width="15.6028%" height="15" fill="rgb(230,224,35)" fg:x="503" fg:w="418"/><text x="19.0257%" y="1071.50">&lt;core::pin::Pin&lt;P&gt; as fu..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (418 samples, 15.60%)</title><rect x="18.7757%" y="1045" width="15.6028%" height="15" fill="rgb(251,141,6)" fg:x="503" fg:w="418"/><text x="19.0257%" y="1055.50">&lt;sqlx_core::ext::async_s..</text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::take (15 samples, 0.56%)</title><rect x="33.8186%" y="1029" width="0.5599%" height="15" fill="rgb(225,208,6)" fg:x="906" fg:w="15"/><text x="34.0686%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.07%)</title><rect x="34.3038%" y="1013" width="0.0747%" height="15" fill="rgb(246,181,16)" fg:x="919" fg:w="2"/><text x="34.5538%" y="1023.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.07%)</title><rect x="34.3038%" y="997" width="0.0747%" height="15" fill="rgb(227,129,36)" fg:x="919" fg:w="2"/><text x="34.5538%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.07%)</title><rect x="34.3038%" y="981" width="0.0747%" height="15" fill="rgb(248,117,24)" fg:x="919" fg:w="2"/><text x="34.5538%" y="991.50"></text></g><g><title>std::thread::panicking (2 samples, 0.07%)</title><rect x="34.3038%" y="965" width="0.0747%" height="15" fill="rgb(214,185,35)" fg:x="919" fg:w="2"/><text x="34.5538%" y="975.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.07%)</title><rect x="34.3038%" y="949" width="0.0747%" height="15" fill="rgb(236,150,34)" fg:x="919" fg:w="2"/><text x="34.5538%" y="959.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.07%)</title><rect x="34.3038%" y="933" width="0.0747%" height="15" fill="rgb(243,228,27)" fg:x="919" fg:w="2"/><text x="34.5538%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_mysql::database::MySql&gt;&gt; (1 samples, 0.04%)</title><rect x="34.3785%" y="1109" width="0.0373%" height="15" fill="rgb(245,77,44)" fg:x="921" fg:w="1"/><text x="34.6285%" y="1119.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="34.3785%" y="1093" width="0.0373%" height="15" fill="rgb(235,214,42)" fg:x="921" fg:w="1"/><text x="34.6285%" y="1103.50"></text></g><g><title>sqlx_core::rt::spawn (1 samples, 0.04%)</title><rect x="34.3785%" y="1077" width="0.0373%" height="15" fill="rgb(221,74,3)" fg:x="921" fg:w="1"/><text x="34.6285%" y="1087.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (1 samples, 0.04%)</title><rect x="34.3785%" y="1061" width="0.0373%" height="15" fill="rgb(206,121,29)" fg:x="921" fg:w="1"/><text x="34.6285%" y="1071.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_named (1 samples, 0.04%)</title><rect x="34.3785%" y="1045" width="0.0373%" height="15" fill="rgb(249,131,53)" fg:x="921" fg:w="1"/><text x="34.6285%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (1 samples, 0.04%)</title><rect x="34.3785%" y="1029" width="0.0373%" height="15" fill="rgb(236,170,29)" fg:x="921" fg:w="1"/><text x="34.6285%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (1 samples, 0.04%)</title><rect x="34.3785%" y="1013" width="0.0373%" height="15" fill="rgb(247,96,15)" fg:x="921" fg:w="1"/><text x="34.6285%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (1 samples, 0.04%)</title><rect x="34.3785%" y="997" width="0.0373%" height="15" fill="rgb(211,210,7)" fg:x="921" fg:w="1"/><text x="34.6285%" y="1007.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.04%)</title><rect x="34.3785%" y="981" width="0.0373%" height="15" fill="rgb(240,88,50)" fg:x="921" fg:w="1"/><text x="34.6285%" y="991.50"></text></g><g><title>tokio::runtime::task::new_task (1 samples, 0.04%)</title><rect x="34.3785%" y="965" width="0.0373%" height="15" fill="rgb(209,229,26)" fg:x="921" fg:w="1"/><text x="34.6285%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (1 samples, 0.04%)</title><rect x="34.3785%" y="949" width="0.0373%" height="15" fill="rgb(210,68,23)" fg:x="921" fg:w="1"/><text x="34.6285%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.04%)</title><rect x="34.3785%" y="933" width="0.0373%" height="15" fill="rgb(229,180,13)" fg:x="921" fg:w="1"/><text x="34.6285%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="34.3785%" y="917" width="0.0373%" height="15" fill="rgb(236,53,44)" fg:x="921" fg:w="1"/><text x="34.6285%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="34.3785%" y="901" width="0.0373%" height="15" fill="rgb(244,214,29)" fg:x="921" fg:w="1"/><text x="34.6285%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="34.3785%" y="885" width="0.0373%" height="15" fill="rgb(220,75,29)" fg:x="921" fg:w="1"/><text x="34.6285%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="34.3785%" y="869" width="0.0373%" height="15" fill="rgb(214,183,37)" fg:x="921" fg:w="1"/><text x="34.6285%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="34.3785%" y="853" width="0.0373%" height="15" fill="rgb(239,117,29)" fg:x="921" fg:w="1"/><text x="34.6285%" y="863.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="34.3785%" y="837" width="0.0373%" height="15" fill="rgb(237,171,35)" fg:x="921" fg:w="1"/><text x="34.6285%" y="847.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="34.3785%" y="821" width="0.0373%" height="15" fill="rgb(229,178,53)" fg:x="921" fg:w="1"/><text x="34.6285%" y="831.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (1 samples, 0.04%)</title><rect x="34.3785%" y="805" width="0.0373%" height="15" fill="rgb(210,102,19)" fg:x="921" fg:w="1"/><text x="34.6285%" y="815.50"></text></g><g><title>posix_memalign (1 samples, 0.04%)</title><rect x="34.3785%" y="789" width="0.0373%" height="15" fill="rgb(235,127,22)" fg:x="921" fg:w="1"/><text x="34.6285%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="34.3785%" y="773" width="0.0373%" height="15" fill="rgb(244,31,31)" fg:x="921" fg:w="1"/><text x="34.6285%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="34.3785%" y="757" width="0.0373%" height="15" fill="rgb(231,43,21)" fg:x="921" fg:w="1"/><text x="34.6285%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="34.3785%" y="741" width="0.0373%" height="15" fill="rgb(217,131,35)" fg:x="921" fg:w="1"/><text x="34.6285%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="34.9757%" y="1093" width="0.0373%" height="15" fill="rgb(221,149,4)" fg:x="937" fg:w="1"/><text x="35.2257%" y="1103.50"></text></g><g><title>core::ptr::read (13 samples, 0.49%)</title><rect x="35.0131%" y="1061" width="0.4853%" height="15" fill="rgb(232,170,28)" fg:x="938" fg:w="13"/><text x="35.2631%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::replace (14 samples, 0.52%)</title><rect x="35.0131%" y="1093" width="0.5226%" height="15" fill="rgb(238,56,10)" fg:x="938" fg:w="14"/><text x="35.2631%" y="1103.50"></text></g><g><title>core::mem::replace (14 samples, 0.52%)</title><rect x="35.0131%" y="1077" width="0.5226%" height="15" fill="rgb(235,196,14)" fg:x="938" fg:w="14"/><text x="35.2631%" y="1087.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="35.4983%" y="1061" width="0.0373%" height="15" fill="rgb(216,45,48)" fg:x="951" fg:w="1"/><text x="35.7483%" y="1071.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (580 samples, 21.65%)</title><rect x="13.9604%" y="1621" width="21.6499%" height="15" fill="rgb(238,213,17)" fg:x="374" fg:w="580"/><text x="14.2104%" y="1631.50">&lt;poem::endpoint::map_to_response::..</text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1605" width="20.0821%" height="15" fill="rgb(212,13,2)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1615.50">&lt;poem::endpoint::before::Before&lt;..</text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1589" width="20.0821%" height="15" fill="rgb(240,114,20)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1599.50">&lt;poem::middleware::cookie_jar_ma..</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1573" width="20.0821%" height="15" fill="rgb(228,41,40)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1583.50">&lt;poem::route::router::Route as p..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1557" width="20.0821%" height="15" fill="rgb(244,132,35)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1567.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::e..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1541" width="20.0821%" height="15" fill="rgb(253,189,4)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1551.50">&lt;dyn poem::endpoint::endpoint::D..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (538 samples, 20.08%)</title><rect x="15.5282%" y="1525" width="20.0821%" height="15" fill="rgb(224,37,19)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1535.50">&lt;core::pin::Pin&lt;P&gt; as core::futu..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1509" width="20.0821%" height="15" fill="rgb(235,223,18)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1519.50">&lt;poem::endpoint::map_to_response..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (538 samples, 20.08%)</title><rect x="15.5282%" y="1493" width="20.0821%" height="15" fill="rgb(235,163,25)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1503.50">&lt;futures_util::future::either::E..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1477" width="20.0821%" height="15" fill="rgb(217,145,28)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1487.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::e..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1461" width="20.0821%" height="15" fill="rgb(223,223,32)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1471.50">&lt;dyn poem::endpoint::endpoint::D..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (538 samples, 20.08%)</title><rect x="15.5282%" y="1445" width="20.0821%" height="15" fill="rgb(227,189,39)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1455.50">&lt;core::pin::Pin&lt;P&gt; as core::futu..</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1429" width="20.0821%" height="15" fill="rgb(248,10,22)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1439.50">&lt;poem::endpoint::map_to_response..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1413" width="20.0821%" height="15" fill="rgb(248,46,39)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1423.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::e..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1397" width="20.0821%" height="15" fill="rgb(248,113,48)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1407.50">&lt;dyn poem::endpoint::endpoint::D..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (538 samples, 20.08%)</title><rect x="15.5282%" y="1381" width="20.0821%" height="15" fill="rgb(245,16,25)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1391.50">&lt;core::pin::Pin&lt;P&gt; as core::futu..</text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1365" width="20.0821%" height="15" fill="rgb(249,152,16)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1375.50">&lt;poem::endpoint::endpoint::Async..</text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (538 samples, 20.08%)</title><rect x="15.5282%" y="1349" width="20.0821%" height="15" fill="rgb(250,16,1)" fg:x="416" fg:w="538"/><text x="15.7782%" y="1359.50">&lt;fabseapi::Api as poem_openapi::..</text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (480 samples, 17.92%)</title><rect x="17.6932%" y="1333" width="17.9171%" height="15" fill="rgb(249,138,3)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1343.50">fabseapi::Api::vehicle_retri..</text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (480 samples, 17.92%)</title><rect x="17.6932%" y="1317" width="17.9171%" height="15" fill="rgb(227,71,41)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1327.50">&lt;tokio_stream::stream_ext::n..</text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (480 samples, 17.92%)</title><rect x="17.6932%" y="1301" width="17.9171%" height="15" fill="rgb(209,184,23)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1311.50">&lt;&amp;mut S as futures_core::str..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (480 samples, 17.92%)</title><rect x="17.6932%" y="1285" width="17.9171%" height="15" fill="rgb(223,215,31)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1295.50">&lt;core::pin::Pin&lt;P&gt; as future..</text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (480 samples, 17.92%)</title><rect x="17.6932%" y="1269" width="17.9171%" height="15" fill="rgb(210,146,28)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1279.50">&lt;futures_util::stream::try_s..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (480 samples, 17.92%)</title><rect x="17.6932%" y="1253" width="17.9171%" height="15" fill="rgb(209,183,41)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1263.50">&lt;S as futures_core::stream::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (480 samples, 17.92%)</title><rect x="17.6932%" y="1237" width="17.9171%" height="15" fill="rgb(209,224,45)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1247.50">&lt;core::pin::Pin&lt;P&gt; as future..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (480 samples, 17.92%)</title><rect x="17.6932%" y="1221" width="17.9171%" height="15" fill="rgb(224,209,51)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1231.50">&lt;futures_util::stream::strea..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (480 samples, 17.92%)</title><rect x="17.6932%" y="1205" width="17.9171%" height="15" fill="rgb(223,17,39)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1215.50">&lt;core::pin::Pin&lt;P&gt; as future..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (480 samples, 17.92%)</title><rect x="17.6932%" y="1189" width="17.9171%" height="15" fill="rgb(234,204,37)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1199.50">&lt;sqlx_core::ext::async_strea..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (480 samples, 17.92%)</title><rect x="17.6932%" y="1173" width="17.9171%" height="15" fill="rgb(236,120,5)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1183.50">futures_util::future::future..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (480 samples, 17.92%)</title><rect x="17.6932%" y="1157" width="17.9171%" height="15" fill="rgb(248,97,27)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1167.50">&lt;futures_util::future::futur..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (480 samples, 17.92%)</title><rect x="17.6932%" y="1141" width="17.9171%" height="15" fill="rgb(240,66,17)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1151.50">&lt;core::pin::Pin&lt;P&gt; as core::..</text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (480 samples, 17.92%)</title><rect x="17.6932%" y="1125" width="17.9171%" height="15" fill="rgb(210,79,3)" fg:x="474" fg:w="480"/><text x="17.9432%" y="1135.50">sqlx_core::pool::executor::_..</text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::yield::_{{closure}} (32 samples, 1.19%)</title><rect x="34.4158%" y="1109" width="1.1945%" height="15" fill="rgb(214,176,27)" fg:x="922" fg:w="32"/><text x="34.6658%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="35.5356%" y="1093" width="0.0747%" height="15" fill="rgb(235,185,3)" fg:x="952" fg:w="2"/><text x="35.7856%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="35.6103%" y="1237" width="0.0747%" height="15" fill="rgb(227,24,12)" fg:x="954" fg:w="2"/><text x="35.8603%" y="1247.50"></text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (2 samples, 0.07%)</title><rect x="35.6103%" y="1221" width="0.0747%" height="15" fill="rgb(252,169,48)" fg:x="954" fg:w="2"/><text x="35.8603%" y="1231.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1621" width="0.1120%" height="15" fill="rgb(212,65,1)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1605" width="0.1120%" height="15" fill="rgb(242,39,24)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1615.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1589" width="0.1120%" height="15" fill="rgb(249,32,23)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1599.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="35.6103%" y="1573" width="0.1120%" height="15" fill="rgb(251,195,23)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1583.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1557" width="0.1120%" height="15" fill="rgb(236,174,8)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1541" width="0.1120%" height="15" fill="rgb(220,197,8)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1551.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1525" width="0.1120%" height="15" fill="rgb(240,108,37)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1535.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1509" width="0.1120%" height="15" fill="rgb(232,176,24)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1519.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="35.6103%" y="1493" width="0.1120%" height="15" fill="rgb(243,35,29)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1503.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1477" width="0.1120%" height="15" fill="rgb(210,37,18)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1487.50"></text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1461" width="0.1120%" height="15" fill="rgb(224,184,40)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1471.50"></text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1445" width="0.1120%" height="15" fill="rgb(236,39,29)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1455.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1429" width="0.1120%" height="15" fill="rgb(232,48,39)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1413" width="0.1120%" height="15" fill="rgb(236,34,42)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1423.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1397" width="0.1120%" height="15" fill="rgb(243,106,37)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1407.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="35.6103%" y="1381" width="0.1120%" height="15" fill="rgb(218,96,6)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1391.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1365" width="0.1120%" height="15" fill="rgb(235,130,12)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1375.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="35.6103%" y="1349" width="0.1120%" height="15" fill="rgb(231,95,0)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1359.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1333" width="0.1120%" height="15" fill="rgb(228,12,23)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1343.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1317" width="0.1120%" height="15" fill="rgb(216,12,1)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1327.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="35.6103%" y="1301" width="0.1120%" height="15" fill="rgb(219,59,3)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1311.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1285" width="0.1120%" height="15" fill="rgb(215,208,46)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1269" width="0.1120%" height="15" fill="rgb(254,224,29)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1279.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="35.6103%" y="1253" width="0.1120%" height="15" fill="rgb(232,14,29)" fg:x="954" fg:w="3"/><text x="35.8603%" y="1263.50"></text></g><g><title>&lt;poem::endpoint::endpoint::ToDynEndpoint&lt;E&gt; as poem::endpoint::endpoint::DynEndpoint&gt;::call (1 samples, 0.04%)</title><rect x="35.6850%" y="1237" width="0.0373%" height="15" fill="rgb(208,45,52)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1247.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="35.6850%" y="1221" width="0.0373%" height="15" fill="rgb(234,191,28)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="35.6850%" y="1205" width="0.0373%" height="15" fill="rgb(244,67,43)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1215.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="35.6850%" y="1189" width="0.0373%" height="15" fill="rgb(236,189,24)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1199.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="35.6850%" y="1173" width="0.0373%" height="15" fill="rgb(239,214,33)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="35.6850%" y="1157" width="0.0373%" height="15" fill="rgb(226,176,41)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="35.6850%" y="1141" width="0.0373%" height="15" fill="rgb(248,47,8)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="35.6850%" y="1125" width="0.0373%" height="15" fill="rgb(218,81,44)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1135.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="35.6850%" y="1109" width="0.0373%" height="15" fill="rgb(213,98,6)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1119.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="35.6850%" y="1093" width="0.0373%" height="15" fill="rgb(222,85,22)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1103.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="35.6850%" y="1077" width="0.0373%" height="15" fill="rgb(239,46,39)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="35.6850%" y="1061" width="0.0373%" height="15" fill="rgb(237,12,29)" fg:x="956" fg:w="1"/><text x="35.9350%" y="1071.50"></text></g><g><title>http::extensions::Extensions::get (1 samples, 0.04%)</title><rect x="35.7223%" y="1237" width="0.0373%" height="15" fill="rgb(214,77,8)" fg:x="957" fg:w="1"/><text x="35.9723%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.04%)</title><rect x="35.7223%" y="1221" width="0.0373%" height="15" fill="rgb(217,168,37)" fg:x="957" fg:w="1"/><text x="35.9723%" y="1231.50"></text></g><g><title>http::extensions::Extensions::get::_{{closure}} (1 samples, 0.04%)</title><rect x="35.7223%" y="1205" width="0.0373%" height="15" fill="rgb(221,217,23)" fg:x="957" fg:w="1"/><text x="35.9723%" y="1215.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (1 samples, 0.04%)</title><rect x="35.7223%" y="1189" width="0.0373%" height="15" fill="rgb(243,229,36)" fg:x="957" fg:w="1"/><text x="35.9723%" y="1199.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (1 samples, 0.04%)</title><rect x="35.7223%" y="1173" width="0.0373%" height="15" fill="rgb(251,163,40)" fg:x="957" fg:w="1"/><text x="35.9723%" y="1183.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (1 samples, 0.04%)</title><rect x="35.7223%" y="1157" width="0.0373%" height="15" fill="rgb(237,222,12)" fg:x="957" fg:w="1"/><text x="35.9723%" y="1167.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (1 samples, 0.04%)</title><rect x="35.7596%" y="1221" width="0.0373%" height="15" fill="rgb(248,132,6)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.04%)</title><rect x="35.7596%" y="1205" width="0.0373%" height="15" fill="rgb(227,167,50)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1215.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::_{{closure}} (1 samples, 0.04%)</title><rect x="35.7596%" y="1189" width="0.0373%" height="15" fill="rgb(242,84,37)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="35.7596%" y="1173" width="0.0373%" height="15" fill="rgb(212,4,50)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="35.7596%" y="1157" width="0.0373%" height="15" fill="rgb(230,228,32)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="35.7596%" y="1141" width="0.0373%" height="15" fill="rgb(248,217,23)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.04%)</title><rect x="35.7596%" y="1125" width="0.0373%" height="15" fill="rgb(238,197,32)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="35.7596%" y="1109" width="0.0373%" height="15" fill="rgb(236,106,1)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1119.50"></text></g><g><title>poem_openapi::base::UrlQuery::get_all::_{{closure}} (1 samples, 0.04%)</title><rect x="35.7596%" y="1093" width="0.0373%" height="15" fill="rgb(219,228,13)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="35.7596%" y="1077" width="0.0373%" height="15" fill="rgb(238,30,35)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.04%)</title><rect x="35.7596%" y="1061" width="0.0373%" height="15" fill="rgb(236,70,23)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1071.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="35.7596%" y="1045" width="0.0373%" height="15" fill="rgb(249,104,48)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="35.7596%" y="1029" width="0.0373%" height="15" fill="rgb(254,117,50)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1039.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1 samples, 0.04%)</title><rect x="35.7596%" y="1013" width="0.0373%" height="15" fill="rgb(223,152,4)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1023.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="35.7596%" y="997" width="0.0373%" height="15" fill="rgb(245,6,2)" fg:x="958" fg:w="1"/><text x="36.0096%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="35.7596%" y="981" width="0.0373%" height="15" fill="rgb(249,150,24)" fg:x="958" fg:w="1"/><text x="36.0096%" y="991.50"></text></g><g><title>&lt;poem_openapi::param::query::Query&lt;T&gt; as poem_openapi::base::ApiExtractor&gt;::from_request::_{{closure}} (3 samples, 0.11%)</title><rect x="35.7223%" y="1253" width="0.1120%" height="15" fill="rgb(228,185,42)" fg:x="957" fg:w="3"/><text x="35.9723%" y="1263.50"></text></g><g><title>poem_openapi::types::external::optional::&lt;impl poem_openapi::types::ParseFromParameter for core::option::Option&lt;T&gt;&gt;::parse_from_parameters (2 samples, 0.07%)</title><rect x="35.7596%" y="1237" width="0.0747%" height="15" fill="rgb(226,39,33)" fg:x="958" fg:w="2"/><text x="36.0096%" y="1247.50"></text></g><g><title>poem_openapi::types::ParseFromParameter::parse_from_parameters (1 samples, 0.04%)</title><rect x="35.7969%" y="1221" width="0.0373%" height="15" fill="rgb(221,166,19)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1231.50"></text></g><g><title>poem_openapi::types::external::string::&lt;impl poem_openapi::types::ParseFromParameter for alloc::string::String&gt;::parse_from_parameter (1 samples, 0.04%)</title><rect x="35.7969%" y="1205" width="0.0373%" height="15" fill="rgb(209,109,2)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1215.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.04%)</title><rect x="35.7969%" y="1189" width="0.0373%" height="15" fill="rgb(252,216,26)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="35.7969%" y="1173" width="0.0373%" height="15" fill="rgb(227,173,36)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1183.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="35.7969%" y="1157" width="0.0373%" height="15" fill="rgb(209,90,7)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="35.7969%" y="1141" width="0.0373%" height="15" fill="rgb(250,194,11)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="35.7969%" y="1125" width="0.0373%" height="15" fill="rgb(220,72,50)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="35.7969%" y="1109" width="0.0373%" height="15" fill="rgb(222,106,48)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="35.7969%" y="1093" width="0.0373%" height="15" fill="rgb(216,220,45)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="35.7969%" y="1077" width="0.0373%" height="15" fill="rgb(234,112,18)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="35.7969%" y="1061" width="0.0373%" height="15" fill="rgb(206,179,9)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="35.7969%" y="1045" width="0.0373%" height="15" fill="rgb(215,115,40)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="35.7969%" y="1029" width="0.0373%" height="15" fill="rgb(222,69,34)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="35.7969%" y="1013" width="0.0373%" height="15" fill="rgb(209,161,10)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="35.7969%" y="997" width="0.0373%" height="15" fill="rgb(217,6,38)" fg:x="959" fg:w="1"/><text x="36.0469%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="35.7969%" y="981" width="0.0373%" height="15" fill="rgb(229,229,48)" fg:x="959" fg:w="1"/><text x="36.0469%" y="991.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="35.7969%" y="965" width="0.0373%" height="15" fill="rgb(225,21,28)" fg:x="959" fg:w="1"/><text x="36.0469%" y="975.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="35.7969%" y="949" width="0.0373%" height="15" fill="rgb(206,33,13)" fg:x="959" fg:w="1"/><text x="36.0469%" y="959.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="35.7969%" y="933" width="0.0373%" height="15" fill="rgb(242,178,17)" fg:x="959" fg:w="1"/><text x="36.0469%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="35.7969%" y="917" width="0.0373%" height="15" fill="rgb(220,162,5)" fg:x="959" fg:w="1"/><text x="36.0469%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::route::router::PathPattern&gt; (1 samples, 0.04%)</title><rect x="35.8343%" y="1029" width="0.0373%" height="15" fill="rgb(210,33,43)" fg:x="960" fg:w="1"/><text x="36.0843%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (1 samples, 0.04%)</title><rect x="35.8343%" y="1013" width="0.0373%" height="15" fill="rgb(216,116,54)" fg:x="960" fg:w="1"/><text x="36.0843%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="35.8343%" y="997" width="0.0373%" height="15" fill="rgb(249,92,24)" fg:x="960" fg:w="1"/><text x="36.0843%" y="1007.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.04%)</title><rect x="35.8343%" y="981" width="0.0373%" height="15" fill="rgb(231,189,14)" fg:x="960" fg:w="1"/><text x="36.0843%" y="991.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="35.8343%" y="965" width="0.0373%" height="15" fill="rgb(230,8,41)" fg:x="960" fg:w="1"/><text x="36.0843%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (2 samples, 0.07%)</title><rect x="35.8343%" y="1237" width="0.0747%" height="15" fill="rgb(249,7,27)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="35.8343%" y="1221" width="0.0747%" height="15" fill="rgb(232,86,5)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="35.8343%" y="1205" width="0.0747%" height="15" fill="rgb(224,175,18)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="35.8343%" y="1189" width="0.0747%" height="15" fill="rgb(220,129,12)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="35.8343%" y="1173" width="0.0747%" height="15" fill="rgb(210,19,36)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;)&gt;&gt; (2 samples, 0.07%)</title><rect x="35.8343%" y="1157" width="0.0747%" height="15" fill="rgb(219,96,14)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="35.8343%" y="1141" width="0.0747%" height="15" fill="rgb(249,106,1)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.07%)</title><rect x="35.8343%" y="1125" width="0.0747%" height="15" fill="rgb(249,155,20)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.07%)</title><rect x="35.8343%" y="1109" width="0.0747%" height="15" fill="rgb(244,168,9)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1119.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.07%)</title><rect x="35.8343%" y="1093" width="0.0747%" height="15" fill="rgb(216,23,50)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.07%)</title><rect x="35.8343%" y="1077" width="0.0747%" height="15" fill="rgb(224,219,20)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;)&gt; (2 samples, 0.07%)</title><rect x="35.8343%" y="1061" width="0.0747%" height="15" fill="rgb(222,156,15)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;&gt; (2 samples, 0.07%)</title><rect x="35.8343%" y="1045" width="0.0747%" height="15" fill="rgb(231,97,17)" fg:x="960" fg:w="2"/><text x="36.0843%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem_openapi::base::UrlQuery&gt; (1 samples, 0.04%)</title><rect x="35.8716%" y="1029" width="0.0373%" height="15" fill="rgb(218,70,48)" fg:x="961" fg:w="1"/><text x="36.1216%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (1 samples, 0.04%)</title><rect x="35.8716%" y="1013" width="0.0373%" height="15" fill="rgb(212,196,52)" fg:x="961" fg:w="1"/><text x="36.1216%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="35.8716%" y="997" width="0.0373%" height="15" fill="rgb(243,203,18)" fg:x="961" fg:w="1"/><text x="36.1216%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::string::String,alloc::string::String)]&gt; (1 samples, 0.04%)</title><rect x="35.8716%" y="981" width="0.0373%" height="15" fill="rgb(252,125,41)" fg:x="961" fg:w="1"/><text x="36.1216%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (1 samples, 0.04%)</title><rect x="35.8716%" y="965" width="0.0373%" height="15" fill="rgb(223,180,33)" fg:x="961" fg:w="1"/><text x="36.1216%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="35.8716%" y="949" width="0.0373%" height="15" fill="rgb(254,159,46)" fg:x="961" fg:w="1"/><text x="36.1216%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="35.8716%" y="933" width="0.0373%" height="15" fill="rgb(254,38,10)" fg:x="961" fg:w="1"/><text x="36.1216%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="35.8716%" y="917" width="0.0373%" height="15" fill="rgb(208,217,32)" fg:x="961" fg:w="1"/><text x="36.1216%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="35.8716%" y="901" width="0.0373%" height="15" fill="rgb(221,120,13)" fg:x="961" fg:w="1"/><text x="36.1216%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="35.8716%" y="885" width="0.0373%" height="15" fill="rgb(246,54,52)" fg:x="961" fg:w="1"/><text x="36.1216%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="35.8716%" y="869" width="0.0373%" height="15" fill="rgb(242,34,25)" fg:x="961" fg:w="1"/><text x="36.1216%" y="879.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="35.8716%" y="853" width="0.0373%" height="15" fill="rgb(247,209,9)" fg:x="961" fg:w="1"/><text x="36.1216%" y="863.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="35.8716%" y="837" width="0.0373%" height="15" fill="rgb(228,71,26)" fg:x="961" fg:w="1"/><text x="36.1216%" y="847.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="35.8716%" y="821" width="0.0373%" height="15" fill="rgb(222,145,49)" fg:x="961" fg:w="1"/><text x="36.1216%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::authority::Authority&gt; (1 samples, 0.04%)</title><rect x="35.9089%" y="1205" width="0.0373%" height="15" fill="rgb(218,121,17)" fg:x="962" fg:w="1"/><text x="36.1589%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (1 samples, 0.04%)</title><rect x="35.9089%" y="1189" width="0.0373%" height="15" fill="rgb(244,50,7)" fg:x="962" fg:w="1"/><text x="36.1589%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.04%)</title><rect x="35.9089%" y="1173" width="0.0373%" height="15" fill="rgb(246,229,37)" fg:x="962" fg:w="1"/><text x="36.1589%" y="1183.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="35.9089%" y="1157" width="0.0373%" height="15" fill="rgb(225,18,5)" fg:x="962" fg:w="1"/><text x="36.1589%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::request::Request&gt; (6 samples, 0.22%)</title><rect x="35.8343%" y="1253" width="0.2240%" height="15" fill="rgb(213,204,8)" fg:x="960" fg:w="6"/><text x="36.0843%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::request::RequestState&gt; (4 samples, 0.15%)</title><rect x="35.9089%" y="1237" width="0.1493%" height="15" fill="rgb(238,103,6)" fg:x="962" fg:w="4"/><text x="36.1589%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (4 samples, 0.15%)</title><rect x="35.9089%" y="1221" width="0.1493%" height="15" fill="rgb(222,25,35)" fg:x="962" fg:w="4"/><text x="36.1589%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::path::PathAndQuery&gt; (3 samples, 0.11%)</title><rect x="35.9462%" y="1205" width="0.1120%" height="15" fill="rgb(213,203,35)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (3 samples, 0.11%)</title><rect x="35.9462%" y="1189" width="0.1120%" height="15" fill="rgb(221,79,53)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3 samples, 0.11%)</title><rect x="35.9462%" y="1173" width="0.1120%" height="15" fill="rgb(243,200,35)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1183.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="35.9462%" y="1157" width="0.1120%" height="15" fill="rgb(248,60,25)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1167.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (3 samples, 0.11%)</title><rect x="35.9462%" y="1141" width="0.1120%" height="15" fill="rgb(227,53,46)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1151.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (3 samples, 0.11%)</title><rect x="35.9462%" y="1125" width="0.1120%" height="15" fill="rgb(216,120,32)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1135.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (3 samples, 0.11%)</title><rect x="35.9462%" y="1109" width="0.1120%" height="15" fill="rgb(220,134,1)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1119.50"></text></g><g><title>bytes::bytes_mut::release_shared (3 samples, 0.11%)</title><rect x="35.9462%" y="1093" width="0.1120%" height="15" fill="rgb(237,168,5)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1103.50"></text></g><g><title>core::mem::drop (3 samples, 0.11%)</title><rect x="35.9462%" y="1077" width="0.1120%" height="15" fill="rgb(231,100,33)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (3 samples, 0.11%)</title><rect x="35.9462%" y="1061" width="0.1120%" height="15" fill="rgb(236,177,47)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (3 samples, 0.11%)</title><rect x="35.9462%" y="1045" width="0.1120%" height="15" fill="rgb(235,7,49)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.11%)</title><rect x="35.9462%" y="1029" width="0.1120%" height="15" fill="rgb(232,119,22)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.11%)</title><rect x="35.9462%" y="1013" width="0.1120%" height="15" fill="rgb(254,73,53)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="35.9462%" y="997" width="0.1120%" height="15" fill="rgb(251,35,20)" fg:x="963" fg:w="3"/><text x="36.1962%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.11%)</title><rect x="35.9462%" y="981" width="0.1120%" height="15" fill="rgb(241,119,20)" fg:x="963" fg:w="3"/><text x="36.1962%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.11%)</title><rect x="35.9462%" y="965" width="0.1120%" height="15" fill="rgb(207,102,14)" fg:x="963" fg:w="3"/><text x="36.1962%" y="975.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.11%)</title><rect x="35.9462%" y="949" width="0.1120%" height="15" fill="rgb(248,201,50)" fg:x="963" fg:w="3"/><text x="36.1962%" y="959.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.11%)</title><rect x="35.9462%" y="933" width="0.1120%" height="15" fill="rgb(222,185,44)" fg:x="963" fg:w="3"/><text x="36.1962%" y="943.50"></text></g><g><title>cfree (3 samples, 0.11%)</title><rect x="35.9462%" y="917" width="0.1120%" height="15" fill="rgb(218,107,18)" fg:x="963" fg:w="3"/><text x="36.1962%" y="927.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="35.9836%" y="901" width="0.0747%" height="15" fill="rgb(237,177,39)" fg:x="964" fg:w="2"/><text x="36.2336%" y="911.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="35.9836%" y="885" width="0.0747%" height="15" fill="rgb(246,69,6)" fg:x="964" fg:w="2"/><text x="36.2336%" y="895.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="35.9836%" y="869" width="0.0747%" height="15" fill="rgb(234,208,37)" fg:x="964" fg:w="2"/><text x="36.2336%" y="879.50"></text></g><g><title>&lt;() as poem::web::IntoResponse&gt;::into_response (1 samples, 0.04%)</title><rect x="36.0582%" y="1221" width="0.0373%" height="15" fill="rgb(225,4,6)" fg:x="966" fg:w="1"/><text x="36.3082%" y="1231.50"></text></g><g><title>poem::response::Response::builder (1 samples, 0.04%)</title><rect x="36.0582%" y="1205" width="0.0373%" height="15" fill="rgb(233,45,0)" fg:x="966" fg:w="1"/><text x="36.3082%" y="1215.50"></text></g><g><title>&lt;http::header::map::HeaderMap&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="36.0582%" y="1189" width="0.0373%" height="15" fill="rgb(226,136,5)" fg:x="966" fg:w="1"/><text x="36.3082%" y="1199.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_with_capacity (1 samples, 0.04%)</title><rect x="36.0582%" y="1173" width="0.0373%" height="15" fill="rgb(211,91,47)" fg:x="966" fg:w="1"/><text x="36.3082%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (3 samples, 0.11%)</title><rect x="37.2154%" y="949" width="0.1120%" height="15" fill="rgb(242,88,51)" fg:x="997" fg:w="3"/><text x="37.4654%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (3 samples, 0.11%)</title><rect x="37.2154%" y="933" width="0.1120%" height="15" fill="rgb(230,91,28)" fg:x="997" fg:w="3"/><text x="37.4654%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.11%)</title><rect x="37.2154%" y="917" width="0.1120%" height="15" fill="rgb(254,186,29)" fg:x="997" fg:w="3"/><text x="37.4654%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.11%)</title><rect x="37.2154%" y="901" width="0.1120%" height="15" fill="rgb(238,6,4)" fg:x="997" fg:w="3"/><text x="37.4654%" y="911.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.11%)</title><rect x="37.2154%" y="885" width="0.1120%" height="15" fill="rgb(221,151,16)" fg:x="997" fg:w="3"/><text x="37.4654%" y="895.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.11%)</title><rect x="37.2154%" y="869" width="0.1120%" height="15" fill="rgb(251,143,52)" fg:x="997" fg:w="3"/><text x="37.4654%" y="879.50"></text></g><g><title>cfree (3 samples, 0.11%)</title><rect x="37.2154%" y="853" width="0.1120%" height="15" fill="rgb(206,90,15)" fg:x="997" fg:w="3"/><text x="37.4654%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (6 samples, 0.22%)</title><rect x="37.2154%" y="965" width="0.2240%" height="15" fill="rgb(218,35,8)" fg:x="997" fg:w="6"/><text x="37.4654%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (3 samples, 0.11%)</title><rect x="37.3274%" y="949" width="0.1120%" height="15" fill="rgb(239,215,6)" fg:x="1000" fg:w="3"/><text x="37.5774%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.11%)</title><rect x="37.3274%" y="933" width="0.1120%" height="15" fill="rgb(245,116,39)" fg:x="1000" fg:w="3"/><text x="37.5774%" y="943.50"></text></g><g><title>core::mem::replace (3 samples, 0.11%)</title><rect x="37.3274%" y="917" width="0.1120%" height="15" fill="rgb(242,65,28)" fg:x="1000" fg:w="3"/><text x="37.5774%" y="927.50"></text></g><g><title>core::ptr::read (3 samples, 0.11%)</title><rect x="37.3274%" y="901" width="0.1120%" height="15" fill="rgb(252,132,53)" fg:x="1000" fg:w="3"/><text x="37.5774%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (3 samples, 0.11%)</title><rect x="37.4393%" y="917" width="0.1120%" height="15" fill="rgb(224,159,50)" fg:x="1003" fg:w="3"/><text x="37.6893%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (3 samples, 0.11%)</title><rect x="37.4393%" y="901" width="0.1120%" height="15" fill="rgb(224,93,4)" fg:x="1003" fg:w="3"/><text x="37.6893%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (3 samples, 0.11%)</title><rect x="37.4393%" y="885" width="0.1120%" height="15" fill="rgb(208,81,34)" fg:x="1003" fg:w="3"/><text x="37.6893%" y="895.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1 samples, 0.04%)</title><rect x="37.5140%" y="869" width="0.0373%" height="15" fill="rgb(233,92,54)" fg:x="1005" fg:w="1"/><text x="37.7640%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (5 samples, 0.19%)</title><rect x="37.4393%" y="949" width="0.1866%" height="15" fill="rgb(237,21,14)" fg:x="1003" fg:w="5"/><text x="37.6893%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.19%)</title><rect x="37.4393%" y="933" width="0.1866%" height="15" fill="rgb(249,128,51)" fg:x="1003" fg:w="5"/><text x="37.6893%" y="943.50"></text></g><g><title>core::ptr::write (2 samples, 0.07%)</title><rect x="37.5513%" y="917" width="0.0747%" height="15" fill="rgb(223,129,24)" fg:x="1006" fg:w="2"/><text x="37.8013%" y="927.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (34 samples, 1.27%)</title><rect x="36.5062%" y="981" width="1.2691%" height="15" fill="rgb(231,168,25)" fg:x="978" fg:w="34"/><text x="36.7562%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (9 samples, 0.34%)</title><rect x="37.4393%" y="965" width="0.3359%" height="15" fill="rgb(224,39,20)" fg:x="1003" fg:w="9"/><text x="37.6893%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (4 samples, 0.15%)</title><rect x="37.6260%" y="949" width="0.1493%" height="15" fill="rgb(225,152,53)" fg:x="1008" fg:w="4"/><text x="37.8760%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (73 samples, 2.72%)</title><rect x="37.8873%" y="885" width="2.7249%" height="15" fill="rgb(252,17,24)" fg:x="1015" fg:w="73"/><text x="38.1373%" y="895.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (73 samples, 2.72%)</title><rect x="37.8873%" y="869" width="2.7249%" height="15" fill="rgb(250,114,30)" fg:x="1015" fg:w="73"/><text x="38.1373%" y="879.50">al..</text></g><g><title>__rdl_dealloc (73 samples, 2.72%)</title><rect x="37.8873%" y="853" width="2.7249%" height="15" fill="rgb(229,5,4)" fg:x="1015" fg:w="73"/><text x="38.1373%" y="863.50">__..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (73 samples, 2.72%)</title><rect x="37.8873%" y="837" width="2.7249%" height="15" fill="rgb(225,176,49)" fg:x="1015" fg:w="73"/><text x="38.1373%" y="847.50">st..</text></g><g><title>cfree (73 samples, 2.72%)</title><rect x="37.8873%" y="821" width="2.7249%" height="15" fill="rgb(224,221,49)" fg:x="1015" fg:w="73"/><text x="38.1373%" y="831.50">cf..</text></g><g><title>[libc.so.6] (49 samples, 1.83%)</title><rect x="38.7831%" y="805" width="1.8290%" height="15" fill="rgb(253,169,27)" fg:x="1039" fg:w="49"/><text x="39.0331%" y="815.50">[..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (80 samples, 2.99%)</title><rect x="37.8499%" y="949" width="2.9862%" height="15" fill="rgb(211,206,16)" fg:x="1014" fg:w="80"/><text x="38.0999%" y="959.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (80 samples, 2.99%)</title><rect x="37.8499%" y="933" width="2.9862%" height="15" fill="rgb(244,87,35)" fg:x="1014" fg:w="80"/><text x="38.0999%" y="943.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (79 samples, 2.95%)</title><rect x="37.8873%" y="917" width="2.9489%" height="15" fill="rgb(246,28,10)" fg:x="1015" fg:w="79"/><text x="38.1373%" y="927.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 2.95%)</title><rect x="37.8873%" y="901" width="2.9489%" height="15" fill="rgb(229,12,44)" fg:x="1015" fg:w="79"/><text x="38.1373%" y="911.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.22%)</title><rect x="40.6122%" y="885" width="0.2240%" height="15" fill="rgb(210,145,37)" fg:x="1088" fg:w="6"/><text x="40.8622%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (86 samples, 3.21%)</title><rect x="37.8499%" y="965" width="3.2102%" height="15" fill="rgb(227,112,52)" fg:x="1014" fg:w="86"/><text x="38.0999%" y="975.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.22%)</title><rect x="40.8361%" y="949" width="0.2240%" height="15" fill="rgb(238,155,34)" fg:x="1094" fg:w="6"/><text x="41.0861%" y="959.50"></text></g><g><title>cfree (6 samples, 0.22%)</title><rect x="40.8361%" y="933" width="0.2240%" height="15" fill="rgb(239,226,36)" fg:x="1094" fg:w="6"/><text x="41.0861%" y="943.50"></text></g><g><title>[libc.so.6] (4 samples, 0.15%)</title><rect x="40.9108%" y="917" width="0.1493%" height="15" fill="rgb(230,16,23)" fg:x="1096" fg:w="4"/><text x="41.1608%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::web::json::Json&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt;&gt; (136 samples, 5.08%)</title><rect x="36.0956%" y="1189" width="5.0765%" height="15" fill="rgb(236,171,36)" fg:x="967" fg:w="136"/><text x="36.3456%" y="1199.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (136 samples, 5.08%)</title><rect x="36.0956%" y="1173" width="5.0765%" height="15" fill="rgb(221,22,14)" fg:x="967" fg:w="136"/><text x="36.3456%" y="1183.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (136 samples, 5.08%)</title><rect x="36.0956%" y="1157" width="5.0765%" height="15" fill="rgb(242,43,11)" fg:x="967" fg:w="136"/><text x="36.3456%" y="1167.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (136 samples, 5.08%)</title><rect x="36.0956%" y="1141" width="5.0765%" height="15" fill="rgb(232,69,23)" fg:x="967" fg:w="136"/><text x="36.3456%" y="1151.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 5.08%)</title><rect x="36.0956%" y="1125" width="5.0765%" height="15" fill="rgb(216,180,54)" fg:x="967" fg:w="136"/><text x="36.3456%" y="1135.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (136 samples, 5.08%)</title><rect x="36.0956%" y="1109" width="5.0765%" height="15" fill="rgb(216,5,24)" fg:x="967" fg:w="136"/><text x="36.3456%" y="1119.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (135 samples, 5.04%)</title><rect x="36.1329%" y="1093" width="5.0392%" height="15" fill="rgb(225,89,9)" fg:x="968" fg:w="135"/><text x="36.3829%" y="1103.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (131 samples, 4.89%)</title><rect x="36.2822%" y="1077" width="4.8899%" height="15" fill="rgb(243,75,33)" fg:x="972" fg:w="131"/><text x="36.5322%" y="1087.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (131 samples, 4.89%)</title><rect x="36.2822%" y="1061" width="4.8899%" height="15" fill="rgb(247,141,45)" fg:x="972" fg:w="131"/><text x="36.5322%" y="1071.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 4.89%)</title><rect x="36.2822%" y="1045" width="4.8899%" height="15" fill="rgb(232,177,36)" fg:x="972" fg:w="131"/><text x="36.5322%" y="1055.50">&lt;alloc..</text></g><g><title>core::mem::drop (131 samples, 4.89%)</title><rect x="36.2822%" y="1029" width="4.8899%" height="15" fill="rgb(219,125,36)" fg:x="972" fg:w="131"/><text x="36.5322%" y="1039.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (131 samples, 4.89%)</title><rect x="36.2822%" y="1013" width="4.8899%" height="15" fill="rgb(227,94,9)" fg:x="972" fg:w="131"/><text x="36.5322%" y="1023.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 4.89%)</title><rect x="36.2822%" y="997" width="4.8899%" height="15" fill="rgb(240,34,52)" fg:x="972" fg:w="131"/><text x="36.5322%" y="1007.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (91 samples, 3.40%)</title><rect x="37.7753%" y="981" width="3.3968%" height="15" fill="rgb(216,45,12)" fg:x="1012" fg:w="91"/><text x="38.0253%" y="991.50">all..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (3 samples, 0.11%)</title><rect x="41.0601%" y="965" width="0.1120%" height="15" fill="rgb(246,21,19)" fg:x="1100" fg:w="3"/><text x="41.3101%" y="975.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3 samples, 0.11%)</title><rect x="41.0601%" y="949" width="0.1120%" height="15" fill="rgb(213,98,42)" fg:x="1100" fg:w="3"/><text x="41.3101%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.11%)</title><rect x="41.0601%" y="933" width="0.1120%" height="15" fill="rgb(250,136,47)" fg:x="1100" fg:w="3"/><text x="41.3101%" y="943.50"></text></g><g><title>poem::response::ResponseBuilder::header (4 samples, 0.15%)</title><rect x="41.1721%" y="1189" width="0.1493%" height="15" fill="rgb(251,124,27)" fg:x="1103" fg:w="4"/><text x="41.4221%" y="1199.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (3 samples, 0.11%)</title><rect x="41.2094%" y="1173" width="0.1120%" height="15" fill="rgb(229,180,14)" fg:x="1104" fg:w="3"/><text x="41.4594%" y="1183.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append (3 samples, 0.11%)</title><rect x="41.2094%" y="1157" width="0.1120%" height="15" fill="rgb(245,216,25)" fg:x="1104" fg:w="3"/><text x="41.4594%" y="1167.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append (3 samples, 0.11%)</title><rect x="41.2094%" y="1141" width="0.1120%" height="15" fill="rgb(251,43,5)" fg:x="1104" fg:w="3"/><text x="41.4594%" y="1151.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (3 samples, 0.11%)</title><rect x="41.2094%" y="1125" width="0.1120%" height="15" fill="rgb(250,128,24)" fg:x="1104" fg:w="3"/><text x="41.4594%" y="1135.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (2 samples, 0.07%)</title><rect x="41.2467%" y="1109" width="0.0747%" height="15" fill="rgb(217,117,27)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.07%)</title><rect x="41.2467%" y="1093" width="0.0747%" height="15" fill="rgb(245,147,4)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="41.2467%" y="1077" width="0.0747%" height="15" fill="rgb(242,201,35)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="41.2467%" y="1061" width="0.0747%" height="15" fill="rgb(218,181,1)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.07%)</title><rect x="41.2467%" y="1045" width="0.0747%" height="15" fill="rgb(222,6,29)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="41.2467%" y="1029" width="0.0747%" height="15" fill="rgb(208,186,3)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="41.2467%" y="1013" width="0.0747%" height="15" fill="rgb(216,36,26)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="41.2467%" y="997" width="0.0747%" height="15" fill="rgb(248,201,23)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="1007.50"></text></g><g><title>__rdl_alloc (2 samples, 0.07%)</title><rect x="41.2467%" y="981" width="0.0747%" height="15" fill="rgb(251,170,31)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="991.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.07%)</title><rect x="41.2467%" y="965" width="0.0747%" height="15" fill="rgb(207,110,25)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="975.50"></text></g><g><title>malloc (2 samples, 0.07%)</title><rect x="41.2467%" y="949" width="0.0747%" height="15" fill="rgb(250,54,15)" fg:x="1105" fg:w="2"/><text x="41.4967%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (3 samples, 0.11%)</title><rect x="41.6200%" y="869" width="0.1120%" height="15" fill="rgb(227,68,33)" fg:x="1115" fg:w="3"/><text x="41.8700%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (3 samples, 0.11%)</title><rect x="41.6200%" y="853" width="0.1120%" height="15" fill="rgb(238,34,41)" fg:x="1115" fg:w="3"/><text x="41.8700%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (8 samples, 0.30%)</title><rect x="41.5454%" y="917" width="0.2986%" height="15" fill="rgb(220,11,15)" fg:x="1113" fg:w="8"/><text x="41.7954%" y="927.50"></text></g><g><title>alloc::collections::btree::mem::replace (8 samples, 0.30%)</title><rect x="41.5454%" y="901" width="0.2986%" height="15" fill="rgb(246,111,35)" fg:x="1113" fg:w="8"/><text x="41.7954%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (8 samples, 0.30%)</title><rect x="41.5454%" y="885" width="0.2986%" height="15" fill="rgb(209,88,53)" fg:x="1113" fg:w="8"/><text x="41.7954%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (3 samples, 0.11%)</title><rect x="41.7320%" y="869" width="0.1120%" height="15" fill="rgb(231,185,47)" fg:x="1118" fg:w="3"/><text x="41.9820%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (3 samples, 0.11%)</title><rect x="41.7320%" y="853" width="0.1120%" height="15" fill="rgb(233,154,1)" fg:x="1118" fg:w="3"/><text x="41.9820%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (3 samples, 0.11%)</title><rect x="41.7320%" y="837" width="0.1120%" height="15" fill="rgb(225,15,46)" fg:x="1118" fg:w="3"/><text x="41.9820%" y="847.50"></text></g><g><title>&lt;serde_json::map::Iter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.41%)</title><rect x="41.4707%" y="965" width="0.4106%" height="15" fill="rgb(211,135,41)" fg:x="1111" fg:w="11"/><text x="41.7207%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.41%)</title><rect x="41.4707%" y="949" width="0.4106%" height="15" fill="rgb(208,54,0)" fg:x="1111" fg:w="11"/><text x="41.7207%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (11 samples, 0.41%)</title><rect x="41.4707%" y="933" width="0.4106%" height="15" fill="rgb(244,136,14)" fg:x="1111" fg:w="11"/><text x="41.7207%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (1 samples, 0.04%)</title><rect x="41.8440%" y="917" width="0.0373%" height="15" fill="rgb(241,56,14)" fg:x="1121" fg:w="1"/><text x="42.0940%" y="927.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (2 samples, 0.07%)</title><rect x="41.8813%" y="965" width="0.0747%" height="15" fill="rgb(205,80,24)" fg:x="1122" fg:w="2"/><text x="42.1313%" y="975.50"></text></g><g><title>serde_json::ser::Formatter::end_object (2 samples, 0.07%)</title><rect x="41.8813%" y="949" width="0.0747%" height="15" fill="rgb(220,57,4)" fg:x="1122" fg:w="2"/><text x="42.1313%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.07%)</title><rect x="41.8813%" y="933" width="0.0747%" height="15" fill="rgb(226,193,50)" fg:x="1122" fg:w="2"/><text x="42.1313%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.07%)</title><rect x="41.8813%" y="917" width="0.0747%" height="15" fill="rgb(231,168,22)" fg:x="1122" fg:w="2"/><text x="42.1313%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.07%)</title><rect x="41.8813%" y="901" width="0.0747%" height="15" fill="rgb(254,215,14)" fg:x="1122" fg:w="2"/><text x="42.1313%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.07%)</title><rect x="41.8813%" y="885" width="0.0747%" height="15" fill="rgb(211,115,16)" fg:x="1122" fg:w="2"/><text x="42.1313%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.07%)</title><rect x="41.8813%" y="869" width="0.0747%" height="15" fill="rgb(236,210,16)" fg:x="1122" fg:w="2"/><text x="42.1313%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="41.9186%" y="853" width="0.0373%" height="15" fill="rgb(221,94,12)" fg:x="1123" fg:w="1"/><text x="42.1686%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="41.9186%" y="837" width="0.0373%" height="15" fill="rgb(235,218,49)" fg:x="1123" fg:w="1"/><text x="42.1686%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.04%)</title><rect x="41.9186%" y="821" width="0.0373%" height="15" fill="rgb(217,114,14)" fg:x="1123" fg:w="1"/><text x="42.1686%" y="831.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (6 samples, 0.22%)</title><rect x="42.5905%" y="869" width="0.2240%" height="15" fill="rgb(216,145,22)" fg:x="1141" fg:w="6"/><text x="42.8405%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.22%)</title><rect x="42.5905%" y="853" width="0.2240%" height="15" fill="rgb(217,112,39)" fg:x="1141" fg:w="6"/><text x="42.8405%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.22%)</title><rect x="42.5905%" y="837" width="0.2240%" height="15" fill="rgb(225,85,32)" fg:x="1141" fg:w="6"/><text x="42.8405%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.22%)</title><rect x="42.5905%" y="821" width="0.2240%" height="15" fill="rgb(245,209,47)" fg:x="1141" fg:w="6"/><text x="42.8405%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.22%)</title><rect x="42.5905%" y="805" width="0.2240%" height="15" fill="rgb(218,220,15)" fg:x="1141" fg:w="6"/><text x="42.8405%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.22%)</title><rect x="42.5905%" y="789" width="0.2240%" height="15" fill="rgb(222,202,31)" fg:x="1141" fg:w="6"/><text x="42.8405%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.15%)</title><rect x="42.6652%" y="773" width="0.1493%" height="15" fill="rgb(243,203,4)" fg:x="1143" fg:w="4"/><text x="42.9152%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="42.7772%" y="757" width="0.0373%" height="15" fill="rgb(237,92,17)" fg:x="1146" fg:w="1"/><text x="43.0272%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.04%)</title><rect x="42.7772%" y="741" width="0.0373%" height="15" fill="rgb(231,119,7)" fg:x="1146" fg:w="1"/><text x="43.0272%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="42.8891%" y="773" width="0.0373%" height="15" fill="rgb(237,82,41)" fg:x="1149" fg:w="1"/><text x="43.1391%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="42.8891%" y="757" width="0.0373%" height="15" fill="rgb(226,81,48)" fg:x="1149" fg:w="1"/><text x="43.1391%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.04%)</title><rect x="42.8891%" y="741" width="0.0373%" height="15" fill="rgb(234,70,51)" fg:x="1149" fg:w="1"/><text x="43.1391%" y="751.50"></text></g><g><title>serde_json::ser::Formatter::end_string (5 samples, 0.19%)</title><rect x="42.8145%" y="869" width="0.1866%" height="15" fill="rgb(251,86,4)" fg:x="1147" fg:w="5"/><text x="43.0645%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (5 samples, 0.19%)</title><rect x="42.8145%" y="853" width="0.1866%" height="15" fill="rgb(244,144,28)" fg:x="1147" fg:w="5"/><text x="43.0645%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.19%)</title><rect x="42.8145%" y="837" width="0.1866%" height="15" fill="rgb(232,161,39)" fg:x="1147" fg:w="5"/><text x="43.0645%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.19%)</title><rect x="42.8145%" y="821" width="0.1866%" height="15" fill="rgb(247,34,51)" fg:x="1147" fg:w="5"/><text x="43.0645%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.19%)</title><rect x="42.8145%" y="805" width="0.1866%" height="15" fill="rgb(225,132,2)" fg:x="1147" fg:w="5"/><text x="43.0645%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.19%)</title><rect x="42.8145%" y="789" width="0.1866%" height="15" fill="rgb(209,159,44)" fg:x="1147" fg:w="5"/><text x="43.0645%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="42.9265%" y="773" width="0.0747%" height="15" fill="rgb(251,214,1)" fg:x="1150" fg:w="2"/><text x="43.1765%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.34%)</title><rect x="44.7555%" y="853" width="0.3359%" height="15" fill="rgb(247,84,47)" fg:x="1199" fg:w="9"/><text x="45.0055%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.34%)</title><rect x="44.7555%" y="837" width="0.3359%" height="15" fill="rgb(240,111,43)" fg:x="1199" fg:w="9"/><text x="45.0055%" y="847.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.11%)</title><rect x="44.9795%" y="821" width="0.1120%" height="15" fill="rgb(215,214,35)" fg:x="1205" fg:w="3"/><text x="45.2295%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.04%)</title><rect x="45.0915%" y="853" width="0.0373%" height="15" fill="rgb(248,207,23)" fg:x="1208" fg:w="1"/><text x="45.3415%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.04%)</title><rect x="45.0915%" y="837" width="0.0373%" height="15" fill="rgb(214,186,4)" fg:x="1208" fg:w="1"/><text x="45.3415%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.04%)</title><rect x="45.0915%" y="821" width="0.0373%" height="15" fill="rgb(220,133,22)" fg:x="1208" fg:w="1"/><text x="45.3415%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="45.0915%" y="805" width="0.0373%" height="15" fill="rgb(239,134,19)" fg:x="1208" fg:w="1"/><text x="45.3415%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="45.0915%" y="789" width="0.0373%" height="15" fill="rgb(250,140,9)" fg:x="1208" fg:w="1"/><text x="45.3415%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="45.0915%" y="773" width="0.0373%" height="15" fill="rgb(225,59,14)" fg:x="1208" fg:w="1"/><text x="45.3415%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.11%)</title><rect x="45.2408%" y="757" width="0.1120%" height="15" fill="rgb(214,152,51)" fg:x="1212" fg:w="3"/><text x="45.4908%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.11%)</title><rect x="45.2408%" y="741" width="0.1120%" height="15" fill="rgb(251,227,43)" fg:x="1212" fg:w="3"/><text x="45.4908%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.11%)</title><rect x="45.2408%" y="725" width="0.1120%" height="15" fill="rgb(241,96,17)" fg:x="1212" fg:w="3"/><text x="45.4908%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.04%)</title><rect x="45.3154%" y="709" width="0.0373%" height="15" fill="rgb(234,198,43)" fg:x="1214" fg:w="1"/><text x="45.5654%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (99 samples, 3.70%)</title><rect x="42.1426%" y="933" width="3.6954%" height="15" fill="rgb(220,108,29)" fg:x="1129" fg:w="99"/><text x="42.3926%" y="943.50">serd..</text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (99 samples, 3.70%)</title><rect x="42.1426%" y="917" width="3.6954%" height="15" fill="rgb(226,163,33)" fg:x="1129" fg:w="99"/><text x="42.3926%" y="927.50">&lt;ser..</text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (99 samples, 3.70%)</title><rect x="42.1426%" y="901" width="3.6954%" height="15" fill="rgb(205,194,45)" fg:x="1129" fg:w="99"/><text x="42.3926%" y="911.50">&lt;&amp;mu..</text></g><g><title>serde_json::ser::format_escaped_str (88 samples, 3.28%)</title><rect x="42.5532%" y="885" width="3.2848%" height="15" fill="rgb(206,143,44)" fg:x="1140" fg:w="88"/><text x="42.8032%" y="895.50">ser..</text></g><g><title>serde_json::ser::format_escaped_str_contents (76 samples, 2.84%)</title><rect x="43.0011%" y="869" width="2.8369%" height="15" fill="rgb(236,136,36)" fg:x="1152" fg:w="76"/><text x="43.2511%" y="879.50">se..</text></g><g><title>serde_json::ser::Formatter::write_string_fragment (19 samples, 0.71%)</title><rect x="45.1288%" y="853" width="0.7092%" height="15" fill="rgb(249,172,42)" fg:x="1209" fg:w="19"/><text x="45.3788%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (19 samples, 0.71%)</title><rect x="45.1288%" y="837" width="0.7092%" height="15" fill="rgb(216,139,23)" fg:x="1209" fg:w="19"/><text x="45.3788%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (19 samples, 0.71%)</title><rect x="45.1288%" y="821" width="0.7092%" height="15" fill="rgb(207,166,20)" fg:x="1209" fg:w="19"/><text x="45.3788%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.71%)</title><rect x="45.1288%" y="805" width="0.7092%" height="15" fill="rgb(210,209,22)" fg:x="1209" fg:w="19"/><text x="45.3788%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.71%)</title><rect x="45.1288%" y="789" width="0.7092%" height="15" fill="rgb(232,118,20)" fg:x="1209" fg:w="19"/><text x="45.3788%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.71%)</title><rect x="45.1288%" y="773" width="0.7092%" height="15" fill="rgb(238,113,42)" fg:x="1209" fg:w="19"/><text x="45.3788%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.49%)</title><rect x="45.3527%" y="757" width="0.4853%" height="15" fill="rgb(231,42,5)" fg:x="1215" fg:w="13"/><text x="45.6027%" y="767.50"></text></g><g><title>[libc.so.6] (9 samples, 0.34%)</title><rect x="45.5021%" y="741" width="0.3359%" height="15" fill="rgb(243,166,24)" fg:x="1219" fg:w="9"/><text x="45.7521%" y="751.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (117 samples, 4.37%)</title><rect x="42.0306%" y="949" width="4.3673%" height="15" fill="rgb(237,226,12)" fg:x="1126" fg:w="117"/><text x="42.2806%" y="959.50">&lt;serd..</text></g><g><title>serde_json::ser::Formatter::begin_object_key (15 samples, 0.56%)</title><rect x="45.8380%" y="933" width="0.5599%" height="15" fill="rgb(229,133,24)" fg:x="1228" fg:w="15"/><text x="46.0880%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (13 samples, 0.49%)</title><rect x="45.9127%" y="917" width="0.4853%" height="15" fill="rgb(238,33,43)" fg:x="1230" fg:w="13"/><text x="46.1627%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.49%)</title><rect x="45.9127%" y="901" width="0.4853%" height="15" fill="rgb(227,59,38)" fg:x="1230" fg:w="13"/><text x="46.1627%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.49%)</title><rect x="45.9127%" y="885" width="0.4853%" height="15" fill="rgb(230,97,0)" fg:x="1230" fg:w="13"/><text x="46.1627%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.49%)</title><rect x="45.9127%" y="869" width="0.4853%" height="15" fill="rgb(250,173,50)" fg:x="1230" fg:w="13"/><text x="46.1627%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.49%)</title><rect x="45.9127%" y="853" width="0.4853%" height="15" fill="rgb(240,15,50)" fg:x="1230" fg:w="13"/><text x="46.1627%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.26%)</title><rect x="46.1366%" y="837" width="0.2613%" height="15" fill="rgb(221,93,22)" fg:x="1236" fg:w="7"/><text x="46.3866%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.26%)</title><rect x="46.1366%" y="821" width="0.2613%" height="15" fill="rgb(245,180,53)" fg:x="1236" fg:w="7"/><text x="46.3866%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (7 samples, 0.26%)</title><rect x="46.1366%" y="805" width="0.2613%" height="15" fill="rgb(231,88,51)" fg:x="1236" fg:w="7"/><text x="46.3866%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="46.9205%" y="885" width="0.0373%" height="15" fill="rgb(240,58,21)" fg:x="1257" fg:w="1"/><text x="47.1705%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="46.9205%" y="869" width="0.0373%" height="15" fill="rgb(237,21,10)" fg:x="1257" fg:w="1"/><text x="47.1705%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="46.9578%" y="789" width="0.0373%" height="15" fill="rgb(218,43,11)" fg:x="1258" fg:w="1"/><text x="47.2078%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="46.9578%" y="773" width="0.0373%" height="15" fill="rgb(218,221,29)" fg:x="1258" fg:w="1"/><text x="47.2078%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.04%)</title><rect x="46.9578%" y="757" width="0.0373%" height="15" fill="rgb(214,118,42)" fg:x="1258" fg:w="1"/><text x="47.2078%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (16 samples, 0.60%)</title><rect x="46.5472%" y="933" width="0.5972%" height="15" fill="rgb(251,200,26)" fg:x="1247" fg:w="16"/><text x="46.7972%" y="943.50"></text></g><g><title>serde_json::ser::format_escaped_str (14 samples, 0.52%)</title><rect x="46.6219%" y="917" width="0.5226%" height="15" fill="rgb(237,101,39)" fg:x="1249" fg:w="14"/><text x="46.8719%" y="927.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (14 samples, 0.52%)</title><rect x="46.6219%" y="901" width="0.5226%" height="15" fill="rgb(251,117,11)" fg:x="1249" fg:w="14"/><text x="46.8719%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (5 samples, 0.19%)</title><rect x="46.9578%" y="885" width="0.1866%" height="15" fill="rgb(216,223,23)" fg:x="1258" fg:w="5"/><text x="47.2078%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (5 samples, 0.19%)</title><rect x="46.9578%" y="869" width="0.1866%" height="15" fill="rgb(251,54,12)" fg:x="1258" fg:w="5"/><text x="47.2078%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.19%)</title><rect x="46.9578%" y="853" width="0.1866%" height="15" fill="rgb(254,176,54)" fg:x="1258" fg:w="5"/><text x="47.2078%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.19%)</title><rect x="46.9578%" y="837" width="0.1866%" height="15" fill="rgb(210,32,8)" fg:x="1258" fg:w="5"/><text x="47.2078%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.19%)</title><rect x="46.9578%" y="821" width="0.1866%" height="15" fill="rgb(235,52,38)" fg:x="1258" fg:w="5"/><text x="47.2078%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.19%)</title><rect x="46.9578%" y="805" width="0.1866%" height="15" fill="rgb(231,4,44)" fg:x="1258" fg:w="5"/><text x="47.2078%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.15%)</title><rect x="46.9951%" y="789" width="0.1493%" height="15" fill="rgb(249,2,32)" fg:x="1259" fg:w="4"/><text x="47.2451%" y="799.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="47.0698%" y="773" width="0.0747%" height="15" fill="rgb(224,65,26)" fg:x="1261" fg:w="2"/><text x="47.3198%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.19%)</title><rect x="47.3684%" y="837" width="0.1866%" height="15" fill="rgb(250,73,40)" fg:x="1269" fg:w="5"/><text x="47.6184%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.19%)</title><rect x="47.3684%" y="821" width="0.1866%" height="15" fill="rgb(253,177,16)" fg:x="1269" fg:w="5"/><text x="47.6184%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.19%)</title><rect x="47.3684%" y="805" width="0.1866%" height="15" fill="rgb(217,32,34)" fg:x="1269" fg:w="5"/><text x="47.6184%" y="815.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (12 samples, 0.45%)</title><rect x="47.1445%" y="933" width="0.4479%" height="15" fill="rgb(212,7,10)" fg:x="1263" fg:w="12"/><text x="47.3945%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (12 samples, 0.45%)</title><rect x="47.1445%" y="917" width="0.4479%" height="15" fill="rgb(245,89,8)" fg:x="1263" fg:w="12"/><text x="47.3945%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.45%)</title><rect x="47.1445%" y="901" width="0.4479%" height="15" fill="rgb(237,16,53)" fg:x="1263" fg:w="12"/><text x="47.3945%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.45%)</title><rect x="47.1445%" y="885" width="0.4479%" height="15" fill="rgb(250,204,30)" fg:x="1263" fg:w="12"/><text x="47.3945%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.45%)</title><rect x="47.1445%" y="869" width="0.4479%" height="15" fill="rgb(208,77,27)" fg:x="1263" fg:w="12"/><text x="47.3945%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.45%)</title><rect x="47.1445%" y="853" width="0.4479%" height="15" fill="rgb(250,204,28)" fg:x="1263" fg:w="12"/><text x="47.3945%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="47.5551%" y="837" width="0.0373%" height="15" fill="rgb(244,63,21)" fg:x="1274" fg:w="1"/><text x="47.8051%" y="847.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::classify (2 samples, 0.07%)</title><rect x="48.3763%" y="885" width="0.0747%" height="15" fill="rgb(236,85,44)" fg:x="1296" fg:w="2"/><text x="48.6263%" y="895.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::partial_classify (2 samples, 0.07%)</title><rect x="48.3763%" y="869" width="0.0747%" height="15" fill="rgb(215,98,4)" fg:x="1296" fg:w="2"/><text x="48.6263%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.07%)</title><rect x="48.4509%" y="789" width="0.0747%" height="15" fill="rgb(235,38,11)" fg:x="1298" fg:w="2"/><text x="48.7009%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="48.4882%" y="773" width="0.0373%" height="15" fill="rgb(254,186,25)" fg:x="1299" fg:w="1"/><text x="48.7382%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_f64 (18 samples, 0.67%)</title><rect x="48.3763%" y="901" width="0.6719%" height="15" fill="rgb(225,55,31)" fg:x="1296" fg:w="18"/><text x="48.6263%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::write_f64 (16 samples, 0.60%)</title><rect x="48.4509%" y="885" width="0.5972%" height="15" fill="rgb(211,15,21)" fg:x="1298" fg:w="16"/><text x="48.7009%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (16 samples, 0.60%)</title><rect x="48.4509%" y="869" width="0.5972%" height="15" fill="rgb(215,187,41)" fg:x="1298" fg:w="16"/><text x="48.7009%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (16 samples, 0.60%)</title><rect x="48.4509%" y="853" width="0.5972%" height="15" fill="rgb(248,69,32)" fg:x="1298" fg:w="16"/><text x="48.7009%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.60%)</title><rect x="48.4509%" y="837" width="0.5972%" height="15" fill="rgb(252,102,52)" fg:x="1298" fg:w="16"/><text x="48.7009%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.60%)</title><rect x="48.4509%" y="821" width="0.5972%" height="15" fill="rgb(253,140,32)" fg:x="1298" fg:w="16"/><text x="48.7009%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.60%)</title><rect x="48.4509%" y="805" width="0.5972%" height="15" fill="rgb(216,56,42)" fg:x="1298" fg:w="16"/><text x="48.7009%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.52%)</title><rect x="48.5256%" y="789" width="0.5226%" height="15" fill="rgb(216,184,14)" fg:x="1300" fg:w="14"/><text x="48.7756%" y="799.50"></text></g><g><title>[libc.so.6] (14 samples, 0.52%)</title><rect x="48.5256%" y="773" width="0.5226%" height="15" fill="rgb(237,187,27)" fg:x="1300" fg:w="14"/><text x="48.7756%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="49.0108%" y="757" width="0.0373%" height="15" fill="rgb(219,65,3)" fg:x="1313" fg:w="1"/><text x="49.2608%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (9 samples, 0.34%)</title><rect x="49.0482%" y="901" width="0.3359%" height="15" fill="rgb(245,83,25)" fg:x="1314" fg:w="9"/><text x="49.2982%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::write_u64 (9 samples, 0.34%)</title><rect x="49.0482%" y="885" width="0.3359%" height="15" fill="rgb(214,205,45)" fg:x="1314" fg:w="9"/><text x="49.2982%" y="895.50"></text></g><g><title>itoa::Buffer::format (9 samples, 0.34%)</title><rect x="49.0482%" y="869" width="0.3359%" height="15" fill="rgb(241,20,18)" fg:x="1314" fg:w="9"/><text x="49.2982%" y="879.50"></text></g><g><title>itoa::&lt;impl itoa::private::Sealed for u64&gt;::write (9 samples, 0.34%)</title><rect x="49.0482%" y="853" width="0.3359%" height="15" fill="rgb(232,163,23)" fg:x="1314" fg:w="9"/><text x="49.2982%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.15%)</title><rect x="49.2348%" y="837" width="0.1493%" height="15" fill="rgb(214,5,46)" fg:x="1319" fg:w="4"/><text x="49.4848%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (224 samples, 8.36%)</title><rect x="41.3587%" y="997" width="8.3613%" height="15" fill="rgb(229,78,17)" fg:x="1108" fg:w="224"/><text x="41.6087%" y="1007.50">serde::ser::..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (224 samples, 8.36%)</title><rect x="41.3587%" y="981" width="8.3613%" height="15" fill="rgb(248,89,10)" fg:x="1108" fg:w="224"/><text x="41.6087%" y="991.50">serde_json::..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (208 samples, 7.76%)</title><rect x="41.9560%" y="965" width="7.7641%" height="15" fill="rgb(248,54,15)" fg:x="1124" fg:w="208"/><text x="42.2060%" y="975.50">serde::ser:..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (89 samples, 3.32%)</title><rect x="46.3979%" y="949" width="3.3221%" height="15" fill="rgb(223,116,6)" fg:x="1243" fg:w="89"/><text x="46.6479%" y="959.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (57 samples, 2.13%)</title><rect x="47.5924%" y="933" width="2.1277%" height="15" fill="rgb(205,125,38)" fg:x="1275" fg:w="57"/><text x="47.8424%" y="943.50">s..</text></g><g><title>&lt;serde_json::number::Number as serde::ser::Serialize&gt;::serialize (40 samples, 1.49%)</title><rect x="48.2270%" y="917" width="1.4931%" height="15" fill="rgb(251,78,38)" fg:x="1292" fg:w="40"/><text x="48.4770%" y="927.50"></text></g><g><title>[libc.so.6] (9 samples, 0.34%)</title><rect x="49.3841%" y="901" width="0.3359%" height="15" fill="rgb(253,78,28)" fg:x="1323" fg:w="9"/><text x="49.6341%" y="911.50"></text></g><g><title>&lt;poem::web::json::Json&lt;T&gt; as poem::web::IntoResponse&gt;::into_response (366 samples, 13.66%)</title><rect x="36.0956%" y="1205" width="13.6618%" height="15" fill="rgb(209,120,3)" fg:x="967" fg:w="366"/><text x="36.3456%" y="1215.50">&lt;poem::web::json::Jso..</text></g><g><title>serde_json::ser::to_vec (226 samples, 8.44%)</title><rect x="41.3214%" y="1189" width="8.4360%" height="15" fill="rgb(238,229,9)" fg:x="1107" fg:w="226"/><text x="41.5714%" y="1199.50">serde_json::..</text></g><g><title>serde_json::ser::to_writer (226 samples, 8.44%)</title><rect x="41.3214%" y="1173" width="8.4360%" height="15" fill="rgb(253,159,18)" fg:x="1107" fg:w="226"/><text x="41.5714%" y="1183.50">serde_json::..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (226 samples, 8.44%)</title><rect x="41.3214%" y="1157" width="8.4360%" height="15" fill="rgb(244,42,34)" fg:x="1107" fg:w="226"/><text x="41.5714%" y="1167.50">serde::ser::..</text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (226 samples, 8.44%)</title><rect x="41.3214%" y="1141" width="8.4360%" height="15" fill="rgb(224,8,7)" fg:x="1107" fg:w="226"/><text x="41.5714%" y="1151.50">&lt;&amp;mut serde_..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (226 samples, 8.44%)</title><rect x="41.3214%" y="1125" width="8.4360%" height="15" fill="rgb(210,201,45)" fg:x="1107" fg:w="226"/><text x="41.5714%" y="1135.50">serde_json::..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (226 samples, 8.44%)</title><rect x="41.3214%" y="1109" width="8.4360%" height="15" fill="rgb(252,185,21)" fg:x="1107" fg:w="226"/><text x="41.5714%" y="1119.50">serde::ser::..</text></g><g><title>serde::ser::Serializer::collect_seq (226 samples, 8.44%)</title><rect x="41.3214%" y="1093" width="8.4360%" height="15" fill="rgb(223,131,1)" fg:x="1107" fg:w="226"/><text x="41.5714%" y="1103.50">serde::ser::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (225 samples, 8.40%)</title><rect x="41.3587%" y="1077" width="8.3987%" height="15" fill="rgb(245,141,16)" fg:x="1108" fg:w="225"/><text x="41.6087%" y="1087.50">core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (225 samples, 8.40%)</title><rect x="41.3587%" y="1061" width="8.3987%" height="15" fill="rgb(229,55,45)" fg:x="1108" fg:w="225"/><text x="41.6087%" y="1071.50">core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (225 samples, 8.40%)</title><rect x="41.3587%" y="1045" width="8.3987%" height="15" fill="rgb(208,92,15)" fg:x="1108" fg:w="225"/><text x="41.6087%" y="1055.50">core::iter::..</text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (225 samples, 8.40%)</title><rect x="41.3587%" y="1029" width="8.3987%" height="15" fill="rgb(234,185,47)" fg:x="1108" fg:w="225"/><text x="41.6087%" y="1039.50">serde::ser::..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (225 samples, 8.40%)</title><rect x="41.3587%" y="1013" width="8.3987%" height="15" fill="rgb(253,104,50)" fg:x="1108" fg:w="225"/><text x="41.6087%" y="1023.50">&lt;serde_json:..</text></g><g><title>serde_json::ser::Formatter::begin_array_value (1 samples, 0.04%)</title><rect x="49.7200%" y="997" width="0.0373%" height="15" fill="rgb(205,70,7)" fg:x="1332" fg:w="1"/><text x="49.9700%" y="1007.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.04%)</title><rect x="49.7200%" y="981" width="0.0373%" height="15" fill="rgb(240,178,43)" fg:x="1332" fg:w="1"/><text x="49.9700%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.04%)</title><rect x="49.7200%" y="965" width="0.0373%" height="15" fill="rgb(214,112,2)" fg:x="1332" fg:w="1"/><text x="49.9700%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="49.7200%" y="949" width="0.0373%" height="15" fill="rgb(206,46,17)" fg:x="1332" fg:w="1"/><text x="49.9700%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="49.7200%" y="933" width="0.0373%" height="15" fill="rgb(225,220,16)" fg:x="1332" fg:w="1"/><text x="49.9700%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="49.7200%" y="917" width="0.0373%" height="15" fill="rgb(238,65,40)" fg:x="1332" fg:w="1"/><text x="49.9700%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="49.7200%" y="901" width="0.0373%" height="15" fill="rgb(230,151,21)" fg:x="1332" fg:w="1"/><text x="49.9700%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="49.7200%" y="885" width="0.0373%" height="15" fill="rgb(218,58,49)" fg:x="1332" fg:w="1"/><text x="49.9700%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.04%)</title><rect x="49.7200%" y="869" width="0.0373%" height="15" fill="rgb(219,179,14)" fg:x="1332" fg:w="1"/><text x="49.9700%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.52%)</title><rect x="49.7574%" y="1173" width="0.5226%" height="15" fill="rgb(223,72,1)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[fabseapi::Car]&gt; (14 samples, 0.52%)</title><rect x="49.7574%" y="1157" width="0.5226%" height="15" fill="rgb(238,126,10)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;fabseapi::Car&gt; (14 samples, 0.52%)</title><rect x="49.7574%" y="1141" width="0.5226%" height="15" fill="rgb(224,206,38)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (14 samples, 0.52%)</title><rect x="49.7574%" y="1125" width="0.5226%" height="15" fill="rgb(212,201,54)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.52%)</title><rect x="49.7574%" y="1109" width="0.5226%" height="15" fill="rgb(218,154,48)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.52%)</title><rect x="49.7574%" y="1093" width="0.5226%" height="15" fill="rgb(232,93,24)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.52%)</title><rect x="49.7574%" y="1077" width="0.5226%" height="15" fill="rgb(245,30,21)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.52%)</title><rect x="49.7574%" y="1061" width="0.5226%" height="15" fill="rgb(242,148,29)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.52%)</title><rect x="49.7574%" y="1045" width="0.5226%" height="15" fill="rgb(244,153,54)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1055.50"></text></g><g><title>__rdl_dealloc (14 samples, 0.52%)</title><rect x="49.7574%" y="1029" width="0.5226%" height="15" fill="rgb(252,87,22)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1039.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (14 samples, 0.52%)</title><rect x="49.7574%" y="1013" width="0.5226%" height="15" fill="rgb(210,51,29)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1023.50"></text></g><g><title>cfree (14 samples, 0.52%)</title><rect x="49.7574%" y="997" width="0.5226%" height="15" fill="rgb(242,136,47)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="1007.50"></text></g><g><title>[libc.so.6] (14 samples, 0.52%)</title><rect x="49.7574%" y="981" width="0.5226%" height="15" fill="rgb(238,68,4)" fg:x="1333" fg:w="14"/><text x="50.0074%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem_openapi::payload::json::Json&lt;alloc::vec::Vec&lt;fabseapi::Car&gt;&gt;&gt; (146 samples, 5.45%)</title><rect x="49.7574%" y="1205" width="5.4498%" height="15" fill="rgb(242,161,30)" fg:x="1333" fg:w="146"/><text x="50.0074%" y="1215.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fabseapi::Car&gt;&gt; (146 samples, 5.45%)</title><rect x="49.7574%" y="1189" width="5.4498%" height="15" fill="rgb(218,58,44)" fg:x="1333" fg:w="146"/><text x="50.0074%" y="1199.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fabseapi::Car&gt;&gt; (132 samples, 4.93%)</title><rect x="50.2800%" y="1173" width="4.9272%" height="15" fill="rgb(252,125,32)" fg:x="1347" fg:w="132"/><text x="50.5300%" y="1183.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 4.93%)</title><rect x="50.2800%" y="1157" width="4.9272%" height="15" fill="rgb(219,178,0)" fg:x="1347" fg:w="132"/><text x="50.5300%" y="1167.50">&lt;alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (132 samples, 4.93%)</title><rect x="50.2800%" y="1141" width="4.9272%" height="15" fill="rgb(213,152,7)" fg:x="1347" fg:w="132"/><text x="50.5300%" y="1151.50">&lt;alloc..</text></g><g><title>alloc::alloc::dealloc (132 samples, 4.93%)</title><rect x="50.2800%" y="1125" width="4.9272%" height="15" fill="rgb(249,109,34)" fg:x="1347" fg:w="132"/><text x="50.5300%" y="1135.50">alloc:..</text></g><g><title>__rdl_dealloc (132 samples, 4.93%)</title><rect x="50.2800%" y="1109" width="4.9272%" height="15" fill="rgb(232,96,21)" fg:x="1347" fg:w="132"/><text x="50.5300%" y="1119.50">__rdl_..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (132 samples, 4.93%)</title><rect x="50.2800%" y="1093" width="4.9272%" height="15" fill="rgb(228,27,39)" fg:x="1347" fg:w="132"/><text x="50.5300%" y="1103.50">std::s..</text></g><g><title>cfree (132 samples, 4.93%)</title><rect x="50.2800%" y="1077" width="4.9272%" height="15" fill="rgb(211,182,52)" fg:x="1347" fg:w="132"/><text x="50.5300%" y="1087.50">cfree</text></g><g><title>[libc.so.6] (132 samples, 4.93%)</title><rect x="50.2800%" y="1061" width="4.9272%" height="15" fill="rgb(234,178,38)" fg:x="1347" fg:w="132"/><text x="50.5300%" y="1071.50">[libc...</text></g><g><title>[libc.so.6] (132 samples, 4.93%)</title><rect x="50.2800%" y="1045" width="4.9272%" height="15" fill="rgb(221,111,3)" fg:x="1347" fg:w="132"/><text x="50.5300%" y="1055.50">[libc...</text></g><g><title>[libc.so.6] (132 samples, 4.93%)</title><rect x="50.2800%" y="1029" width="4.9272%" height="15" fill="rgb(228,175,21)" fg:x="1347" fg:w="132"/><text x="50.5300%" y="1039.50">[libc...</text></g><g><title>[libc.so.6] (71 samples, 2.65%)</title><rect x="52.5569%" y="1013" width="2.6502%" height="15" fill="rgb(228,174,43)" fg:x="1408" fg:w="71"/><text x="52.8069%" y="1023.50">[l..</text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (54 samples, 2.02%)</title><rect x="55.2072%" y="1173" width="2.0157%" height="15" fill="rgb(211,191,0)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1183.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (54 samples, 2.02%)</title><rect x="55.2072%" y="1157" width="2.0157%" height="15" fill="rgb(253,117,3)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1167.50">&lt;..</text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (54 samples, 2.02%)</title><rect x="55.2072%" y="1141" width="2.0157%" height="15" fill="rgb(241,127,19)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1151.50">a..</text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (54 samples, 2.02%)</title><rect x="55.2072%" y="1125" width="2.0157%" height="15" fill="rgb(218,103,12)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1135.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (54 samples, 2.02%)</title><rect x="55.2072%" y="1109" width="2.0157%" height="15" fill="rgb(236,214,43)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1119.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (54 samples, 2.02%)</title><rect x="55.2072%" y="1093" width="2.0157%" height="15" fill="rgb(244,144,19)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1103.50">a..</text></g><g><title>alloc::slice::hack::to_vec (54 samples, 2.02%)</title><rect x="55.2072%" y="1077" width="2.0157%" height="15" fill="rgb(246,188,10)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1087.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (54 samples, 2.02%)</title><rect x="55.2072%" y="1061" width="2.0157%" height="15" fill="rgb(212,193,33)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1071.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (54 samples, 2.02%)</title><rect x="55.2072%" y="1045" width="2.0157%" height="15" fill="rgb(241,51,29)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1055.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (54 samples, 2.02%)</title><rect x="55.2072%" y="1029" width="2.0157%" height="15" fill="rgb(211,58,19)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1039.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (54 samples, 2.02%)</title><rect x="55.2072%" y="1013" width="2.0157%" height="15" fill="rgb(229,111,26)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1023.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 2.02%)</title><rect x="55.2072%" y="997" width="2.0157%" height="15" fill="rgb(213,115,40)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="1007.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 2.02%)</title><rect x="55.2072%" y="981" width="2.0157%" height="15" fill="rgb(209,56,44)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="991.50">a..</text></g><g><title>alloc::alloc::alloc (54 samples, 2.02%)</title><rect x="55.2072%" y="965" width="2.0157%" height="15" fill="rgb(230,108,32)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="975.50">a..</text></g><g><title>__rdl_alloc (54 samples, 2.02%)</title><rect x="55.2072%" y="949" width="2.0157%" height="15" fill="rgb(216,165,31)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="959.50">_..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (54 samples, 2.02%)</title><rect x="55.2072%" y="933" width="2.0157%" height="15" fill="rgb(218,122,21)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="943.50">s..</text></g><g><title>malloc (54 samples, 2.02%)</title><rect x="55.2072%" y="917" width="2.0157%" height="15" fill="rgb(223,224,47)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="927.50">m..</text></g><g><title>[libc.so.6] (54 samples, 2.02%)</title><rect x="55.2072%" y="901" width="2.0157%" height="15" fill="rgb(238,102,44)" fg:x="1479" fg:w="54"/><text x="55.4572%" y="911.50">[..</text></g><g><title>poem_openapi::types::external::string::&lt;impl poem_openapi::types::ToJSON for alloc::string::String&gt;::to_json (17 samples, 0.63%)</title><rect x="57.2228%" y="1173" width="0.6346%" height="15" fill="rgb(236,46,40)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.63%)</title><rect x="57.2228%" y="1157" width="0.6346%" height="15" fill="rgb(247,202,50)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.63%)</title><rect x="57.2228%" y="1141" width="0.6346%" height="15" fill="rgb(209,99,20)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.63%)</title><rect x="57.2228%" y="1125" width="0.6346%" height="15" fill="rgb(252,27,34)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.63%)</title><rect x="57.2228%" y="1109" width="0.6346%" height="15" fill="rgb(215,206,23)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.63%)</title><rect x="57.2228%" y="1093" width="0.6346%" height="15" fill="rgb(212,135,36)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.63%)</title><rect x="57.2228%" y="1077" width="0.6346%" height="15" fill="rgb(240,189,1)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.63%)</title><rect x="57.2228%" y="1061" width="0.6346%" height="15" fill="rgb(242,56,20)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (17 samples, 0.63%)</title><rect x="57.2228%" y="1045" width="0.6346%" height="15" fill="rgb(247,132,33)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.63%)</title><rect x="57.2228%" y="1029" width="0.6346%" height="15" fill="rgb(208,149,11)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.63%)</title><rect x="57.2228%" y="1013" width="0.6346%" height="15" fill="rgb(211,33,11)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.63%)</title><rect x="57.2228%" y="997" width="0.6346%" height="15" fill="rgb(221,29,38)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="1007.50"></text></g><g><title>__rdl_alloc (17 samples, 0.63%)</title><rect x="57.2228%" y="981" width="0.6346%" height="15" fill="rgb(206,182,49)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="991.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (17 samples, 0.63%)</title><rect x="57.2228%" y="965" width="0.6346%" height="15" fill="rgb(216,140,1)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="975.50"></text></g><g><title>malloc (17 samples, 0.63%)</title><rect x="57.2228%" y="949" width="0.6346%" height="15" fill="rgb(232,57,40)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="959.50"></text></g><g><title>[libc.so.6] (17 samples, 0.63%)</title><rect x="57.2228%" y="933" width="0.6346%" height="15" fill="rgb(224,186,18)" fg:x="1533" fg:w="17"/><text x="57.4728%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,Type&gt;::borrow_mut (1 samples, 0.04%)</title><rect x="58.1187%" y="1125" width="0.0373%" height="15" fill="rgb(215,121,11)" fg:x="1557" fg:w="1"/><text x="58.3687%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1 samples, 0.04%)</title><rect x="58.1560%" y="1109" width="0.0373%" height="15" fill="rgb(245,147,10)" fg:x="1558" fg:w="1"/><text x="58.4060%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1 samples, 0.04%)</title><rect x="58.1560%" y="1093" width="0.0373%" height="15" fill="rgb(238,153,13)" fg:x="1558" fg:w="1"/><text x="58.4060%" y="1103.50"></text></g><g><title>[libc.so.6] (104 samples, 3.88%)</title><rect x="58.9399%" y="1013" width="3.8820%" height="15" fill="rgb(233,108,0)" fg:x="1579" fg:w="104"/><text x="59.1899%" y="1023.50">[lib..</text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (132 samples, 4.93%)</title><rect x="58.5666%" y="1077" width="4.9272%" height="15" fill="rgb(212,157,17)" fg:x="1569" fg:w="132"/><text x="58.8166%" y="1087.50">&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (132 samples, 4.93%)</title><rect x="58.5666%" y="1061" width="4.9272%" height="15" fill="rgb(225,213,38)" fg:x="1569" fg:w="132"/><text x="58.8166%" y="1071.50">&lt;alloc..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (132 samples, 4.93%)</title><rect x="58.5666%" y="1045" width="4.9272%" height="15" fill="rgb(248,16,11)" fg:x="1569" fg:w="132"/><text x="58.8166%" y="1055.50">core::..</text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (132 samples, 4.93%)</title><rect x="58.5666%" y="1029" width="4.9272%" height="15" fill="rgb(241,33,4)" fg:x="1569" fg:w="132"/><text x="58.8166%" y="1039.50">&lt;u8 as..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (18 samples, 0.67%)</title><rect x="62.8219%" y="1013" width="0.6719%" height="15" fill="rgb(222,26,43)" fg:x="1683" fg:w="18"/><text x="63.0719%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (150 samples, 5.60%)</title><rect x="57.9694%" y="1141" width="5.5991%" height="15" fill="rgb(243,29,36)" fg:x="1553" fg:w="150"/><text x="58.2194%" y="1151.50">alloc::..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (145 samples, 5.41%)</title><rect x="58.1560%" y="1125" width="5.4125%" height="15" fill="rgb(241,9,27)" fg:x="1558" fg:w="145"/><text x="58.4060%" y="1135.50">alloc::..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (144 samples, 5.38%)</title><rect x="58.1934%" y="1109" width="5.3751%" height="15" fill="rgb(205,117,26)" fg:x="1559" fg:w="144"/><text x="58.4434%" y="1119.50">alloc::..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (144 samples, 5.38%)</title><rect x="58.1934%" y="1093" width="5.3751%" height="15" fill="rgb(209,80,39)" fg:x="1559" fg:w="144"/><text x="58.4434%" y="1103.50">alloc::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="63.4938%" y="1077" width="0.0747%" height="15" fill="rgb(239,155,6)" fg:x="1701" fg:w="2"/><text x="63.7438%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="63.4938%" y="1061" width="0.0747%" height="15" fill="rgb(212,104,12)" fg:x="1701" fg:w="2"/><text x="63.7438%" y="1071.50"></text></g><g><title>[libc.so.6] (8 samples, 0.30%)</title><rect x="63.9791%" y="1045" width="0.2986%" height="15" fill="rgb(234,204,3)" fg:x="1714" fg:w="8"/><text x="64.2291%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (20 samples, 0.75%)</title><rect x="63.5685%" y="1125" width="0.7465%" height="15" fill="rgb(251,218,7)" fg:x="1703" fg:w="20"/><text x="63.8185%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (20 samples, 0.75%)</title><rect x="63.5685%" y="1109" width="0.7465%" height="15" fill="rgb(221,81,32)" fg:x="1703" fg:w="20"/><text x="63.8185%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (19 samples, 0.71%)</title><rect x="63.6058%" y="1093" width="0.7092%" height="15" fill="rgb(214,152,26)" fg:x="1704" fg:w="19"/><text x="63.8558%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (16 samples, 0.60%)</title><rect x="63.7178%" y="1077" width="0.5972%" height="15" fill="rgb(223,22,3)" fg:x="1707" fg:w="16"/><text x="63.9678%" y="1087.50"></text></g><g><title>core::intrinsics::copy (14 samples, 0.52%)</title><rect x="63.7925%" y="1061" width="0.5226%" height="15" fill="rgb(207,174,7)" fg:x="1709" fg:w="14"/><text x="64.0425%" y="1071.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="64.2777%" y="1045" width="0.0373%" height="15" fill="rgb(224,19,52)" fg:x="1722" fg:w="1"/><text x="64.5277%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="64.2777%" y="1029" width="0.0373%" height="15" fill="rgb(228,24,14)" fg:x="1722" fg:w="1"/><text x="64.5277%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="64.2777%" y="1013" width="0.0373%" height="15" fill="rgb(230,153,43)" fg:x="1722" fg:w="1"/><text x="64.5277%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="64.2777%" y="997" width="0.0373%" height="15" fill="rgb(231,106,12)" fg:x="1722" fg:w="1"/><text x="64.5277%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (20 samples, 0.75%)</title><rect x="64.3150%" y="1093" width="0.7465%" height="15" fill="rgb(215,92,2)" fg:x="1723" fg:w="20"/><text x="64.5650%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (20 samples, 0.75%)</title><rect x="64.3150%" y="1077" width="0.7465%" height="15" fill="rgb(249,143,25)" fg:x="1723" fg:w="20"/><text x="64.5650%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.75%)</title><rect x="64.3150%" y="1061" width="0.7465%" height="15" fill="rgb(252,7,35)" fg:x="1723" fg:w="20"/><text x="64.5650%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.75%)</title><rect x="64.3150%" y="1045" width="0.7465%" height="15" fill="rgb(216,69,40)" fg:x="1723" fg:w="20"/><text x="64.5650%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.75%)</title><rect x="64.3150%" y="1029" width="0.7465%" height="15" fill="rgb(240,36,33)" fg:x="1723" fg:w="20"/><text x="64.5650%" y="1039.50"></text></g><g><title>__rdl_alloc (20 samples, 0.75%)</title><rect x="64.3150%" y="1013" width="0.7465%" height="15" fill="rgb(231,128,14)" fg:x="1723" fg:w="20"/><text x="64.5650%" y="1023.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (20 samples, 0.75%)</title><rect x="64.3150%" y="997" width="0.7465%" height="15" fill="rgb(245,143,14)" fg:x="1723" fg:w="20"/><text x="64.5650%" y="1007.50"></text></g><g><title>malloc (20 samples, 0.75%)</title><rect x="64.3150%" y="981" width="0.7465%" height="15" fill="rgb(222,130,28)" fg:x="1723" fg:w="20"/><text x="64.5650%" y="991.50"></text></g><g><title>[libc.so.6] (12 samples, 0.45%)</title><rect x="64.6137%" y="965" width="0.4479%" height="15" fill="rgb(212,10,48)" fg:x="1731" fg:w="12"/><text x="64.8637%" y="975.50"></text></g><g><title>&lt;fabseapi::Car as poem_openapi::types::ToJSON&gt;::to_json (270 samples, 10.08%)</title><rect x="55.2072%" y="1189" width="10.0784%" height="15" fill="rgb(254,118,45)" fg:x="1479" fg:w="270"/><text x="55.4572%" y="1199.50">&lt;fabseapi::Car ..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (199 samples, 7.43%)</title><rect x="57.8574%" y="1173" width="7.4281%" height="15" fill="rgb(228,6,45)" fg:x="1550" fg:w="199"/><text x="58.1074%" y="1183.50">serde_json..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (199 samples, 7.43%)</title><rect x="57.8574%" y="1157" width="7.4281%" height="15" fill="rgb(241,18,35)" fg:x="1550" fg:w="199"/><text x="58.1074%" y="1167.50">alloc::col..</text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (46 samples, 1.72%)</title><rect x="63.5685%" y="1141" width="1.7171%" height="15" fill="rgb(227,214,53)" fg:x="1703" fg:w="46"/><text x="63.8185%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (26 samples, 0.97%)</title><rect x="64.3150%" y="1125" width="0.9705%" height="15" fill="rgb(224,107,51)" fg:x="1723" fg:w="26"/><text x="64.5650%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (26 samples, 0.97%)</title><rect x="64.3150%" y="1109" width="0.9705%" height="15" fill="rgb(248,60,28)" fg:x="1723" fg:w="26"/><text x="64.5650%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::init (6 samples, 0.22%)</title><rect x="65.0616%" y="1093" width="0.2240%" height="15" fill="rgb(249,101,23)" fg:x="1743" fg:w="6"/><text x="65.3116%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6 samples, 0.22%)</title><rect x="65.0616%" y="1077" width="0.2240%" height="15" fill="rgb(228,51,19)" fg:x="1743" fg:w="6"/><text x="65.3116%" y="1087.50"></text></g><g><title>core::ptr::write (6 samples, 0.22%)</title><rect x="65.0616%" y="1061" width="0.2240%" height="15" fill="rgb(213,20,6)" fg:x="1743" fg:w="6"/><text x="65.3116%" y="1071.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (3 samples, 0.11%)</title><rect x="65.2856%" y="1173" width="0.1120%" height="15" fill="rgb(212,124,10)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.11%)</title><rect x="65.2856%" y="1157" width="0.1120%" height="15" fill="rgb(248,3,40)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1167.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.11%)</title><rect x="65.2856%" y="1141" width="0.1120%" height="15" fill="rgb(223,178,23)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.11%)</title><rect x="65.2856%" y="1125" width="0.1120%" height="15" fill="rgb(240,132,45)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.11%)</title><rect x="65.2856%" y="1109" width="0.1120%" height="15" fill="rgb(245,164,36)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.11%)</title><rect x="65.2856%" y="1093" width="0.1120%" height="15" fill="rgb(231,188,53)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.11%)</title><rect x="65.2856%" y="1077" width="0.1120%" height="15" fill="rgb(237,198,39)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.11%)</title><rect x="65.2856%" y="1061" width="0.1120%" height="15" fill="rgb(223,120,35)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.11%)</title><rect x="65.2856%" y="1045" width="0.1120%" height="15" fill="rgb(253,107,49)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.11%)</title><rect x="65.2856%" y="1029" width="0.1120%" height="15" fill="rgb(216,44,31)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3 samples, 0.11%)</title><rect x="65.2856%" y="1013" width="0.1120%" height="15" fill="rgb(253,87,21)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.11%)</title><rect x="65.2856%" y="997" width="0.1120%" height="15" fill="rgb(226,18,2)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.11%)</title><rect x="65.2856%" y="981" width="0.1120%" height="15" fill="rgb(216,8,46)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="991.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.11%)</title><rect x="65.2856%" y="965" width="0.1120%" height="15" fill="rgb(226,140,39)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="975.50"></text></g><g><title>__rdl_alloc (3 samples, 0.11%)</title><rect x="65.2856%" y="949" width="0.1120%" height="15" fill="rgb(221,194,54)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="959.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.11%)</title><rect x="65.2856%" y="933" width="0.1120%" height="15" fill="rgb(213,92,11)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="943.50"></text></g><g><title>malloc (3 samples, 0.11%)</title><rect x="65.2856%" y="917" width="0.1120%" height="15" fill="rgb(229,162,46)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="927.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="65.2856%" y="901" width="0.1120%" height="15" fill="rgb(214,111,36)" fg:x="1749" fg:w="3"/><text x="65.5356%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.3602%" y="885" width="0.0373%" height="15" fill="rgb(207,6,21)" fg:x="1751" fg:w="1"/><text x="65.6102%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (789 samples, 29.45%)</title><rect x="36.0582%" y="1253" width="29.4513%" height="15" fill="rgb(213,127,38)" fg:x="966" fg:w="789"/><text x="36.3082%" y="1263.50">core::result::Result&lt;T,E&gt;::map</text></g><g><title>core::ops::function::FnOnce::call_once (789 samples, 29.45%)</title><rect x="36.0582%" y="1237" width="29.4513%" height="15" fill="rgb(238,118,32)" fg:x="966" fg:w="789"/><text x="36.3082%" y="1247.50">core::ops::function::FnOnce::call_once</text></g><g><title>&lt;poem_openapi::payload::json::Json&lt;T&gt; as poem::web::IntoResponse&gt;::into_response (788 samples, 29.41%)</title><rect x="36.0956%" y="1221" width="29.4140%" height="15" fill="rgb(240,139,39)" fg:x="967" fg:w="788"/><text x="36.3456%" y="1231.50">&lt;poem_openapi::payload::json::Json&lt;T&gt; as poem::..</text></g><g><title>poem_openapi::types::external::vec::&lt;impl poem_openapi::types::ToJSON for alloc::vec::Vec&lt;T&gt;&gt;::to_json (276 samples, 10.30%)</title><rect x="55.2072%" y="1205" width="10.3024%" height="15" fill="rgb(235,10,37)" fg:x="1479" fg:w="276"/><text x="55.4572%" y="1215.50">poem_openapi::t..</text></g><g><title>&lt;fabseapi::TrafficLight as poem_openapi::types::ToJSON&gt;::to_json (6 samples, 0.22%)</title><rect x="65.2856%" y="1189" width="0.2240%" height="15" fill="rgb(249,171,38)" fg:x="1749" fg:w="6"/><text x="65.5356%" y="1199.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (3 samples, 0.11%)</title><rect x="65.3975%" y="1173" width="0.1120%" height="15" fill="rgb(242,144,32)" fg:x="1752" fg:w="3"/><text x="65.6475%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.11%)</title><rect x="65.3975%" y="1157" width="0.1120%" height="15" fill="rgb(217,117,21)" fg:x="1752" fg:w="3"/><text x="65.6475%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.11%)</title><rect x="65.3975%" y="1141" width="0.1120%" height="15" fill="rgb(249,87,1)" fg:x="1752" fg:w="3"/><text x="65.6475%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.11%)</title><rect x="65.3975%" y="1125" width="0.1120%" height="15" fill="rgb(248,196,48)" fg:x="1752" fg:w="3"/><text x="65.6475%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (3 samples, 0.11%)</title><rect x="65.3975%" y="1109" width="0.1120%" height="15" fill="rgb(251,206,33)" fg:x="1752" fg:w="3"/><text x="65.6475%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (3 samples, 0.11%)</title><rect x="65.3975%" y="1093" width="0.1120%" height="15" fill="rgb(232,141,28)" fg:x="1752" fg:w="3"/><text x="65.6475%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (3 samples, 0.11%)</title><rect x="65.3975%" y="1077" width="0.1120%" height="15" fill="rgb(209,167,14)" fg:x="1752" fg:w="3"/><text x="65.6475%" y="1087.50"></text></g><g><title>core::intrinsics::copy (3 samples, 0.11%)</title><rect x="65.3975%" y="1061" width="0.1120%" height="15" fill="rgb(225,11,50)" fg:x="1752" fg:w="3"/><text x="65.6475%" y="1071.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="65.4349%" y="1045" width="0.0747%" height="15" fill="rgb(209,50,20)" fg:x="1753" fg:w="2"/><text x="65.6849%" y="1055.50"></text></g><g><title>&lt;sqlx_mysql::arguments::MySqlArguments as sqlx_core::arguments::Arguments&gt;::add (1 samples, 0.04%)</title><rect x="65.5095%" y="1237" width="0.0373%" height="15" fill="rgb(212,17,46)" fg:x="1755" fg:w="1"/><text x="65.7595%" y="1247.50"></text></g><g><title>sqlx_mysql::arguments::MySqlArguments::add (1 samples, 0.04%)</title><rect x="65.5095%" y="1221" width="0.0373%" height="15" fill="rgb(216,101,39)" fg:x="1755" fg:w="1"/><text x="65.7595%" y="1231.50"></text></g><g><title>&lt;&amp;T as sqlx_core::encode::Encode&lt;DB&gt;&gt;::encode (1 samples, 0.04%)</title><rect x="65.5095%" y="1205" width="0.0373%" height="15" fill="rgb(212,228,48)" fg:x="1755" fg:w="1"/><text x="65.7595%" y="1215.50"></text></g><g><title>sqlx_mysql::&lt;impl sqlx_core::encode::Encode&lt;sqlx_mysql::database::MySql&gt; for core::option::Option&lt;T&gt;&gt;::encode_by_ref (1 samples, 0.04%)</title><rect x="65.5095%" y="1189" width="0.0373%" height="15" fill="rgb(250,6,50)" fg:x="1755" fg:w="1"/><text x="65.7595%" y="1199.50"></text></g><g><title>sqlx_mysql::types::str::&lt;impl sqlx_core::encode::Encode&lt;sqlx_mysql::database::MySql&gt; for &amp;str&gt;::encode_by_ref (1 samples, 0.04%)</title><rect x="65.5095%" y="1173" width="0.0373%" height="15" fill="rgb(250,160,48)" fg:x="1755" fg:w="1"/><text x="65.7595%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_mysql::io::buf_mut::MySqlBufMutExt&gt;::put_str_lenenc (1 samples, 0.04%)</title><rect x="65.5095%" y="1157" width="0.0373%" height="15" fill="rgb(244,216,33)" fg:x="1755" fg:w="1"/><text x="65.7595%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_mysql::io::buf_mut::MySqlBufMutExt&gt;::put_bytes_lenenc (1 samples, 0.04%)</title><rect x="65.5095%" y="1141" width="0.0373%" height="15" fill="rgb(207,157,5)" fg:x="1755" fg:w="1"/><text x="65.7595%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_mysql::io::buf_mut::MySqlBufMutExt&gt;::put_uint_lenenc (1 samples, 0.04%)</title><rect x="65.5095%" y="1125" width="0.0373%" height="15" fill="rgb(228,199,8)" fg:x="1755" fg:w="1"/><text x="65.7595%" y="1135.50"></text></g><g><title>&lt;sqlx_mysql::arguments::MySqlArguments as sqlx_core::arguments::Arguments&gt;::reserve (1 samples, 0.04%)</title><rect x="65.5468%" y="1237" width="0.0373%" height="15" fill="rgb(227,80,20)" fg:x="1756" fg:w="1"/><text x="65.7968%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="65.5468%" y="1221" width="0.0373%" height="15" fill="rgb(222,9,33)" fg:x="1756" fg:w="1"/><text x="65.7968%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="65.5468%" y="1205" width="0.0373%" height="15" fill="rgb(239,44,28)" fg:x="1756" fg:w="1"/><text x="65.7968%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="65.5468%" y="1189" width="0.0373%" height="15" fill="rgb(249,187,43)" fg:x="1756" fg:w="1"/><text x="65.7968%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="65.5468%" y="1173" width="0.0373%" height="15" fill="rgb(216,141,28)" fg:x="1756" fg:w="1"/><text x="65.7968%" y="1183.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="65.5468%" y="1157" width="0.0373%" height="15" fill="rgb(230,154,53)" fg:x="1756" fg:w="1"/><text x="65.7968%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem_openapi::param::query::Query&lt;core::option::Option&lt;alloc::string::String&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="65.5842%" y="1237" width="0.0373%" height="15" fill="rgb(227,82,4)" fg:x="1757" fg:w="1"/><text x="65.8342%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.04%)</title><rect x="65.5842%" y="1221" width="0.0373%" height="15" fill="rgb(220,107,16)" fg:x="1757" fg:w="1"/><text x="65.8342%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="65.6588%" y="1221" width="0.0747%" height="15" fill="rgb(207,187,2)" fg:x="1759" fg:w="2"/><text x="65.9088%" y="1231.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="65.6588%" y="1205" width="0.0747%" height="15" fill="rgb(210,162,52)" fg:x="1759" fg:w="2"/><text x="65.9088%" y="1215.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (2 samples, 0.07%)</title><rect x="65.6588%" y="1189" width="0.0747%" height="15" fill="rgb(217,216,49)" fg:x="1759" fg:w="2"/><text x="65.9088%" y="1199.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="65.6588%" y="1173" width="0.0747%" height="15" fill="rgb(218,146,49)" fg:x="1759" fg:w="2"/><text x="65.9088%" y="1183.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="65.6588%" y="1157" width="0.0747%" height="15" fill="rgb(216,55,40)" fg:x="1759" fg:w="2"/><text x="65.9088%" y="1167.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (1 samples, 0.04%)</title><rect x="65.6962%" y="1141" width="0.0373%" height="15" fill="rgb(208,196,21)" fg:x="1760" fg:w="1"/><text x="65.9462%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="65.7335%" y="1221" width="0.0373%" height="15" fill="rgb(242,117,42)" fg:x="1761" fg:w="1"/><text x="65.9835%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="65.7335%" y="1205" width="0.0373%" height="15" fill="rgb(210,11,23)" fg:x="1761" fg:w="1"/><text x="65.9835%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;,sqlx_mysql::query_result::MySqlQueryResult&gt;&gt; (1 samples, 0.04%)</title><rect x="65.7335%" y="1189" width="0.0373%" height="15" fill="rgb(217,110,2)" fg:x="1761" fg:w="1"/><text x="65.9835%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="65.7335%" y="1173" width="0.0373%" height="15" fill="rgb(229,77,54)" fg:x="1761" fg:w="1"/><text x="65.9835%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="65.7335%" y="1157" width="0.0373%" height="15" fill="rgb(218,53,16)" fg:x="1761" fg:w="1"/><text x="65.9835%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;,&lt;&amp;sqlx_core::pool::Pool&lt;sqlx_mysql::database::MySql&gt; as sqlx_core::executor::Executor&gt;::execute_many&lt;sqlx_core::query::Query&lt;sqlx_mysql::database::MySql,sqlx_mysql::arguments::MySqlArguments&gt;&gt;::{{closure}}::{{closure}},&lt;&amp;sqlx_core::pool::Pool&lt;sqlx_mysql::database::MySql&gt; as sqlx_core::executor::Executor&gt;::execute_many&lt;sqlx_core::query::Query&lt;sqlx_mysql::database::MySql,sqlx_mysql::arguments::MySqlArguments&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.04%)</title><rect x="65.7335%" y="1141" width="0.0373%" height="15" fill="rgb(215,38,13)" fg:x="1761" fg:w="1"/><text x="65.9835%" y="1151.50"></text></g><g><title>fabseapi::Api::traffic_light_insert::_{{closure}} (8 samples, 0.30%)</title><rect x="65.5095%" y="1253" width="0.2986%" height="15" fill="rgb(235,42,18)" fg:x="1755" fg:w="8"/><text x="65.7595%" y="1263.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (5 samples, 0.19%)</title><rect x="65.6215%" y="1237" width="0.1866%" height="15" fill="rgb(219,66,54)" fg:x="1758" fg:w="5"/><text x="65.8715%" y="1247.50"></text></g><g><title>sqlx_core::executor::Executor::execute (1 samples, 0.04%)</title><rect x="65.7708%" y="1221" width="0.0373%" height="15" fill="rgb(222,205,4)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1231.50"></text></g><g><title>sqlx_core::executor::Executor::execute_many (1 samples, 0.04%)</title><rect x="65.7708%" y="1205" width="0.0373%" height="15" fill="rgb(227,213,46)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1215.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many (1 samples, 0.04%)</title><rect x="65.7708%" y="1189" width="0.0373%" height="15" fill="rgb(250,145,42)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1199.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="65.7708%" y="1173" width="0.0373%" height="15" fill="rgb(219,15,2)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1183.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="65.7708%" y="1157" width="0.0373%" height="15" fill="rgb(231,181,52)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="65.7708%" y="1141" width="0.0373%" height="15" fill="rgb(235,1,42)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="65.7708%" y="1125" width="0.0373%" height="15" fill="rgb(249,88,27)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="65.7708%" y="1109" width="0.0373%" height="15" fill="rgb(235,145,16)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="65.7708%" y="1093" width="0.0373%" height="15" fill="rgb(237,114,19)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="65.7708%" y="1077" width="0.0373%" height="15" fill="rgb(238,51,50)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="65.7708%" y="1061" width="0.0373%" height="15" fill="rgb(205,194,25)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1071.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="65.7708%" y="1045" width="0.0373%" height="15" fill="rgb(215,203,17)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1055.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="65.7708%" y="1029" width="0.0373%" height="15" fill="rgb(233,112,49)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1039.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="65.7708%" y="1013" width="0.0373%" height="15" fill="rgb(241,130,26)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.7708%" y="997" width="0.0373%" height="15" fill="rgb(252,223,19)" fg:x="1762" fg:w="1"/><text x="66.0208%" y="1007.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="65.8455%" y="1061" width="0.0373%" height="15" fill="rgb(211,95,25)" fg:x="1764" fg:w="1"/><text x="66.0955%" y="1071.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="65.8455%" y="1045" width="0.0373%" height="15" fill="rgb(251,182,27)" fg:x="1764" fg:w="1"/><text x="66.0955%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="65.8455%" y="1125" width="0.0747%" height="15" fill="rgb(238,24,4)" fg:x="1764" fg:w="2"/><text x="66.0955%" y="1135.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.07%)</title><rect x="65.8455%" y="1109" width="0.0747%" height="15" fill="rgb(224,220,25)" fg:x="1764" fg:w="2"/><text x="66.0955%" y="1119.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (2 samples, 0.07%)</title><rect x="65.8455%" y="1093" width="0.0747%" height="15" fill="rgb(239,133,26)" fg:x="1764" fg:w="2"/><text x="66.0955%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="65.8455%" y="1077" width="0.0747%" height="15" fill="rgb(211,94,48)" fg:x="1764" fg:w="2"/><text x="66.0955%" y="1087.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="65.8828%" y="1061" width="0.0373%" height="15" fill="rgb(239,87,6)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="1071.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="65.8828%" y="1045" width="0.0373%" height="15" fill="rgb(227,62,0)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="1055.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (1 samples, 0.04%)</title><rect x="65.8828%" y="1029" width="0.0373%" height="15" fill="rgb(211,226,4)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="65.8828%" y="1013" width="0.0373%" height="15" fill="rgb(253,38,52)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="65.8828%" y="997" width="0.0373%" height="15" fill="rgb(229,126,40)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="65.8828%" y="981" width="0.0373%" height="15" fill="rgb(229,165,44)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="65.8828%" y="965" width="0.0373%" height="15" fill="rgb(247,95,47)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="65.8828%" y="949" width="0.0373%" height="15" fill="rgb(216,140,30)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="65.8828%" y="933" width="0.0373%" height="15" fill="rgb(246,214,8)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="943.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="65.8828%" y="917" width="0.0373%" height="15" fill="rgb(227,224,15)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="927.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="65.8828%" y="901" width="0.0373%" height="15" fill="rgb(233,175,4)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="911.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="65.8828%" y="885" width="0.0373%" height="15" fill="rgb(221,66,45)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.8828%" y="869" width="0.0373%" height="15" fill="rgb(221,178,18)" fg:x="1765" fg:w="1"/><text x="66.1328%" y="879.50"></text></g><g><title>&lt;(T1,T2,T3,T4,T5) as sqlx_core::from_row::FromRow&lt;R&gt;&gt;::from_row (1 samples, 0.04%)</title><rect x="65.9201%" y="1061" width="0.0373%" height="15" fill="rgb(213,81,29)" fg:x="1766" fg:w="1"/><text x="66.1701%" y="1071.50"></text></g><g><title>sqlx_core::row::Row::try_get (1 samples, 0.04%)</title><rect x="65.9201%" y="1045" width="0.0373%" height="15" fill="rgb(220,89,49)" fg:x="1766" fg:w="1"/><text x="66.1701%" y="1055.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="65.9201%" y="1029" width="0.0373%" height="15" fill="rgb(227,60,33)" fg:x="1766" fg:w="1"/><text x="66.1701%" y="1039.50"></text></g><g><title>fabseapi::Api::traffic_light_retrieve::_{{closure}} (5 samples, 0.19%)</title><rect x="65.8081%" y="1253" width="0.1866%" height="15" fill="rgb(205,113,12)" fg:x="1763" fg:w="5"/><text x="66.0581%" y="1263.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="65.8081%" y="1237" width="0.1866%" height="15" fill="rgb(211,32,1)" fg:x="1763" fg:w="5"/><text x="66.0581%" y="1247.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.19%)</title><rect x="65.8081%" y="1221" width="0.1866%" height="15" fill="rgb(246,2,12)" fg:x="1763" fg:w="5"/><text x="66.0581%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.19%)</title><rect x="65.8081%" y="1205" width="0.1866%" height="15" fill="rgb(243,37,27)" fg:x="1763" fg:w="5"/><text x="66.0581%" y="1215.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.19%)</title><rect x="65.8081%" y="1189" width="0.1866%" height="15" fill="rgb(248,211,31)" fg:x="1763" fg:w="5"/><text x="66.0581%" y="1199.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (5 samples, 0.19%)</title><rect x="65.8081%" y="1173" width="0.1866%" height="15" fill="rgb(242,146,47)" fg:x="1763" fg:w="5"/><text x="66.0581%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.19%)</title><rect x="65.8081%" y="1157" width="0.1866%" height="15" fill="rgb(206,70,20)" fg:x="1763" fg:w="5"/><text x="66.0581%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.19%)</title><rect x="65.8081%" y="1141" width="0.1866%" height="15" fill="rgb(215,10,51)" fg:x="1763" fg:w="5"/><text x="66.0581%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.07%)</title><rect x="65.9201%" y="1125" width="0.0747%" height="15" fill="rgb(243,178,53)" fg:x="1766" fg:w="2"/><text x="66.1701%" y="1135.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (2 samples, 0.07%)</title><rect x="65.9201%" y="1109" width="0.0747%" height="15" fill="rgb(233,221,20)" fg:x="1766" fg:w="2"/><text x="66.1701%" y="1119.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2 samples, 0.07%)</title><rect x="65.9201%" y="1093" width="0.0747%" height="15" fill="rgb(218,95,35)" fg:x="1766" fg:w="2"/><text x="66.1701%" y="1103.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many::_{{closure}} (2 samples, 0.07%)</title><rect x="65.9201%" y="1077" width="0.0747%" height="15" fill="rgb(229,13,5)" fg:x="1766" fg:w="2"/><text x="66.1701%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::row::MySqlRow&gt; (1 samples, 0.04%)</title><rect x="65.9574%" y="1061" width="0.0373%" height="15" fill="rgb(252,164,30)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::protocol::row::Row&gt; (1 samples, 0.04%)</title><rect x="65.9574%" y="1045" width="0.0373%" height="15" fill="rgb(232,68,36)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="65.9574%" y="1029" width="0.0373%" height="15" fill="rgb(219,59,54)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="65.9574%" y="1013" width="0.0373%" height="15" fill="rgb(250,92,33)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="65.9574%" y="997" width="0.0373%" height="15" fill="rgb(229,162,54)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="65.9574%" y="981" width="0.0373%" height="15" fill="rgb(244,114,52)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="65.9574%" y="965" width="0.0373%" height="15" fill="rgb(212,211,43)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="975.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="65.9574%" y="949" width="0.0373%" height="15" fill="rgb(226,147,8)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="959.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="65.9574%" y="933" width="0.0373%" height="15" fill="rgb(226,23,13)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="943.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="65.9574%" y="917" width="0.0373%" height="15" fill="rgb(240,63,4)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.9574%" y="901" width="0.0373%" height="15" fill="rgb(221,1,32)" fg:x="1767" fg:w="1"/><text x="66.2074%" y="911.50"></text></g><g><title>&lt;sqlx_mysql::arguments::MySqlArguments as sqlx_core::arguments::Arguments&gt;::add (3 samples, 0.11%)</title><rect x="65.9948%" y="1237" width="0.1120%" height="15" fill="rgb(242,117,10)" fg:x="1768" fg:w="3"/><text x="66.2448%" y="1247.50"></text></g><g><title>sqlx_mysql::arguments::MySqlArguments::add (2 samples, 0.07%)</title><rect x="66.0321%" y="1221" width="0.0747%" height="15" fill="rgb(249,172,44)" fg:x="1769" fg:w="2"/><text x="66.2821%" y="1231.50"></text></g><g><title>&lt;&amp;T as sqlx_core::encode::Encode&lt;DB&gt;&gt;::encode (2 samples, 0.07%)</title><rect x="66.0321%" y="1205" width="0.0747%" height="15" fill="rgb(244,46,45)" fg:x="1769" fg:w="2"/><text x="66.2821%" y="1215.50"></text></g><g><title>sqlx_mysql::types::chrono::&lt;impl sqlx_core::encode::Encode&lt;sqlx_mysql::database::MySql&gt; for chrono::datetime::DateTime&lt;chrono::offset::local::Local&gt;&gt;::encode_by_ref (2 samples, 0.07%)</title><rect x="66.0321%" y="1189" width="0.0747%" height="15" fill="rgb(206,43,17)" fg:x="1769" fg:w="2"/><text x="66.2821%" y="1199.50"></text></g><g><title>&lt;&amp;T as sqlx_core::encode::Encode&lt;DB&gt;&gt;::encode (2 samples, 0.07%)</title><rect x="66.0321%" y="1173" width="0.0747%" height="15" fill="rgb(239,218,39)" fg:x="1769" fg:w="2"/><text x="66.2821%" y="1183.50"></text></g><g><title>sqlx_mysql::types::chrono::&lt;impl sqlx_core::encode::Encode&lt;sqlx_mysql::database::MySql&gt; for chrono::naive::datetime::NaiveDateTime&gt;::encode_by_ref (2 samples, 0.07%)</title><rect x="66.0321%" y="1157" width="0.0747%" height="15" fill="rgb(208,169,54)" fg:x="1769" fg:w="2"/><text x="66.2821%" y="1167.50"></text></g><g><title>sqlx_mysql::types::chrono::encode_date (2 samples, 0.07%)</title><rect x="66.0321%" y="1141" width="0.0747%" height="15" fill="rgb(247,25,42)" fg:x="1769" fg:w="2"/><text x="66.2821%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="66.0694%" y="1125" width="0.0373%" height="15" fill="rgb(226,23,31)" fg:x="1770" fg:w="1"/><text x="66.3194%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.04%)</title><rect x="66.0694%" y="1109" width="0.0373%" height="15" fill="rgb(247,16,28)" fg:x="1770" fg:w="1"/><text x="66.3194%" y="1119.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::timestamp (1 samples, 0.04%)</title><rect x="66.1068%" y="1077" width="0.0373%" height="15" fill="rgb(231,147,38)" fg:x="1771" fg:w="1"/><text x="66.3568%" y="1087.50"></text></g><g><title>chrono::naive::date::NaiveDate::num_days_from_ce (1 samples, 0.04%)</title><rect x="66.1068%" y="1061" width="0.0373%" height="15" fill="rgb(253,81,48)" fg:x="1771" fg:w="1"/><text x="66.3568%" y="1071.50"></text></g><g><title>chrono::naive::date::NaiveDate::year (1 samples, 0.04%)</title><rect x="66.1068%" y="1045" width="0.0373%" height="15" fill="rgb(249,222,43)" fg:x="1771" fg:w="1"/><text x="66.3568%" y="1055.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::with_timezone (3 samples, 0.11%)</title><rect x="66.1068%" y="1221" width="0.1120%" height="15" fill="rgb(221,3,27)" fg:x="1771" fg:w="3"/><text x="66.3568%" y="1231.50"></text></g><g><title>chrono::offset::TimeZone::from_utc_datetime (3 samples, 0.11%)</title><rect x="66.1068%" y="1205" width="0.1120%" height="15" fill="rgb(228,180,5)" fg:x="1771" fg:w="3"/><text x="66.3568%" y="1215.50"></text></g><g><title>&lt;chrono::offset::local::Local as chrono::offset::TimeZone&gt;::offset_from_utc_datetime (3 samples, 0.11%)</title><rect x="66.1068%" y="1189" width="0.1120%" height="15" fill="rgb(227,131,42)" fg:x="1771" fg:w="3"/><text x="66.3568%" y="1199.50"></text></g><g><title>chrono::offset::local::inner::offset_from_utc_datetime (3 samples, 0.11%)</title><rect x="66.1068%" y="1173" width="0.1120%" height="15" fill="rgb(212,3,39)" fg:x="1771" fg:w="3"/><text x="66.3568%" y="1183.50"></text></g><g><title>chrono::offset::local::inner::offset (3 samples, 0.11%)</title><rect x="66.1068%" y="1157" width="0.1120%" height="15" fill="rgb(226,45,5)" fg:x="1771" fg:w="3"/><text x="66.3568%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.11%)</title><rect x="66.1068%" y="1141" width="0.1120%" height="15" fill="rgb(215,167,45)" fg:x="1771" fg:w="3"/><text x="66.3568%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.11%)</title><rect x="66.1068%" y="1125" width="0.1120%" height="15" fill="rgb(250,218,53)" fg:x="1771" fg:w="3"/><text x="66.3568%" y="1135.50"></text></g><g><title>chrono::offset::local::inner::offset::_{{closure}} (3 samples, 0.11%)</title><rect x="66.1068%" y="1109" width="0.1120%" height="15" fill="rgb(207,140,0)" fg:x="1771" fg:w="3"/><text x="66.3568%" y="1119.50"></text></g><g><title>chrono::offset::local::inner::Cache::offset (3 samples, 0.11%)</title><rect x="66.1068%" y="1093" width="0.1120%" height="15" fill="rgb(238,133,51)" fg:x="1771" fg:w="3"/><text x="66.3568%" y="1103.50"></text></g><g><title>chrono::offset::local::tz_info::timezone::TimeZone::find_local_time_type (2 samples, 0.07%)</title><rect x="66.1441%" y="1077" width="0.0747%" height="15" fill="rgb(218,203,53)" fg:x="1772" fg:w="2"/><text x="66.3941%" y="1087.50"></text></g><g><title>chrono::offset::local::tz_info::timezone::TimeZoneRef::find_local_time_type (2 samples, 0.07%)</title><rect x="66.1441%" y="1061" width="0.0747%" height="15" fill="rgb(226,184,25)" fg:x="1772" fg:w="2"/><text x="66.3941%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.04%)</title><rect x="66.1814%" y="1045" width="0.0373%" height="15" fill="rgb(231,121,21)" fg:x="1773" fg:w="1"/><text x="66.4314%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.04%)</title><rect x="66.1814%" y="1029" width="0.0373%" height="15" fill="rgb(251,14,34)" fg:x="1773" fg:w="1"/><text x="66.4314%" y="1039.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::binary_search_by_key::_{{closure}} (1 samples, 0.04%)</title><rect x="66.1814%" y="1013" width="0.0373%" height="15" fill="rgb(249,193,11)" fg:x="1773" fg:w="1"/><text x="66.4314%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1 samples, 0.04%)</title><rect x="66.1814%" y="997" width="0.0373%" height="15" fill="rgb(220,172,37)" fg:x="1773" fg:w="1"/><text x="66.4314%" y="1007.50"></text></g><g><title>chrono::offset::local::Local::now (6 samples, 0.22%)</title><rect x="66.1068%" y="1237" width="0.2240%" height="15" fill="rgb(231,229,43)" fg:x="1771" fg:w="6"/><text x="66.3568%" y="1247.50"></text></g><g><title>chrono::offset::utc::Utc::now (3 samples, 0.11%)</title><rect x="66.2187%" y="1221" width="0.1120%" height="15" fill="rgb(250,161,5)" fg:x="1774" fg:w="3"/><text x="66.4687%" y="1231.50"></text></g><g><title>chrono::datetime::DateTime&lt;chrono::offset::utc::Utc&gt;::from_timestamp (2 samples, 0.07%)</title><rect x="66.2561%" y="1205" width="0.0747%" height="15" fill="rgb(218,225,18)" fg:x="1775" fg:w="2"/><text x="66.5061%" y="1215.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (2 samples, 0.07%)</title><rect x="66.2561%" y="1189" width="0.0747%" height="15" fill="rgb(245,45,42)" fg:x="1775" fg:w="2"/><text x="66.5061%" y="1199.50"></text></g><g><title>chrono::naive::date::cycle_to_yo (2 samples, 0.07%)</title><rect x="66.2561%" y="1173" width="0.0747%" height="15" fill="rgb(211,115,1)" fg:x="1775" fg:w="2"/><text x="66.5061%" y="1183.50"></text></g><g><title>fabseapi::Api::vehicle_insert::_{{closure}} (13 samples, 0.49%)</title><rect x="65.9948%" y="1253" width="0.4853%" height="15" fill="rgb(248,133,52)" fg:x="1768" fg:w="13"/><text x="66.2448%" y="1263.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (4 samples, 0.15%)</title><rect x="66.3307%" y="1237" width="0.1493%" height="15" fill="rgb(238,100,21)" fg:x="1777" fg:w="4"/><text x="66.5807%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="66.4427%" y="1221" width="0.0373%" height="15" fill="rgb(247,144,11)" fg:x="1780" fg:w="1"/><text x="66.6927%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="66.4427%" y="1205" width="0.0373%" height="15" fill="rgb(206,164,16)" fg:x="1780" fg:w="1"/><text x="66.6927%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;,sqlx_mysql::query_result::MySqlQueryResult&gt;&gt; (1 samples, 0.04%)</title><rect x="66.4427%" y="1189" width="0.0373%" height="15" fill="rgb(222,34,3)" fg:x="1780" fg:w="1"/><text x="66.6927%" y="1199.50"></text></g><g><title>&lt;core::fmt::Formatter as powerfmt::ext::FormatterExt&gt;::pad_with_width (3 samples, 0.11%)</title><rect x="66.5920%" y="1173" width="0.1120%" height="15" fill="rgb(248,82,4)" fg:x="1784" fg:w="3"/><text x="66.8420%" y="1183.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.04%)</title><rect x="66.6667%" y="1157" width="0.0373%" height="15" fill="rgb(228,81,46)" fg:x="1786" fg:w="1"/><text x="66.9167%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.15%)</title><rect x="67.4505%" y="1045" width="0.1493%" height="15" fill="rgb(227,67,47)" fg:x="1807" fg:w="4"/><text x="67.7005%" y="1055.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (4 samples, 0.15%)</title><rect x="67.4505%" y="1029" width="0.1493%" height="15" fill="rgb(215,93,53)" fg:x="1807" fg:w="4"/><text x="67.7005%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.52%)</title><rect x="67.6372%" y="1013" width="0.5226%" height="15" fill="rgb(248,194,39)" fg:x="1812" fg:w="14"/><text x="67.8872%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.19%)</title><rect x="67.9731%" y="997" width="0.1866%" height="15" fill="rgb(215,5,19)" fg:x="1821" fg:w="5"/><text x="68.2231%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.19%)</title><rect x="67.9731%" y="981" width="0.1866%" height="15" fill="rgb(226,215,51)" fg:x="1821" fg:w="5"/><text x="68.2231%" y="991.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.19%)</title><rect x="67.9731%" y="965" width="0.1866%" height="15" fill="rgb(225,56,26)" fg:x="1821" fg:w="5"/><text x="68.2231%" y="975.50"></text></g><g><title>__rdl_realloc (5 samples, 0.19%)</title><rect x="67.9731%" y="949" width="0.1866%" height="15" fill="rgb(222,75,29)" fg:x="1821" fg:w="5"/><text x="68.2231%" y="959.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.19%)</title><rect x="67.9731%" y="933" width="0.1866%" height="15" fill="rgb(236,139,6)" fg:x="1821" fg:w="5"/><text x="68.2231%" y="943.50"></text></g><g><title>realloc (5 samples, 0.19%)</title><rect x="67.9731%" y="917" width="0.1866%" height="15" fill="rgb(223,137,36)" fg:x="1821" fg:w="5"/><text x="68.2231%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="68.1598%" y="1013" width="0.0373%" height="15" fill="rgb(226,99,2)" fg:x="1826" fg:w="1"/><text x="68.4098%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.04%)</title><rect x="68.1598%" y="997" width="0.0373%" height="15" fill="rgb(206,133,23)" fg:x="1826" fg:w="1"/><text x="68.4098%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (23 samples, 0.86%)</title><rect x="67.4132%" y="1077" width="0.8585%" height="15" fill="rgb(243,173,15)" fg:x="1806" fg:w="23"/><text x="67.6632%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.86%)</title><rect x="67.4132%" y="1061" width="0.8585%" height="15" fill="rgb(228,69,28)" fg:x="1806" fg:w="23"/><text x="67.6632%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.67%)</title><rect x="67.5999%" y="1045" width="0.6719%" height="15" fill="rgb(212,51,22)" fg:x="1811" fg:w="18"/><text x="67.8499%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.67%)</title><rect x="67.5999%" y="1029" width="0.6719%" height="15" fill="rgb(227,113,0)" fg:x="1811" fg:w="18"/><text x="67.8499%" y="1039.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.07%)</title><rect x="68.1971%" y="1013" width="0.0747%" height="15" fill="rgb(252,84,27)" fg:x="1827" fg:w="2"/><text x="68.4471%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.07%)</title><rect x="68.1971%" y="997" width="0.0747%" height="15" fill="rgb(223,145,39)" fg:x="1827" fg:w="2"/><text x="68.4471%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (42 samples, 1.57%)</title><rect x="67.0773%" y="1157" width="1.5677%" height="15" fill="rgb(239,219,30)" fg:x="1797" fg:w="42"/><text x="67.3273%" y="1167.50"></text></g><g><title>alloc::string::String::push_str (33 samples, 1.23%)</title><rect x="67.4132%" y="1141" width="1.2318%" height="15" fill="rgb(224,196,39)" fg:x="1806" fg:w="33"/><text x="67.6632%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (33 samples, 1.23%)</title><rect x="67.4132%" y="1125" width="1.2318%" height="15" fill="rgb(205,35,43)" fg:x="1806" fg:w="33"/><text x="67.6632%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (33 samples, 1.23%)</title><rect x="67.4132%" y="1109" width="1.2318%" height="15" fill="rgb(228,201,21)" fg:x="1806" fg:w="33"/><text x="67.6632%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (33 samples, 1.23%)</title><rect x="67.4132%" y="1093" width="1.2318%" height="15" fill="rgb(237,118,16)" fg:x="1806" fg:w="33"/><text x="67.6632%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.37%)</title><rect x="68.2717%" y="1077" width="0.3733%" height="15" fill="rgb(241,17,19)" fg:x="1829" fg:w="10"/><text x="68.5217%" y="1087.50"></text></g><g><title>[libc.so.6] (6 samples, 0.22%)</title><rect x="68.4211%" y="1061" width="0.2240%" height="15" fill="rgb(214,10,25)" fg:x="1833" fg:w="6"/><text x="68.6711%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="68.6450%" y="1157" width="0.0373%" height="15" fill="rgb(238,37,29)" fg:x="1839" fg:w="1"/><text x="68.8950%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="68.6450%" y="1141" width="0.0373%" height="15" fill="rgb(253,83,25)" fg:x="1839" fg:w="1"/><text x="68.8950%" y="1151.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="68.6823%" y="1157" width="0.0373%" height="15" fill="rgb(234,192,12)" fg:x="1840" fg:w="1"/><text x="68.9323%" y="1167.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.04%)</title><rect x="68.7197%" y="1157" width="0.0373%" height="15" fill="rgb(241,216,45)" fg:x="1841" fg:w="1"/><text x="68.9697%" y="1167.50"></text></g><g><title>core::fmt::getcount (3 samples, 0.11%)</title><rect x="69.1303%" y="1141" width="0.1120%" height="15" fill="rgb(242,22,33)" fg:x="1852" fg:w="3"/><text x="69.3803%" y="1151.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="70.1381%" y="933" width="0.0373%" height="15" fill="rgb(231,105,49)" fg:x="1879" fg:w="1"/><text x="70.3881%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.34%)</title><rect x="70.1754%" y="933" width="0.3359%" height="15" fill="rgb(218,204,15)" fg:x="1880" fg:w="9"/><text x="70.4254%" y="943.50"></text></g><g><title>malloc (8 samples, 0.30%)</title><rect x="70.2128%" y="917" width="0.2986%" height="15" fill="rgb(235,138,41)" fg:x="1881" fg:w="8"/><text x="70.4628%" y="927.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="70.4367%" y="901" width="0.0747%" height="15" fill="rgb(246,0,9)" fg:x="1887" fg:w="2"/><text x="70.6867%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="70.4741%" y="885" width="0.0373%" height="15" fill="rgb(210,74,4)" fg:x="1888" fg:w="1"/><text x="70.7241%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.49%)</title><rect x="70.0635%" y="997" width="0.4853%" height="15" fill="rgb(250,60,41)" fg:x="1877" fg:w="13"/><text x="70.3135%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.49%)</title><rect x="70.0635%" y="981" width="0.4853%" height="15" fill="rgb(220,115,12)" fg:x="1877" fg:w="13"/><text x="70.3135%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.49%)</title><rect x="70.0635%" y="965" width="0.4853%" height="15" fill="rgb(237,100,13)" fg:x="1877" fg:w="13"/><text x="70.3135%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.45%)</title><rect x="70.1008%" y="949" width="0.4479%" height="15" fill="rgb(213,55,26)" fg:x="1878" fg:w="12"/><text x="70.3508%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="70.5114%" y="933" width="0.0373%" height="15" fill="rgb(216,17,4)" fg:x="1889" fg:w="1"/><text x="70.7614%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.04%)</title><rect x="70.5114%" y="917" width="0.0373%" height="15" fill="rgb(220,153,47)" fg:x="1889" fg:w="1"/><text x="70.7614%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.19%)</title><rect x="70.5487%" y="997" width="0.1866%" height="15" fill="rgb(215,131,9)" fg:x="1890" fg:w="5"/><text x="70.7987%" y="1007.50"></text></g><g><title>[libc.so.6] (4 samples, 0.15%)</title><rect x="70.5860%" y="981" width="0.1493%" height="15" fill="rgb(233,46,42)" fg:x="1891" fg:w="4"/><text x="70.8360%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26 samples, 0.97%)</title><rect x="69.8022%" y="1077" width="0.9705%" height="15" fill="rgb(226,86,7)" fg:x="1870" fg:w="26"/><text x="70.0522%" y="1087.50"></text></g><g><title>alloc::string::String::push_str (20 samples, 0.75%)</title><rect x="70.0261%" y="1061" width="0.7465%" height="15" fill="rgb(239,226,21)" fg:x="1876" fg:w="20"/><text x="70.2761%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.75%)</title><rect x="70.0261%" y="1045" width="0.7465%" height="15" fill="rgb(244,137,22)" fg:x="1876" fg:w="20"/><text x="70.2761%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.75%)</title><rect x="70.0261%" y="1029" width="0.7465%" height="15" fill="rgb(211,139,35)" fg:x="1876" fg:w="20"/><text x="70.2761%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.75%)</title><rect x="70.0261%" y="1013" width="0.7465%" height="15" fill="rgb(214,62,50)" fg:x="1876" fg:w="20"/><text x="70.2761%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="70.7353%" y="997" width="0.0373%" height="15" fill="rgb(212,113,44)" fg:x="1895" fg:w="1"/><text x="70.9853%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.11%)</title><rect x="71.1833%" y="1061" width="0.1120%" height="15" fill="rgb(226,150,43)" fg:x="1907" fg:w="3"/><text x="71.4333%" y="1071.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="71.2579%" y="1045" width="0.0373%" height="15" fill="rgb(250,71,37)" fg:x="1909" fg:w="1"/><text x="71.5079%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="71.2579%" y="1029" width="0.0373%" height="15" fill="rgb(219,76,19)" fg:x="1909" fg:w="1"/><text x="71.5079%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="71.2579%" y="1013" width="0.0373%" height="15" fill="rgb(250,39,11)" fg:x="1909" fg:w="1"/><text x="71.5079%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="71.2579%" y="997" width="0.0373%" height="15" fill="rgb(230,64,31)" fg:x="1909" fg:w="1"/><text x="71.5079%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="71.2579%" y="981" width="0.0373%" height="15" fill="rgb(208,222,23)" fg:x="1909" fg:w="1"/><text x="71.5079%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="71.2579%" y="965" width="0.0373%" height="15" fill="rgb(227,125,18)" fg:x="1909" fg:w="1"/><text x="71.5079%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="71.2953%" y="1061" width="0.0373%" height="15" fill="rgb(234,210,9)" fg:x="1910" fg:w="1"/><text x="71.5453%" y="1071.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (8 samples, 0.30%)</title><rect x="71.3326%" y="1061" width="0.2986%" height="15" fill="rgb(217,127,24)" fg:x="1911" fg:w="8"/><text x="71.5826%" y="1071.50"></text></g><g><title>core::fmt::Formatter::pad_integral (24 samples, 0.90%)</title><rect x="70.7727%" y="1077" width="0.8959%" height="15" fill="rgb(239,141,48)" fg:x="1896" fg:w="24"/><text x="71.0227%" y="1087.50"></text></g><g><title>core::fmt::Formatter::sign_plus (1 samples, 0.04%)</title><rect x="71.6312%" y="1061" width="0.0373%" height="15" fill="rgb(227,109,8)" fg:x="1919" fg:w="1"/><text x="71.8812%" y="1071.50"></text></g><g><title>&lt;deranged::RangedU8&lt;_,_&gt; as core::fmt::Display&gt;::fmt (64 samples, 2.39%)</title><rect x="69.5035%" y="1125" width="2.3890%" height="15" fill="rgb(235,184,23)" fg:x="1862" fg:w="64"/><text x="69.7535%" y="1135.50">&lt;d..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (58 samples, 2.16%)</title><rect x="69.7275%" y="1109" width="2.1650%" height="15" fill="rgb(227,226,48)" fg:x="1868" fg:w="58"/><text x="69.9775%" y="1119.50">c..</text></g><g><title>core::fmt::num::imp::fmt_u64 (58 samples, 2.16%)</title><rect x="69.7275%" y="1093" width="2.1650%" height="15" fill="rgb(206,150,11)" fg:x="1868" fg:w="58"/><text x="69.9775%" y="1103.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.22%)</title><rect x="71.6685%" y="1077" width="0.2240%" height="15" fill="rgb(254,2,33)" fg:x="1920" fg:w="6"/><text x="71.9185%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.19%)</title><rect x="72.0791%" y="1093" width="0.1866%" height="15" fill="rgb(243,160,20)" fg:x="1931" fg:w="5"/><text x="72.3291%" y="1103.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.15%)</title><rect x="72.1165%" y="1077" width="0.1493%" height="15" fill="rgb(218,208,30)" fg:x="1932" fg:w="4"/><text x="72.3665%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.15%)</title><rect x="72.1165%" y="1061" width="0.1493%" height="15" fill="rgb(224,120,49)" fg:x="1932" fg:w="4"/><text x="72.3665%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.15%)</title><rect x="72.1165%" y="1045" width="0.1493%" height="15" fill="rgb(246,12,2)" fg:x="1932" fg:w="4"/><text x="72.3665%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.15%)</title><rect x="72.1165%" y="1029" width="0.1493%" height="15" fill="rgb(236,117,3)" fg:x="1932" fg:w="4"/><text x="72.3665%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.11%)</title><rect x="72.1538%" y="1013" width="0.1120%" height="15" fill="rgb(216,128,52)" fg:x="1933" fg:w="3"/><text x="72.4038%" y="1023.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="72.1538%" y="997" width="0.1120%" height="15" fill="rgb(246,145,19)" fg:x="1933" fg:w="3"/><text x="72.4038%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="72.5644%" y="1077" width="0.0373%" height="15" fill="rgb(222,11,46)" fg:x="1944" fg:w="1"/><text x="72.8144%" y="1087.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="72.5644%" y="1061" width="0.0373%" height="15" fill="rgb(245,82,36)" fg:x="1944" fg:w="1"/><text x="72.8144%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="72.5644%" y="1045" width="0.0373%" height="15" fill="rgb(250,73,51)" fg:x="1944" fg:w="1"/><text x="72.8144%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="72.5644%" y="1029" width="0.0373%" height="15" fill="rgb(221,189,23)" fg:x="1944" fg:w="1"/><text x="72.8144%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="72.5644%" y="1013" width="0.0373%" height="15" fill="rgb(210,33,7)" fg:x="1944" fg:w="1"/><text x="72.8144%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="72.5644%" y="997" width="0.0373%" height="15" fill="rgb(210,107,22)" fg:x="1944" fg:w="1"/><text x="72.8144%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="72.5644%" y="981" width="0.0373%" height="15" fill="rgb(222,116,37)" fg:x="1944" fg:w="1"/><text x="72.8144%" y="991.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.07%)</title><rect x="72.6017%" y="1077" width="0.0747%" height="15" fill="rgb(254,17,48)" fg:x="1945" fg:w="2"/><text x="72.8517%" y="1087.50"></text></g><g><title>core::fmt::Formatter::padding (2 samples, 0.07%)</title><rect x="72.6764%" y="1077" width="0.0747%" height="15" fill="rgb(224,36,32)" fg:x="1947" fg:w="2"/><text x="72.9264%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (2 samples, 0.07%)</title><rect x="72.6764%" y="1061" width="0.0747%" height="15" fill="rgb(232,90,46)" fg:x="1947" fg:w="2"/><text x="72.9264%" y="1071.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.04%)</title><rect x="72.7137%" y="1045" width="0.0373%" height="15" fill="rgb(241,66,40)" fg:x="1948" fg:w="1"/><text x="72.9637%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="72.7137%" y="1029" width="0.0373%" height="15" fill="rgb(249,184,29)" fg:x="1948" fg:w="1"/><text x="72.9637%" y="1039.50"></text></g><g><title>core::fmt::Formatter::pad_integral (14 samples, 0.52%)</title><rect x="72.2658%" y="1093" width="0.5226%" height="15" fill="rgb(231,181,1)" fg:x="1936" fg:w="14"/><text x="72.5158%" y="1103.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="72.7510%" y="1077" width="0.0373%" height="15" fill="rgb(224,94,2)" fg:x="1949" fg:w="1"/><text x="73.0010%" y="1087.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="72.7510%" y="1061" width="0.0373%" height="15" fill="rgb(229,170,15)" fg:x="1949" fg:w="1"/><text x="73.0010%" y="1071.50"></text></g><g><title>&lt;time::time::Time as powerfmt::smart_display::SmartDisplay&gt;::fmt_with_metadata (172 samples, 6.42%)</title><rect x="66.4800%" y="1189" width="6.4203%" height="15" fill="rgb(240,127,35)" fg:x="1781" fg:w="172"/><text x="66.7300%" y="1199.50">&lt;time::t..</text></g><g><title>core::fmt::write (166 samples, 6.20%)</title><rect x="66.7040%" y="1173" width="6.1963%" height="15" fill="rgb(248,196,34)" fg:x="1787" fg:w="166"/><text x="66.9540%" y="1183.50">core::fm..</text></g><g><title>core::fmt::run (111 samples, 4.14%)</title><rect x="68.7570%" y="1157" width="4.1433%" height="15" fill="rgb(236,137,7)" fg:x="1842" fg:w="111"/><text x="69.0070%" y="1167.50">core:..</text></g><g><title>core::fmt::rt::Argument::fmt (98 samples, 3.66%)</title><rect x="69.2423%" y="1141" width="3.6581%" height="15" fill="rgb(235,127,16)" fg:x="1855" fg:w="98"/><text x="69.4923%" y="1151.50">core..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (27 samples, 1.01%)</title><rect x="71.8925%" y="1125" width="1.0078%" height="15" fill="rgb(250,192,54)" fg:x="1926" fg:w="27"/><text x="72.1425%" y="1135.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (25 samples, 0.93%)</title><rect x="71.9672%" y="1109" width="0.9332%" height="15" fill="rgb(218,98,20)" fg:x="1928" fg:w="25"/><text x="72.2172%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.11%)</title><rect x="72.7884%" y="1093" width="0.1120%" height="15" fill="rgb(230,176,47)" fg:x="1950" fg:w="3"/><text x="73.0384%" y="1103.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (181 samples, 6.76%)</title><rect x="66.4800%" y="1237" width="6.7563%" height="15" fill="rgb(244,2,33)" fg:x="1781" fg:w="181"/><text x="66.7300%" y="1247.50">&lt;T as all..</text></g><g><title>&lt;time::time::Time as core::fmt::Display&gt;::fmt (181 samples, 6.76%)</title><rect x="66.4800%" y="1221" width="6.7563%" height="15" fill="rgb(231,100,17)" fg:x="1781" fg:w="181"/><text x="66.7300%" y="1231.50">&lt;time::ti..</text></g><g><title>powerfmt::smart_display::SmartDisplay::fmt (181 samples, 6.76%)</title><rect x="66.4800%" y="1205" width="6.7563%" height="15" fill="rgb(245,23,12)" fg:x="1781" fg:w="181"/><text x="66.7300%" y="1215.50">powerfmt:..</text></g><g><title>&lt;time::time::Time as powerfmt::smart_display::SmartDisplay&gt;::metadata (9 samples, 0.34%)</title><rect x="72.9003%" y="1189" width="0.3359%" height="15" fill="rgb(249,55,22)" fg:x="1953" fg:w="9"/><text x="73.1503%" y="1199.50"></text></g><g><title>powerfmt::smart_display::Metadata&lt;core::convert::Infallible&gt;::padded_width_of (2 samples, 0.07%)</title><rect x="73.1616%" y="1173" width="0.0747%" height="15" fill="rgb(207,134,9)" fg:x="1960" fg:w="2"/><text x="73.4116%" y="1183.50"></text></g><g><title>powerfmt::smart_display_impls::&lt;impl powerfmt::smart_display::SmartDisplay for &amp;T&gt;::metadata (2 samples, 0.07%)</title><rect x="73.1616%" y="1157" width="0.0747%" height="15" fill="rgb(218,134,0)" fg:x="1960" fg:w="2"/><text x="73.4116%" y="1167.50"></text></g><g><title>powerfmt::smart_display_impls::&lt;impl powerfmt::smart_display::SmartDisplay for u8&gt;::metadata (2 samples, 0.07%)</title><rect x="73.1616%" y="1141" width="0.0747%" height="15" fill="rgb(213,212,33)" fg:x="1960" fg:w="2"/><text x="73.4116%" y="1151.50"></text></g><g><title>core::num::&lt;impl u8&gt;::checked_ilog10 (2 samples, 0.07%)</title><rect x="73.1616%" y="1125" width="0.0747%" height="15" fill="rgb(252,106,18)" fg:x="1960" fg:w="2"/><text x="73.4116%" y="1135.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (17 samples, 0.63%)</title><rect x="73.4976%" y="1173" width="0.6346%" height="15" fill="rgb(208,126,42)" fg:x="1969" fg:w="17"/><text x="73.7476%" y="1183.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch::_{{closure}}::_{{closure}} (17 samples, 0.63%)</title><rect x="73.4976%" y="1157" width="0.6346%" height="15" fill="rgb(246,175,29)" fg:x="1969" fg:w="17"/><text x="73.7476%" y="1167.50"></text></g><g><title>either::Either&lt;L,R&gt;::right (17 samples, 0.63%)</title><rect x="73.4976%" y="1141" width="0.6346%" height="15" fill="rgb(215,13,50)" fg:x="1969" fg:w="17"/><text x="73.7476%" y="1151.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as futures_core::future::FusedFuture&gt;::is_terminated (1 samples, 0.04%)</title><rect x="74.5427%" y="1093" width="0.0373%" height="15" fill="rgb(216,172,15)" fg:x="1997" fg:w="1"/><text x="74.7927%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.04%)</title><rect x="74.5427%" y="1077" width="0.0373%" height="15" fill="rgb(212,103,13)" fg:x="1997" fg:w="1"/><text x="74.7927%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.04%)</title><rect x="74.5427%" y="1061" width="0.0373%" height="15" fill="rgb(231,171,36)" fg:x="1997" fg:w="1"/><text x="74.7927%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (5 samples, 0.19%)</title><rect x="74.5801%" y="1093" width="0.1866%" height="15" fill="rgb(250,123,20)" fg:x="1998" fg:w="5"/><text x="74.8301%" y="1103.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (5 samples, 0.19%)</title><rect x="74.5801%" y="1077" width="0.1866%" height="15" fill="rgb(212,53,50)" fg:x="1998" fg:w="5"/><text x="74.8301%" y="1087.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (7 samples, 0.26%)</title><rect x="74.7667%" y="1093" width="0.2613%" height="15" fill="rgb(243,54,12)" fg:x="2003" fg:w="7"/><text x="75.0167%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="74.7667%" y="1077" width="0.2613%" height="15" fill="rgb(234,101,34)" fg:x="2003" fg:w="7"/><text x="75.0167%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.22%)</title><rect x="74.8040%" y="1061" width="0.2240%" height="15" fill="rgb(254,67,22)" fg:x="2004" fg:w="6"/><text x="75.0540%" y="1071.50"></text></g><g><title>sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::_{{closure}}::_{{closure}} (6 samples, 0.22%)</title><rect x="74.8040%" y="1045" width="0.2240%" height="15" fill="rgb(250,35,47)" fg:x="2004" fg:w="6"/><text x="75.0540%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (8 samples, 0.30%)</title><rect x="75.0653%" y="1077" width="0.2986%" height="15" fill="rgb(226,126,38)" fg:x="2011" fg:w="8"/><text x="75.3153%" y="1087.50"></text></g><g><title>core::mem::replace (8 samples, 0.30%)</title><rect x="75.0653%" y="1061" width="0.2986%" height="15" fill="rgb(216,138,53)" fg:x="2011" fg:w="8"/><text x="75.3153%" y="1071.50"></text></g><g><title>core::ptr::read (8 samples, 0.30%)</title><rect x="75.0653%" y="1045" width="0.2986%" height="15" fill="rgb(246,199,43)" fg:x="2011" fg:w="8"/><text x="75.3153%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;either::Either&lt;sqlx_mysql::query_result::MySqlQueryResult,sqlx_mysql::row::MySqlRow&gt;&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="75.3639%" y="1077" width="0.1866%" height="15" fill="rgb(232,125,11)" fg:x="2019" fg:w="5"/><text x="75.6139%" y="1087.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.19%)</title><rect x="75.3639%" y="1061" width="0.1866%" height="15" fill="rgb(218,219,45)" fg:x="2019" fg:w="5"/><text x="75.6139%" y="1071.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (5 samples, 0.19%)</title><rect x="75.3639%" y="1045" width="0.1866%" height="15" fill="rgb(216,102,54)" fg:x="2019" fg:w="5"/><text x="75.6139%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (30 samples, 1.12%)</title><rect x="74.5054%" y="1125" width="1.1198%" height="15" fill="rgb(250,228,7)" fg:x="1996" fg:w="30"/><text x="74.7554%" y="1135.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (30 samples, 1.12%)</title><rect x="74.5054%" y="1109" width="1.1198%" height="15" fill="rgb(226,125,25)" fg:x="1996" fg:w="30"/><text x="74.7554%" y="1119.50"></text></g><g><title>sqlx_core::ext::async_stream::Yielder&lt;T&gt;::take (16 samples, 0.60%)</title><rect x="75.0280%" y="1093" width="0.5972%" height="15" fill="rgb(224,165,27)" fg:x="2010" fg:w="16"/><text x="75.2780%" y="1103.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.07%)</title><rect x="75.5506%" y="1077" width="0.0747%" height="15" fill="rgb(233,86,3)" fg:x="2024" fg:w="2"/><text x="75.8006%" y="1087.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.07%)</title><rect x="75.5506%" y="1061" width="0.0747%" height="15" fill="rgb(228,116,20)" fg:x="2024" fg:w="2"/><text x="75.8006%" y="1071.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.07%)</title><rect x="75.5506%" y="1045" width="0.0747%" height="15" fill="rgb(209,192,17)" fg:x="2024" fg:w="2"/><text x="75.8006%" y="1055.50"></text></g><g><title>std::thread::panicking (2 samples, 0.07%)</title><rect x="75.5506%" y="1029" width="0.0747%" height="15" fill="rgb(224,88,34)" fg:x="2024" fg:w="2"/><text x="75.8006%" y="1039.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.07%)</title><rect x="75.5506%" y="1013" width="0.0747%" height="15" fill="rgb(233,38,6)" fg:x="2024" fg:w="2"/><text x="75.8006%" y="1023.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.07%)</title><rect x="75.5506%" y="997" width="0.0747%" height="15" fill="rgb(212,59,30)" fg:x="2024" fg:w="2"/><text x="75.8006%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="75.5879%" y="981" width="0.0373%" height="15" fill="rgb(213,80,3)" fg:x="2025" fg:w="1"/><text x="75.8379%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="75.5879%" y="965" width="0.0373%" height="15" fill="rgb(251,178,7)" fg:x="2025" fg:w="1"/><text x="75.8379%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.41%)</title><rect x="75.7745%" y="1045" width="0.4106%" height="15" fill="rgb(213,154,26)" fg:x="2030" fg:w="11"/><text x="76.0245%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.11%)</title><rect x="76.4464%" y="1029" width="0.1120%" height="15" fill="rgb(238,165,49)" fg:x="2048" fg:w="3"/><text x="76.6964%" y="1039.50"></text></g><g><title>&lt;&amp;I as sqlx_core::column::ColumnIndex&lt;T&gt;&gt;::index (8 samples, 0.30%)</title><rect x="76.5584%" y="1013" width="0.2986%" height="15" fill="rgb(248,91,46)" fg:x="2051" fg:w="8"/><text x="76.8084%" y="1023.50"></text></g><g><title>sqlx_mysql::&lt;impl sqlx_core::column::ColumnIndex&lt;sqlx_mysql::row::MySqlRow&gt; for usize&gt;::index (8 samples, 0.30%)</title><rect x="76.5584%" y="997" width="0.2986%" height="15" fill="rgb(244,21,52)" fg:x="2051" fg:w="8"/><text x="76.8084%" y="1007.50"></text></g><g><title>sqlx_core::row::Row::len (5 samples, 0.19%)</title><rect x="76.6704%" y="981" width="0.1866%" height="15" fill="rgb(247,122,20)" fg:x="2054" fg:w="5"/><text x="76.9204%" y="991.50"></text></g><g><title>&lt;sqlx_mysql::row::MySqlRow as sqlx_core::row::Row&gt;::columns (5 samples, 0.19%)</title><rect x="76.6704%" y="965" width="0.1866%" height="15" fill="rgb(218,27,9)" fg:x="2054" fg:w="5"/><text x="76.9204%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.19%)</title><rect x="76.6704%" y="949" width="0.1866%" height="15" fill="rgb(246,7,6)" fg:x="2054" fg:w="5"/><text x="76.9204%" y="959.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="76.8570%" y="997" width="0.0373%" height="15" fill="rgb(227,135,54)" fg:x="2059" fg:w="1"/><text x="77.1070%" y="1007.50"></text></g><g><title>&lt;sqlx_mysql::type_info::MySqlTypeInfo as core::clone::Clone&gt;::clone (8 samples, 0.30%)</title><rect x="76.8570%" y="1013" width="0.2986%" height="15" fill="rgb(247,14,11)" fg:x="2059" fg:w="8"/><text x="77.1070%" y="1023.50"></text></g><g><title>&lt;sqlx_mysql::protocol::text::column::ColumnFlags as core::clone::Clone&gt;::clone (7 samples, 0.26%)</title><rect x="76.8944%" y="997" width="0.2613%" height="15" fill="rgb(206,149,34)" fg:x="2060" fg:w="7"/><text x="77.1444%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.07%)</title><rect x="77.2303%" y="997" width="0.0747%" height="15" fill="rgb(227,228,4)" fg:x="2069" fg:w="2"/><text x="77.4803%" y="1007.50"></text></g><g><title>&lt;sqlx_mysql::row::MySqlRow as sqlx_core::row::Row&gt;::try_get_raw (22 samples, 0.82%)</title><rect x="76.5584%" y="1029" width="0.8212%" height="15" fill="rgb(238,218,28)" fg:x="2051" fg:w="22"/><text x="76.8084%" y="1039.50"></text></g><g><title>sqlx_mysql::protocol::row::Row::get (6 samples, 0.22%)</title><rect x="77.1557%" y="1013" width="0.2240%" height="15" fill="rgb(252,86,40)" fg:x="2067" fg:w="6"/><text x="77.4057%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.07%)</title><rect x="77.3050%" y="997" width="0.0747%" height="15" fill="rgb(251,225,11)" fg:x="2071" fg:w="2"/><text x="77.5550%" y="1007.50"></text></g><g><title>sqlx_mysql::protocol::row::Row::get::_{{closure}} (2 samples, 0.07%)</title><rect x="77.3050%" y="981" width="0.0747%" height="15" fill="rgb(206,46,49)" fg:x="2071" fg:w="2"/><text x="77.5550%" y="991.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.07%)</title><rect x="77.3050%" y="965" width="0.0747%" height="15" fill="rgb(245,128,24)" fg:x="2071" fg:w="2"/><text x="77.5550%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.07%)</title><rect x="77.3050%" y="949" width="0.0747%" height="15" fill="rgb(219,177,34)" fg:x="2071" fg:w="2"/><text x="77.5550%" y="959.50"></text></g><g><title>&lt;sqlx_mysql::value::MySqlValueRef as sqlx_core::value::ValueRef&gt;::is_null (2 samples, 0.07%)</title><rect x="77.3796%" y="1029" width="0.0747%" height="15" fill="rgb(218,60,48)" fg:x="2073" fg:w="2"/><text x="77.6296%" y="1039.50"></text></g><g><title>sqlx_mysql::value::is_null (2 samples, 0.07%)</title><rect x="77.3796%" y="1013" width="0.0747%" height="15" fill="rgb(221,11,5)" fg:x="2073" fg:w="2"/><text x="77.6296%" y="1023.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.11%)</title><rect x="77.4543%" y="1029" width="0.1120%" height="15" fill="rgb(220,148,13)" fg:x="2075" fg:w="3"/><text x="77.7043%" y="1039.50"></text></g><g><title>sqlx_mysql::types::int::&lt;impl sqlx_core::decode::Decode&lt;sqlx_mysql::database::MySql&gt; for i64&gt;::decode (1 samples, 0.04%)</title><rect x="77.5663%" y="1029" width="0.0373%" height="15" fill="rgb(210,16,3)" fg:x="2078" fg:w="1"/><text x="77.8163%" y="1039.50"></text></g><g><title>sqlx_mysql::types::int::int_decode (1 samples, 0.04%)</title><rect x="77.5663%" y="1013" width="0.0373%" height="15" fill="rgb(236,80,2)" fg:x="2078" fg:w="1"/><text x="77.8163%" y="1023.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (1 samples, 0.04%)</title><rect x="77.7902%" y="997" width="0.0373%" height="15" fill="rgb(239,129,19)" fg:x="2084" fg:w="1"/><text x="78.0402%" y="1007.50"></text></g><g><title>&lt;(T1,T2,T3,T4,T5,T6) as sqlx_core::from_row::FromRow&lt;R&gt;&gt;::from_row (60 samples, 2.24%)</title><rect x="75.6999%" y="1061" width="2.2396%" height="15" fill="rgb(220,106,35)" fg:x="2028" fg:w="60"/><text x="75.9499%" y="1071.50">&lt;..</text></g><g><title>sqlx_core::row::Row::try_get (47 samples, 1.75%)</title><rect x="76.1851%" y="1045" width="1.7544%" height="15" fill="rgb(252,139,45)" fg:x="2041" fg:w="47"/><text x="76.4351%" y="1055.50"></text></g><g><title>sqlx_mysql::types::time::&lt;impl sqlx_core::decode::Decode&lt;sqlx_mysql::database::MySql&gt; for time::time::Time&gt;::decode (9 samples, 0.34%)</title><rect x="77.6036%" y="1029" width="0.3359%" height="15" fill="rgb(229,8,36)" fg:x="2079" fg:w="9"/><text x="77.8536%" y="1039.50"></text></g><g><title>sqlx_mysql::types::time::decode_time (6 samples, 0.22%)</title><rect x="77.7156%" y="1013" width="0.2240%" height="15" fill="rgb(230,126,33)" fg:x="2082" fg:w="6"/><text x="77.9656%" y="1023.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_uint_le (3 samples, 0.11%)</title><rect x="77.8275%" y="997" width="0.1120%" height="15" fill="rgb(239,140,21)" fg:x="2085" fg:w="3"/><text x="78.0775%" y="1007.50"></text></g><g><title>&lt;&amp;[u8] as bytes::buf::buf_impl::Buf&gt;::copy_to_slice (3 samples, 0.11%)</title><rect x="77.8275%" y="981" width="0.1120%" height="15" fill="rgb(254,104,9)" fg:x="2085" fg:w="3"/><text x="78.0775%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.11%)</title><rect x="77.8275%" y="965" width="0.1120%" height="15" fill="rgb(239,52,14)" fg:x="2085" fg:w="3"/><text x="78.0775%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.11%)</title><rect x="77.8275%" y="949" width="0.1120%" height="15" fill="rgb(208,227,44)" fg:x="2085" fg:w="3"/><text x="78.0775%" y="959.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="77.8275%" y="933" width="0.1120%" height="15" fill="rgb(246,18,19)" fg:x="2085" fg:w="3"/><text x="78.0775%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;&gt; (13 samples, 0.49%)</title><rect x="77.9395%" y="1029" width="0.4853%" height="15" fill="rgb(235,228,25)" fg:x="2088" fg:w="13"/><text x="78.1895%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;&gt; (13 samples, 0.49%)</title><rect x="77.9395%" y="1013" width="0.4853%" height="15" fill="rgb(240,156,20)" fg:x="2088" fg:w="13"/><text x="78.1895%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.49%)</title><rect x="77.9395%" y="997" width="0.4853%" height="15" fill="rgb(224,8,20)" fg:x="2088" fg:w="13"/><text x="78.1895%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.49%)</title><rect x="77.9395%" y="981" width="0.4853%" height="15" fill="rgb(214,12,52)" fg:x="2088" fg:w="13"/><text x="78.1895%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.49%)</title><rect x="77.9395%" y="965" width="0.4853%" height="15" fill="rgb(211,220,47)" fg:x="2088" fg:w="13"/><text x="78.1895%" y="975.50"></text></g><g><title>__rdl_dealloc (13 samples, 0.49%)</title><rect x="77.9395%" y="949" width="0.4853%" height="15" fill="rgb(250,173,5)" fg:x="2088" fg:w="13"/><text x="78.1895%" y="959.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (13 samples, 0.49%)</title><rect x="77.9395%" y="933" width="0.4853%" height="15" fill="rgb(250,125,52)" fg:x="2088" fg:w="13"/><text x="78.1895%" y="943.50"></text></g><g><title>cfree (13 samples, 0.49%)</title><rect x="77.9395%" y="917" width="0.4853%" height="15" fill="rgb(209,133,18)" fg:x="2088" fg:w="13"/><text x="78.1895%" y="927.50"></text></g><g><title>[libc.so.6] (7 samples, 0.26%)</title><rect x="78.1635%" y="901" width="0.2613%" height="15" fill="rgb(216,173,22)" fg:x="2094" fg:w="7"/><text x="78.4135%" y="911.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (123 samples, 4.59%)</title><rect x="74.1321%" y="1173" width="4.5913%" height="15" fill="rgb(205,3,22)" fg:x="1986" fg:w="123"/><text x="74.3821%" y="1183.50">&lt;S as..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (123 samples, 4.59%)</title><rect x="74.1321%" y="1157" width="4.5913%" height="15" fill="rgb(248,22,20)" fg:x="1986" fg:w="123"/><text x="74.3821%" y="1167.50">&lt;core..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (123 samples, 4.59%)</title><rect x="74.1321%" y="1141" width="4.5913%" height="15" fill="rgb(233,6,29)" fg:x="1986" fg:w="123"/><text x="74.3821%" y="1151.50">&lt;futu..</text></g><g><title>core::option::Option&lt;T&gt;::map (83 samples, 3.10%)</title><rect x="75.6252%" y="1125" width="3.0982%" height="15" fill="rgb(240,22,54)" fg:x="2026" fg:w="83"/><text x="75.8752%" y="1135.50">cor..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (83 samples, 3.10%)</title><rect x="75.6252%" y="1109" width="3.0982%" height="15" fill="rgb(231,133,32)" fg:x="2026" fg:w="83"/><text x="75.8752%" y="1119.50">&lt;fu..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (83 samples, 3.10%)</title><rect x="75.6252%" y="1093" width="3.0982%" height="15" fill="rgb(248,193,4)" fg:x="2026" fg:w="83"/><text x="75.8752%" y="1103.50">&lt;T ..</text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_many::_{{closure}} (83 samples, 3.10%)</title><rect x="75.6252%" y="1077" width="3.0982%" height="15" fill="rgb(211,178,46)" fg:x="2026" fg:w="83"/><text x="75.8752%" y="1087.50">sql..</text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::row::MySqlRow&gt; (21 samples, 0.78%)</title><rect x="77.9395%" y="1061" width="0.7839%" height="15" fill="rgb(224,5,42)" fg:x="2088" fg:w="21"/><text x="78.1895%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_mysql::protocol::row::Row&gt; (21 samples, 0.78%)</title><rect x="77.9395%" y="1045" width="0.7839%" height="15" fill="rgb(239,176,25)" fg:x="2088" fg:w="21"/><text x="78.1895%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (8 samples, 0.30%)</title><rect x="78.4248%" y="1029" width="0.2986%" height="15" fill="rgb(245,187,50)" fg:x="2101" fg:w="8"/><text x="78.6748%" y="1039.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (8 samples, 0.30%)</title><rect x="78.4248%" y="1013" width="0.2986%" height="15" fill="rgb(248,24,15)" fg:x="2101" fg:w="8"/><text x="78.6748%" y="1023.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (8 samples, 0.30%)</title><rect x="78.4248%" y="997" width="0.2986%" height="15" fill="rgb(205,166,13)" fg:x="2101" fg:w="8"/><text x="78.6748%" y="1007.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (7 samples, 0.26%)</title><rect x="78.4621%" y="981" width="0.2613%" height="15" fill="rgb(208,114,23)" fg:x="2102" fg:w="7"/><text x="78.7121%" y="991.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (7 samples, 0.26%)</title><rect x="78.4621%" y="965" width="0.2613%" height="15" fill="rgb(239,127,18)" fg:x="2102" fg:w="7"/><text x="78.7121%" y="975.50"></text></g><g><title>bytes::bytes_mut::release_shared (7 samples, 0.26%)</title><rect x="78.4621%" y="949" width="0.2613%" height="15" fill="rgb(219,154,28)" fg:x="2102" fg:w="7"/><text x="78.7121%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.04%)</title><rect x="78.6861%" y="933" width="0.0373%" height="15" fill="rgb(225,157,23)" fg:x="2108" fg:w="1"/><text x="78.9361%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.04%)</title><rect x="78.6861%" y="917" width="0.0373%" height="15" fill="rgb(219,8,6)" fg:x="2108" fg:w="1"/><text x="78.9361%" y="927.50"></text></g><g><title>&lt;tokio_stream::stream_ext::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (173 samples, 6.46%)</title><rect x="73.2363%" y="1237" width="6.4576%" height="15" fill="rgb(212,47,6)" fg:x="1962" fg:w="173"/><text x="73.4863%" y="1247.50">&lt;tokio_s..</text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (173 samples, 6.46%)</title><rect x="73.2363%" y="1221" width="6.4576%" height="15" fill="rgb(224,190,4)" fg:x="1962" fg:w="173"/><text x="73.4863%" y="1231.50">&lt;&amp;mut S ..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (173 samples, 6.46%)</title><rect x="73.2363%" y="1205" width="6.4576%" height="15" fill="rgb(239,183,29)" fg:x="1962" fg:w="173"/><text x="73.4863%" y="1215.50">&lt;core::p..</text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (173 samples, 6.46%)</title><rect x="73.2363%" y="1189" width="6.4576%" height="15" fill="rgb(213,57,7)" fg:x="1962" fg:w="173"/><text x="73.4863%" y="1199.50">&lt;futures..</text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.97%)</title><rect x="78.7234%" y="1173" width="0.9705%" height="15" fill="rgb(216,148,1)" fg:x="2109" fg:w="26"/><text x="78.9734%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.22%)</title><rect x="79.6939%" y="1173" width="0.2240%" height="15" fill="rgb(236,182,29)" fg:x="2135" fg:w="6"/><text x="79.9439%" y="1183.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.22%)</title><rect x="79.6939%" y="1157" width="0.2240%" height="15" fill="rgb(244,120,48)" fg:x="2135" fg:w="6"/><text x="79.9439%" y="1167.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.22%)</title><rect x="79.6939%" y="1141" width="0.2240%" height="15" fill="rgb(206,71,34)" fg:x="2135" fg:w="6"/><text x="79.9439%" y="1151.50"></text></g><g><title>__rdl_realloc (6 samples, 0.22%)</title><rect x="79.6939%" y="1125" width="0.2240%" height="15" fill="rgb(242,32,6)" fg:x="2135" fg:w="6"/><text x="79.9439%" y="1135.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (6 samples, 0.22%)</title><rect x="79.6939%" y="1109" width="0.2240%" height="15" fill="rgb(241,35,3)" fg:x="2135" fg:w="6"/><text x="79.9439%" y="1119.50"></text></g><g><title>realloc (6 samples, 0.22%)</title><rect x="79.6939%" y="1093" width="0.2240%" height="15" fill="rgb(222,62,19)" fg:x="2135" fg:w="6"/><text x="79.9439%" y="1103.50"></text></g><g><title>[libc.so.6] (6 samples, 0.22%)</title><rect x="79.6939%" y="1077" width="0.2240%" height="15" fill="rgb(223,110,41)" fg:x="2135" fg:w="6"/><text x="79.9439%" y="1087.50"></text></g><g><title>[libc.so.6] (5 samples, 0.19%)</title><rect x="79.7312%" y="1061" width="0.1866%" height="15" fill="rgb(208,224,4)" fg:x="2136" fg:w="5"/><text x="79.9812%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="79.8806%" y="1045" width="0.0373%" height="15" fill="rgb(241,137,19)" fg:x="2140" fg:w="1"/><text x="80.1306%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.26%)</title><rect x="79.6939%" y="1237" width="0.2613%" height="15" fill="rgb(244,24,17)" fg:x="2135" fg:w="7"/><text x="79.9439%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.26%)</title><rect x="79.6939%" y="1221" width="0.2613%" height="15" fill="rgb(245,178,49)" fg:x="2135" fg:w="7"/><text x="79.9439%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.26%)</title><rect x="79.6939%" y="1205" width="0.2613%" height="15" fill="rgb(219,160,38)" fg:x="2135" fg:w="7"/><text x="79.9439%" y="1215.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.26%)</title><rect x="79.6939%" y="1189" width="0.2613%" height="15" fill="rgb(228,137,14)" fg:x="2135" fg:w="7"/><text x="79.9439%" y="1199.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="79.9179%" y="1173" width="0.0373%" height="15" fill="rgb(237,134,11)" fg:x="2141" fg:w="1"/><text x="80.1679%" y="1183.50"></text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}::_{{closure}} (1,186 samples, 44.27%)</title><rect x="35.7223%" y="1269" width="44.2703%" height="15" fill="rgb(211,126,44)" fg:x="957" fg:w="1186"/><text x="35.9723%" y="1279.50">&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}}:..</text></g><g><title>fabseapi::Api::vehicle_retrieve::_{{closure}} (362 samples, 13.51%)</title><rect x="66.4800%" y="1253" width="13.5125%" height="15" fill="rgb(226,171,33)" fg:x="1781" fg:w="362"/><text x="66.7300%" y="1263.50">fabseapi::Api::vehic..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;(i64,f64,time::time::Time,i64,i64,i64),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="79.9552%" y="1237" width="0.0373%" height="15" fill="rgb(253,99,13)" fg:x="2142" fg:w="1"/><text x="80.2052%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;(i64,f64,time::time::Time,i64,i64,i64),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="79.9552%" y="1221" width="0.0373%" height="15" fill="rgb(244,48,7)" fg:x="2142" fg:w="1"/><text x="80.2052%" y="1231.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="79.9552%" y="1205" width="0.0373%" height="15" fill="rgb(244,217,54)" fg:x="2142" fg:w="1"/><text x="80.2052%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="79.9552%" y="1189" width="0.0373%" height="15" fill="rgb(224,15,18)" fg:x="2142" fg:w="1"/><text x="80.2052%" y="1199.50"></text></g><g><title>&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::_{{closure}} (2 samples, 0.07%)</title><rect x="79.9925%" y="1269" width="0.0747%" height="15" fill="rgb(244,99,12)" fg:x="2143" fg:w="2"/><text x="80.2425%" y="1279.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="79.9925%" y="1253" width="0.0747%" height="15" fill="rgb(233,226,8)" fg:x="2143" fg:w="2"/><text x="80.2425%" y="1263.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1621" width="44.3822%" height="15" fill="rgb(229,211,3)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1631.50">&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::en..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1605" width="44.3822%" height="15" fill="rgb(216,140,21)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1615.50">&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{clo..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1589" width="44.3822%" height="15" fill="rgb(234,122,30)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1599.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{cl..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1573" width="44.3822%" height="15" fill="rgb(236,25,46)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1583.50">&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1557" width="44.3822%" height="15" fill="rgb(217,52,54)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1567.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1541" width="44.3822%" height="15" fill="rgb(222,29,26)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1551.50">&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::end..</text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1525" width="44.3822%" height="15" fill="rgb(216,177,29)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1535.50">&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoin..</text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1509" width="44.3822%" height="15" fill="rgb(247,136,51)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1519.50">&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poe..</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1493" width="44.3822%" height="15" fill="rgb(231,47,47)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1503.50">&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call:..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1477" width="44.3822%" height="15" fill="rgb(211,192,36)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1487.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{cl..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1461" width="44.3822%" height="15" fill="rgb(229,156,32)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1471.50">&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1445" width="44.3822%" height="15" fill="rgb(248,213,20)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1455.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1429" width="44.3822%" height="15" fill="rgb(217,64,7)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1439.50">&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::end..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1413" width="44.3822%" height="15" fill="rgb(232,142,8)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1423.50">&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Futur..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1397" width="44.3822%" height="15" fill="rgb(224,92,44)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1407.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{cl..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1381" width="44.3822%" height="15" fill="rgb(214,169,17)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1391.50">&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1365" width="44.3822%" height="15" fill="rgb(210,59,37)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1375.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1349" width="44.3822%" height="15" fill="rgb(214,116,48)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1359.50">&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::end..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1333" width="44.3822%" height="15" fill="rgb(244,191,6)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1343.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{cl..</text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1317" width="44.3822%" height="15" fill="rgb(241,50,52)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1327.50">&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1301" width="44.3822%" height="15" fill="rgb(236,75,39)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1311.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1,189 samples, 44.38%)</title><rect x="35.7223%" y="1285" width="44.3822%" height="15" fill="rgb(236,99,0)" fg:x="957" fg:w="1189"/><text x="35.9723%" y="1295.50">&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoi..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;fabseapi::Api as poem_openapi::base::OpenApi&gt;::add_routes::{{closure}}::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="80.0672%" y="1269" width="0.0373%" height="15" fill="rgb(207,202,15)" fg:x="2145" fg:w="1"/><text x="80.3172%" y="1279.50"></text></g><g><title>[fabseapi] (2 samples, 0.07%)</title><rect x="80.1045%" y="1621" width="0.0747%" height="15" fill="rgb(233,207,14)" fg:x="2146" fg:w="2"/><text x="80.3545%" y="1631.50"></text></g><g><title>recv (2 samples, 0.07%)</title><rect x="80.1045%" y="1605" width="0.0747%" height="15" fill="rgb(226,27,51)" fg:x="2146" fg:w="2"/><text x="80.3545%" y="1615.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="80.1045%" y="1589" width="0.0747%" height="15" fill="rgb(206,104,42)" fg:x="2146" fg:w="2"/><text x="80.3545%" y="1599.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="80.1792%" y="1589" width="0.0373%" height="15" fill="rgb(212,225,4)" fg:x="2148" fg:w="1"/><text x="80.4292%" y="1599.50"></text></g><g><title>snprintf (1 samples, 0.04%)</title><rect x="80.1792%" y="1573" width="0.0373%" height="15" fill="rgb(233,96,42)" fg:x="2148" fg:w="1"/><text x="80.4292%" y="1583.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="80.1792%" y="1557" width="0.0373%" height="15" fill="rgb(229,21,32)" fg:x="2148" fg:w="1"/><text x="80.4292%" y="1567.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="80.1792%" y="1541" width="0.0373%" height="15" fill="rgb(226,216,24)" fg:x="2148" fg:w="1"/><text x="80.4292%" y="1551.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="80.1792%" y="1525" width="0.0373%" height="15" fill="rgb(221,163,17)" fg:x="2148" fg:w="1"/><text x="80.4292%" y="1535.50"></text></g><g><title>__ctype_init (2 samples, 0.07%)</title><rect x="80.2165%" y="1589" width="0.0747%" height="15" fill="rgb(216,216,42)" fg:x="2149" fg:w="2"/><text x="80.4665%" y="1599.50"></text></g><g><title>core::mem::drop (2 samples, 0.07%)</title><rect x="80.2912%" y="1381" width="0.0747%" height="15" fill="rgb(240,118,7)" fg:x="2151" fg:w="2"/><text x="80.5412%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (2 samples, 0.07%)</title><rect x="80.2912%" y="1365" width="0.0747%" height="15" fill="rgb(221,67,37)" fg:x="2151" fg:w="2"/><text x="80.5412%" y="1375.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="80.2912%" y="1349" width="0.0747%" height="15" fill="rgb(241,32,44)" fg:x="2151" fg:w="2"/><text x="80.5412%" y="1359.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (2 samples, 0.07%)</title><rect x="80.2912%" y="1333" width="0.0747%" height="15" fill="rgb(235,204,43)" fg:x="2151" fg:w="2"/><text x="80.5412%" y="1343.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (2 samples, 0.07%)</title><rect x="80.2912%" y="1317" width="0.0747%" height="15" fill="rgb(213,116,10)" fg:x="2151" fg:w="2"/><text x="80.5412%" y="1327.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (2 samples, 0.07%)</title><rect x="80.2912%" y="1301" width="0.0747%" height="15" fill="rgb(239,15,48)" fg:x="2151" fg:w="2"/><text x="80.5412%" y="1311.50"></text></g><g><title>syscall (2 samples, 0.07%)</title><rect x="80.2912%" y="1285" width="0.0747%" height="15" fill="rgb(207,123,36)" fg:x="2151" fg:w="2"/><text x="80.5412%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="80.2912%" y="1269" width="0.0747%" height="15" fill="rgb(209,103,30)" fg:x="2151" fg:w="2"/><text x="80.5412%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="80.3285%" y="1253" width="0.0373%" height="15" fill="rgb(238,100,19)" fg:x="2152" fg:w="1"/><text x="80.5785%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="80.3285%" y="1237" width="0.0373%" height="15" fill="rgb(244,30,14)" fg:x="2152" fg:w="1"/><text x="80.5785%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="80.3285%" y="1221" width="0.0373%" height="15" fill="rgb(249,174,6)" fg:x="2152" fg:w="1"/><text x="80.5785%" y="1231.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (3 samples, 0.11%)</title><rect x="80.3658%" y="1317" width="0.1120%" height="15" fill="rgb(235,213,41)" fg:x="2153" fg:w="3"/><text x="80.6158%" y="1327.50"></text></g><g><title>syscall (3 samples, 0.11%)</title><rect x="80.3658%" y="1301" width="0.1120%" height="15" fill="rgb(213,118,6)" fg:x="2153" fg:w="3"/><text x="80.6158%" y="1311.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="80.3658%" y="1285" width="0.1120%" height="15" fill="rgb(235,44,51)" fg:x="2153" fg:w="3"/><text x="80.6158%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="80.4031%" y="1269" width="0.0747%" height="15" fill="rgb(217,9,53)" fg:x="2154" fg:w="2"/><text x="80.6531%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="80.4031%" y="1253" width="0.0747%" height="15" fill="rgb(237,172,34)" fg:x="2154" fg:w="2"/><text x="80.6531%" y="1263.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="80.4031%" y="1237" width="0.0747%" height="15" fill="rgb(206,206,11)" fg:x="2154" fg:w="2"/><text x="80.6531%" y="1247.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="80.4031%" y="1221" width="0.0747%" height="15" fill="rgb(214,149,29)" fg:x="2154" fg:w="2"/><text x="80.6531%" y="1231.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="80.4031%" y="1205" width="0.0747%" height="15" fill="rgb(208,123,3)" fg:x="2154" fg:w="2"/><text x="80.6531%" y="1215.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.34%)</title><rect x="80.3658%" y="1381" width="0.3359%" height="15" fill="rgb(229,126,4)" fg:x="2153" fg:w="9"/><text x="80.6158%" y="1391.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.34%)</title><rect x="80.3658%" y="1365" width="0.3359%" height="15" fill="rgb(222,92,36)" fg:x="2153" fg:w="9"/><text x="80.6158%" y="1375.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (9 samples, 0.34%)</title><rect x="80.3658%" y="1349" width="0.3359%" height="15" fill="rgb(216,39,41)" fg:x="2153" fg:w="9"/><text x="80.6158%" y="1359.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (9 samples, 0.34%)</title><rect x="80.3658%" y="1333" width="0.3359%" height="15" fill="rgb(253,127,28)" fg:x="2153" fg:w="9"/><text x="80.6158%" y="1343.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (6 samples, 0.22%)</title><rect x="80.4778%" y="1317" width="0.2240%" height="15" fill="rgb(249,152,51)" fg:x="2156" fg:w="6"/><text x="80.7278%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.11%)</title><rect x="80.5898%" y="1301" width="0.1120%" height="15" fill="rgb(209,123,42)" fg:x="2159" fg:w="3"/><text x="80.8398%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.11%)</title><rect x="80.5898%" y="1285" width="0.1120%" height="15" fill="rgb(241,118,22)" fg:x="2159" fg:w="3"/><text x="80.8398%" y="1295.50"></text></g><g><title>__nss_database_get (1 samples, 0.04%)</title><rect x="80.7018%" y="997" width="0.0373%" height="15" fill="rgb(208,25,7)" fg:x="2162" fg:w="1"/><text x="80.9518%" y="1007.50"></text></g><g><title>tokio::net::addr::_&lt;impl tokio::net::addr::sealed::ToSocketAddrsPriv for (&amp;str,u16)&gt;::to_socket_addrs::_{{closure}} (2 samples, 0.07%)</title><rect x="80.7018%" y="1125" width="0.0747%" height="15" fill="rgb(243,144,39)" fg:x="2162" fg:w="2"/><text x="80.9518%" y="1135.50"></text></g><g><title>&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (2 samples, 0.07%)</title><rect x="80.7018%" y="1109" width="0.0747%" height="15" fill="rgb(250,50,5)" fg:x="2162" fg:w="2"/><text x="80.9518%" y="1119.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.07%)</title><rect x="80.7018%" y="1093" width="0.0747%" height="15" fill="rgb(207,67,11)" fg:x="2162" fg:w="2"/><text x="80.9518%" y="1103.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (2 samples, 0.07%)</title><rect x="80.7018%" y="1077" width="0.0747%" height="15" fill="rgb(245,204,40)" fg:x="2162" fg:w="2"/><text x="80.9518%" y="1087.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (2 samples, 0.07%)</title><rect x="80.7018%" y="1061" width="0.0747%" height="15" fill="rgb(238,228,24)" fg:x="2162" fg:w="2"/><text x="80.9518%" y="1071.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (2 samples, 0.07%)</title><rect x="80.7018%" y="1045" width="0.0747%" height="15" fill="rgb(217,116,22)" fg:x="2162" fg:w="2"/><text x="80.9518%" y="1055.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::_{{closure}} (2 samples, 0.07%)</title><rect x="80.7018%" y="1029" width="0.0747%" height="15" fill="rgb(234,98,12)" fg:x="2162" fg:w="2"/><text x="80.9518%" y="1039.50"></text></g><g><title>getaddrinfo (2 samples, 0.07%)</title><rect x="80.7018%" y="1013" width="0.0747%" height="15" fill="rgb(242,170,50)" fg:x="2162" fg:w="2"/><text x="80.9518%" y="1023.50"></text></g><g><title>_nss_files_gethostbyname4_r (1 samples, 0.04%)</title><rect x="80.7391%" y="997" width="0.0373%" height="15" fill="rgb(235,7,5)" fg:x="2163" fg:w="1"/><text x="80.9891%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="80.7391%" y="981" width="0.0373%" height="15" fill="rgb(241,114,28)" fg:x="2163" fg:w="1"/><text x="80.9891%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.04%)</title><rect x="80.7764%" y="1029" width="0.0373%" height="15" fill="rgb(246,112,42)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="80.7764%" y="1013" width="0.0373%" height="15" fill="rgb(248,228,14)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="1023.50"></text></g><g><title>tokio::util::rand::FastRand::new (1 samples, 0.04%)</title><rect x="80.7764%" y="997" width="0.0373%" height="15" fill="rgb(208,133,18)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="1007.50"></text></g><g><title>tokio::util::rand::RngSeed::new (1 samples, 0.04%)</title><rect x="80.7764%" y="981" width="0.0373%" height="15" fill="rgb(207,35,49)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="991.50"></text></g><g><title>tokio::loom::std::rand::seed (1 samples, 0.04%)</title><rect x="80.7764%" y="965" width="0.0373%" height="15" fill="rgb(205,68,36)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="975.50"></text></g><g><title>std::hash::random::RandomState::new (1 samples, 0.04%)</title><rect x="80.7764%" y="949" width="0.0373%" height="15" fill="rgb(245,62,40)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="80.7764%" y="933" width="0.0373%" height="15" fill="rgb(228,27,24)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="80.7764%" y="917" width="0.0373%" height="15" fill="rgb(253,19,12)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="927.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::__getit (1 samples, 0.04%)</title><rect x="80.7764%" y="901" width="0.0373%" height="15" fill="rgb(232,28,20)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="911.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="80.7764%" y="885" width="0.0373%" height="15" fill="rgb(218,35,51)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="895.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.04%)</title><rect x="80.7764%" y="869" width="0.0373%" height="15" fill="rgb(212,90,40)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="879.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.04%)</title><rect x="80.7764%" y="853" width="0.0373%" height="15" fill="rgb(220,172,12)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="863.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::__getit::_{{closure}} (1 samples, 0.04%)</title><rect x="80.7764%" y="837" width="0.0373%" height="15" fill="rgb(226,159,20)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="847.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::__init (1 samples, 0.04%)</title><rect x="80.7764%" y="821" width="0.0373%" height="15" fill="rgb(234,205,16)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="831.50"></text></g><g><title>std::sys::pal::unix::rand::hashmap_random_keys (1 samples, 0.04%)</title><rect x="80.7764%" y="805" width="0.0373%" height="15" fill="rgb(207,9,39)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="815.50"></text></g><g><title>std::sys::pal::unix::rand::imp::fill_bytes (1 samples, 0.04%)</title><rect x="80.7764%" y="789" width="0.0373%" height="15" fill="rgb(249,143,15)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="799.50"></text></g><g><title>std::sys::pal::unix::rand::imp::getrandom_fill_bytes (1 samples, 0.04%)</title><rect x="80.7764%" y="773" width="0.0373%" height="15" fill="rgb(253,133,29)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="783.50"></text></g><g><title>std::sys::pal::unix::rand::imp::getrandom (1 samples, 0.04%)</title><rect x="80.7764%" y="757" width="0.0373%" height="15" fill="rgb(221,187,0)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="767.50"></text></g><g><title>std::sys::pal::unix::rand::imp::getrandom::getrandom (1 samples, 0.04%)</title><rect x="80.7764%" y="741" width="0.0373%" height="15" fill="rgb(205,204,26)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="751.50"></text></g><g><title>getrandom (1 samples, 0.04%)</title><rect x="80.7764%" y="725" width="0.0373%" height="15" fill="rgb(224,68,54)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="80.7764%" y="709" width="0.0373%" height="15" fill="rgb(209,67,4)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="80.7764%" y="693" width="0.0373%" height="15" fill="rgb(228,229,18)" fg:x="2164" fg:w="1"/><text x="81.0264%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.07%)</title><rect x="80.7764%" y="1077" width="0.0747%" height="15" fill="rgb(231,89,13)" fg:x="2164" fg:w="2"/><text x="81.0264%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.07%)</title><rect x="80.7764%" y="1061" width="0.0747%" height="15" fill="rgb(210,182,18)" fg:x="2164" fg:w="2"/><text x="81.0264%" y="1071.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime::_{{closure}} (2 samples, 0.07%)</title><rect x="80.7764%" y="1045" width="0.0747%" height="15" fill="rgb(240,105,2)" fg:x="2164" fg:w="2"/><text x="81.0264%" y="1055.50"></text></g><g><title>tokio::util::rand::rt::RngSeedGenerator::next_seed (1 samples, 0.04%)</title><rect x="80.8137%" y="1029" width="0.0373%" height="15" fill="rgb(207,170,50)" fg:x="2165" fg:w="1"/><text x="81.0637%" y="1039.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (1 samples, 0.04%)</title><rect x="80.8137%" y="1013" width="0.0373%" height="15" fill="rgb(232,133,24)" fg:x="2165" fg:w="1"/><text x="81.0637%" y="1023.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="80.8137%" y="997" width="0.0373%" height="15" fill="rgb(235,166,27)" fg:x="2165" fg:w="1"/><text x="81.0637%" y="1007.50"></text></g><g><title>__floattidf (1 samples, 0.04%)</title><rect x="80.8884%" y="933" width="0.0373%" height="15" fill="rgb(209,19,13)" fg:x="2167" fg:w="1"/><text x="81.1384%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (5 samples, 0.19%)</title><rect x="80.8884%" y="949" width="0.1866%" height="15" fill="rgb(226,79,39)" fg:x="2167" fg:w="5"/><text x="81.1384%" y="959.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (4 samples, 0.15%)</title><rect x="80.9257%" y="933" width="0.1493%" height="15" fill="rgb(222,163,10)" fg:x="2168" fg:w="4"/><text x="81.1757%" y="943.50"></text></g><g><title>pow (4 samples, 0.15%)</title><rect x="80.9257%" y="917" width="0.1493%" height="15" fill="rgb(214,44,19)" fg:x="2168" fg:w="4"/><text x="81.1757%" y="927.50"></text></g><g><title>[libm.so.6] (3 samples, 0.11%)</title><rect x="80.9630%" y="901" width="0.1120%" height="15" fill="rgb(210,217,13)" fg:x="2169" fg:w="3"/><text x="81.2130%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (2 samples, 0.07%)</title><rect x="81.0750%" y="949" width="0.0747%" height="15" fill="rgb(237,61,54)" fg:x="2172" fg:w="2"/><text x="81.3250%" y="959.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.07%)</title><rect x="81.0750%" y="933" width="0.0747%" height="15" fill="rgb(226,184,24)" fg:x="2172" fg:w="2"/><text x="81.3250%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (2 samples, 0.07%)</title><rect x="81.0750%" y="917" width="0.0747%" height="15" fill="rgb(223,226,4)" fg:x="2172" fg:w="2"/><text x="81.3250%" y="927.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.07%)</title><rect x="81.0750%" y="901" width="0.0747%" height="15" fill="rgb(210,26,41)" fg:x="2172" fg:w="2"/><text x="81.3250%" y="911.50"></text></g><g><title>clock_gettime (2 samples, 0.07%)</title><rect x="81.0750%" y="885" width="0.0747%" height="15" fill="rgb(220,221,6)" fg:x="2172" fg:w="2"/><text x="81.3250%" y="895.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="81.1124%" y="869" width="0.0373%" height="15" fill="rgb(225,89,49)" fg:x="2173" fg:w="1"/><text x="81.3624%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (2 samples, 0.07%)</title><rect x="81.1497%" y="949" width="0.0747%" height="15" fill="rgb(218,70,45)" fg:x="2174" fg:w="2"/><text x="81.3997%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.04%)</title><rect x="81.4483%" y="885" width="0.0373%" height="15" fill="rgb(238,166,21)" fg:x="2182" fg:w="1"/><text x="81.6983%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (1 samples, 0.04%)</title><rect x="81.4856%" y="885" width="0.0373%" height="15" fill="rgb(224,141,44)" fg:x="2183" fg:w="1"/><text x="81.7356%" y="895.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="81.4856%" y="869" width="0.0373%" height="15" fill="rgb(230,12,49)" fg:x="2183" fg:w="1"/><text x="81.7356%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="81.4856%" y="853" width="0.0373%" height="15" fill="rgb(212,174,12)" fg:x="2183" fg:w="1"/><text x="81.7356%" y="863.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.04%)</title><rect x="81.4856%" y="837" width="0.0373%" height="15" fill="rgb(246,67,9)" fg:x="2183" fg:w="1"/><text x="81.7356%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.04%)</title><rect x="81.4856%" y="821" width="0.0373%" height="15" fill="rgb(239,35,23)" fg:x="2183" fg:w="1"/><text x="81.7356%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.04%)</title><rect x="81.4856%" y="805" width="0.0373%" height="15" fill="rgb(211,167,0)" fg:x="2183" fg:w="1"/><text x="81.7356%" y="815.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="81.6723%" y="805" width="0.0373%" height="15" fill="rgb(225,119,45)" fg:x="2188" fg:w="1"/><text x="81.9223%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="81.6723%" y="789" width="0.0373%" height="15" fill="rgb(210,162,6)" fg:x="2188" fg:w="1"/><text x="81.9223%" y="799.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.04%)</title><rect x="81.6723%" y="773" width="0.0373%" height="15" fill="rgb(208,118,35)" fg:x="2188" fg:w="1"/><text x="81.9223%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.04%)</title><rect x="81.6723%" y="757" width="0.0373%" height="15" fill="rgb(239,4,53)" fg:x="2188" fg:w="1"/><text x="81.9223%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.04%)</title><rect x="81.6723%" y="741" width="0.0373%" height="15" fill="rgb(213,130,21)" fg:x="2188" fg:w="1"/><text x="81.9223%" y="751.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.11%)</title><rect x="81.9709%" y="789" width="0.1120%" height="15" fill="rgb(235,148,0)" fg:x="2196" fg:w="3"/><text x="82.2209%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3 samples, 0.11%)</title><rect x="81.9709%" y="773" width="0.1120%" height="15" fill="rgb(244,224,18)" fg:x="2196" fg:w="3"/><text x="82.2209%" y="783.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.11%)</title><rect x="81.9709%" y="757" width="0.1120%" height="15" fill="rgb(211,214,4)" fg:x="2196" fg:w="3"/><text x="82.2209%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="82.0829%" y="789" width="0.0373%" height="15" fill="rgb(206,119,25)" fg:x="2199" fg:w="1"/><text x="82.3329%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="82.0829%" y="773" width="0.0373%" height="15" fill="rgb(243,93,47)" fg:x="2199" fg:w="1"/><text x="82.3329%" y="783.50"></text></g><g><title>core::cmp::min (1 samples, 0.04%)</title><rect x="82.3442%" y="725" width="0.0373%" height="15" fill="rgb(224,194,6)" fg:x="2206" fg:w="1"/><text x="82.5942%" y="735.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.04%)</title><rect x="82.3442%" y="709" width="0.0373%" height="15" fill="rgb(243,229,6)" fg:x="2206" fg:w="1"/><text x="82.5942%" y="719.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.04%)</title><rect x="82.3442%" y="693" width="0.0373%" height="15" fill="rgb(207,23,50)" fg:x="2206" fg:w="1"/><text x="82.5942%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.07%)</title><rect x="82.3442%" y="757" width="0.0747%" height="15" fill="rgb(253,192,32)" fg:x="2206" fg:w="2"/><text x="82.5942%" y="767.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select::_{{closure}} (2 samples, 0.07%)</title><rect x="82.3442%" y="741" width="0.0747%" height="15" fill="rgb(213,21,6)" fg:x="2206" fg:w="2"/><text x="82.5942%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.04%)</title><rect x="82.3815%" y="725" width="0.0373%" height="15" fill="rgb(243,151,13)" fg:x="2207" fg:w="1"/><text x="82.6315%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="82.5308%" y="741" width="0.0373%" height="15" fill="rgb(233,165,41)" fg:x="2211" fg:w="1"/><text x="82.7808%" y="751.50"></text></g><g><title>mio::poll::Poll::poll (22 samples, 0.82%)</title><rect x="82.1202%" y="789" width="0.8212%" height="15" fill="rgb(246,176,45)" fg:x="2200" fg:w="22"/><text x="82.3702%" y="799.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (21 samples, 0.78%)</title><rect x="82.1575%" y="773" width="0.7839%" height="15" fill="rgb(217,170,52)" fg:x="2201" fg:w="21"/><text x="82.4075%" y="783.50"></text></g><g><title>epoll_wait (14 samples, 0.52%)</title><rect x="82.4188%" y="757" width="0.5226%" height="15" fill="rgb(214,203,54)" fg:x="2208" fg:w="14"/><text x="82.6688%" y="767.50"></text></g><g><title>[unknown] (10 samples, 0.37%)</title><rect x="82.5681%" y="741" width="0.3733%" height="15" fill="rgb(248,215,49)" fg:x="2212" fg:w="10"/><text x="82.8181%" y="751.50"></text></g><g><title>[unknown] (10 samples, 0.37%)</title><rect x="82.5681%" y="725" width="0.3733%" height="15" fill="rgb(208,46,10)" fg:x="2212" fg:w="10"/><text x="82.8181%" y="735.50"></text></g><g><title>[unknown] (8 samples, 0.30%)</title><rect x="82.6428%" y="709" width="0.2986%" height="15" fill="rgb(254,5,31)" fg:x="2214" fg:w="8"/><text x="82.8928%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.22%)</title><rect x="82.7174%" y="693" width="0.2240%" height="15" fill="rgb(222,104,33)" fg:x="2216" fg:w="6"/><text x="82.9674%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="82.8667%" y="677" width="0.0747%" height="15" fill="rgb(248,49,16)" fg:x="2220" fg:w="2"/><text x="83.1167%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="82.9041%" y="661" width="0.0373%" height="15" fill="rgb(232,198,41)" fg:x="2221" fg:w="1"/><text x="83.1541%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="82.9041%" y="645" width="0.0373%" height="15" fill="rgb(214,125,3)" fg:x="2221" fg:w="1"/><text x="83.1541%" y="655.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (3 samples, 0.11%)</title><rect x="82.9414%" y="789" width="0.1120%" height="15" fill="rgb(229,220,28)" fg:x="2222" fg:w="3"/><text x="83.1914%" y="799.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="83.1280%" y="773" width="0.0373%" height="15" fill="rgb(222,64,37)" fg:x="2227" fg:w="1"/><text x="83.3780%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="83.1280%" y="757" width="0.0373%" height="15" fill="rgb(249,184,13)" fg:x="2227" fg:w="1"/><text x="83.3780%" y="767.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="83.1280%" y="741" width="0.0373%" height="15" fill="rgb(252,176,6)" fg:x="2227" fg:w="1"/><text x="83.3780%" y="751.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.04%)</title><rect x="83.1280%" y="725" width="0.0373%" height="15" fill="rgb(228,153,7)" fg:x="2227" fg:w="1"/><text x="83.3780%" y="735.50"></text></g><g><title>std::thread::panicking (1 samples, 0.04%)</title><rect x="83.1280%" y="709" width="0.0373%" height="15" fill="rgb(242,193,5)" fg:x="2227" fg:w="1"/><text x="83.3780%" y="719.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.04%)</title><rect x="83.1280%" y="693" width="0.0373%" height="15" fill="rgb(232,140,9)" fg:x="2227" fg:w="1"/><text x="83.3780%" y="703.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="83.1280%" y="677" width="0.0373%" height="15" fill="rgb(213,222,16)" fg:x="2227" fg:w="1"/><text x="83.3780%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="83.2027%" y="709" width="0.0373%" height="15" fill="rgb(222,75,50)" fg:x="2229" fg:w="1"/><text x="83.4527%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="83.2027%" y="693" width="0.0373%" height="15" fill="rgb(205,180,2)" fg:x="2229" fg:w="1"/><text x="83.4527%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (1 samples, 0.04%)</title><rect x="83.2400%" y="709" width="0.0373%" height="15" fill="rgb(216,34,7)" fg:x="2230" fg:w="1"/><text x="83.4900%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.04%)</title><rect x="83.2400%" y="693" width="0.0373%" height="15" fill="rgb(253,16,32)" fg:x="2230" fg:w="1"/><text x="83.4900%" y="703.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.04%)</title><rect x="83.3893%" y="629" width="0.0373%" height="15" fill="rgb(208,97,28)" fg:x="2234" fg:w="1"/><text x="83.6393%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="83.3893%" y="613" width="0.0373%" height="15" fill="rgb(225,92,11)" fg:x="2234" fg:w="1"/><text x="83.6393%" y="623.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.04%)</title><rect x="83.5386%" y="565" width="0.0373%" height="15" fill="rgb(243,38,12)" fg:x="2238" fg:w="1"/><text x="83.7886%" y="575.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.04%)</title><rect x="83.5386%" y="549" width="0.0373%" height="15" fill="rgb(208,139,16)" fg:x="2238" fg:w="1"/><text x="83.7886%" y="559.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.04%)</title><rect x="83.5386%" y="533" width="0.0373%" height="15" fill="rgb(227,24,9)" fg:x="2238" fg:w="1"/><text x="83.7886%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::ptr_eq (1 samples, 0.04%)</title><rect x="83.5760%" y="565" width="0.0373%" height="15" fill="rgb(206,62,11)" fg:x="2239" fg:w="1"/><text x="83.8260%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (10 samples, 0.37%)</title><rect x="83.3147%" y="693" width="0.3733%" height="15" fill="rgb(228,134,27)" fg:x="2232" fg:w="10"/><text x="83.5647%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (8 samples, 0.30%)</title><rect x="83.3893%" y="677" width="0.2986%" height="15" fill="rgb(205,55,33)" fg:x="2234" fg:w="8"/><text x="83.6393%" y="687.50"></text></g><g><title>tokio::runtime::context::with_scheduler (8 samples, 0.30%)</title><rect x="83.3893%" y="661" width="0.2986%" height="15" fill="rgb(243,75,43)" fg:x="2234" fg:w="8"/><text x="83.6393%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.30%)</title><rect x="83.3893%" y="645" width="0.2986%" height="15" fill="rgb(223,27,42)" fg:x="2234" fg:w="8"/><text x="83.6393%" y="655.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (7 samples, 0.26%)</title><rect x="83.4267%" y="629" width="0.2613%" height="15" fill="rgb(232,189,33)" fg:x="2235" fg:w="7"/><text x="83.6767%" y="639.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (5 samples, 0.19%)</title><rect x="83.5013%" y="613" width="0.1866%" height="15" fill="rgb(210,9,39)" fg:x="2237" fg:w="5"/><text x="83.7513%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (5 samples, 0.19%)</title><rect x="83.5013%" y="597" width="0.1866%" height="15" fill="rgb(242,85,26)" fg:x="2237" fg:w="5"/><text x="83.7513%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (4 samples, 0.15%)</title><rect x="83.5386%" y="581" width="0.1493%" height="15" fill="rgb(248,44,4)" fg:x="2238" fg:w="4"/><text x="83.7886%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (2 samples, 0.07%)</title><rect x="83.6133%" y="565" width="0.0747%" height="15" fill="rgb(250,96,46)" fg:x="2240" fg:w="2"/><text x="83.8633%" y="575.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (19 samples, 0.71%)</title><rect x="83.2773%" y="709" width="0.7092%" height="15" fill="rgb(229,116,26)" fg:x="2231" fg:w="19"/><text x="83.5273%" y="719.50"></text></g><g><title>tokio::runtime::task::raw::schedule (8 samples, 0.30%)</title><rect x="83.6879%" y="693" width="0.2986%" height="15" fill="rgb(246,94,34)" fg:x="2242" fg:w="8"/><text x="83.9379%" y="703.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (8 samples, 0.30%)</title><rect x="83.6879%" y="677" width="0.2986%" height="15" fill="rgb(251,73,21)" fg:x="2242" fg:w="8"/><text x="83.9379%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="83.9492%" y="661" width="0.0373%" height="15" fill="rgb(254,121,25)" fg:x="2249" fg:w="1"/><text x="84.1992%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::load (8 samples, 0.30%)</title><rect x="83.9866%" y="677" width="0.2986%" height="15" fill="rgb(215,161,49)" fg:x="2250" fg:w="8"/><text x="84.2366%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.30%)</title><rect x="83.9866%" y="661" width="0.2986%" height="15" fill="rgb(221,43,13)" fg:x="2250" fg:w="8"/><text x="84.2366%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.30%)</title><rect x="83.9866%" y="645" width="0.2986%" height="15" fill="rgb(249,5,37)" fg:x="2250" fg:w="8"/><text x="84.2366%" y="655.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (71 samples, 2.65%)</title><rect x="81.7096%" y="805" width="2.6502%" height="15" fill="rgb(226,25,44)" fg:x="2189" fg:w="71"/><text x="81.9596%" y="815.50">to..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (35 samples, 1.31%)</title><rect x="83.0534%" y="789" width="1.3065%" height="15" fill="rgb(238,189,16)" fg:x="2225" fg:w="35"/><text x="83.3034%" y="799.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (32 samples, 1.19%)</title><rect x="83.1654%" y="773" width="1.1945%" height="15" fill="rgb(251,186,8)" fg:x="2228" fg:w="32"/><text x="83.4154%" y="783.50"></text></g><g><title>core::task::wake::Waker::wake (32 samples, 1.19%)</title><rect x="83.1654%" y="757" width="1.1945%" height="15" fill="rgb(254,34,31)" fg:x="2228" fg:w="32"/><text x="83.4154%" y="767.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (32 samples, 1.19%)</title><rect x="83.1654%" y="741" width="1.1945%" height="15" fill="rgb(225,215,27)" fg:x="2228" fg:w="32"/><text x="83.4154%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (32 samples, 1.19%)</title><rect x="83.1654%" y="725" width="1.1945%" height="15" fill="rgb(221,192,48)" fg:x="2228" fg:w="32"/><text x="83.4154%" y="735.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (10 samples, 0.37%)</title><rect x="83.9866%" y="709" width="0.3733%" height="15" fill="rgb(219,137,20)" fg:x="2250" fg:w="10"/><text x="84.2366%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (10 samples, 0.37%)</title><rect x="83.9866%" y="693" width="0.3733%" height="15" fill="rgb(219,84,11)" fg:x="2250" fg:w="10"/><text x="84.2366%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val::_{{closure}} (2 samples, 0.07%)</title><rect x="84.2852%" y="677" width="0.0747%" height="15" fill="rgb(224,10,23)" fg:x="2258" fg:w="2"/><text x="84.5352%" y="687.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_inc (2 samples, 0.07%)</title><rect x="84.2852%" y="661" width="0.0747%" height="15" fill="rgb(248,22,39)" fg:x="2258" fg:w="2"/><text x="84.5352%" y="671.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 32]&gt;::default (2 samples, 0.07%)</title><rect x="84.5091%" y="773" width="0.0747%" height="15" fill="rgb(212,154,20)" fg:x="2264" fg:w="2"/><text x="84.7591%" y="783.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.04%)</title><rect x="84.5838%" y="773" width="0.0373%" height="15" fill="rgb(236,199,50)" fg:x="2266" fg:w="1"/><text x="84.8338%" y="783.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="84.5838%" y="757" width="0.0373%" height="15" fill="rgb(211,9,17)" fg:x="2266" fg:w="1"/><text x="84.8338%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="84.5838%" y="741" width="0.0373%" height="15" fill="rgb(243,216,36)" fg:x="2266" fg:w="1"/><text x="84.8338%" y="751.50"></text></g><g><title>core::mem::drop (1 samples, 0.04%)</title><rect x="84.6211%" y="773" width="0.0373%" height="15" fill="rgb(250,2,10)" fg:x="2267" fg:w="1"/><text x="84.8711%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::time::InnerState&gt;&gt; (1 samples, 0.04%)</title><rect x="84.6211%" y="757" width="0.0373%" height="15" fill="rgb(226,50,48)" fg:x="2267" fg:w="1"/><text x="84.8711%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="84.6211%" y="741" width="0.0373%" height="15" fill="rgb(243,81,16)" fg:x="2267" fg:w="1"/><text x="84.8711%" y="751.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.04%)</title><rect x="84.6211%" y="725" width="0.0373%" height="15" fill="rgb(250,14,2)" fg:x="2267" fg:w="1"/><text x="84.8711%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (2 samples, 0.07%)</title><rect x="84.6585%" y="773" width="0.0747%" height="15" fill="rgb(233,135,29)" fg:x="2268" fg:w="2"/><text x="84.9085%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.04%)</title><rect x="84.6958%" y="757" width="0.0373%" height="15" fill="rgb(224,64,43)" fg:x="2269" fg:w="1"/><text x="84.9458%" y="767.50"></text></g><g><title>tokio::runtime::time::Inner::lock (5 samples, 0.19%)</title><rect x="84.7331%" y="773" width="0.1866%" height="15" fill="rgb(238,84,13)" fg:x="2270" fg:w="5"/><text x="84.9831%" y="783.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.19%)</title><rect x="84.7331%" y="757" width="0.1866%" height="15" fill="rgb(253,48,26)" fg:x="2270" fg:w="5"/><text x="84.9831%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.19%)</title><rect x="84.7331%" y="741" width="0.1866%" height="15" fill="rgb(205,223,31)" fg:x="2270" fg:w="5"/><text x="84.9831%" y="751.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (5 samples, 0.19%)</title><rect x="84.7331%" y="725" width="0.1866%" height="15" fill="rgb(221,41,32)" fg:x="2270" fg:w="5"/><text x="84.9831%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (5 samples, 0.19%)</title><rect x="84.7331%" y="709" width="0.1866%" height="15" fill="rgb(213,158,31)" fg:x="2270" fg:w="5"/><text x="84.9831%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (5 samples, 0.19%)</title><rect x="84.7331%" y="693" width="0.1866%" height="15" fill="rgb(245,126,43)" fg:x="2270" fg:w="5"/><text x="84.9831%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="85.0691%" y="741" width="0.0373%" height="15" fill="rgb(227,7,22)" fg:x="2279" fg:w="1"/><text x="85.3191%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="85.0691%" y="725" width="0.0373%" height="15" fill="rgb(252,90,44)" fg:x="2279" fg:w="1"/><text x="85.3191%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="85.0691%" y="709" width="0.0373%" height="15" fill="rgb(253,91,0)" fg:x="2279" fg:w="1"/><text x="85.3191%" y="719.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (7 samples, 0.26%)</title><rect x="84.9197%" y="773" width="0.2613%" height="15" fill="rgb(252,175,49)" fg:x="2275" fg:w="7"/><text x="85.1697%" y="783.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (7 samples, 0.26%)</title><rect x="84.9197%" y="757" width="0.2613%" height="15" fill="rgb(246,150,1)" fg:x="2275" fg:w="7"/><text x="85.1697%" y="767.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.07%)</title><rect x="85.1064%" y="741" width="0.0747%" height="15" fill="rgb(241,192,25)" fg:x="2280" fg:w="2"/><text x="85.3564%" y="751.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (20 samples, 0.75%)</title><rect x="84.5091%" y="789" width="0.7465%" height="15" fill="rgb(239,187,11)" fg:x="2264" fg:w="20"/><text x="84.7591%" y="799.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (2 samples, 0.07%)</title><rect x="85.1810%" y="773" width="0.0747%" height="15" fill="rgb(218,202,51)" fg:x="2282" fg:w="2"/><text x="85.4310%" y="783.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.07%)</title><rect x="85.1810%" y="757" width="0.0747%" height="15" fill="rgb(225,176,8)" fg:x="2282" fg:w="2"/><text x="85.4310%" y="767.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.07%)</title><rect x="85.1810%" y="741" width="0.0747%" height="15" fill="rgb(219,122,41)" fg:x="2282" fg:w="2"/><text x="85.4310%" y="751.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (2 samples, 0.07%)</title><rect x="85.1810%" y="725" width="0.0747%" height="15" fill="rgb(248,140,20)" fg:x="2282" fg:w="2"/><text x="85.4310%" y="735.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (39 samples, 1.46%)</title><rect x="84.3598%" y="805" width="1.4558%" height="15" fill="rgb(245,41,37)" fg:x="2260" fg:w="39"/><text x="84.6098%" y="815.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (15 samples, 0.56%)</title><rect x="85.2557%" y="789" width="0.5599%" height="15" fill="rgb(235,82,39)" fg:x="2284" fg:w="15"/><text x="85.5057%" y="799.50"></text></g><g><title>tokio::time::clock::Clock::now (15 samples, 0.56%)</title><rect x="85.2557%" y="773" width="0.5599%" height="15" fill="rgb(230,108,42)" fg:x="2284" fg:w="15"/><text x="85.5057%" y="783.50"></text></g><g><title>tokio::time::clock::now (15 samples, 0.56%)</title><rect x="85.2557%" y="757" width="0.5599%" height="15" fill="rgb(215,150,50)" fg:x="2284" fg:w="15"/><text x="85.5057%" y="767.50"></text></g><g><title>std::time::Instant::now (15 samples, 0.56%)</title><rect x="85.2557%" y="741" width="0.5599%" height="15" fill="rgb(233,212,5)" fg:x="2284" fg:w="15"/><text x="85.5057%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (15 samples, 0.56%)</title><rect x="85.2557%" y="725" width="0.5599%" height="15" fill="rgb(245,80,22)" fg:x="2284" fg:w="15"/><text x="85.5057%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (15 samples, 0.56%)</title><rect x="85.2557%" y="709" width="0.5599%" height="15" fill="rgb(238,129,16)" fg:x="2284" fg:w="15"/><text x="85.5057%" y="719.50"></text></g><g><title>clock_gettime (15 samples, 0.56%)</title><rect x="85.2557%" y="693" width="0.5599%" height="15" fill="rgb(240,19,0)" fg:x="2284" fg:w="15"/><text x="85.5057%" y="703.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.15%)</title><rect x="85.6663%" y="677" width="0.1493%" height="15" fill="rgb(232,42,35)" fg:x="2295" fg:w="4"/><text x="85.9163%" y="687.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (1 samples, 0.04%)</title><rect x="85.8156%" y="805" width="0.0373%" height="15" fill="rgb(223,130,24)" fg:x="2299" fg:w="1"/><text x="86.0656%" y="815.50"></text></g><g><title>tokio::time::clock::Clock::now (1 samples, 0.04%)</title><rect x="85.8156%" y="789" width="0.0373%" height="15" fill="rgb(237,16,22)" fg:x="2299" fg:w="1"/><text x="86.0656%" y="799.50"></text></g><g><title>tokio::time::clock::now (1 samples, 0.04%)</title><rect x="85.8156%" y="773" width="0.0373%" height="15" fill="rgb(248,192,20)" fg:x="2299" fg:w="1"/><text x="86.0656%" y="783.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="85.8156%" y="757" width="0.0373%" height="15" fill="rgb(233,167,2)" fg:x="2299" fg:w="1"/><text x="86.0656%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.04%)</title><rect x="85.8156%" y="741" width="0.0373%" height="15" fill="rgb(252,71,44)" fg:x="2299" fg:w="1"/><text x="86.0656%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="85.8156%" y="725" width="0.0373%" height="15" fill="rgb(238,37,47)" fg:x="2299" fg:w="1"/><text x="86.0656%" y="735.50"></text></g><g><title>clock_gettime (1 samples, 0.04%)</title><rect x="85.8156%" y="709" width="0.0373%" height="15" fill="rgb(214,202,54)" fg:x="2299" fg:w="1"/><text x="86.0656%" y="719.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="85.8156%" y="693" width="0.0373%" height="15" fill="rgb(254,165,40)" fg:x="2299" fg:w="1"/><text x="86.0656%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (120 samples, 4.48%)</title><rect x="81.4483%" y="917" width="4.4793%" height="15" fill="rgb(246,173,38)" fg:x="2182" fg:w="120"/><text x="81.6983%" y="927.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (120 samples, 4.48%)</title><rect x="81.4483%" y="901" width="4.4793%" height="15" fill="rgb(215,3,27)" fg:x="2182" fg:w="120"/><text x="81.6983%" y="911.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (118 samples, 4.40%)</title><rect x="81.5230%" y="885" width="4.4046%" height="15" fill="rgb(239,169,51)" fg:x="2184" fg:w="118"/><text x="81.7730%" y="895.50">tokio..</text></g><g><title>tokio::runtime::driver::Driver::park (115 samples, 4.29%)</title><rect x="81.6349%" y="869" width="4.2926%" height="15" fill="rgb(212,5,25)" fg:x="2187" fg:w="115"/><text x="81.8849%" y="879.50">tokio..</text></g><g><title>tokio::runtime::driver::TimeDriver::park (115 samples, 4.29%)</title><rect x="81.6349%" y="853" width="4.2926%" height="15" fill="rgb(243,45,17)" fg:x="2187" fg:w="115"/><text x="81.8849%" y="863.50">tokio..</text></g><g><title>tokio::runtime::time::Driver::park (115 samples, 4.29%)</title><rect x="81.6349%" y="837" width="4.2926%" height="15" fill="rgb(242,97,9)" fg:x="2187" fg:w="115"/><text x="81.8849%" y="847.50">tokio..</text></g><g><title>tokio::runtime::time::Driver::park_internal (114 samples, 4.26%)</title><rect x="81.6723%" y="821" width="4.2553%" height="15" fill="rgb(228,71,31)" fg:x="2188" fg:w="114"/><text x="81.9223%" y="831.50">tokio..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (2 samples, 0.07%)</title><rect x="85.8529%" y="805" width="0.0747%" height="15" fill="rgb(252,184,16)" fg:x="2300" fg:w="2"/><text x="86.1029%" y="815.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.07%)</title><rect x="85.8529%" y="789" width="0.0747%" height="15" fill="rgb(236,169,46)" fg:x="2300" fg:w="2"/><text x="86.1029%" y="799.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.07%)</title><rect x="85.8529%" y="773" width="0.0747%" height="15" fill="rgb(207,17,47)" fg:x="2300" fg:w="2"/><text x="86.1029%" y="783.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.04%)</title><rect x="85.8903%" y="757" width="0.0373%" height="15" fill="rgb(206,201,28)" fg:x="2301" fg:w="1"/><text x="86.1403%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (122 samples, 4.55%)</title><rect x="81.4483%" y="933" width="4.5539%" height="15" fill="rgb(224,184,23)" fg:x="2182" fg:w="122"/><text x="81.6983%" y="943.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (2 samples, 0.07%)</title><rect x="85.9276%" y="917" width="0.0747%" height="15" fill="rgb(208,139,48)" fg:x="2302" fg:w="2"/><text x="86.1776%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (2 samples, 0.07%)</title><rect x="86.0022%" y="933" width="0.0747%" height="15" fill="rgb(208,130,10)" fg:x="2304" fg:w="2"/><text x="86.2522%" y="943.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="86.0396%" y="917" width="0.0373%" height="15" fill="rgb(211,213,45)" fg:x="2305" fg:w="1"/><text x="86.2896%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="86.0396%" y="901" width="0.0373%" height="15" fill="rgb(235,100,30)" fg:x="2305" fg:w="1"/><text x="86.2896%" y="911.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="86.0396%" y="885" width="0.0373%" height="15" fill="rgb(206,144,31)" fg:x="2305" fg:w="1"/><text x="86.2896%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (1 samples, 0.04%)</title><rect x="86.0769%" y="933" width="0.0373%" height="15" fill="rgb(224,200,26)" fg:x="2306" fg:w="1"/><text x="86.3269%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (1 samples, 0.04%)</title><rect x="86.0769%" y="917" width="0.0373%" height="15" fill="rgb(247,104,53)" fg:x="2306" fg:w="1"/><text x="86.3269%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.04%)</title><rect x="86.0769%" y="901" width="0.0373%" height="15" fill="rgb(220,14,17)" fg:x="2306" fg:w="1"/><text x="86.3269%" y="911.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.04%)</title><rect x="86.0769%" y="885" width="0.0373%" height="15" fill="rgb(230,140,40)" fg:x="2306" fg:w="1"/><text x="86.3269%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.04%)</title><rect x="86.0769%" y="869" width="0.0373%" height="15" fill="rgb(229,2,41)" fg:x="2306" fg:w="1"/><text x="86.3269%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="86.0769%" y="853" width="0.0373%" height="15" fill="rgb(232,89,16)" fg:x="2306" fg:w="1"/><text x="86.3269%" y="863.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="86.0769%" y="837" width="0.0373%" height="15" fill="rgb(247,59,52)" fg:x="2306" fg:w="1"/><text x="86.3269%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (132 samples, 4.93%)</title><rect x="81.2243%" y="949" width="4.9272%" height="15" fill="rgb(226,110,21)" fg:x="2176" fg:w="132"/><text x="81.4743%" y="959.50">tokio:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (1 samples, 0.04%)</title><rect x="86.1142%" y="933" width="0.0373%" height="15" fill="rgb(224,176,43)" fg:x="2307" fg:w="1"/><text x="86.3642%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (1 samples, 0.04%)</title><rect x="86.1142%" y="917" width="0.0373%" height="15" fill="rgb(221,73,6)" fg:x="2307" fg:w="1"/><text x="86.3642%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (1 samples, 0.04%)</title><rect x="86.1142%" y="901" width="0.0373%" height="15" fill="rgb(232,78,19)" fg:x="2307" fg:w="1"/><text x="86.3642%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (1 samples, 0.04%)</title><rect x="86.1142%" y="885" width="0.0373%" height="15" fill="rgb(233,112,48)" fg:x="2307" fg:w="1"/><text x="86.3642%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (1 samples, 0.04%)</title><rect x="86.1142%" y="869" width="0.0373%" height="15" fill="rgb(243,131,47)" fg:x="2307" fg:w="1"/><text x="86.3642%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.04%)</title><rect x="86.1142%" y="853" width="0.0373%" height="15" fill="rgb(226,51,1)" fg:x="2307" fg:w="1"/><text x="86.3642%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="86.1142%" y="837" width="0.0373%" height="15" fill="rgb(247,58,7)" fg:x="2307" fg:w="1"/><text x="86.3642%" y="847.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.04%)</title><rect x="86.1515%" y="933" width="0.0373%" height="15" fill="rgb(209,7,32)" fg:x="2308" fg:w="1"/><text x="86.4015%" y="943.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.04%)</title><rect x="86.1515%" y="917" width="0.0373%" height="15" fill="rgb(209,39,41)" fg:x="2308" fg:w="1"/><text x="86.4015%" y="927.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.04%)</title><rect x="86.1515%" y="901" width="0.0373%" height="15" fill="rgb(226,182,46)" fg:x="2308" fg:w="1"/><text x="86.4015%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="86.1515%" y="885" width="0.0373%" height="15" fill="rgb(230,219,10)" fg:x="2308" fg:w="1"/><text x="86.4015%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="86.1515%" y="869" width="0.0373%" height="15" fill="rgb(227,175,30)" fg:x="2308" fg:w="1"/><text x="86.4015%" y="879.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="86.1515%" y="853" width="0.0373%" height="15" fill="rgb(217,2,50)" fg:x="2308" fg:w="1"/><text x="86.4015%" y="863.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="86.1515%" y="837" width="0.0373%" height="15" fill="rgb(229,160,0)" fg:x="2308" fg:w="1"/><text x="86.4015%" y="847.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.04%)</title><rect x="86.1889%" y="901" width="0.0373%" height="15" fill="rgb(207,78,37)" fg:x="2309" fg:w="1"/><text x="86.4389%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="86.1889%" y="885" width="0.0373%" height="15" fill="rgb(225,57,0)" fg:x="2309" fg:w="1"/><text x="86.4389%" y="895.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1 samples, 0.04%)</title><rect x="86.1889%" y="869" width="0.0373%" height="15" fill="rgb(232,154,2)" fg:x="2309" fg:w="1"/><text x="86.4389%" y="879.50"></text></g><g><title>tokio::runtime::coop::with_budget::_{{closure}} (1 samples, 0.04%)</title><rect x="86.1889%" y="853" width="0.0373%" height="15" fill="rgb(241,212,25)" fg:x="2309" fg:w="1"/><text x="86.4389%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="86.1889%" y="837" width="0.0373%" height="15" fill="rgb(226,69,20)" fg:x="2309" fg:w="1"/><text x="86.4389%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="86.1889%" y="821" width="0.0373%" height="15" fill="rgb(247,184,54)" fg:x="2309" fg:w="1"/><text x="86.4389%" y="831.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="86.1889%" y="805" width="0.0373%" height="15" fill="rgb(210,145,0)" fg:x="2309" fg:w="1"/><text x="86.4389%" y="815.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="86.1889%" y="789" width="0.0373%" height="15" fill="rgb(253,82,12)" fg:x="2309" fg:w="1"/><text x="86.4389%" y="799.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.04%)</title><rect x="86.2262%" y="885" width="0.0373%" height="15" fill="rgb(245,42,11)" fg:x="2310" fg:w="1"/><text x="86.4762%" y="895.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.04%)</title><rect x="86.2262%" y="869" width="0.0373%" height="15" fill="rgb(219,147,32)" fg:x="2310" fg:w="1"/><text x="86.4762%" y="879.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.04%)</title><rect x="86.2262%" y="853" width="0.0373%" height="15" fill="rgb(246,12,7)" fg:x="2310" fg:w="1"/><text x="86.4762%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (1 samples, 0.04%)</title><rect x="86.2635%" y="885" width="0.0373%" height="15" fill="rgb(243,50,9)" fg:x="2311" fg:w="1"/><text x="86.5135%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.04%)</title><rect x="86.3382%" y="821" width="0.0373%" height="15" fill="rgb(219,149,6)" fg:x="2313" fg:w="1"/><text x="86.5882%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (1 samples, 0.04%)</title><rect x="86.3382%" y="805" width="0.0373%" height="15" fill="rgb(241,51,42)" fg:x="2313" fg:w="1"/><text x="86.5882%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (1 samples, 0.04%)</title><rect x="86.3382%" y="789" width="0.0373%" height="15" fill="rgb(226,128,27)" fg:x="2313" fg:w="1"/><text x="86.5882%" y="799.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (1 samples, 0.04%)</title><rect x="86.3382%" y="773" width="0.0373%" height="15" fill="rgb(244,144,4)" fg:x="2313" fg:w="1"/><text x="86.5882%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.04%)</title><rect x="86.4128%" y="661" width="0.0373%" height="15" fill="rgb(221,4,13)" fg:x="2315" fg:w="1"/><text x="86.6628%" y="671.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="86.4128%" y="645" width="0.0373%" height="15" fill="rgb(208,170,28)" fg:x="2315" fg:w="1"/><text x="86.6628%" y="655.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.04%)</title><rect x="86.4128%" y="629" width="0.0373%" height="15" fill="rgb(226,131,13)" fg:x="2315" fg:w="1"/><text x="86.6628%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="86.4128%" y="613" width="0.0373%" height="15" fill="rgb(215,72,41)" fg:x="2315" fg:w="1"/><text x="86.6628%" y="623.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.04%)</title><rect x="86.4128%" y="597" width="0.0373%" height="15" fill="rgb(243,108,20)" fg:x="2315" fg:w="1"/><text x="86.6628%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="86.4128%" y="581" width="0.0373%" height="15" fill="rgb(230,189,17)" fg:x="2315" fg:w="1"/><text x="86.6628%" y="591.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (2 samples, 0.07%)</title><rect x="86.7488%" y="485" width="0.0747%" height="15" fill="rgb(220,50,17)" fg:x="2324" fg:w="2"/><text x="86.9988%" y="495.50"></text></g><g><title>hyper::common::date::update (2 samples, 0.07%)</title><rect x="86.7488%" y="469" width="0.0747%" height="15" fill="rgb(248,152,48)" fg:x="2324" fg:w="2"/><text x="86.9988%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.07%)</title><rect x="86.7488%" y="453" width="0.0747%" height="15" fill="rgb(244,91,11)" fg:x="2324" fg:w="2"/><text x="86.9988%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.07%)</title><rect x="86.7488%" y="437" width="0.0747%" height="15" fill="rgb(220,157,5)" fg:x="2324" fg:w="2"/><text x="86.9988%" y="447.50"></text></g><g><title>hyper::common::date::CACHED::__getit (2 samples, 0.07%)</title><rect x="86.7488%" y="421" width="0.0747%" height="15" fill="rgb(253,137,8)" fg:x="2324" fg:w="2"/><text x="86.9988%" y="431.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (2 samples, 0.07%)</title><rect x="86.7488%" y="405" width="0.0747%" height="15" fill="rgb(217,137,51)" fg:x="2324" fg:w="2"/><text x="86.9988%" y="415.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.07%)</title><rect x="86.7488%" y="389" width="0.0747%" height="15" fill="rgb(218,209,53)" fg:x="2324" fg:w="2"/><text x="86.9988%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.07%)</title><rect x="86.7488%" y="373" width="0.0747%" height="15" fill="rgb(249,137,25)" fg:x="2324" fg:w="2"/><text x="86.9988%" y="383.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::is_done (1 samples, 0.04%)</title><rect x="86.8234%" y="485" width="0.0373%" height="15" fill="rgb(239,155,26)" fg:x="2326" fg:w="1"/><text x="87.0734%" y="495.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::should_poll (1 samples, 0.04%)</title><rect x="86.8234%" y="469" width="0.0373%" height="15" fill="rgb(227,85,46)" fg:x="2326" fg:w="1"/><text x="87.0734%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.04%)</title><rect x="86.8234%" y="453" width="0.0373%" height="15" fill="rgb(251,107,43)" fg:x="2326" fg:w="1"/><text x="87.0734%" y="463.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_flush (1 samples, 0.04%)</title><rect x="86.9354%" y="421" width="0.0373%" height="15" fill="rgb(234,170,33)" fg:x="2329" fg:w="1"/><text x="87.1854%" y="431.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_flush (1 samples, 0.04%)</title><rect x="86.9354%" y="405" width="0.0373%" height="15" fill="rgb(206,29,35)" fg:x="2329" fg:w="1"/><text x="87.1854%" y="415.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.04%)</title><rect x="86.9354%" y="389" width="0.0373%" height="15" fill="rgb(227,138,25)" fg:x="2329" fg:w="1"/><text x="87.1854%" y="399.50"></text></g><g><title>&lt;poem::listener::BoxIo as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.04%)</title><rect x="86.9354%" y="373" width="0.0373%" height="15" fill="rgb(249,131,35)" fg:x="2329" fg:w="1"/><text x="87.1854%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.04%)</title><rect x="86.9354%" y="357" width="0.0373%" height="15" fill="rgb(239,6,40)" fg:x="2329" fg:w="1"/><text x="87.1854%" y="367.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.04%)</title><rect x="86.9354%" y="341" width="0.0373%" height="15" fill="rgb(246,136,47)" fg:x="2329" fg:w="1"/><text x="87.1854%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="86.9354%" y="325" width="0.0373%" height="15" fill="rgb(253,58,26)" fg:x="2329" fg:w="1"/><text x="87.1854%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.04%)</title><rect x="86.9354%" y="309" width="0.0373%" height="15" fill="rgb(237,141,10)" fg:x="2329" fg:w="1"/><text x="87.1854%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="86.9354%" y="293" width="0.0373%" height="15" fill="rgb(234,156,12)" fg:x="2329" fg:w="1"/><text x="87.1854%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="86.9728%" y="309" width="0.0373%" height="15" fill="rgb(243,224,36)" fg:x="2330" fg:w="1"/><text x="87.2228%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.04%)</title><rect x="86.9728%" y="293" width="0.0373%" height="15" fill="rgb(205,229,51)" fg:x="2330" fg:w="1"/><text x="87.2228%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="86.9728%" y="277" width="0.0373%" height="15" fill="rgb(223,189,4)" fg:x="2330" fg:w="1"/><text x="87.2228%" y="287.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (2 samples, 0.07%)</title><rect x="87.0101%" y="229" width="0.0747%" height="15" fill="rgb(249,167,54)" fg:x="2331" fg:w="2"/><text x="87.2601%" y="239.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.07%)</title><rect x="87.0101%" y="213" width="0.0747%" height="15" fill="rgb(218,34,28)" fg:x="2331" fg:w="2"/><text x="87.2601%" y="223.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2 samples, 0.07%)</title><rect x="87.0101%" y="197" width="0.0747%" height="15" fill="rgb(232,109,42)" fg:x="2331" fg:w="2"/><text x="87.2601%" y="207.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (2 samples, 0.07%)</title><rect x="87.0101%" y="181" width="0.0747%" height="15" fill="rgb(248,214,46)" fg:x="2331" fg:w="2"/><text x="87.2601%" y="191.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.07%)</title><rect x="87.0101%" y="165" width="0.0747%" height="15" fill="rgb(244,216,40)" fg:x="2331" fg:w="2"/><text x="87.2601%" y="175.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.07%)</title><rect x="87.0101%" y="149" width="0.0747%" height="15" fill="rgb(231,226,31)" fg:x="2331" fg:w="2"/><text x="87.2601%" y="159.50"></text></g><g><title>__send (2 samples, 0.07%)</title><rect x="87.0101%" y="133" width="0.0747%" height="15" fill="rgb(238,38,43)" fg:x="2331" fg:w="2"/><text x="87.2601%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="87.0101%" y="117" width="0.0747%" height="15" fill="rgb(208,88,43)" fg:x="2331" fg:w="2"/><text x="87.2601%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="87.0474%" y="101" width="0.0373%" height="15" fill="rgb(205,136,37)" fg:x="2332" fg:w="1"/><text x="87.2974%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="87.0474%" y="85" width="0.0373%" height="15" fill="rgb(237,34,14)" fg:x="2332" fg:w="1"/><text x="87.2974%" y="95.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (6 samples, 0.22%)</title><rect x="86.8981%" y="469" width="0.2240%" height="15" fill="rgb(236,193,44)" fg:x="2328" fg:w="6"/><text x="87.1481%" y="479.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (5 samples, 0.19%)</title><rect x="86.9354%" y="453" width="0.1866%" height="15" fill="rgb(231,48,10)" fg:x="2329" fg:w="5"/><text x="87.1854%" y="463.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (5 samples, 0.19%)</title><rect x="86.9354%" y="437" width="0.1866%" height="15" fill="rgb(213,141,34)" fg:x="2329" fg:w="5"/><text x="87.1854%" y="447.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush_flattened (4 samples, 0.15%)</title><rect x="86.9728%" y="421" width="0.1493%" height="15" fill="rgb(249,130,34)" fg:x="2330" fg:w="4"/><text x="87.2228%" y="431.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (4 samples, 0.15%)</title><rect x="86.9728%" y="405" width="0.1493%" height="15" fill="rgb(219,42,41)" fg:x="2330" fg:w="4"/><text x="87.2228%" y="415.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (4 samples, 0.15%)</title><rect x="86.9728%" y="389" width="0.1493%" height="15" fill="rgb(224,100,54)" fg:x="2330" fg:w="4"/><text x="87.2228%" y="399.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (4 samples, 0.15%)</title><rect x="86.9728%" y="373" width="0.1493%" height="15" fill="rgb(229,200,27)" fg:x="2330" fg:w="4"/><text x="87.2228%" y="383.50"></text></g><g><title>&lt;poem::listener::BoxIo as tokio::io::async_write::AsyncWrite&gt;::poll_write (4 samples, 0.15%)</title><rect x="86.9728%" y="357" width="0.1493%" height="15" fill="rgb(217,118,10)" fg:x="2330" fg:w="4"/><text x="87.2228%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (4 samples, 0.15%)</title><rect x="86.9728%" y="341" width="0.1493%" height="15" fill="rgb(206,22,3)" fg:x="2330" fg:w="4"/><text x="87.2228%" y="351.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (4 samples, 0.15%)</title><rect x="86.9728%" y="325" width="0.1493%" height="15" fill="rgb(232,163,46)" fg:x="2330" fg:w="4"/><text x="87.2228%" y="335.50"></text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (3 samples, 0.11%)</title><rect x="87.0101%" y="309" width="0.1120%" height="15" fill="rgb(206,95,13)" fg:x="2331" fg:w="3"/><text x="87.2601%" y="319.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write::_{{closure}} (3 samples, 0.11%)</title><rect x="87.0101%" y="293" width="0.1120%" height="15" fill="rgb(253,154,18)" fg:x="2331" fg:w="3"/><text x="87.2601%" y="303.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (3 samples, 0.11%)</title><rect x="87.0101%" y="277" width="0.1120%" height="15" fill="rgb(219,32,23)" fg:x="2331" fg:w="3"/><text x="87.2601%" y="287.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (3 samples, 0.11%)</title><rect x="87.0101%" y="261" width="0.1120%" height="15" fill="rgb(230,191,45)" fg:x="2331" fg:w="3"/><text x="87.2601%" y="271.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (3 samples, 0.11%)</title><rect x="87.0101%" y="245" width="0.1120%" height="15" fill="rgb(229,64,36)" fg:x="2331" fg:w="3"/><text x="87.2601%" y="255.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (1 samples, 0.04%)</title><rect x="87.0847%" y="229" width="0.0373%" height="15" fill="rgb(205,129,25)" fg:x="2333" fg:w="1"/><text x="87.3347%" y="239.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.04%)</title><rect x="87.0847%" y="213" width="0.0373%" height="15" fill="rgb(254,112,7)" fg:x="2333" fg:w="1"/><text x="87.3347%" y="223.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1 samples, 0.04%)</title><rect x="87.1594%" y="373" width="0.0373%" height="15" fill="rgb(226,53,48)" fg:x="2335" fg:w="1"/><text x="87.4094%" y="383.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.04%)</title><rect x="87.1594%" y="357" width="0.0373%" height="15" fill="rgb(214,153,38)" fg:x="2335" fg:w="1"/><text x="87.4094%" y="367.50"></text></g><g><title>&lt;poem::listener::BoxIo as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.04%)</title><rect x="87.1594%" y="341" width="0.0373%" height="15" fill="rgb(243,101,7)" fg:x="2335" fg:w="1"/><text x="87.4094%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.04%)</title><rect x="87.1594%" y="325" width="0.0373%" height="15" fill="rgb(240,140,22)" fg:x="2335" fg:w="1"/><text x="87.4094%" y="335.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.04%)</title><rect x="87.1594%" y="309" width="0.0373%" height="15" fill="rgb(235,114,2)" fg:x="2335" fg:w="1"/><text x="87.4094%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="87.1594%" y="293" width="0.0373%" height="15" fill="rgb(242,59,12)" fg:x="2335" fg:w="1"/><text x="87.4094%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.04%)</title><rect x="87.1594%" y="277" width="0.0373%" height="15" fill="rgb(252,134,9)" fg:x="2335" fg:w="1"/><text x="87.4094%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="87.1594%" y="261" width="0.0373%" height="15" fill="rgb(236,4,44)" fg:x="2335" fg:w="1"/><text x="87.4094%" y="271.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (2 samples, 0.07%)</title><rect x="87.1594%" y="389" width="0.0747%" height="15" fill="rgb(254,172,41)" fg:x="2335" fg:w="2"/><text x="87.4094%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="87.1967%" y="373" width="0.0373%" height="15" fill="rgb(244,63,20)" fg:x="2336" fg:w="1"/><text x="87.4467%" y="383.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="87.1967%" y="357" width="0.0373%" height="15" fill="rgb(250,73,31)" fg:x="2336" fg:w="1"/><text x="87.4467%" y="367.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="87.1967%" y="341" width="0.0373%" height="15" fill="rgb(241,38,36)" fg:x="2336" fg:w="1"/><text x="87.4467%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="87.2340%" y="357" width="0.0373%" height="15" fill="rgb(245,211,2)" fg:x="2337" fg:w="1"/><text x="87.4840%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="87.2340%" y="341" width="0.0373%" height="15" fill="rgb(206,120,28)" fg:x="2337" fg:w="1"/><text x="87.4840%" y="351.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (66 samples, 2.46%)</title><rect x="87.1221%" y="453" width="2.4636%" height="15" fill="rgb(211,59,34)" fg:x="2334" fg:w="66"/><text x="87.3721%" y="463.50">hy..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::mid_message_detect_eof (66 samples, 2.46%)</title><rect x="87.1221%" y="437" width="2.4636%" height="15" fill="rgb(233,168,5)" fg:x="2334" fg:w="66"/><text x="87.3721%" y="447.50">hy..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (65 samples, 2.43%)</title><rect x="87.1594%" y="421" width="2.4263%" height="15" fill="rgb(234,33,13)" fg:x="2335" fg:w="65"/><text x="87.4094%" y="431.50">hy..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (65 samples, 2.43%)</title><rect x="87.1594%" y="405" width="2.4263%" height="15" fill="rgb(231,150,26)" fg:x="2335" fg:w="65"/><text x="87.4094%" y="415.50">hy..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve (63 samples, 2.35%)</title><rect x="87.2340%" y="389" width="2.3516%" height="15" fill="rgb(217,191,4)" fg:x="2337" fg:w="63"/><text x="87.4840%" y="399.50">b..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (63 samples, 2.35%)</title><rect x="87.2340%" y="373" width="2.3516%" height="15" fill="rgb(246,198,38)" fg:x="2337" fg:w="63"/><text x="87.4840%" y="383.50">b..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (62 samples, 2.31%)</title><rect x="87.2714%" y="357" width="2.3143%" height="15" fill="rgb(245,64,37)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="367.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (62 samples, 2.31%)</title><rect x="87.2714%" y="341" width="2.3143%" height="15" fill="rgb(250,30,36)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="351.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62 samples, 2.31%)</title><rect x="87.2714%" y="325" width="2.3143%" height="15" fill="rgb(217,86,53)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="335.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (62 samples, 2.31%)</title><rect x="87.2714%" y="309" width="2.3143%" height="15" fill="rgb(228,157,16)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="319.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 2.31%)</title><rect x="87.2714%" y="293" width="2.3143%" height="15" fill="rgb(217,59,31)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="303.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (62 samples, 2.31%)</title><rect x="87.2714%" y="277" width="2.3143%" height="15" fill="rgb(237,138,41)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="287.50">a..</text></g><g><title>alloc::alloc::alloc (62 samples, 2.31%)</title><rect x="87.2714%" y="261" width="2.3143%" height="15" fill="rgb(227,91,49)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="271.50">a..</text></g><g><title>__rdl_alloc (62 samples, 2.31%)</title><rect x="87.2714%" y="245" width="2.3143%" height="15" fill="rgb(247,21,44)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="255.50">_..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (62 samples, 2.31%)</title><rect x="87.2714%" y="229" width="2.3143%" height="15" fill="rgb(219,210,51)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="239.50">s..</text></g><g><title>malloc (62 samples, 2.31%)</title><rect x="87.2714%" y="213" width="2.3143%" height="15" fill="rgb(209,140,6)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="223.50">m..</text></g><g><title>[libc.so.6] (62 samples, 2.31%)</title><rect x="87.2714%" y="197" width="2.3143%" height="15" fill="rgb(221,188,24)" fg:x="2338" fg:w="62"/><text x="87.5214%" y="207.50">[..</text></g><g><title>[libc.so.6] (55 samples, 2.05%)</title><rect x="87.5327%" y="181" width="2.0530%" height="15" fill="rgb(232,154,20)" fg:x="2345" fg:w="55"/><text x="87.7827%" y="191.50">[..</text></g><g><title>[libc.so.6] (27 samples, 1.01%)</title><rect x="88.5778%" y="165" width="1.0078%" height="15" fill="rgb(244,137,50)" fg:x="2373" fg:w="27"/><text x="88.8278%" y="175.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="89.7350%" y="373" width="0.0373%" height="15" fill="rgb(225,185,43)" fg:x="2404" fg:w="1"/><text x="89.9850%" y="383.50"></text></g><g><title>&lt;poem::web::addr::LocalAddr as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="89.7723%" y="373" width="0.0373%" height="15" fill="rgb(213,205,38)" fg:x="2405" fg:w="1"/><text x="90.0223%" y="383.50"></text></g><g><title>&lt;poem::addr::Addr as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="89.7723%" y="357" width="0.0373%" height="15" fill="rgb(236,73,12)" fg:x="2405" fg:w="1"/><text x="90.0223%" y="367.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="89.7723%" y="341" width="0.0373%" height="15" fill="rgb(235,219,13)" fg:x="2405" fg:w="1"/><text x="90.0223%" y="351.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (5 samples, 0.19%)</title><rect x="89.6603%" y="437" width="0.1866%" height="15" fill="rgb(218,59,36)" fg:x="2402" fg:w="5"/><text x="89.9103%" y="447.50"></text></g><g><title>&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (4 samples, 0.15%)</title><rect x="89.6976%" y="421" width="0.1493%" height="15" fill="rgb(205,110,39)" fg:x="2403" fg:w="4"/><text x="89.9476%" y="431.50"></text></g><g><title>&lt;hyper::service::util::ServiceFn&lt;F,ReqBody&gt; as hyper::service::service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (4 samples, 0.15%)</title><rect x="89.6976%" y="405" width="0.1493%" height="15" fill="rgb(218,206,42)" fg:x="2403" fg:w="4"/><text x="89.9476%" y="415.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}} (4 samples, 0.15%)</title><rect x="89.6976%" y="389" width="0.1493%" height="15" fill="rgb(248,125,24)" fg:x="2403" fg:w="4"/><text x="89.9476%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="89.8096%" y="373" width="0.0373%" height="15" fill="rgb(242,28,27)" fg:x="2406" fg:w="1"/><text x="90.0596%" y="383.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (2 samples, 0.07%)</title><rect x="89.8843%" y="421" width="0.0747%" height="15" fill="rgb(216,228,15)" fg:x="2408" fg:w="2"/><text x="90.1343%" y="431.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get2 (2 samples, 0.07%)</title><rect x="89.8843%" y="405" width="0.0747%" height="15" fill="rgb(235,116,46)" fg:x="2408" fg:w="2"/><text x="90.1343%" y="415.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (2 samples, 0.07%)</title><rect x="89.8843%" y="389" width="0.0747%" height="15" fill="rgb(224,18,32)" fg:x="2408" fg:w="2"/><text x="90.1343%" y="399.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (2 samples, 0.07%)</title><rect x="89.8843%" y="373" width="0.0747%" height="15" fill="rgb(252,5,12)" fg:x="2408" fg:w="2"/><text x="90.1343%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (2 samples, 0.07%)</title><rect x="89.8843%" y="357" width="0.0747%" height="15" fill="rgb(251,36,5)" fg:x="2408" fg:w="2"/><text x="90.1343%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.07%)</title><rect x="89.8843%" y="341" width="0.0747%" height="15" fill="rgb(217,53,14)" fg:x="2408" fg:w="2"/><text x="90.1343%" y="351.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (78 samples, 2.91%)</title><rect x="87.1221%" y="469" width="2.9115%" height="15" fill="rgb(215,86,45)" fg:x="2334" fg:w="78"/><text x="87.3721%" y="479.50">hy..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (12 samples, 0.45%)</title><rect x="89.5857%" y="453" width="0.4479%" height="15" fill="rgb(242,169,11)" fg:x="2400" fg:w="12"/><text x="89.8357%" y="463.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (5 samples, 0.19%)</title><rect x="89.8470%" y="437" width="0.1866%" height="15" fill="rgb(211,213,45)" fg:x="2407" fg:w="5"/><text x="90.0970%" y="447.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (2 samples, 0.07%)</title><rect x="89.9589%" y="421" width="0.0747%" height="15" fill="rgb(205,88,11)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="431.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (2 samples, 0.07%)</title><rect x="89.9589%" y="405" width="0.0747%" height="15" fill="rgb(252,69,26)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="415.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (2 samples, 0.07%)</title><rect x="89.9589%" y="389" width="0.0747%" height="15" fill="rgb(246,123,37)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="399.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (2 samples, 0.07%)</title><rect x="89.9589%" y="373" width="0.0747%" height="15" fill="rgb(212,205,5)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="383.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.07%)</title><rect x="89.9589%" y="357" width="0.0747%" height="15" fill="rgb(253,148,0)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="367.50"></text></g><g><title>&lt;poem::listener::BoxIo as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.07%)</title><rect x="89.9589%" y="341" width="0.0747%" height="15" fill="rgb(239,22,4)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.07%)</title><rect x="89.9589%" y="325" width="0.0747%" height="15" fill="rgb(226,26,53)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="335.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.07%)</title><rect x="89.9589%" y="309" width="0.0747%" height="15" fill="rgb(225,229,45)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="319.50"></text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (2 samples, 0.07%)</title><rect x="89.9589%" y="293" width="0.0747%" height="15" fill="rgb(220,60,37)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="303.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::_{{closure}} (2 samples, 0.07%)</title><rect x="89.9589%" y="277" width="0.0747%" height="15" fill="rgb(217,180,35)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="287.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.07%)</title><rect x="89.9589%" y="261" width="0.0747%" height="15" fill="rgb(229,7,53)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="271.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2 samples, 0.07%)</title><rect x="89.9589%" y="245" width="0.0747%" height="15" fill="rgb(254,137,3)" fg:x="2410" fg:w="2"/><text x="90.2089%" y="255.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.04%)</title><rect x="89.9963%" y="229" width="0.0373%" height="15" fill="rgb(215,140,41)" fg:x="2411" fg:w="1"/><text x="90.2463%" y="239.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="89.9963%" y="213" width="0.0373%" height="15" fill="rgb(250,80,15)" fg:x="2411" fg:w="1"/><text x="90.2463%" y="223.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.04%)</title><rect x="89.9963%" y="197" width="0.0373%" height="15" fill="rgb(252,191,6)" fg:x="2411" fg:w="1"/><text x="90.2463%" y="207.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.04%)</title><rect x="89.9963%" y="181" width="0.0373%" height="15" fill="rgb(246,217,18)" fg:x="2411" fg:w="1"/><text x="90.2463%" y="191.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1 samples, 0.04%)</title><rect x="89.9963%" y="165" width="0.0373%" height="15" fill="rgb(223,93,7)" fg:x="2411" fg:w="1"/><text x="90.2463%" y="175.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="89.9963%" y="149" width="0.0373%" height="15" fill="rgb(225,55,52)" fg:x="2411" fg:w="1"/><text x="90.2463%" y="159.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.04%)</title><rect x="89.9963%" y="133" width="0.0373%" height="15" fill="rgb(240,31,24)" fg:x="2411" fg:w="1"/><text x="90.2463%" y="143.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1 samples, 0.04%)</title><rect x="89.9963%" y="117" width="0.0373%" height="15" fill="rgb(205,56,52)" fg:x="2411" fg:w="1"/><text x="90.2463%" y="127.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1 samples, 0.04%)</title><rect x="89.9963%" y="101" width="0.0373%" height="15" fill="rgb(246,146,12)" fg:x="2411" fg:w="1"/><text x="90.2463%" y="111.50"></text></g><g><title>recv (1 samples, 0.04%)</title><rect x="89.9963%" y="85" width="0.0373%" height="15" fill="rgb(239,84,36)" fg:x="2411" fg:w="1"/><text x="90.2463%" y="95.50"></text></g><g><title>&lt;http_body_util::combinators::box_body::BoxBody&lt;D,E&gt; as http_body::Body&gt;::is_end_stream (1 samples, 0.04%)</title><rect x="90.0709%" y="453" width="0.0373%" height="15" fill="rgb(207,41,40)" fg:x="2413" fg:w="1"/><text x="90.3209%" y="463.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as http_body::Body&gt;::is_end_stream (1 samples, 0.04%)</title><rect x="90.0709%" y="437" width="0.0373%" height="15" fill="rgb(241,179,25)" fg:x="2413" fg:w="1"/><text x="90.3209%" y="447.50"></text></g><g><title>&lt;http_body_util::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::is_end_stream (1 samples, 0.04%)</title><rect x="90.0709%" y="421" width="0.0373%" height="15" fill="rgb(210,0,34)" fg:x="2413" fg:w="1"/><text x="90.3209%" y="431.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (2 samples, 0.07%)</title><rect x="90.1082%" y="437" width="0.0747%" height="15" fill="rgb(225,217,29)" fg:x="2414" fg:w="2"/><text x="90.3582%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;poem::server::serve_connection&lt;poem::listener::BoxIo&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.07%)</title><rect x="90.1082%" y="421" width="0.0747%" height="15" fill="rgb(216,191,38)" fg:x="2414" fg:w="2"/><text x="90.3582%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::server::serve_connection&lt;poem::listener::BoxIo&gt;::{{closure}}::{{closure}}::{{closure}}&gt; (2 samples, 0.07%)</title><rect x="90.1082%" y="405" width="0.0747%" height="15" fill="rgb(232,140,52)" fg:x="2414" fg:w="2"/><text x="90.3582%" y="415.50"></text></g><g><title>&lt;http::uri::Uri as core::clone::Clone&gt;::clone (3 samples, 0.11%)</title><rect x="90.1829%" y="389" width="0.1120%" height="15" fill="rgb(223,158,51)" fg:x="2416" fg:w="3"/><text x="90.4329%" y="399.50"></text></g><g><title>&lt;http::uri::authority::Authority as core::clone::Clone&gt;::clone (3 samples, 0.11%)</title><rect x="90.1829%" y="373" width="0.1120%" height="15" fill="rgb(235,29,51)" fg:x="2416" fg:w="3"/><text x="90.4329%" y="383.50"></text></g><g><title>&lt;http::byte_str::ByteStr as core::clone::Clone&gt;::clone (3 samples, 0.11%)</title><rect x="90.1829%" y="357" width="0.1120%" height="15" fill="rgb(215,181,18)" fg:x="2416" fg:w="3"/><text x="90.4329%" y="367.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (3 samples, 0.11%)</title><rect x="90.1829%" y="341" width="0.1120%" height="15" fill="rgb(227,125,34)" fg:x="2416" fg:w="3"/><text x="90.4329%" y="351.50"></text></g><g><title>bytes::bytes::static_clone (3 samples, 0.11%)</title><rect x="90.1829%" y="325" width="0.1120%" height="15" fill="rgb(230,197,49)" fg:x="2416" fg:w="3"/><text x="90.4329%" y="335.50"></text></g><g><title>bytes::bytes::Bytes::from_static (3 samples, 0.11%)</title><rect x="90.1829%" y="309" width="0.1120%" height="15" fill="rgb(239,141,16)" fg:x="2416" fg:w="3"/><text x="90.4329%" y="319.50"></text></g><g><title>&lt;poem::request::Request as core::convert::From&lt;(http::request::Request&lt;hyper::body::incoming::Incoming&gt;,poem::web::addr::LocalAddr,poem::web::addr::RemoteAddr,http::uri::scheme::Scheme)&gt;&gt;::from (4 samples, 0.15%)</title><rect x="90.1829%" y="405" width="0.1493%" height="15" fill="rgb(225,105,43)" fg:x="2416" fg:w="4"/><text x="90.4329%" y="415.50"></text></g><g><title>http_body_util::BodyExt::boxed (1 samples, 0.04%)</title><rect x="90.2949%" y="389" width="0.0373%" height="15" fill="rgb(214,131,14)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="399.50"></text></g><g><title>http_body_util::combinators::box_body::BoxBody&lt;D,E&gt;::new (1 samples, 0.04%)</title><rect x="90.2949%" y="373" width="0.0373%" height="15" fill="rgb(229,177,11)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="90.2949%" y="357" width="0.0373%" height="15" fill="rgb(231,180,14)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="90.2949%" y="341" width="0.0373%" height="15" fill="rgb(232,88,2)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="90.2949%" y="325" width="0.0373%" height="15" fill="rgb(205,220,8)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="90.2949%" y="309" width="0.0373%" height="15" fill="rgb(225,23,53)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="90.2949%" y="293" width="0.0373%" height="15" fill="rgb(213,62,29)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="90.2949%" y="277" width="0.0373%" height="15" fill="rgb(227,75,7)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="90.2949%" y="261" width="0.0373%" height="15" fill="rgb(207,105,14)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="271.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="90.2949%" y="245" width="0.0373%" height="15" fill="rgb(245,62,29)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="255.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="90.2949%" y="229" width="0.0373%" height="15" fill="rgb(236,202,4)" fg:x="2419" fg:w="1"/><text x="90.5449%" y="239.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.26%)</title><rect x="90.1829%" y="421" width="0.2613%" height="15" fill="rgb(250,67,1)" fg:x="2416" fg:w="7"/><text x="90.4329%" y="431.50"></text></g><g><title>poem::response::&lt;impl core::convert::From&lt;poem::response::Response&gt; for http::response::Response&lt;http_body_util::combinators::box_body::BoxBody&lt;bytes::bytes::Bytes,std::io::error::Error&gt;&gt;&gt;::from (3 samples, 0.11%)</title><rect x="90.3322%" y="405" width="0.1120%" height="15" fill="rgb(253,115,44)" fg:x="2420" fg:w="3"/><text x="90.5822%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (2 samples, 0.07%)</title><rect x="90.3695%" y="389" width="0.0747%" height="15" fill="rgb(251,139,18)" fg:x="2421" fg:w="2"/><text x="90.6195%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="90.3695%" y="373" width="0.0747%" height="15" fill="rgb(218,22,32)" fg:x="2421" fg:w="2"/><text x="90.6195%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="90.4442%" y="421" width="0.0373%" height="15" fill="rgb(243,53,5)" fg:x="2423" fg:w="1"/><text x="90.6942%" y="431.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="90.6682%" y="293" width="0.1120%" height="15" fill="rgb(227,56,16)" fg:x="2429" fg:w="3"/><text x="90.9182%" y="303.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="90.6682%" y="277" width="0.1120%" height="15" fill="rgb(245,53,0)" fg:x="2429" fg:w="3"/><text x="90.9182%" y="287.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="90.6308%" y="325" width="0.1866%" height="15" fill="rgb(216,170,35)" fg:x="2428" fg:w="5"/><text x="90.8808%" y="335.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (4 samples, 0.15%)</title><rect x="90.6682%" y="309" width="0.1493%" height="15" fill="rgb(211,200,8)" fg:x="2429" fg:w="4"/><text x="90.9182%" y="319.50"></text></g><g><title>&lt;poem::endpoint::endpoint::ToDynEndpoint&lt;E&gt; as poem::endpoint::endpoint::DynEndpoint&gt;::call (1 samples, 0.04%)</title><rect x="90.7801%" y="293" width="0.0373%" height="15" fill="rgb(228,204,44)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="303.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="90.7801%" y="277" width="0.0373%" height="15" fill="rgb(214,121,17)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="287.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="90.7801%" y="261" width="0.0373%" height="15" fill="rgb(233,64,38)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="90.7801%" y="245" width="0.0373%" height="15" fill="rgb(253,54,19)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="255.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="90.7801%" y="229" width="0.0373%" height="15" fill="rgb(253,94,18)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="90.7801%" y="213" width="0.0373%" height="15" fill="rgb(227,57,52)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="90.7801%" y="197" width="0.0373%" height="15" fill="rgb(230,228,50)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="90.7801%" y="181" width="0.0373%" height="15" fill="rgb(217,205,27)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="191.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="90.7801%" y="165" width="0.0373%" height="15" fill="rgb(252,71,50)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="175.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="90.7801%" y="149" width="0.0373%" height="15" fill="rgb(209,86,4)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="159.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="90.7801%" y="133" width="0.0373%" height="15" fill="rgb(229,94,0)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="90.7801%" y="117" width="0.0373%" height="15" fill="rgb(252,223,21)" fg:x="2432" fg:w="1"/><text x="91.0301%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.07%)</title><rect x="90.8175%" y="325" width="0.0747%" height="15" fill="rgb(230,210,4)" fg:x="2433" fg:w="2"/><text x="91.0675%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.07%)</title><rect x="90.8175%" y="309" width="0.0747%" height="15" fill="rgb(240,149,38)" fg:x="2433" fg:w="2"/><text x="91.0675%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.07%)</title><rect x="90.8175%" y="293" width="0.0747%" height="15" fill="rgb(254,105,20)" fg:x="2433" fg:w="2"/><text x="91.0675%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.07%)</title><rect x="90.8175%" y="277" width="0.0747%" height="15" fill="rgb(253,87,46)" fg:x="2433" fg:w="2"/><text x="91.0675%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.07%)</title><rect x="90.8175%" y="261" width="0.0747%" height="15" fill="rgb(253,116,33)" fg:x="2433" fg:w="2"/><text x="91.0675%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="90.8548%" y="245" width="0.0373%" height="15" fill="rgb(229,198,5)" fg:x="2434" fg:w="1"/><text x="91.1048%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="90.8548%" y="229" width="0.0373%" height="15" fill="rgb(242,38,37)" fg:x="2434" fg:w="1"/><text x="91.1048%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="90.8548%" y="213" width="0.0373%" height="15" fill="rgb(242,69,53)" fg:x="2434" fg:w="1"/><text x="91.1048%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="90.8548%" y="197" width="0.0373%" height="15" fill="rgb(249,80,16)" fg:x="2434" fg:w="1"/><text x="91.1048%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;poem::route::router::PathPattern&gt; (1 samples, 0.04%)</title><rect x="90.8921%" y="325" width="0.0373%" height="15" fill="rgb(206,128,11)" fg:x="2435" fg:w="1"/><text x="91.1421%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (1 samples, 0.04%)</title><rect x="90.8921%" y="309" width="0.0373%" height="15" fill="rgb(212,35,20)" fg:x="2435" fg:w="1"/><text x="91.1421%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="90.8921%" y="293" width="0.0373%" height="15" fill="rgb(236,79,13)" fg:x="2435" fg:w="1"/><text x="91.1421%" y="303.50"></text></g><g><title>http::uri::Uri::path (1 samples, 0.04%)</title><rect x="90.9295%" y="325" width="0.0373%" height="15" fill="rgb(233,123,3)" fg:x="2436" fg:w="1"/><text x="91.1795%" y="335.50"></text></g><g><title>http::uri::path::PathAndQuery::path (1 samples, 0.04%)</title><rect x="90.9295%" y="309" width="0.0373%" height="15" fill="rgb(214,93,52)" fg:x="2436" fg:w="1"/><text x="91.1795%" y="319.50"></text></g><g><title>&lt;http::byte_str::ByteStr as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="90.9295%" y="293" width="0.0373%" height="15" fill="rgb(251,37,40)" fg:x="2436" fg:w="1"/><text x="91.1795%" y="303.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (1 samples, 0.04%)</title><rect x="90.9295%" y="277" width="0.0373%" height="15" fill="rgb(227,80,54)" fg:x="2436" fg:w="1"/><text x="91.1795%" y="287.50"></text></g><g><title>bytes::bytes::Bytes::as_slice (1 samples, 0.04%)</title><rect x="90.9295%" y="261" width="0.0373%" height="15" fill="rgb(254,48,11)" fg:x="2436" fg:w="1"/><text x="91.1795%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.04%)</title><rect x="90.9668%" y="293" width="0.0373%" height="15" fill="rgb(235,193,26)" fg:x="2437" fg:w="1"/><text x="91.2168%" y="303.50"></text></g><g><title>http::extensions::Extensions::insert::_{{closure}} (1 samples, 0.04%)</title><rect x="90.9668%" y="277" width="0.0373%" height="15" fill="rgb(229,99,21)" fg:x="2437" fg:w="1"/><text x="91.2168%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.04%)</title><rect x="91.0414%" y="149" width="0.0373%" height="15" fill="rgb(211,140,41)" fg:x="2439" fg:w="1"/><text x="91.2914%" y="159.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.04%)</title><rect x="91.0414%" y="133" width="0.0373%" height="15" fill="rgb(240,227,30)" fg:x="2439" fg:w="1"/><text x="91.2914%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.0414%" y="117" width="0.0373%" height="15" fill="rgb(215,224,45)" fg:x="2439" fg:w="1"/><text x="91.2914%" y="127.50"></text></g><g><title>poem::request::Request::set_data (4 samples, 0.15%)</title><rect x="90.9668%" y="325" width="0.1493%" height="15" fill="rgb(206,123,31)" fg:x="2437" fg:w="4"/><text x="91.2168%" y="335.50"></text></g><g><title>http::extensions::Extensions::insert (4 samples, 0.15%)</title><rect x="90.9668%" y="309" width="0.1493%" height="15" fill="rgb(210,138,16)" fg:x="2437" fg:w="4"/><text x="91.2168%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.11%)</title><rect x="91.0041%" y="293" width="0.1120%" height="15" fill="rgb(228,57,28)" fg:x="2438" fg:w="3"/><text x="91.2541%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.11%)</title><rect x="91.0041%" y="277" width="0.1120%" height="15" fill="rgb(242,170,10)" fg:x="2438" fg:w="3"/><text x="91.2541%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3 samples, 0.11%)</title><rect x="91.0041%" y="261" width="0.1120%" height="15" fill="rgb(228,214,39)" fg:x="2438" fg:w="3"/><text x="91.2541%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.07%)</title><rect x="91.0414%" y="245" width="0.0747%" height="15" fill="rgb(218,179,33)" fg:x="2439" fg:w="2"/><text x="91.2914%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.07%)</title><rect x="91.0414%" y="229" width="0.0747%" height="15" fill="rgb(235,193,39)" fg:x="2439" fg:w="2"/><text x="91.2914%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.07%)</title><rect x="91.0414%" y="213" width="0.0747%" height="15" fill="rgb(219,221,36)" fg:x="2439" fg:w="2"/><text x="91.2914%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.07%)</title><rect x="91.0414%" y="197" width="0.0747%" height="15" fill="rgb(248,218,19)" fg:x="2439" fg:w="2"/><text x="91.2914%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (2 samples, 0.07%)</title><rect x="91.0414%" y="181" width="0.0747%" height="15" fill="rgb(205,50,9)" fg:x="2439" fg:w="2"/><text x="91.2914%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (2 samples, 0.07%)</title><rect x="91.0414%" y="165" width="0.0747%" height="15" fill="rgb(238,81,28)" fg:x="2439" fg:w="2"/><text x="91.2914%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.04%)</title><rect x="91.0788%" y="149" width="0.0373%" height="15" fill="rgb(235,110,19)" fg:x="2440" fg:w="1"/><text x="91.3288%" y="159.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.04%)</title><rect x="91.0788%" y="133" width="0.0373%" height="15" fill="rgb(214,7,14)" fg:x="2440" fg:w="1"/><text x="91.3288%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="91.0788%" y="117" width="0.0373%" height="15" fill="rgb(211,77,3)" fg:x="2440" fg:w="1"/><text x="91.3288%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="91.0788%" y="101" width="0.0373%" height="15" fill="rgb(229,5,9)" fg:x="2440" fg:w="1"/><text x="91.3288%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="91.0788%" y="85" width="0.0373%" height="15" fill="rgb(225,90,11)" fg:x="2440" fg:w="1"/><text x="91.3288%" y="95.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="91.0788%" y="69" width="0.0373%" height="15" fill="rgb(242,56,8)" fg:x="2440" fg:w="1"/><text x="91.3288%" y="79.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="91.0788%" y="53" width="0.0373%" height="15" fill="rgb(249,212,39)" fg:x="2440" fg:w="1"/><text x="91.3288%" y="63.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="91.0788%" y="37" width="0.0373%" height="15" fill="rgb(236,90,9)" fg:x="2440" fg:w="1"/><text x="91.3288%" y="47.50"></text></g><g><title>poem::response::Response::data (1 samples, 0.04%)</title><rect x="91.1161%" y="325" width="0.0373%" height="15" fill="rgb(206,88,35)" fg:x="2441" fg:w="1"/><text x="91.3661%" y="335.50"></text></g><g><title>http::extensions::Extensions::get (1 samples, 0.04%)</title><rect x="91.1161%" y="309" width="0.0373%" height="15" fill="rgb(205,126,30)" fg:x="2441" fg:w="1"/><text x="91.3661%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.04%)</title><rect x="91.1161%" y="293" width="0.0373%" height="15" fill="rgb(230,176,12)" fg:x="2441" fg:w="1"/><text x="91.3661%" y="303.50"></text></g><g><title>http::extensions::Extensions::get::_{{closure}} (1 samples, 0.04%)</title><rect x="91.1161%" y="277" width="0.0373%" height="15" fill="rgb(243,19,9)" fg:x="2441" fg:w="1"/><text x="91.3661%" y="287.50"></text></g><g><title>&lt;T as http::extensions::AnyClone&gt;::as_any (1 samples, 0.04%)</title><rect x="91.1161%" y="261" width="0.0373%" height="15" fill="rgb(245,171,17)" fg:x="2441" fg:w="1"/><text x="91.3661%" y="271.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (1 samples, 0.04%)</title><rect x="91.1907%" y="309" width="0.0373%" height="15" fill="rgb(227,52,21)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="319.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="91.1907%" y="293" width="0.0373%" height="15" fill="rgb(238,69,14)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="91.1907%" y="277" width="0.0373%" height="15" fill="rgb(241,156,39)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="91.1907%" y="261" width="0.0373%" height="15" fill="rgb(212,227,28)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="91.1907%" y="245" width="0.0373%" height="15" fill="rgb(209,118,27)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="91.1907%" y="229" width="0.0373%" height="15" fill="rgb(226,102,5)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="91.1907%" y="213" width="0.0373%" height="15" fill="rgb(223,34,3)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="91.1907%" y="197" width="0.0373%" height="15" fill="rgb(221,81,38)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="91.1907%" y="181" width="0.0373%" height="15" fill="rgb(236,219,28)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="91.1907%" y="165" width="0.0373%" height="15" fill="rgb(213,200,14)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="91.1907%" y="149" width="0.0373%" height="15" fill="rgb(240,33,19)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="91.1907%" y="133" width="0.0373%" height="15" fill="rgb(233,113,27)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="91.1907%" y="117" width="0.0373%" height="15" fill="rgb(220,221,18)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="127.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="91.1907%" y="101" width="0.0373%" height="15" fill="rgb(238,92,8)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="111.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="91.1907%" y="85" width="0.0373%" height="15" fill="rgb(222,164,16)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="95.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="91.1907%" y="69" width="0.0373%" height="15" fill="rgb(241,119,3)" fg:x="2443" fg:w="1"/><text x="91.4407%" y="79.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.07%)</title><rect x="91.2281%" y="309" width="0.0747%" height="15" fill="rgb(241,44,8)" fg:x="2444" fg:w="2"/><text x="91.4781%" y="319.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.07%)</title><rect x="91.2281%" y="293" width="0.0747%" height="15" fill="rgb(230,36,40)" fg:x="2444" fg:w="2"/><text x="91.4781%" y="303.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (22 samples, 0.82%)</title><rect x="90.5935%" y="341" width="0.8212%" height="15" fill="rgb(243,16,36)" fg:x="2427" fg:w="22"/><text x="90.8435%" y="351.50"></text></g><g><title>poem::route::internal::radix_tree::RadixTree&lt;T&gt;::matches (7 samples, 0.26%)</title><rect x="91.1534%" y="325" width="0.2613%" height="15" fill="rgb(231,4,26)" fg:x="2442" fg:w="7"/><text x="91.4034%" y="335.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::matches (3 samples, 0.11%)</title><rect x="91.3027%" y="309" width="0.1120%" height="15" fill="rgb(240,9,31)" fg:x="2446" fg:w="3"/><text x="91.5527%" y="319.50"></text></g><g><title>poem::route::internal::radix_tree::Node&lt;T&gt;::matches (1 samples, 0.04%)</title><rect x="91.3774%" y="293" width="0.0373%" height="15" fill="rgb(207,173,15)" fg:x="2448" fg:w="1"/><text x="91.6274%" y="303.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::truncate (1 samples, 0.04%)</title><rect x="91.3774%" y="277" width="0.0373%" height="15" fill="rgb(224,192,53)" fg:x="2448" fg:w="1"/><text x="91.6274%" y="287.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1 samples, 0.04%)</title><rect x="91.3774%" y="261" width="0.0373%" height="15" fill="rgb(223,67,28)" fg:x="2448" fg:w="1"/><text x="91.6274%" y="271.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (26 samples, 0.97%)</title><rect x="90.4815%" y="373" width="0.9705%" height="15" fill="rgb(211,20,47)" fg:x="2424" fg:w="26"/><text x="90.7315%" y="383.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (26 samples, 0.97%)</title><rect x="90.4815%" y="357" width="0.9705%" height="15" fill="rgb(240,228,2)" fg:x="2424" fg:w="26"/><text x="90.7315%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.4147%" y="341" width="0.0373%" height="15" fill="rgb(248,151,12)" fg:x="2449" fg:w="1"/><text x="91.6647%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.4520%" y="309" width="0.0373%" height="15" fill="rgb(244,8,39)" fg:x="2450" fg:w="1"/><text x="91.7020%" y="319.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (38 samples, 1.42%)</title><rect x="90.1082%" y="453" width="1.4184%" height="15" fill="rgb(222,26,8)" fg:x="2414" fg:w="38"/><text x="90.3582%" y="463.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (36 samples, 1.34%)</title><rect x="90.1829%" y="437" width="1.3438%" height="15" fill="rgb(213,106,44)" fg:x="2416" fg:w="36"/><text x="90.4329%" y="447.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (28 samples, 1.05%)</title><rect x="90.4815%" y="421" width="1.0452%" height="15" fill="rgb(214,129,20)" fg:x="2424" fg:w="28"/><text x="90.7315%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (28 samples, 1.05%)</title><rect x="90.4815%" y="405" width="1.0452%" height="15" fill="rgb(212,32,13)" fg:x="2424" fg:w="28"/><text x="90.7315%" y="415.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (28 samples, 1.05%)</title><rect x="90.4815%" y="389" width="1.0452%" height="15" fill="rgb(208,168,33)" fg:x="2424" fg:w="28"/><text x="90.7315%" y="399.50"></text></g><g><title>&lt;poem::endpoint::endpoint::ToDynEndpoint&lt;E&gt; as poem::endpoint::endpoint::DynEndpoint&gt;::call (2 samples, 0.07%)</title><rect x="91.4520%" y="373" width="0.0747%" height="15" fill="rgb(231,207,8)" fg:x="2450" fg:w="2"/><text x="91.7020%" y="383.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (2 samples, 0.07%)</title><rect x="91.4520%" y="357" width="0.0747%" height="15" fill="rgb(235,219,23)" fg:x="2450" fg:w="2"/><text x="91.7020%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2 samples, 0.07%)</title><rect x="91.4520%" y="341" width="0.0747%" height="15" fill="rgb(226,216,26)" fg:x="2450" fg:w="2"/><text x="91.7020%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.07%)</title><rect x="91.4520%" y="325" width="0.0747%" height="15" fill="rgb(239,137,16)" fg:x="2450" fg:w="2"/><text x="91.7020%" y="335.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="91.4894%" y="309" width="0.0373%" height="15" fill="rgb(207,12,36)" fg:x="2451" fg:w="1"/><text x="91.7394%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="91.4894%" y="293" width="0.0373%" height="15" fill="rgb(210,214,24)" fg:x="2451" fg:w="1"/><text x="91.7394%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="91.4894%" y="277" width="0.0373%" height="15" fill="rgb(206,56,30)" fg:x="2451" fg:w="1"/><text x="91.7394%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="91.4894%" y="261" width="0.0373%" height="15" fill="rgb(228,143,26)" fg:x="2451" fg:w="1"/><text x="91.7394%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="91.4894%" y="245" width="0.0373%" height="15" fill="rgb(216,218,46)" fg:x="2451" fg:w="1"/><text x="91.7394%" y="255.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="91.4894%" y="229" width="0.0373%" height="15" fill="rgb(206,6,19)" fg:x="2451" fg:w="1"/><text x="91.7394%" y="239.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="91.4894%" y="213" width="0.0373%" height="15" fill="rgb(239,177,51)" fg:x="2451" fg:w="1"/><text x="91.7394%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.4894%" y="197" width="0.0373%" height="15" fill="rgb(216,55,25)" fg:x="2451" fg:w="1"/><text x="91.7394%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.04%)</title><rect x="91.5267%" y="453" width="0.0373%" height="15" fill="rgb(231,163,29)" fg:x="2452" fg:w="1"/><text x="91.7767%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.04%)</title><rect x="91.5267%" y="437" width="0.0373%" height="15" fill="rgb(232,149,50)" fg:x="2452" fg:w="1"/><text x="91.7767%" y="447.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_buffer_body (1 samples, 0.04%)</title><rect x="91.5640%" y="453" width="0.0373%" height="15" fill="rgb(223,142,48)" fg:x="2453" fg:w="1"/><text x="91.8140%" y="463.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (1 samples, 0.04%)</title><rect x="91.5640%" y="437" width="0.0373%" height="15" fill="rgb(245,83,23)" fg:x="2453" fg:w="1"/><text x="91.8140%" y="447.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::can_buffer (1 samples, 0.04%)</title><rect x="91.5640%" y="421" width="0.0373%" height="15" fill="rgb(224,63,2)" fg:x="2453" fg:w="1"/><text x="91.8140%" y="431.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (1 samples, 0.04%)</title><rect x="91.5640%" y="405" width="0.0373%" height="15" fill="rgb(218,65,53)" fg:x="2453" fg:w="1"/><text x="91.8140%" y="415.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (1 samples, 0.04%)</title><rect x="91.5640%" y="389" width="0.0373%" height="15" fill="rgb(221,84,29)" fg:x="2453" fg:w="1"/><text x="91.8140%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::iter (1 samples, 0.04%)</title><rect x="91.5640%" y="373" width="0.0373%" height="15" fill="rgb(234,0,32)" fg:x="2453" fg:w="1"/><text x="91.8140%" y="383.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_slices (1 samples, 0.04%)</title><rect x="91.5640%" y="357" width="0.0373%" height="15" fill="rgb(206,20,16)" fg:x="2453" fg:w="1"/><text x="91.8140%" y="367.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::slice_ranges (1 samples, 0.04%)</title><rect x="91.5640%" y="341" width="0.0373%" height="15" fill="rgb(244,172,18)" fg:x="2453" fg:w="1"/><text x="91.8140%" y="351.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_write_body (1 samples, 0.04%)</title><rect x="91.6013%" y="453" width="0.0373%" height="15" fill="rgb(254,133,1)" fg:x="2454" fg:w="1"/><text x="91.8513%" y="463.50"></text></g><g><title>bytes::bytes::shared_drop (3 samples, 0.11%)</title><rect x="91.6760%" y="421" width="0.1120%" height="15" fill="rgb(222,206,41)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="431.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (3 samples, 0.11%)</title><rect x="91.6760%" y="405" width="0.1120%" height="15" fill="rgb(212,3,42)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="415.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (3 samples, 0.11%)</title><rect x="91.6760%" y="389" width="0.1120%" height="15" fill="rgb(241,11,4)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="399.50"></text></g><g><title>bytes::bytes::release_shared (3 samples, 0.11%)</title><rect x="91.6760%" y="373" width="0.1120%" height="15" fill="rgb(205,19,26)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="383.50"></text></g><g><title>core::mem::drop (3 samples, 0.11%)</title><rect x="91.6760%" y="357" width="0.1120%" height="15" fill="rgb(210,179,32)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (3 samples, 0.11%)</title><rect x="91.6760%" y="341" width="0.1120%" height="15" fill="rgb(227,116,49)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (3 samples, 0.11%)</title><rect x="91.6760%" y="325" width="0.1120%" height="15" fill="rgb(211,146,6)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="335.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="91.6760%" y="309" width="0.1120%" height="15" fill="rgb(219,44,39)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.11%)</title><rect x="91.6760%" y="293" width="0.1120%" height="15" fill="rgb(234,128,11)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="303.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.11%)</title><rect x="91.6760%" y="277" width="0.1120%" height="15" fill="rgb(220,183,53)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="287.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.11%)</title><rect x="91.6760%" y="261" width="0.1120%" height="15" fill="rgb(213,219,32)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="271.50"></text></g><g><title>cfree (3 samples, 0.11%)</title><rect x="91.6760%" y="245" width="0.1120%" height="15" fill="rgb(232,156,16)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="255.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="91.6760%" y="229" width="0.1120%" height="15" fill="rgb(246,135,34)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="239.50"></text></g><g><title>[libc.so.6] (3 samples, 0.11%)</title><rect x="91.6760%" y="213" width="0.1120%" height="15" fill="rgb(241,99,0)" fg:x="2456" fg:w="3"/><text x="91.9260%" y="223.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="91.7133%" y="197" width="0.0747%" height="15" fill="rgb(222,103,45)" fg:x="2457" fg:w="2"/><text x="91.9633%" y="207.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="91.7133%" y="181" width="0.0747%" height="15" fill="rgb(212,57,4)" fg:x="2457" fg:w="2"/><text x="91.9633%" y="191.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_body_and_end (16 samples, 0.60%)</title><rect x="91.6387%" y="453" width="0.5972%" height="15" fill="rgb(215,68,47)" fg:x="2455" fg:w="16"/><text x="91.8887%" y="463.50"></text></g><g><title>hyper::proto::h1::encode::Encoder::encode_and_end (16 samples, 0.60%)</title><rect x="91.6387%" y="437" width="0.5972%" height="15" fill="rgb(230,84,2)" fg:x="2455" fg:w="16"/><text x="91.8887%" y="447.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (12 samples, 0.45%)</title><rect x="91.7880%" y="421" width="0.4479%" height="15" fill="rgb(220,102,14)" fg:x="2459" fg:w="12"/><text x="92.0380%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.37%)</title><rect x="91.8626%" y="405" width="0.3733%" height="15" fill="rgb(240,10,32)" fg:x="2461" fg:w="10"/><text x="92.1126%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.37%)</title><rect x="91.8626%" y="389" width="0.3733%" height="15" fill="rgb(215,47,27)" fg:x="2461" fg:w="10"/><text x="92.1126%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.37%)</title><rect x="91.8626%" y="373" width="0.3733%" height="15" fill="rgb(233,188,43)" fg:x="2461" fg:w="10"/><text x="92.1126%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.37%)</title><rect x="91.8626%" y="357" width="0.3733%" height="15" fill="rgb(253,190,1)" fg:x="2461" fg:w="10"/><text x="92.1126%" y="367.50"></text></g><g><title>[libc.so.6] (10 samples, 0.37%)</title><rect x="91.8626%" y="341" width="0.3733%" height="15" fill="rgb(206,114,52)" fg:x="2461" fg:w="10"/><text x="92.1126%" y="351.50"></text></g><g><title>hyper::proto::h1::conn::State::wants_keep_alive (1 samples, 0.04%)</title><rect x="92.3479%" y="421" width="0.0373%" height="15" fill="rgb(233,120,37)" fg:x="2474" fg:w="1"/><text x="92.5979%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (1 samples, 0.04%)</title><rect x="92.4225%" y="389" width="0.0373%" height="15" fill="rgb(214,52,39)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="92.4225%" y="373" width="0.0373%" height="15" fill="rgb(223,80,29)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="92.4225%" y="357" width="0.0373%" height="15" fill="rgb(230,101,40)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="92.4225%" y="341" width="0.0373%" height="15" fill="rgb(219,211,8)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="92.4225%" y="325" width="0.0373%" height="15" fill="rgb(252,126,28)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;)&gt;&gt; (1 samples, 0.04%)</title><rect x="92.4225%" y="309" width="0.0373%" height="15" fill="rgb(215,56,38)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="92.4225%" y="293" width="0.0373%" height="15" fill="rgb(249,55,44)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.04%)</title><rect x="92.4225%" y="277" width="0.0373%" height="15" fill="rgb(220,221,32)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.04%)</title><rect x="92.4225%" y="261" width="0.0373%" height="15" fill="rgb(212,216,41)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.04%)</title><rect x="92.4225%" y="245" width="0.0373%" height="15" fill="rgb(228,213,43)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.04%)</title><rect x="92.4225%" y="229" width="0.0373%" height="15" fill="rgb(211,31,26)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;)&gt; (1 samples, 0.04%)</title><rect x="92.4225%" y="213" width="0.0373%" height="15" fill="rgb(229,202,19)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Sync+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="92.4225%" y="197" width="0.0373%" height="15" fill="rgb(229,105,46)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="207.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="92.4225%" y="181" width="0.0373%" height="15" fill="rgb(235,108,1)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="92.4225%" y="165" width="0.0373%" height="15" fill="rgb(245,111,35)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="92.4225%" y="149" width="0.0373%" height="15" fill="rgb(219,185,31)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="159.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="92.4225%" y="133" width="0.0373%" height="15" fill="rgb(214,4,43)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="143.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="92.4225%" y="117" width="0.0373%" height="15" fill="rgb(235,227,40)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="127.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="92.4225%" y="101" width="0.0373%" height="15" fill="rgb(230,88,30)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="92.4225%" y="85" width="0.0373%" height="15" fill="rgb(216,217,1)" fg:x="2476" fg:w="1"/><text x="92.6725%" y="95.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers_with_lower_case (3 samples, 0.11%)</title><rect x="92.4599%" y="389" width="0.1120%" height="15" fill="rgb(248,139,50)" fg:x="2477" fg:w="3"/><text x="92.7099%" y="399.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers (3 samples, 0.11%)</title><rect x="92.4599%" y="373" width="0.1120%" height="15" fill="rgb(233,1,21)" fg:x="2477" fg:w="3"/><text x="92.7099%" y="383.50"></text></g><g><title>hyper::common::date::extend (1 samples, 0.04%)</title><rect x="92.5345%" y="357" width="0.0373%" height="15" fill="rgb(215,183,12)" fg:x="2479" fg:w="1"/><text x="92.7845%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="92.5345%" y="341" width="0.0373%" height="15" fill="rgb(229,104,42)" fg:x="2479" fg:w="1"/><text x="92.7845%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="92.5345%" y="325" width="0.0373%" height="15" fill="rgb(243,34,48)" fg:x="2479" fg:w="1"/><text x="92.7845%" y="335.50"></text></g><g><title>hyper::common::date::extend::_{{closure}} (1 samples, 0.04%)</title><rect x="92.5345%" y="309" width="0.0373%" height="15" fill="rgb(239,11,44)" fg:x="2479" fg:w="1"/><text x="92.7845%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="92.5345%" y="293" width="0.0373%" height="15" fill="rgb(231,98,35)" fg:x="2479" fg:w="1"/><text x="92.7845%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="92.5345%" y="277" width="0.0373%" height="15" fill="rgb(233,28,25)" fg:x="2479" fg:w="1"/><text x="92.7845%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="92.5345%" y="261" width="0.0373%" height="15" fill="rgb(234,123,11)" fg:x="2479" fg:w="1"/><text x="92.7845%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="92.5345%" y="245" width="0.0373%" height="15" fill="rgb(220,69,3)" fg:x="2479" fg:w="1"/><text x="92.7845%" y="255.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (157 samples, 5.86%)</title><rect x="86.7488%" y="597" width="5.8604%" height="15" fill="rgb(214,64,36)" fg:x="2324" fg:w="157"/><text x="86.9988%" y="607.50">&lt;&amp;mut F..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (157 samples, 5.86%)</title><rect x="86.7488%" y="581" width="5.8604%" height="15" fill="rgb(211,138,32)" fg:x="2324" fg:w="157"/><text x="86.9988%" y="591.50">&lt;core::..</text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (157 samples, 5.86%)</title><rect x="86.7488%" y="565" width="5.8604%" height="15" fill="rgb(213,118,47)" fg:x="2324" fg:w="157"/><text x="86.9988%" y="575.50">&lt;hyper_..</text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (157 samples, 5.86%)</title><rect x="86.7488%" y="549" width="5.8604%" height="15" fill="rgb(243,124,49)" fg:x="2324" fg:w="157"/><text x="86.9988%" y="559.50">&lt;hyper:..</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (157 samples, 5.86%)</title><rect x="86.7488%" y="533" width="5.8604%" height="15" fill="rgb(221,30,28)" fg:x="2324" fg:w="157"/><text x="86.9988%" y="543.50">&lt;hyper:..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (157 samples, 5.86%)</title><rect x="86.7488%" y="517" width="5.8604%" height="15" fill="rgb(246,37,13)" fg:x="2324" fg:w="157"/><text x="86.9988%" y="527.50">hyper::..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (157 samples, 5.86%)</title><rect x="86.7488%" y="501" width="5.8604%" height="15" fill="rgb(249,66,14)" fg:x="2324" fg:w="157"/><text x="86.9988%" y="511.50">hyper::..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (154 samples, 5.75%)</title><rect x="86.8608%" y="485" width="5.7484%" height="15" fill="rgb(213,166,5)" fg:x="2327" fg:w="154"/><text x="87.1108%" y="495.50">hyper::..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (69 samples, 2.58%)</title><rect x="90.0336%" y="469" width="2.5756%" height="15" fill="rgb(221,66,24)" fg:x="2412" fg:w="69"/><text x="90.2836%" y="479.50">hy..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (10 samples, 0.37%)</title><rect x="92.2359%" y="453" width="0.3733%" height="15" fill="rgb(210,132,17)" fg:x="2471" fg:w="10"/><text x="92.4859%" y="463.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (9 samples, 0.34%)</title><rect x="92.2732%" y="437" width="0.3359%" height="15" fill="rgb(243,202,5)" fg:x="2472" fg:w="9"/><text x="92.5232%" y="447.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (6 samples, 0.22%)</title><rect x="92.3852%" y="421" width="0.2240%" height="15" fill="rgb(233,70,48)" fg:x="2475" fg:w="6"/><text x="92.6352%" y="431.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (6 samples, 0.22%)</title><rect x="92.3852%" y="405" width="0.2240%" height="15" fill="rgb(238,41,26)" fg:x="2475" fg:w="6"/><text x="92.6352%" y="415.50"></text></g><g><title>hyper::proto::h1::role::extend (1 samples, 0.04%)</title><rect x="92.5719%" y="389" width="0.0373%" height="15" fill="rgb(241,19,31)" fg:x="2480" fg:w="1"/><text x="92.8219%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="92.5719%" y="373" width="0.0373%" height="15" fill="rgb(214,76,10)" fg:x="2480" fg:w="1"/><text x="92.8219%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="92.5719%" y="357" width="0.0373%" height="15" fill="rgb(254,202,22)" fg:x="2480" fg:w="1"/><text x="92.8219%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="92.5719%" y="341" width="0.0373%" height="15" fill="rgb(214,72,24)" fg:x="2480" fg:w="1"/><text x="92.8219%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="92.5719%" y="325" width="0.0373%" height="15" fill="rgb(221,92,46)" fg:x="2480" fg:w="1"/><text x="92.8219%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="92.5719%" y="309" width="0.0373%" height="15" fill="rgb(246,13,50)" fg:x="2480" fg:w="1"/><text x="92.8219%" y="319.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="92.6092%" y="581" width="0.1120%" height="15" fill="rgb(240,165,38)" fg:x="2481" fg:w="3"/><text x="92.8592%" y="591.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (2 samples, 0.07%)</title><rect x="92.6465%" y="565" width="0.0747%" height="15" fill="rgb(241,24,51)" fg:x="2482" fg:w="2"/><text x="92.8965%" y="575.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.04%)</title><rect x="92.6838%" y="549" width="0.0373%" height="15" fill="rgb(227,51,44)" fg:x="2483" fg:w="1"/><text x="92.9338%" y="559.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified::_{{closure}} (1 samples, 0.04%)</title><rect x="92.6838%" y="533" width="0.0373%" height="15" fill="rgb(231,121,3)" fg:x="2483" fg:w="1"/><text x="92.9338%" y="543.50"></text></g><g><title>&lt;tokio_util::sync::cancellation_token::WaitForCancellationFuture as core::future::future::Future&gt;::poll (7 samples, 0.26%)</title><rect x="92.6092%" y="597" width="0.2613%" height="15" fill="rgb(245,3,41)" fg:x="2481" fg:w="7"/><text x="92.8592%" y="607.50"></text></g><g><title>tokio_util::sync::cancellation_token::CancellationToken::is_cancelled (4 samples, 0.15%)</title><rect x="92.7212%" y="581" width="0.1493%" height="15" fill="rgb(214,13,26)" fg:x="2484" fg:w="4"/><text x="92.9712%" y="591.50"></text></g><g><title>tokio_util::sync::cancellation_token::tree_node::is_cancelled (2 samples, 0.07%)</title><rect x="92.7958%" y="565" width="0.0747%" height="15" fill="rgb(252,75,11)" fg:x="2486" fg:w="2"/><text x="93.0458%" y="575.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}}::_{{closure}} (173 samples, 6.46%)</title><rect x="86.4502%" y="661" width="6.4576%" height="15" fill="rgb(218,226,17)" fg:x="2316" fg:w="173"/><text x="86.7002%" y="671.50">poem::se..</text></g><g><title>poem::server::serve_connection::_{{closure}} (170 samples, 6.35%)</title><rect x="86.5622%" y="645" width="6.3457%" height="15" fill="rgb(248,89,38)" fg:x="2319" fg:w="170"/><text x="86.8122%" y="655.50">poem::se..</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (166 samples, 6.20%)</title><rect x="86.7115%" y="629" width="6.1963%" height="15" fill="rgb(237,73,46)" fg:x="2323" fg:w="166"/><text x="86.9615%" y="639.50">&lt;tokio::..</text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}} (166 samples, 6.20%)</title><rect x="86.7115%" y="613" width="6.1963%" height="15" fill="rgb(242,78,33)" fg:x="2323" fg:w="166"/><text x="86.9615%" y="623.50">poem::se..</text></g><g><title>tokio::macros::support::thread_rng_n (1 samples, 0.04%)</title><rect x="92.8705%" y="597" width="0.0373%" height="15" fill="rgb(235,60,3)" fg:x="2488" fg:w="1"/><text x="93.1205%" y="607.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (1 samples, 0.04%)</title><rect x="92.8705%" y="581" width="0.0373%" height="15" fill="rgb(216,172,19)" fg:x="2488" fg:w="1"/><text x="93.1205%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="92.8705%" y="565" width="0.0373%" height="15" fill="rgb(227,6,42)" fg:x="2488" fg:w="1"/><text x="93.1205%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="92.8705%" y="549" width="0.0373%" height="15" fill="rgb(223,207,42)" fg:x="2488" fg:w="1"/><text x="93.1205%" y="559.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (1 samples, 0.04%)</title><rect x="92.8705%" y="533" width="0.0373%" height="15" fill="rgb(246,138,30)" fg:x="2488" fg:w="1"/><text x="93.1205%" y="543.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (1 samples, 0.04%)</title><rect x="92.8705%" y="517" width="0.0373%" height="15" fill="rgb(251,199,47)" fg:x="2488" fg:w="1"/><text x="93.1205%" y="527.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (1 samples, 0.04%)</title><rect x="92.8705%" y="501" width="0.0373%" height="15" fill="rgb(228,218,44)" fg:x="2488" fg:w="1"/><text x="93.1205%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::Floating&lt;sqlx_mysql::database::MySql,sqlx_core::pool::connection::Live&lt;sqlx_mysql::database::MySql&gt;&gt;::return_to_pool::{{closure}}&gt; (3 samples, 0.11%)</title><rect x="93.0198%" y="645" width="0.1120%" height="15" fill="rgb(220,68,6)" fg:x="2492" fg:w="3"/><text x="93.2698%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="93.3557%" y="565" width="0.0373%" height="15" fill="rgb(240,60,26)" fg:x="2501" fg:w="1"/><text x="93.6057%" y="575.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="93.3557%" y="549" width="0.0373%" height="15" fill="rgb(211,200,19)" fg:x="2501" fg:w="1"/><text x="93.6057%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="93.3557%" y="533" width="0.0373%" height="15" fill="rgb(242,145,30)" fg:x="2501" fg:w="1"/><text x="93.6057%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (4 samples, 0.15%)</title><rect x="93.4677%" y="389" width="0.1493%" height="15" fill="rgb(225,64,13)" fg:x="2504" fg:w="4"/><text x="93.7177%" y="399.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (4 samples, 0.15%)</title><rect x="93.4677%" y="373" width="0.1493%" height="15" fill="rgb(218,103,35)" fg:x="2504" fg:w="4"/><text x="93.7177%" y="383.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (4 samples, 0.15%)</title><rect x="93.4677%" y="357" width="0.1493%" height="15" fill="rgb(216,93,46)" fg:x="2504" fg:w="4"/><text x="93.7177%" y="367.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (4 samples, 0.15%)</title><rect x="93.4677%" y="341" width="0.1493%" height="15" fill="rgb(225,159,27)" fg:x="2504" fg:w="4"/><text x="93.7177%" y="351.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.15%)</title><rect x="93.4677%" y="325" width="0.1493%" height="15" fill="rgb(225,204,11)" fg:x="2504" fg:w="4"/><text x="93.7177%" y="335.50"></text></g><g><title>std::sys_common::net::TcpStream::read (4 samples, 0.15%)</title><rect x="93.4677%" y="309" width="0.1493%" height="15" fill="rgb(205,56,4)" fg:x="2504" fg:w="4"/><text x="93.7177%" y="319.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (4 samples, 0.15%)</title><rect x="93.4677%" y="293" width="0.1493%" height="15" fill="rgb(206,6,35)" fg:x="2504" fg:w="4"/><text x="93.7177%" y="303.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (4 samples, 0.15%)</title><rect x="93.4677%" y="277" width="0.1493%" height="15" fill="rgb(247,73,52)" fg:x="2504" fg:w="4"/><text x="93.7177%" y="287.50"></text></g><g><title>recv (4 samples, 0.15%)</title><rect x="93.4677%" y="261" width="0.1493%" height="15" fill="rgb(246,97,4)" fg:x="2504" fg:w="4"/><text x="93.7177%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="93.5050%" y="245" width="0.1120%" height="15" fill="rgb(212,37,15)" fg:x="2505" fg:w="3"/><text x="93.7550%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="93.5424%" y="229" width="0.0747%" height="15" fill="rgb(208,130,40)" fg:x="2506" fg:w="2"/><text x="93.7924%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.5797%" y="213" width="0.0373%" height="15" fill="rgb(236,55,29)" fg:x="2507" fg:w="1"/><text x="93.8297%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.5797%" y="197" width="0.0373%" height="15" fill="rgb(209,156,45)" fg:x="2507" fg:w="1"/><text x="93.8297%" y="207.50"></text></g><g><title>&lt;sqlx_core::net::socket::Read&lt;S,B&gt; as core::future::future::Future&gt;::poll (6 samples, 0.22%)</title><rect x="93.4304%" y="485" width="0.2240%" height="15" fill="rgb(249,107,4)" fg:x="2503" fg:w="6"/><text x="93.6804%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as sqlx_core::net::socket::Socket&gt;::try_read (6 samples, 0.22%)</title><rect x="93.4304%" y="469" width="0.2240%" height="15" fill="rgb(227,7,13)" fg:x="2503" fg:w="6"/><text x="93.6804%" y="479.50"></text></g><g><title>sqlx_core::rt::rt_tokio::socket::&lt;impl sqlx_core::net::socket::Socket for tokio::net::tcp::stream::TcpStream&gt;::try_read (6 samples, 0.22%)</title><rect x="93.4304%" y="453" width="0.2240%" height="15" fill="rgb(250,129,14)" fg:x="2503" fg:w="6"/><text x="93.6804%" y="463.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf (5 samples, 0.19%)</title><rect x="93.4677%" y="437" width="0.1866%" height="15" fill="rgb(229,92,13)" fg:x="2504" fg:w="5"/><text x="93.7177%" y="447.50"></text></g><g><title>tokio::runtime::io::registration::Registration::try_io (5 samples, 0.19%)</title><rect x="93.4677%" y="421" width="0.1866%" height="15" fill="rgb(245,98,39)" fg:x="2504" fg:w="5"/><text x="93.7177%" y="431.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::try_read_buf::_{{closure}} (5 samples, 0.19%)</title><rect x="93.4677%" y="405" width="0.1866%" height="15" fill="rgb(234,135,48)" fg:x="2504" fg:w="5"/><text x="93.7177%" y="415.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.04%)</title><rect x="93.6170%" y="389" width="0.0373%" height="15" fill="rgb(230,98,28)" fg:x="2508" fg:w="1"/><text x="93.8670%" y="399.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.04%)</title><rect x="93.6170%" y="373" width="0.0373%" height="15" fill="rgb(223,121,0)" fg:x="2508" fg:w="1"/><text x="93.8670%" y="383.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (1 samples, 0.04%)</title><rect x="93.6170%" y="357" width="0.0373%" height="15" fill="rgb(234,173,33)" fg:x="2508" fg:w="1"/><text x="93.8670%" y="367.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::advance (1 samples, 0.04%)</title><rect x="93.6543%" y="485" width="0.0373%" height="15" fill="rgb(245,47,8)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="495.50"></text></g><g><title>bytes::bytes_mut::BytesMut::unsplit (1 samples, 0.04%)</title><rect x="93.6543%" y="469" width="0.0373%" height="15" fill="rgb(205,17,20)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (1 samples, 0.04%)</title><rect x="93.6543%" y="453" width="0.0373%" height="15" fill="rgb(232,151,16)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="463.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.6543%" y="437" width="0.0373%" height="15" fill="rgb(208,30,32)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="447.50"></text></g><g><title>bytes::bytes_mut::release_shared (1 samples, 0.04%)</title><rect x="93.6543%" y="421" width="0.0373%" height="15" fill="rgb(254,26,3)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="431.50"></text></g><g><title>core::mem::drop (1 samples, 0.04%)</title><rect x="93.6543%" y="405" width="0.0373%" height="15" fill="rgb(240,177,30)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (1 samples, 0.04%)</title><rect x="93.6543%" y="389" width="0.0373%" height="15" fill="rgb(248,76,44)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (1 samples, 0.04%)</title><rect x="93.6543%" y="373" width="0.0373%" height="15" fill="rgb(241,186,54)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.6543%" y="357" width="0.0373%" height="15" fill="rgb(249,171,29)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.6543%" y="341" width="0.0373%" height="15" fill="rgb(237,151,44)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.6543%" y="325" width="0.0373%" height="15" fill="rgb(228,174,30)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="93.6543%" y="309" width="0.0373%" height="15" fill="rgb(252,14,37)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="93.6543%" y="293" width="0.0373%" height="15" fill="rgb(207,111,40)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="303.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="93.6543%" y="277" width="0.0373%" height="15" fill="rgb(248,171,54)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="287.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="93.6543%" y="261" width="0.0373%" height="15" fill="rgb(211,127,2)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="271.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="93.6543%" y="245" width="0.0373%" height="15" fill="rgb(236,87,47)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="93.6543%" y="229" width="0.0373%" height="15" fill="rgb(223,190,45)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="93.6543%" y="213" width="0.0373%" height="15" fill="rgb(215,5,16)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="93.6543%" y="197" width="0.0373%" height="15" fill="rgb(252,82,33)" fg:x="2509" fg:w="1"/><text x="93.9043%" y="207.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::drain (1 samples, 0.04%)</title><rect x="93.6917%" y="485" width="0.0373%" height="15" fill="rgb(247,213,44)" fg:x="2510" fg:w="1"/><text x="93.9417%" y="495.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.04%)</title><rect x="93.6917%" y="469" width="0.0373%" height="15" fill="rgb(205,196,44)" fg:x="2510" fg:w="1"/><text x="93.9417%" y="479.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_ok::_{{closure}} (14 samples, 0.52%)</title><rect x="93.2811%" y="597" width="0.5226%" height="15" fill="rgb(237,96,54)" fg:x="2499" fg:w="14"/><text x="93.5311%" y="607.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet::_{{closure}} (13 samples, 0.49%)</title><rect x="93.3184%" y="581" width="0.4853%" height="15" fill="rgb(230,113,34)" fg:x="2500" fg:w="13"/><text x="93.5684%" y="591.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (11 samples, 0.41%)</title><rect x="93.3931%" y="565" width="0.4106%" height="15" fill="rgb(221,224,12)" fg:x="2502" fg:w="11"/><text x="93.6431%" y="575.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (11 samples, 0.41%)</title><rect x="93.3931%" y="549" width="0.4106%" height="15" fill="rgb(219,112,44)" fg:x="2502" fg:w="11"/><text x="93.6431%" y="559.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (10 samples, 0.37%)</title><rect x="93.4304%" y="533" width="0.3733%" height="15" fill="rgb(210,31,13)" fg:x="2503" fg:w="10"/><text x="93.6804%" y="543.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (10 samples, 0.37%)</title><rect x="93.4304%" y="517" width="0.3733%" height="15" fill="rgb(230,25,16)" fg:x="2503" fg:w="10"/><text x="93.6804%" y="527.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (10 samples, 0.37%)</title><rect x="93.4304%" y="501" width="0.3733%" height="15" fill="rgb(246,108,53)" fg:x="2503" fg:w="10"/><text x="93.6804%" y="511.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::reserve (2 samples, 0.07%)</title><rect x="93.7290%" y="485" width="0.0747%" height="15" fill="rgb(241,172,50)" fg:x="2511" fg:w="2"/><text x="93.9790%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (2 samples, 0.07%)</title><rect x="93.7290%" y="469" width="0.0747%" height="15" fill="rgb(235,141,10)" fg:x="2511" fg:w="2"/><text x="93.9790%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="93.7663%" y="453" width="0.0373%" height="15" fill="rgb(220,174,43)" fg:x="2512" fg:w="1"/><text x="94.0163%" y="463.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::send_packet::_{{closure}} (2 samples, 0.07%)</title><rect x="93.8037%" y="597" width="0.0747%" height="15" fill="rgb(215,181,40)" fg:x="2513" fg:w="2"/><text x="94.0537%" y="607.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::flush::_{{closure}} (2 samples, 0.07%)</title><rect x="93.8037%" y="581" width="0.0747%" height="15" fill="rgb(230,97,2)" fg:x="2513" fg:w="2"/><text x="94.0537%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (21 samples, 0.78%)</title><rect x="93.1691%" y="629" width="0.7839%" height="15" fill="rgb(211,25,27)" fg:x="2496" fg:w="21"/><text x="93.4191%" y="639.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (21 samples, 0.78%)</title><rect x="93.1691%" y="613" width="0.7839%" height="15" fill="rgb(230,87,26)" fg:x="2496" fg:w="21"/><text x="93.4191%" y="623.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::wait_until_ready::_{{closure}} (2 samples, 0.07%)</title><rect x="93.8783%" y="597" width="0.0747%" height="15" fill="rgb(227,160,17)" fg:x="2515" fg:w="2"/><text x="94.1283%" y="607.50"></text></g><g><title>&lt;sqlx_mysql::connection::MySqlConnection as sqlx_core::connection::Connection&gt;::ping (1 samples, 0.04%)</title><rect x="93.9530%" y="629" width="0.0373%" height="15" fill="rgb(244,85,34)" fg:x="2517" fg:w="1"/><text x="94.2030%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="93.9530%" y="613" width="0.0373%" height="15" fill="rgb(207,70,0)" fg:x="2517" fg:w="1"/><text x="94.2030%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="93.9530%" y="597" width="0.0373%" height="15" fill="rgb(223,129,7)" fg:x="2517" fg:w="1"/><text x="94.2030%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="93.9530%" y="581" width="0.0373%" height="15" fill="rgb(246,105,7)" fg:x="2517" fg:w="1"/><text x="94.2030%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="93.9530%" y="565" width="0.0373%" height="15" fill="rgb(215,154,42)" fg:x="2517" fg:w="1"/><text x="94.2030%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="93.9530%" y="549" width="0.0373%" height="15" fill="rgb(220,215,30)" fg:x="2517" fg:w="1"/><text x="94.2030%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="93.9530%" y="533" width="0.0373%" height="15" fill="rgb(228,81,51)" fg:x="2517" fg:w="1"/><text x="94.2030%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="93.9530%" y="517" width="0.0373%" height="15" fill="rgb(247,71,54)" fg:x="2517" fg:w="1"/><text x="94.2030%" y="527.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="93.9530%" y="501" width="0.0373%" height="15" fill="rgb(234,176,34)" fg:x="2517" fg:w="1"/><text x="94.2030%" y="511.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::release (2 samples, 0.07%)</title><rect x="93.9903%" y="629" width="0.0747%" height="15" fill="rgb(241,103,54)" fg:x="2518" fg:w="2"/><text x="94.2403%" y="639.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::release (2 samples, 0.07%)</title><rect x="93.9903%" y="613" width="0.0747%" height="15" fill="rgb(228,22,34)" fg:x="2518" fg:w="2"/><text x="94.2403%" y="623.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::into_idle (1 samples, 0.04%)</title><rect x="94.0276%" y="597" width="0.0373%" height="15" fill="rgb(241,179,48)" fg:x="2519" fg:w="1"/><text x="94.2776%" y="607.50"></text></g><g><title>sqlx_core::pool::connection::Live&lt;DB&gt;::into_idle (1 samples, 0.04%)</title><rect x="94.0276%" y="581" width="0.0373%" height="15" fill="rgb(235,167,37)" fg:x="2519" fg:w="1"/><text x="94.2776%" y="591.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="94.0276%" y="565" width="0.0373%" height="15" fill="rgb(213,109,30)" fg:x="2519" fg:w="1"/><text x="94.2776%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.04%)</title><rect x="94.0276%" y="549" width="0.0373%" height="15" fill="rgb(222,172,16)" fg:x="2519" fg:w="1"/><text x="94.2776%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="94.0276%" y="533" width="0.0373%" height="15" fill="rgb(233,192,5)" fg:x="2519" fg:w="1"/><text x="94.2776%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.04%)</title><rect x="94.0276%" y="517" width="0.0373%" height="15" fill="rgb(247,189,41)" fg:x="2519" fg:w="1"/><text x="94.2776%" y="527.50"></text></g><g><title>sqlx_core::pool::connection::PoolConnection&lt;DB&gt;::return_to_pool::_{{closure}} (32 samples, 1.19%)</title><rect x="92.9078%" y="661" width="1.1945%" height="15" fill="rgb(218,134,47)" fg:x="2489" fg:w="32"/><text x="93.1578%" y="671.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::return_to_pool::_{{closure}} (26 samples, 0.97%)</title><rect x="93.1318%" y="645" width="0.9705%" height="15" fill="rgb(216,29,3)" fg:x="2495" fg:w="26"/><text x="93.3818%" y="655.50"></text></g><g><title>sqlx_core::pool::inner::is_beyond_max_lifetime (1 samples, 0.04%)</title><rect x="94.0649%" y="629" width="0.0373%" height="15" fill="rgb(246,140,12)" fg:x="2520" fg:w="1"/><text x="94.3149%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.04%)</title><rect x="94.0649%" y="613" width="0.0373%" height="15" fill="rgb(230,136,11)" fg:x="2520" fg:w="1"/><text x="94.3149%" y="623.50"></text></g><g><title>sqlx_core::pool::inner::is_beyond_max_lifetime::_{{closure}} (1 samples, 0.04%)</title><rect x="94.0649%" y="597" width="0.0373%" height="15" fill="rgb(247,22,47)" fg:x="2520" fg:w="1"/><text x="94.3149%" y="607.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.04%)</title><rect x="94.0649%" y="581" width="0.0373%" height="15" fill="rgb(218,84,22)" fg:x="2520" fg:w="1"/><text x="94.3149%" y="591.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="94.0649%" y="565" width="0.0373%" height="15" fill="rgb(216,87,39)" fg:x="2520" fg:w="1"/><text x="94.3149%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.04%)</title><rect x="94.0649%" y="549" width="0.0373%" height="15" fill="rgb(221,178,8)" fg:x="2520" fg:w="1"/><text x="94.3149%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.04%)</title><rect x="94.0649%" y="533" width="0.0373%" height="15" fill="rgb(230,42,11)" fg:x="2520" fg:w="1"/><text x="94.3149%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.04%)</title><rect x="94.0649%" y="517" width="0.0373%" height="15" fill="rgb(237,229,4)" fg:x="2520" fg:w="1"/><text x="94.3149%" y="527.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="94.0649%" y="501" width="0.0373%" height="15" fill="rgb(222,31,33)" fg:x="2520" fg:w="1"/><text x="94.3149%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (207 samples, 7.73%)</title><rect x="86.4128%" y="805" width="7.7268%" height="15" fill="rgb(210,17,39)" fg:x="2315" fg:w="207"/><text x="86.6628%" y="815.50">tokio::runt..</text></g><g><title>std::panic::catch_unwind (207 samples, 7.73%)</title><rect x="86.4128%" y="789" width="7.7268%" height="15" fill="rgb(244,93,20)" fg:x="2315" fg:w="207"/><text x="86.6628%" y="799.50">std::panic:..</text></g><g><title>std::panicking::try (207 samples, 7.73%)</title><rect x="86.4128%" y="773" width="7.7268%" height="15" fill="rgb(210,40,47)" fg:x="2315" fg:w="207"/><text x="86.6628%" y="783.50">std::panick..</text></g><g><title>std::panicking::try::do_call (207 samples, 7.73%)</title><rect x="86.4128%" y="757" width="7.7268%" height="15" fill="rgb(239,211,47)" fg:x="2315" fg:w="207"/><text x="86.6628%" y="767.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (207 samples, 7.73%)</title><rect x="86.4128%" y="741" width="7.7268%" height="15" fill="rgb(251,223,49)" fg:x="2315" fg:w="207"/><text x="86.6628%" y="751.50">&lt;core::pani..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (207 samples, 7.73%)</title><rect x="86.4128%" y="725" width="7.7268%" height="15" fill="rgb(221,149,5)" fg:x="2315" fg:w="207"/><text x="86.6628%" y="735.50">tokio::runt..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (207 samples, 7.73%)</title><rect x="86.4128%" y="709" width="7.7268%" height="15" fill="rgb(219,224,51)" fg:x="2315" fg:w="207"/><text x="86.6628%" y="719.50">tokio::runt..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (207 samples, 7.73%)</title><rect x="86.4128%" y="693" width="7.7268%" height="15" fill="rgb(223,7,8)" fg:x="2315" fg:w="207"/><text x="86.6628%" y="703.50">tokio::loom..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (207 samples, 7.73%)</title><rect x="86.4128%" y="677" width="7.7268%" height="15" fill="rgb(241,217,22)" fg:x="2315" fg:w="207"/><text x="86.6628%" y="687.50">tokio::runt..</text></g><g><title>sqlx_core::pool::inner::spawn_maintenance_tasks::_{{closure}} (1 samples, 0.04%)</title><rect x="94.1023%" y="661" width="0.0373%" height="15" fill="rgb(248,209,0)" fg:x="2521" fg:w="1"/><text x="94.3523%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.1023%" y="645" width="0.0373%" height="15" fill="rgb(217,205,4)" fg:x="2521" fg:w="1"/><text x="94.3523%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.1023%" y="629" width="0.0373%" height="15" fill="rgb(228,124,39)" fg:x="2521" fg:w="1"/><text x="94.3523%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.1023%" y="613" width="0.0373%" height="15" fill="rgb(250,116,42)" fg:x="2521" fg:w="1"/><text x="94.3523%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.1023%" y="597" width="0.0373%" height="15" fill="rgb(223,202,9)" fg:x="2521" fg:w="1"/><text x="94.3523%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.1023%" y="581" width="0.0373%" height="15" fill="rgb(242,222,40)" fg:x="2521" fg:w="1"/><text x="94.3523%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (2 samples, 0.07%)</title><rect x="94.1396%" y="805" width="0.0747%" height="15" fill="rgb(229,99,46)" fg:x="2522" fg:w="2"/><text x="94.3896%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.04%)</title><rect x="94.1769%" y="789" width="0.0373%" height="15" fill="rgb(225,56,46)" fg:x="2523" fg:w="1"/><text x="94.4269%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (1 samples, 0.04%)</title><rect x="94.1769%" y="773" width="0.0373%" height="15" fill="rgb(227,94,5)" fg:x="2523" fg:w="1"/><text x="94.4269%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.04%)</title><rect x="94.2143%" y="773" width="0.0373%" height="15" fill="rgb(205,112,38)" fg:x="2524" fg:w="1"/><text x="94.4643%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="94.2143%" y="757" width="0.0373%" height="15" fill="rgb(231,133,46)" fg:x="2524" fg:w="1"/><text x="94.4643%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="94.2143%" y="741" width="0.0373%" height="15" fill="rgb(217,16,9)" fg:x="2524" fg:w="1"/><text x="94.4643%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (2 samples, 0.07%)</title><rect x="94.2143%" y="805" width="0.0747%" height="15" fill="rgb(249,173,9)" fg:x="2524" fg:w="2"/><text x="94.4643%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (2 samples, 0.07%)</title><rect x="94.2143%" y="789" width="0.0747%" height="15" fill="rgb(205,163,53)" fg:x="2524" fg:w="2"/><text x="94.4643%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::_{{closure}} (1 samples, 0.04%)</title><rect x="94.2516%" y="773" width="0.0373%" height="15" fill="rgb(217,54,41)" fg:x="2525" fg:w="1"/><text x="94.5016%" y="783.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::unset_notified (1 samples, 0.04%)</title><rect x="94.2516%" y="757" width="0.0373%" height="15" fill="rgb(228,216,12)" fg:x="2525" fg:w="1"/><text x="94.5016%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (219 samples, 8.17%)</title><rect x="86.1515%" y="949" width="8.1747%" height="15" fill="rgb(244,228,15)" fg:x="2308" fg:w="219"/><text x="86.4015%" y="959.50">tokio::runt..</text></g><g><title>tokio::runtime::coop::budget (218 samples, 8.14%)</title><rect x="86.1889%" y="933" width="8.1374%" height="15" fill="rgb(221,176,53)" fg:x="2309" fg:w="218"/><text x="86.4389%" y="943.50">tokio::runt..</text></g><g><title>tokio::runtime::coop::with_budget (218 samples, 8.14%)</title><rect x="86.1889%" y="917" width="8.1374%" height="15" fill="rgb(205,94,34)" fg:x="2309" fg:w="218"/><text x="86.4389%" y="927.50">tokio::runt..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (217 samples, 8.10%)</title><rect x="86.2262%" y="901" width="8.1000%" height="15" fill="rgb(213,110,48)" fg:x="2310" fg:w="217"/><text x="86.4762%" y="911.50">tokio::runt..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (215 samples, 8.03%)</title><rect x="86.3009%" y="885" width="8.0254%" height="15" fill="rgb(236,142,28)" fg:x="2312" fg:w="215"/><text x="86.5509%" y="895.50">tokio::runt..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (215 samples, 8.03%)</title><rect x="86.3009%" y="869" width="8.0254%" height="15" fill="rgb(225,135,29)" fg:x="2312" fg:w="215"/><text x="86.5509%" y="879.50">tokio::runt..</text></g><g><title>tokio::runtime::task::raw::poll (215 samples, 8.03%)</title><rect x="86.3009%" y="853" width="8.0254%" height="15" fill="rgb(252,45,31)" fg:x="2312" fg:w="215"/><text x="86.5509%" y="863.50">tokio::runt..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (214 samples, 7.99%)</title><rect x="86.3382%" y="837" width="7.9881%" height="15" fill="rgb(211,187,50)" fg:x="2313" fg:w="214"/><text x="86.5882%" y="847.50">tokio::runt..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (213 samples, 7.95%)</title><rect x="86.3755%" y="821" width="7.9507%" height="15" fill="rgb(229,109,7)" fg:x="2314" fg:w="213"/><text x="86.6255%" y="831.50">tokio::runt..</text></g><g><title>tokio::runtime::task::waker::waker_ref (1 samples, 0.04%)</title><rect x="94.2889%" y="805" width="0.0373%" height="15" fill="rgb(251,131,51)" fg:x="2526" fg:w="1"/><text x="94.5389%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (6 samples, 0.22%)</title><rect x="94.3262%" y="949" width="0.2240%" height="15" fill="rgb(251,180,35)" fg:x="2527" fg:w="6"/><text x="94.5762%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (5 samples, 0.19%)</title><rect x="94.3636%" y="933" width="0.1866%" height="15" fill="rgb(211,46,32)" fg:x="2528" fg:w="5"/><text x="94.6136%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (5 samples, 0.19%)</title><rect x="94.3636%" y="917" width="0.1866%" height="15" fill="rgb(248,123,17)" fg:x="2528" fg:w="5"/><text x="94.6136%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.07%)</title><rect x="94.5875%" y="901" width="0.0747%" height="15" fill="rgb(227,141,18)" fg:x="2534" fg:w="2"/><text x="94.8375%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.07%)</title><rect x="94.5875%" y="885" width="0.0747%" height="15" fill="rgb(216,102,9)" fg:x="2534" fg:w="2"/><text x="94.8375%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (4 samples, 0.15%)</title><rect x="94.5502%" y="949" width="0.1493%" height="15" fill="rgb(253,47,13)" fg:x="2533" fg:w="4"/><text x="94.8002%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (3 samples, 0.11%)</title><rect x="94.5875%" y="933" width="0.1120%" height="15" fill="rgb(226,93,23)" fg:x="2534" fg:w="3"/><text x="94.8375%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (3 samples, 0.11%)</title><rect x="94.5875%" y="917" width="0.1120%" height="15" fill="rgb(247,104,17)" fg:x="2534" fg:w="3"/><text x="94.8375%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1 samples, 0.04%)</title><rect x="94.6622%" y="901" width="0.0373%" height="15" fill="rgb(233,203,26)" fg:x="2536" fg:w="1"/><text x="94.9122%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="94.6622%" y="885" width="0.0373%" height="15" fill="rgb(244,98,49)" fg:x="2536" fg:w="1"/><text x="94.9122%" y="895.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (387 samples, 14.45%)</title><rect x="80.2912%" y="1397" width="14.4457%" height="15" fill="rgb(235,134,22)" fg:x="2151" fg:w="387"/><text x="80.5412%" y="1407.50">tokio::runtime::blocki..</text></g><g><title>tokio::runtime::blocking::pool::Task::run (376 samples, 14.04%)</title><rect x="80.7018%" y="1381" width="14.0351%" height="15" fill="rgb(221,70,32)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1391.50">tokio::runtime::block..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (376 samples, 14.04%)</title><rect x="80.7018%" y="1365" width="14.0351%" height="15" fill="rgb(238,15,50)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1375.50">tokio::runtime::task:..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (376 samples, 14.04%)</title><rect x="80.7018%" y="1349" width="14.0351%" height="15" fill="rgb(215,221,48)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1359.50">tokio::runtime::task:..</text></g><g><title>tokio::runtime::task::raw::poll (376 samples, 14.04%)</title><rect x="80.7018%" y="1333" width="14.0351%" height="15" fill="rgb(236,73,3)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1343.50">tokio::runtime::task:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (376 samples, 14.04%)</title><rect x="80.7018%" y="1317" width="14.0351%" height="15" fill="rgb(250,107,11)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1327.50">tokio::runtime::task:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (376 samples, 14.04%)</title><rect x="80.7018%" y="1301" width="14.0351%" height="15" fill="rgb(242,39,14)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1311.50">tokio::runtime::task:..</text></g><g><title>tokio::runtime::task::harness::poll_future (376 samples, 14.04%)</title><rect x="80.7018%" y="1285" width="14.0351%" height="15" fill="rgb(248,164,37)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1295.50">tokio::runtime::task:..</text></g><g><title>std::panic::catch_unwind (376 samples, 14.04%)</title><rect x="80.7018%" y="1269" width="14.0351%" height="15" fill="rgb(217,60,12)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1279.50">std::panic::catch_unw..</text></g><g><title>std::panicking::try (376 samples, 14.04%)</title><rect x="80.7018%" y="1253" width="14.0351%" height="15" fill="rgb(240,125,29)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1263.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (376 samples, 14.04%)</title><rect x="80.7018%" y="1237" width="14.0351%" height="15" fill="rgb(208,207,28)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1247.50">std::panicking::try::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (376 samples, 14.04%)</title><rect x="80.7018%" y="1221" width="14.0351%" height="15" fill="rgb(209,159,27)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1231.50">&lt;core::panic::unwind_..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (376 samples, 14.04%)</title><rect x="80.7018%" y="1205" width="14.0351%" height="15" fill="rgb(251,176,53)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1215.50">tokio::runtime::task:..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (376 samples, 14.04%)</title><rect x="80.7018%" y="1189" width="14.0351%" height="15" fill="rgb(211,85,7)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1199.50">tokio::runtime::task:..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (376 samples, 14.04%)</title><rect x="80.7018%" y="1173" width="14.0351%" height="15" fill="rgb(216,64,54)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1183.50">tokio::loom::std::uns..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (376 samples, 14.04%)</title><rect x="80.7018%" y="1157" width="14.0351%" height="15" fill="rgb(217,54,24)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1167.50">tokio::runtime::task:..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (376 samples, 14.04%)</title><rect x="80.7018%" y="1141" width="14.0351%" height="15" fill="rgb(208,206,53)" fg:x="2162" fg:w="376"/><text x="80.9518%" y="1151.50">&lt;tokio::runtime::bloc..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (374 samples, 13.96%)</title><rect x="80.7764%" y="1125" width="13.9604%" height="15" fill="rgb(251,74,39)" fg:x="2164" fg:w="374"/><text x="81.0264%" y="1135.50">tokio::runtime::sched..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (374 samples, 13.96%)</title><rect x="80.7764%" y="1109" width="13.9604%" height="15" fill="rgb(226,47,5)" fg:x="2164" fg:w="374"/><text x="81.0264%" y="1119.50">tokio::runtime::sched..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (374 samples, 13.96%)</title><rect x="80.7764%" y="1093" width="13.9604%" height="15" fill="rgb(234,111,33)" fg:x="2164" fg:w="374"/><text x="81.0264%" y="1103.50">tokio::runtime::conte..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (372 samples, 13.89%)</title><rect x="80.8511%" y="1077" width="13.8858%" height="15" fill="rgb(251,14,10)" fg:x="2166" fg:w="372"/><text x="81.1011%" y="1087.50">tokio::runtime::sched..</text></g><g><title>tokio::runtime::context::set_scheduler (372 samples, 13.89%)</title><rect x="80.8511%" y="1061" width="13.8858%" height="15" fill="rgb(232,43,0)" fg:x="2166" fg:w="372"/><text x="81.1011%" y="1071.50">tokio::runtime::conte..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (372 samples, 13.89%)</title><rect x="80.8511%" y="1045" width="13.8858%" height="15" fill="rgb(222,68,43)" fg:x="2166" fg:w="372"/><text x="81.1011%" y="1055.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (372 samples, 13.89%)</title><rect x="80.8511%" y="1029" width="13.8858%" height="15" fill="rgb(217,24,23)" fg:x="2166" fg:w="372"/><text x="81.1011%" y="1039.50">std::thread::local::L..</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (372 samples, 13.89%)</title><rect x="80.8511%" y="1013" width="13.8858%" height="15" fill="rgb(229,209,14)" fg:x="2166" fg:w="372"/><text x="81.1011%" y="1023.50">tokio::runtime::conte..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (372 samples, 13.89%)</title><rect x="80.8511%" y="997" width="13.8858%" height="15" fill="rgb(250,149,48)" fg:x="2166" fg:w="372"/><text x="81.1011%" y="1007.50">tokio::runtime::conte..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (372 samples, 13.89%)</title><rect x="80.8511%" y="981" width="13.8858%" height="15" fill="rgb(210,120,37)" fg:x="2166" fg:w="372"/><text x="81.1011%" y="991.50">tokio::runtime::sched..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (372 samples, 13.89%)</title><rect x="80.8511%" y="965" width="13.8858%" height="15" fill="rgb(210,21,8)" fg:x="2166" fg:w="372"/><text x="81.1011%" y="975.50">tokio::runtime::sched..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (1 samples, 0.04%)</title><rect x="94.6995%" y="949" width="0.0373%" height="15" fill="rgb(243,145,7)" fg:x="2537" fg:w="1"/><text x="94.9495%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="94.6995%" y="933" width="0.0373%" height="15" fill="rgb(238,178,32)" fg:x="2537" fg:w="1"/><text x="94.9495%" y="943.50"></text></g><g><title>[libc.so.6] (391 samples, 14.59%)</title><rect x="80.1792%" y="1621" width="14.5950%" height="15" fill="rgb(222,4,10)" fg:x="2148" fg:w="391"/><text x="80.4292%" y="1631.50">[libc.so.6]</text></g><g><title>[libc.so.6] (391 samples, 14.59%)</title><rect x="80.1792%" y="1605" width="14.5950%" height="15" fill="rgb(239,7,37)" fg:x="2148" fg:w="391"/><text x="80.4292%" y="1615.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (388 samples, 14.48%)</title><rect x="80.2912%" y="1589" width="14.4830%" height="15" fill="rgb(215,31,37)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1599.50">std::sys::pal::unix::t..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (388 samples, 14.48%)</title><rect x="80.2912%" y="1573" width="14.4830%" height="15" fill="rgb(224,83,33)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1583.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (388 samples, 14.48%)</title><rect x="80.2912%" y="1557" width="14.4830%" height="15" fill="rgb(239,55,3)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1567.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (388 samples, 14.48%)</title><rect x="80.2912%" y="1541" width="14.4830%" height="15" fill="rgb(247,92,11)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1551.50">core::ops::function::F..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (388 samples, 14.48%)</title><rect x="80.2912%" y="1525" width="14.4830%" height="15" fill="rgb(239,200,7)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1535.50">std::thread::Builder::..</text></g><g><title>std::panic::catch_unwind (388 samples, 14.48%)</title><rect x="80.2912%" y="1509" width="14.4830%" height="15" fill="rgb(227,115,8)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1519.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (388 samples, 14.48%)</title><rect x="80.2912%" y="1493" width="14.4830%" height="15" fill="rgb(215,189,27)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1503.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (388 samples, 14.48%)</title><rect x="80.2912%" y="1477" width="14.4830%" height="15" fill="rgb(251,216,39)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1487.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (388 samples, 14.48%)</title><rect x="80.2912%" y="1461" width="14.4830%" height="15" fill="rgb(207,29,47)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1471.50">&lt;core::panic::unwind_s..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (388 samples, 14.48%)</title><rect x="80.2912%" y="1445" width="14.4830%" height="15" fill="rgb(210,71,34)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1455.50">std::thread::Builder::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (388 samples, 14.48%)</title><rect x="80.2912%" y="1429" width="14.4830%" height="15" fill="rgb(253,217,51)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1439.50">std::sys_common::backt..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (388 samples, 14.48%)</title><rect x="80.2912%" y="1413" width="14.4830%" height="15" fill="rgb(222,117,46)" fg:x="2151" fg:w="388"/><text x="80.5412%" y="1423.50">tokio::runtime::blocki..</text></g><g><title>tokio::runtime::handle::Handle::enter (1 samples, 0.04%)</title><rect x="94.7368%" y="1397" width="0.0373%" height="15" fill="rgb(226,132,6)" fg:x="2538" fg:w="1"/><text x="94.9868%" y="1407.50"></text></g><g><title>tokio::runtime::context::current::try_set_current (1 samples, 0.04%)</title><rect x="94.7368%" y="1381" width="0.0373%" height="15" fill="rgb(254,145,51)" fg:x="2538" fg:w="1"/><text x="94.9868%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="94.7368%" y="1365" width="0.0373%" height="15" fill="rgb(231,199,27)" fg:x="2538" fg:w="1"/><text x="94.9868%" y="1375.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.04%)</title><rect x="94.7368%" y="1349" width="0.0373%" height="15" fill="rgb(245,158,14)" fg:x="2538" fg:w="1"/><text x="94.9868%" y="1359.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::register_dtor (1 samples, 0.04%)</title><rect x="94.7368%" y="1333" width="0.0373%" height="15" fill="rgb(240,113,14)" fg:x="2538" fg:w="1"/><text x="94.9868%" y="1343.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.04%)</title><rect x="94.7368%" y="1317" width="0.0373%" height="15" fill="rgb(210,20,13)" fg:x="2538" fg:w="1"/><text x="94.9868%" y="1327.50"></text></g><g><title>__libc_calloc (1 samples, 0.04%)</title><rect x="94.7368%" y="1301" width="0.0373%" height="15" fill="rgb(241,144,13)" fg:x="2538" fg:w="1"/><text x="94.9868%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.8862%" y="1605" width="0.0373%" height="15" fill="rgb(235,43,34)" fg:x="2542" fg:w="1"/><text x="95.1362%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.8862%" y="1589" width="0.0373%" height="15" fill="rgb(208,36,20)" fg:x="2542" fg:w="1"/><text x="95.1362%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.8862%" y="1573" width="0.0373%" height="15" fill="rgb(239,204,10)" fg:x="2542" fg:w="1"/><text x="95.1362%" y="1583.50"></text></g><g><title>recv (1 samples, 0.04%)</title><rect x="94.9235%" y="1605" width="0.0373%" height="15" fill="rgb(217,84,43)" fg:x="2543" fg:w="1"/><text x="95.1735%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.9235%" y="1589" width="0.0373%" height="15" fill="rgb(241,170,50)" fg:x="2543" fg:w="1"/><text x="95.1735%" y="1599.50"></text></g><g><title>[unknown] (7 samples, 0.26%)</title><rect x="94.7742%" y="1621" width="0.2613%" height="15" fill="rgb(226,205,29)" fg:x="2539" fg:w="7"/><text x="95.0242%" y="1631.50"></text></g><g><title>sqlx_mysql::connection::stream::MySqlStream&lt;S&gt;::recv_packet_part::_{{closure}} (2 samples, 0.07%)</title><rect x="94.9608%" y="1605" width="0.0747%" height="15" fill="rgb(233,113,1)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.07%)</title><rect x="94.9608%" y="1589" width="0.0747%" height="15" fill="rgb(253,98,13)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1599.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="94.9608%" y="1573" width="0.0747%" height="15" fill="rgb(211,115,12)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1583.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read::_{{closure}} (2 samples, 0.07%)</title><rect x="94.9608%" y="1557" width="0.0747%" height="15" fill="rgb(208,12,16)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1567.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_with::_{{closure}} (2 samples, 0.07%)</title><rect x="94.9608%" y="1541" width="0.0747%" height="15" fill="rgb(237,193,54)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1551.50"></text></g><g><title>sqlx_core::net::socket::buffered::BufferedSocket&lt;S&gt;::read_buffered::_{{closure}} (2 samples, 0.07%)</title><rect x="94.9608%" y="1525" width="0.0747%" height="15" fill="rgb(243,22,42)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1535.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::read::_{{closure}} (2 samples, 0.07%)</title><rect x="94.9608%" y="1509" width="0.0747%" height="15" fill="rgb(233,151,36)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1519.50"></text></g><g><title>sqlx_core::net::socket::buffered::ReadBuffer::drain (2 samples, 0.07%)</title><rect x="94.9608%" y="1493" width="0.0747%" height="15" fill="rgb(237,57,45)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1503.50"></text></g><g><title>bytes::bytes_mut::BytesMut::unsplit (2 samples, 0.07%)</title><rect x="94.9608%" y="1477" width="0.0747%" height="15" fill="rgb(221,88,17)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1487.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (2 samples, 0.07%)</title><rect x="94.9608%" y="1461" width="0.0747%" height="15" fill="rgb(230,79,15)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="94.9608%" y="1445" width="0.0747%" height="15" fill="rgb(213,57,13)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1455.50"></text></g><g><title>recv (2 samples, 0.07%)</title><rect x="94.9608%" y="1429" width="0.0747%" height="15" fill="rgb(222,116,39)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1439.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="94.9608%" y="1413" width="0.0747%" height="15" fill="rgb(245,107,2)" fg:x="2544" fg:w="2"/><text x="95.2108%" y="1423.50"></text></g><g><title>epoll_wait (1 samples, 0.04%)</title><rect x="95.0355%" y="1621" width="0.0373%" height="15" fill="rgb(238,1,10)" fg:x="2546" fg:w="1"/><text x="95.2855%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="95.0355%" y="1605" width="0.0373%" height="15" fill="rgb(249,4,48)" fg:x="2546" fg:w="1"/><text x="95.2855%" y="1615.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (3 samples, 0.11%)</title><rect x="95.0728%" y="1621" width="0.1120%" height="15" fill="rgb(223,151,18)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1631.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (3 samples, 0.11%)</title><rect x="95.0728%" y="1605" width="0.1120%" height="15" fill="rgb(227,65,43)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1615.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (3 samples, 0.11%)</title><rect x="95.0728%" y="1589" width="0.1120%" height="15" fill="rgb(218,40,45)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1599.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1573" width="0.1120%" height="15" fill="rgb(252,121,31)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1583.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1557" width="0.1120%" height="15" fill="rgb(219,158,43)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1541" width="0.1120%" height="15" fill="rgb(231,162,42)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1551.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1525" width="0.1120%" height="15" fill="rgb(217,179,25)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1535.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="95.0728%" y="1509" width="0.1120%" height="15" fill="rgb(206,212,31)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1519.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1493" width="0.1120%" height="15" fill="rgb(235,144,12)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1503.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1477" width="0.1120%" height="15" fill="rgb(213,51,10)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1461" width="0.1120%" height="15" fill="rgb(231,145,14)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1471.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1445" width="0.1120%" height="15" fill="rgb(235,15,28)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1455.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="95.0728%" y="1429" width="0.1120%" height="15" fill="rgb(237,206,10)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1439.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1413" width="0.1120%" height="15" fill="rgb(236,227,27)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1397" width="0.1120%" height="15" fill="rgb(246,83,35)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1407.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1381" width="0.1120%" height="15" fill="rgb(220,136,24)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1391.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1365" width="0.1120%" height="15" fill="rgb(217,3,25)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="95.0728%" y="1349" width="0.1120%" height="15" fill="rgb(239,24,14)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1359.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1333" width="0.1120%" height="15" fill="rgb(244,16,53)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1343.50"></text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1317" width="0.1120%" height="15" fill="rgb(208,175,44)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1327.50"></text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1301" width="0.1120%" height="15" fill="rgb(252,18,48)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1311.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1285" width="0.1120%" height="15" fill="rgb(234,199,32)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.0728%" y="1269" width="0.1120%" height="15" fill="rgb(225,77,54)" fg:x="2547" fg:w="3"/><text x="95.3228%" y="1279.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (2 samples, 0.07%)</title><rect x="95.1101%" y="1253" width="0.0747%" height="15" fill="rgb(225,42,25)" fg:x="2548" fg:w="2"/><text x="95.3601%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;poem::response::Response,poem::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="95.1474%" y="1237" width="0.0373%" height="15" fill="rgb(242,227,46)" fg:x="2549" fg:w="1"/><text x="95.3974%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;poem::response::Response,poem::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.04%)</title><rect x="95.1474%" y="1221" width="0.0373%" height="15" fill="rgb(246,197,35)" fg:x="2549" fg:w="1"/><text x="95.3974%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;poem::endpoint::map_to_response::MapToResponse&lt;poem::route::router_method::RouteMethod&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="95.1474%" y="1205" width="0.0373%" height="15" fill="rgb(215,159,26)" fg:x="2549" fg:w="1"/><text x="95.3974%" y="1215.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="95.1848%" y="1253" width="0.0373%" height="15" fill="rgb(212,194,50)" fg:x="2550" fg:w="1"/><text x="95.4348%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="95.1848%" y="1237" width="0.0373%" height="15" fill="rgb(246,132,1)" fg:x="2550" fg:w="1"/><text x="95.4348%" y="1247.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="95.1848%" y="1221" width="0.0373%" height="15" fill="rgb(217,71,7)" fg:x="2550" fg:w="1"/><text x="95.4348%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="95.1848%" y="1205" width="0.0373%" height="15" fill="rgb(252,59,32)" fg:x="2550" fg:w="1"/><text x="95.4348%" y="1215.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="95.1848%" y="1189" width="0.0373%" height="15" fill="rgb(253,204,25)" fg:x="2550" fg:w="1"/><text x="95.4348%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="95.1848%" y="1173" width="0.0373%" height="15" fill="rgb(232,21,16)" fg:x="2550" fg:w="1"/><text x="95.4348%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="95.2221%" y="1237" width="0.0373%" height="15" fill="rgb(248,90,29)" fg:x="2551" fg:w="1"/><text x="95.4721%" y="1247.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1621" width="0.1120%" height="15" fill="rgb(249,223,7)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1631.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1605" width="0.1120%" height="15" fill="rgb(231,119,42)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1615.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1589" width="0.1120%" height="15" fill="rgb(215,41,35)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1599.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1573" width="0.1120%" height="15" fill="rgb(220,44,45)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1583.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="95.1848%" y="1557" width="0.1120%" height="15" fill="rgb(253,197,36)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1567.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1541" width="0.1120%" height="15" fill="rgb(245,225,54)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1551.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1525" width="0.1120%" height="15" fill="rgb(239,94,37)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1535.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1509" width="0.1120%" height="15" fill="rgb(242,217,10)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1519.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1493" width="0.1120%" height="15" fill="rgb(250,193,7)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1503.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="95.1848%" y="1477" width="0.1120%" height="15" fill="rgb(230,104,19)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1487.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1461" width="0.1120%" height="15" fill="rgb(230,181,4)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1471.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1445" width="0.1120%" height="15" fill="rgb(216,219,49)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1455.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1429" width="0.1120%" height="15" fill="rgb(254,144,0)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1439.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1413" width="0.1120%" height="15" fill="rgb(205,209,38)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="95.1848%" y="1397" width="0.1120%" height="15" fill="rgb(240,21,42)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1407.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1381" width="0.1120%" height="15" fill="rgb(241,132,3)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1391.50"></text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1365" width="0.1120%" height="15" fill="rgb(225,14,2)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1375.50"></text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1349" width="0.1120%" height="15" fill="rgb(210,141,35)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1359.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1333" width="0.1120%" height="15" fill="rgb(251,14,44)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1343.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1317" width="0.1120%" height="15" fill="rgb(247,48,18)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1327.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1301" width="0.1120%" height="15" fill="rgb(225,0,40)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="95.1848%" y="1285" width="0.1120%" height="15" fill="rgb(221,31,33)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1295.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="95.1848%" y="1269" width="0.1120%" height="15" fill="rgb(237,42,40)" fg:x="2550" fg:w="3"/><text x="95.4348%" y="1279.50"></text></g><g><title>&lt;poem::route::router_method::RouteMethod as poem::endpoint::endpoint::Endpoint&gt;::call (2 samples, 0.07%)</title><rect x="95.2221%" y="1253" width="0.0747%" height="15" fill="rgb(233,51,29)" fg:x="2551" fg:w="2"/><text x="95.4721%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.04%)</title><rect x="95.2594%" y="1237" width="0.0373%" height="15" fill="rgb(226,58,20)" fg:x="2552" fg:w="1"/><text x="95.5094%" y="1247.50"></text></g><g><title>&lt;poem::route::router_method::RouteMethod as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="95.2594%" y="1221" width="0.0373%" height="15" fill="rgb(208,98,7)" fg:x="2552" fg:w="1"/><text x="95.5094%" y="1231.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="95.2594%" y="1205" width="0.0373%" height="15" fill="rgb(228,143,44)" fg:x="2552" fg:w="1"/><text x="95.5094%" y="1215.50"></text></g><g><title>&lt;http::method::Method as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="95.2594%" y="1189" width="0.0373%" height="15" fill="rgb(246,55,38)" fg:x="2552" fg:w="1"/><text x="95.5094%" y="1199.50"></text></g><g><title>&lt;http::method::Inner as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="95.2594%" y="1173" width="0.0373%" height="15" fill="rgb(247,87,16)" fg:x="2552" fg:w="1"/><text x="95.5094%" y="1183.50"></text></g><g><title>[libc.so.6] (5 samples, 0.19%)</title><rect x="95.4087%" y="1605" width="0.1866%" height="15" fill="rgb(234,129,42)" fg:x="2556" fg:w="5"/><text x="95.6587%" y="1615.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::to_bits (1 samples, 0.04%)</title><rect x="95.5954%" y="1605" width="0.0373%" height="15" fill="rgb(220,82,16)" fg:x="2561" fg:w="1"/><text x="95.8454%" y="1615.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::to_bits::rt_f64_to_u64 (1 samples, 0.04%)</title><rect x="95.5954%" y="1589" width="0.0373%" height="15" fill="rgb(211,88,4)" fg:x="2561" fg:w="1"/><text x="95.8454%" y="1599.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (4 samples, 0.15%)</title><rect x="97.0885%" y="1589" width="0.1493%" height="15" fill="rgb(248,151,21)" fg:x="2601" fg:w="4"/><text x="97.3385%" y="1599.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (4 samples, 0.15%)</title><rect x="97.2378%" y="1589" width="0.1493%" height="15" fill="rgb(238,163,6)" fg:x="2605" fg:w="4"/><text x="97.4878%" y="1599.50"></text></g><g><title>ryu::common::log10_pow5 (1 samples, 0.04%)</title><rect x="97.3871%" y="1589" width="0.0373%" height="15" fill="rgb(209,183,11)" fg:x="2609" fg:w="1"/><text x="97.6371%" y="1599.50"></text></g><g><title>ryu::common::pow5bits (1 samples, 0.04%)</title><rect x="97.4244%" y="1589" width="0.0373%" height="15" fill="rgb(219,37,20)" fg:x="2610" fg:w="1"/><text x="97.6744%" y="1599.50"></text></g><g><title>ryu::d2s_intrinsics::div10 (21 samples, 0.78%)</title><rect x="97.4617%" y="1589" width="0.7839%" height="15" fill="rgb(210,158,4)" fg:x="2611" fg:w="21"/><text x="97.7117%" y="1599.50"></text></g><g><title>ryu::d2s::d2d (78 samples, 2.91%)</title><rect x="95.6327%" y="1605" width="2.9115%" height="15" fill="rgb(221,167,53)" fg:x="2562" fg:w="78"/><text x="95.8827%" y="1615.50">ry..</text></g><g><title>ryu::d2s_intrinsics::mul_shift_all_64 (8 samples, 0.30%)</title><rect x="98.2456%" y="1589" width="0.2986%" height="15" fill="rgb(237,151,45)" fg:x="2632" fg:w="8"/><text x="98.4956%" y="1599.50"></text></g><g><title>ryu::d2s_intrinsics::mul_shift_64 (8 samples, 0.30%)</title><rect x="98.2456%" y="1573" width="0.2986%" height="15" fill="rgb(231,39,3)" fg:x="2632" fg:w="8"/><text x="98.4956%" y="1583.50"></text></g><g><title>ryu::pretty::format64 (90 samples, 3.36%)</title><rect x="95.2968%" y="1621" width="3.3595%" height="15" fill="rgb(212,167,28)" fg:x="2553" fg:w="90"/><text x="95.5468%" y="1631.50">ryu..</text></g><g><title>ryu::d2s::decimal_length17 (3 samples, 0.11%)</title><rect x="98.5442%" y="1605" width="0.1120%" height="15" fill="rgb(232,178,8)" fg:x="2640" fg:w="3"/><text x="98.7942%" y="1615.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa_long (1 samples, 0.04%)</title><rect x="98.6562%" y="1621" width="0.0373%" height="15" fill="rgb(225,151,20)" fg:x="2643" fg:w="1"/><text x="98.9062%" y="1631.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa (1 samples, 0.04%)</title><rect x="98.6562%" y="1605" width="0.0373%" height="15" fill="rgb(238,3,37)" fg:x="2643" fg:w="1"/><text x="98.9062%" y="1615.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.7309%" y="453" width="0.0373%" height="15" fill="rgb(251,147,42)" fg:x="2645" fg:w="1"/><text x="98.9809%" y="463.50"></text></g><g><title>&lt;http::uri::path::PathAndQuery as core::str::traits::FromStr&gt;::from_str (1 samples, 0.04%)</title><rect x="98.7682%" y="453" width="0.0373%" height="15" fill="rgb(208,173,10)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="463.50"></text></g><g><title>&lt;http::uri::path::PathAndQuery as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (1 samples, 0.04%)</title><rect x="98.7682%" y="437" width="0.0373%" height="15" fill="rgb(246,225,4)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="447.50"></text></g><g><title>&lt;http::uri::path::PathAndQuery as core::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::try_from (1 samples, 0.04%)</title><rect x="98.7682%" y="421" width="0.0373%" height="15" fill="rgb(248,102,6)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="431.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (1 samples, 0.04%)</title><rect x="98.7682%" y="405" width="0.0373%" height="15" fill="rgb(232,6,21)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="98.7682%" y="389" width="0.0373%" height="15" fill="rgb(221,179,22)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="98.7682%" y="373" width="0.0373%" height="15" fill="rgb(252,50,20)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="98.7682%" y="357" width="0.0373%" height="15" fill="rgb(222,56,38)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="98.7682%" y="341" width="0.0373%" height="15" fill="rgb(206,193,29)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="98.7682%" y="325" width="0.0373%" height="15" fill="rgb(239,192,45)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="98.7682%" y="309" width="0.0373%" height="15" fill="rgb(254,18,36)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="98.7682%" y="293" width="0.0373%" height="15" fill="rgb(221,127,11)" fg:x="2646" fg:w="1"/><text x="99.0182%" y="303.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.19%)</title><rect x="98.6935%" y="1621" width="0.1866%" height="15" fill="rgb(234,146,35)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1631.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="1605" width="0.1866%" height="15" fill="rgb(254,201,37)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1615.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (5 samples, 0.19%)</title><rect x="98.6935%" y="1589" width="0.1866%" height="15" fill="rgb(211,202,23)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1599.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (5 samples, 0.19%)</title><rect x="98.6935%" y="1573" width="0.1866%" height="15" fill="rgb(237,91,2)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1583.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (5 samples, 0.19%)</title><rect x="98.6935%" y="1557" width="0.1866%" height="15" fill="rgb(226,228,36)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1567.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="1541" width="0.1866%" height="15" fill="rgb(213,63,50)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1551.50"></text></g><g><title>tokio::runtime::task::raw::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="1525" width="0.1866%" height="15" fill="rgb(235,194,19)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1535.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="1509" width="0.1866%" height="15" fill="rgb(207,204,18)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1519.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5 samples, 0.19%)</title><rect x="98.6935%" y="1493" width="0.1866%" height="15" fill="rgb(248,8,7)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1503.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5 samples, 0.19%)</title><rect x="98.6935%" y="1477" width="0.1866%" height="15" fill="rgb(223,145,47)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.19%)</title><rect x="98.6935%" y="1461" width="0.1866%" height="15" fill="rgb(228,84,11)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1471.50"></text></g><g><title>std::panicking::try (5 samples, 0.19%)</title><rect x="98.6935%" y="1445" width="0.1866%" height="15" fill="rgb(218,76,45)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.19%)</title><rect x="98.6935%" y="1429" width="0.1866%" height="15" fill="rgb(223,80,15)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1439.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.19%)</title><rect x="98.6935%" y="1413" width="0.1866%" height="15" fill="rgb(219,218,33)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1423.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="1397" width="0.1866%" height="15" fill="rgb(208,51,11)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1407.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="1381" width="0.1866%" height="15" fill="rgb(229,165,39)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1391.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.19%)</title><rect x="98.6935%" y="1365" width="0.1866%" height="15" fill="rgb(241,100,24)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1375.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="1349" width="0.1866%" height="15" fill="rgb(228,14,23)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1359.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="1333" width="0.1866%" height="15" fill="rgb(247,116,52)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="1317" width="0.1866%" height="15" fill="rgb(216,149,33)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (5 samples, 0.19%)</title><rect x="98.6935%" y="1301" width="0.1866%" height="15" fill="rgb(238,142,29)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1311.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (5 samples, 0.19%)</title><rect x="98.6935%" y="1285" width="0.1866%" height="15" fill="rgb(224,83,40)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="1269" width="0.1866%" height="15" fill="rgb(234,165,11)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1279.50"></text></g><g><title>tokio::runtime::context::set_scheduler (5 samples, 0.19%)</title><rect x="98.6935%" y="1253" width="0.1866%" height="15" fill="rgb(215,96,23)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.19%)</title><rect x="98.6935%" y="1237" width="0.1866%" height="15" fill="rgb(233,179,26)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.19%)</title><rect x="98.6935%" y="1221" width="0.1866%" height="15" fill="rgb(225,129,33)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1231.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="1205" width="0.1866%" height="15" fill="rgb(237,49,13)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1215.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (5 samples, 0.19%)</title><rect x="98.6935%" y="1189" width="0.1866%" height="15" fill="rgb(211,3,31)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="1173" width="0.1866%" height="15" fill="rgb(216,152,19)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (5 samples, 0.19%)</title><rect x="98.6935%" y="1157" width="0.1866%" height="15" fill="rgb(251,121,35)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (5 samples, 0.19%)</title><rect x="98.6935%" y="1141" width="0.1866%" height="15" fill="rgb(210,217,47)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1151.50"></text></g><g><title>tokio::runtime::coop::budget (5 samples, 0.19%)</title><rect x="98.6935%" y="1125" width="0.1866%" height="15" fill="rgb(244,116,22)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1135.50"></text></g><g><title>tokio::runtime::coop::with_budget (5 samples, 0.19%)</title><rect x="98.6935%" y="1109" width="0.1866%" height="15" fill="rgb(228,17,21)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="1093" width="0.1866%" height="15" fill="rgb(240,149,34)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1103.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (5 samples, 0.19%)</title><rect x="98.6935%" y="1077" width="0.1866%" height="15" fill="rgb(208,125,47)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1087.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="1061" width="0.1866%" height="15" fill="rgb(249,186,39)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1071.50"></text></g><g><title>tokio::runtime::task::raw::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="1045" width="0.1866%" height="15" fill="rgb(240,220,33)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="1029" width="0.1866%" height="15" fill="rgb(243,110,23)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5 samples, 0.19%)</title><rect x="98.6935%" y="1013" width="0.1866%" height="15" fill="rgb(219,163,46)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5 samples, 0.19%)</title><rect x="98.6935%" y="997" width="0.1866%" height="15" fill="rgb(216,126,30)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.19%)</title><rect x="98.6935%" y="981" width="0.1866%" height="15" fill="rgb(208,139,11)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="991.50"></text></g><g><title>std::panicking::try (5 samples, 0.19%)</title><rect x="98.6935%" y="965" width="0.1866%" height="15" fill="rgb(213,118,36)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="975.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.19%)</title><rect x="98.6935%" y="949" width="0.1866%" height="15" fill="rgb(226,43,17)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="959.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.19%)</title><rect x="98.6935%" y="933" width="0.1866%" height="15" fill="rgb(254,217,4)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="917" width="0.1866%" height="15" fill="rgb(210,134,47)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="901" width="0.1866%" height="15" fill="rgb(237,24,49)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="911.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.19%)</title><rect x="98.6935%" y="885" width="0.1866%" height="15" fill="rgb(251,39,46)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="869" width="0.1866%" height="15" fill="rgb(251,220,3)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="879.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}}::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="853" width="0.1866%" height="15" fill="rgb(228,105,12)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="863.50"></text></g><g><title>poem::server::serve_connection::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="837" width="0.1866%" height="15" fill="rgb(215,196,1)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="847.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="821" width="0.1866%" height="15" fill="rgb(214,33,39)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="831.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="805" width="0.1866%" height="15" fill="rgb(220,19,52)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="815.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="789" width="0.1866%" height="15" fill="rgb(221,78,38)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="773" width="0.1866%" height="15" fill="rgb(253,30,16)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="783.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="757" width="0.1866%" height="15" fill="rgb(242,65,0)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="767.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="741" width="0.1866%" height="15" fill="rgb(235,201,12)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="751.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="725" width="0.1866%" height="15" fill="rgb(233,161,9)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="735.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (5 samples, 0.19%)</title><rect x="98.6935%" y="709" width="0.1866%" height="15" fill="rgb(241,207,41)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="719.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (5 samples, 0.19%)</title><rect x="98.6935%" y="693" width="0.1866%" height="15" fill="rgb(212,69,46)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="703.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (5 samples, 0.19%)</title><rect x="98.6935%" y="677" width="0.1866%" height="15" fill="rgb(239,69,45)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="687.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (5 samples, 0.19%)</title><rect x="98.6935%" y="661" width="0.1866%" height="15" fill="rgb(242,117,48)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="671.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (5 samples, 0.19%)</title><rect x="98.6935%" y="645" width="0.1866%" height="15" fill="rgb(228,41,36)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="655.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="629" width="0.1866%" height="15" fill="rgb(212,3,32)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="639.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="613" width="0.1866%" height="15" fill="rgb(233,41,49)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="597" width="0.1866%" height="15" fill="rgb(252,170,49)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="607.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="581" width="0.1866%" height="15" fill="rgb(229,53,26)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="565" width="0.1866%" height="15" fill="rgb(217,157,12)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="575.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="549" width="0.1866%" height="15" fill="rgb(227,17,9)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="559.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="533" width="0.1866%" height="15" fill="rgb(218,84,12)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="517" width="0.1866%" height="15" fill="rgb(212,79,24)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="527.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="501" width="0.1866%" height="15" fill="rgb(217,222,37)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.19%)</title><rect x="98.6935%" y="485" width="0.1866%" height="15" fill="rgb(246,208,8)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="495.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (5 samples, 0.19%)</title><rect x="98.6935%" y="469" width="0.1866%" height="15" fill="rgb(244,133,10)" fg:x="2644" fg:w="5"/><text x="98.9435%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (2 samples, 0.07%)</title><rect x="98.8055%" y="453" width="0.0747%" height="15" fill="rgb(209,219,41)" fg:x="2647" fg:w="2"/><text x="99.0555%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::authority::Authority&gt; (2 samples, 0.07%)</title><rect x="98.8055%" y="437" width="0.0747%" height="15" fill="rgb(253,175,45)" fg:x="2647" fg:w="2"/><text x="99.0555%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (2 samples, 0.07%)</title><rect x="98.8055%" y="421" width="0.0747%" height="15" fill="rgb(235,100,37)" fg:x="2647" fg:w="2"/><text x="99.0555%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.07%)</title><rect x="98.8055%" y="405" width="0.0747%" height="15" fill="rgb(225,87,19)" fg:x="2647" fg:w="2"/><text x="99.0555%" y="415.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="98.8055%" y="389" width="0.0747%" height="15" fill="rgb(217,152,17)" fg:x="2647" fg:w="2"/><text x="99.0555%" y="399.50"></text></g><g><title>bytes::bytes::static_drop (1 samples, 0.04%)</title><rect x="98.8429%" y="373" width="0.0373%" height="15" fill="rgb(235,72,13)" fg:x="2648" fg:w="1"/><text x="99.0929%" y="383.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="1429" width="0.0373%" height="15" fill="rgb(233,140,18)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="1413" width="0.0373%" height="15" fill="rgb(207,212,28)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1 samples, 0.04%)</title><rect x="98.8802%" y="1397" width="0.0373%" height="15" fill="rgb(220,130,25)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1407.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1 samples, 0.04%)</title><rect x="98.8802%" y="1381" width="0.0373%" height="15" fill="rgb(205,55,34)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="1365" width="0.0373%" height="15" fill="rgb(237,54,35)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1375.50"></text></g><g><title>tokio::runtime::context::set_scheduler (1 samples, 0.04%)</title><rect x="98.8802%" y="1349" width="0.0373%" height="15" fill="rgb(208,67,23)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="98.8802%" y="1333" width="0.0373%" height="15" fill="rgb(206,207,50)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="98.8802%" y="1317" width="0.0373%" height="15" fill="rgb(213,211,42)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1327.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="1301" width="0.0373%" height="15" fill="rgb(252,197,50)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1311.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="98.8802%" y="1285" width="0.0373%" height="15" fill="rgb(251,211,41)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="1269" width="0.0373%" height="15" fill="rgb(229,211,5)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1 samples, 0.04%)</title><rect x="98.8802%" y="1253" width="0.0373%" height="15" fill="rgb(239,36,31)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1 samples, 0.04%)</title><rect x="98.8802%" y="1237" width="0.0373%" height="15" fill="rgb(248,67,31)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1247.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.04%)</title><rect x="98.8802%" y="1221" width="0.0373%" height="15" fill="rgb(249,55,44)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1231.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.04%)</title><rect x="98.8802%" y="1205" width="0.0373%" height="15" fill="rgb(216,82,12)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="1189" width="0.0373%" height="15" fill="rgb(242,174,1)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1199.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.04%)</title><rect x="98.8802%" y="1173" width="0.0373%" height="15" fill="rgb(208,120,29)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="1157" width="0.0373%" height="15" fill="rgb(221,105,43)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="1141" width="0.0373%" height="15" fill="rgb(234,124,22)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="1125" width="0.0373%" height="15" fill="rgb(212,23,30)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.04%)</title><rect x="98.8802%" y="1109" width="0.0373%" height="15" fill="rgb(219,122,53)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.04%)</title><rect x="98.8802%" y="1093" width="0.0373%" height="15" fill="rgb(248,84,24)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.04%)</title><rect x="98.8802%" y="1077" width="0.0373%" height="15" fill="rgb(245,115,18)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.04%)</title><rect x="98.8802%" y="1061" width="0.0373%" height="15" fill="rgb(227,176,51)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.04%)</title><rect x="98.8802%" y="1045" width="0.0373%" height="15" fill="rgb(229,63,42)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.04%)</title><rect x="98.8802%" y="1029" width="0.0373%" height="15" fill="rgb(247,202,24)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="1013" width="0.0373%" height="15" fill="rgb(244,173,20)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="997" width="0.0373%" height="15" fill="rgb(242,81,47)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="1007.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.04%)</title><rect x="98.8802%" y="981" width="0.0373%" height="15" fill="rgb(231,185,54)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="991.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="965" width="0.0373%" height="15" fill="rgb(243,55,32)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="975.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="949" width="0.0373%" height="15" fill="rgb(208,167,19)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="959.50"></text></g><g><title>poem::server::serve_connection::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="933" width="0.0373%" height="15" fill="rgb(231,72,35)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="943.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="917" width="0.0373%" height="15" fill="rgb(250,173,51)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="927.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="901" width="0.0373%" height="15" fill="rgb(209,5,22)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="911.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="885" width="0.0373%" height="15" fill="rgb(250,174,19)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="895.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="869" width="0.0373%" height="15" fill="rgb(217,3,49)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="879.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="853" width="0.0373%" height="15" fill="rgb(218,225,5)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="863.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="837" width="0.0373%" height="15" fill="rgb(236,89,11)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="847.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="821" width="0.0373%" height="15" fill="rgb(206,33,28)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="831.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (1 samples, 0.04%)</title><rect x="98.8802%" y="805" width="0.0373%" height="15" fill="rgb(241,56,42)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="815.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (1 samples, 0.04%)</title><rect x="98.8802%" y="789" width="0.0373%" height="15" fill="rgb(222,44,11)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="799.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (1 samples, 0.04%)</title><rect x="98.8802%" y="773" width="0.0373%" height="15" fill="rgb(234,111,20)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="783.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (1 samples, 0.04%)</title><rect x="98.8802%" y="757" width="0.0373%" height="15" fill="rgb(237,77,6)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="767.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (1 samples, 0.04%)</title><rect x="98.8802%" y="741" width="0.0373%" height="15" fill="rgb(235,111,23)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="751.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="725" width="0.0373%" height="15" fill="rgb(251,135,29)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="735.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="709" width="0.0373%" height="15" fill="rgb(217,57,1)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="693" width="0.0373%" height="15" fill="rgb(249,119,31)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="703.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="677" width="0.0373%" height="15" fill="rgb(233,164,33)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="661" width="0.0373%" height="15" fill="rgb(250,217,43)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="671.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="645" width="0.0373%" height="15" fill="rgb(232,154,50)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="655.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="629" width="0.0373%" height="15" fill="rgb(227,190,8)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="613" width="0.0373%" height="15" fill="rgb(209,217,32)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="623.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="597" width="0.0373%" height="15" fill="rgb(243,203,50)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="98.8802%" y="581" width="0.0373%" height="15" fill="rgb(232,152,27)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="591.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.8802%" y="565" width="0.0373%" height="15" fill="rgb(240,34,29)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="575.50"></text></g><g><title>http::uri::Uri::into_parts (1 samples, 0.04%)</title><rect x="98.8802%" y="549" width="0.0373%" height="15" fill="rgb(215,185,52)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="98.8802%" y="533" width="0.0373%" height="15" fill="rgb(240,89,49)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="543.50"></text></g><g><title>&lt;http::uri::Parts as core::convert::From&lt;http::uri::Uri&gt;&gt;::from (1 samples, 0.04%)</title><rect x="98.8802%" y="517" width="0.0373%" height="15" fill="rgb(225,12,52)" fg:x="2649" fg:w="1"/><text x="99.1302%" y="527.50"></text></g><g><title>bytes::bytes::Bytes::slice (1 samples, 0.04%)</title><rect x="98.9175%" y="1141" width="0.0373%" height="15" fill="rgb(239,128,45)" fg:x="2650" fg:w="1"/><text x="99.1675%" y="1151.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (5 samples, 0.19%)</title><rect x="98.9548%" y="1141" width="0.1866%" height="15" fill="rgb(211,78,47)" fg:x="2651" fg:w="5"/><text x="99.2048%" y="1151.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (3 samples, 0.11%)</title><rect x="99.0295%" y="1125" width="0.1120%" height="15" fill="rgb(232,31,21)" fg:x="2653" fg:w="3"/><text x="99.2795%" y="1135.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (3 samples, 0.11%)</title><rect x="99.0295%" y="1109" width="0.1120%" height="15" fill="rgb(222,168,14)" fg:x="2653" fg:w="3"/><text x="99.2795%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.11%)</title><rect x="99.0295%" y="1093" width="0.1120%" height="15" fill="rgb(209,128,24)" fg:x="2653" fg:w="3"/><text x="99.2795%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.11%)</title><rect x="99.0295%" y="1077" width="0.1120%" height="15" fill="rgb(249,35,13)" fg:x="2653" fg:w="3"/><text x="99.2795%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.11%)</title><rect x="99.0295%" y="1061" width="0.1120%" height="15" fill="rgb(218,7,2)" fg:x="2653" fg:w="3"/><text x="99.2795%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.11%)</title><rect x="99.0295%" y="1045" width="0.1120%" height="15" fill="rgb(238,107,27)" fg:x="2653" fg:w="3"/><text x="99.2795%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.11%)</title><rect x="99.0295%" y="1029" width="0.1120%" height="15" fill="rgb(217,88,38)" fg:x="2653" fg:w="3"/><text x="99.2795%" y="1039.50"></text></g><g><title>__rdl_alloc (3 samples, 0.11%)</title><rect x="99.0295%" y="1013" width="0.1120%" height="15" fill="rgb(230,207,0)" fg:x="2653" fg:w="3"/><text x="99.2795%" y="1023.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.11%)</title><rect x="99.0295%" y="997" width="0.1120%" height="15" fill="rgb(249,64,54)" fg:x="2653" fg:w="3"/><text x="99.2795%" y="1007.50"></text></g><g><title>malloc (2 samples, 0.07%)</title><rect x="99.0668%" y="981" width="0.0747%" height="15" fill="rgb(231,7,11)" fg:x="2654" fg:w="2"/><text x="99.3168%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;http::method::Method&gt;&gt; (1 samples, 0.04%)</title><rect x="99.1415%" y="1141" width="0.0373%" height="15" fill="rgb(205,149,21)" fg:x="2656" fg:w="1"/><text x="99.3915%" y="1151.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve (1 samples, 0.04%)</title><rect x="99.1788%" y="1141" width="0.0373%" height="15" fill="rgb(215,126,34)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="1151.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve (1 samples, 0.04%)</title><rect x="99.1788%" y="1125" width="0.0373%" height="15" fill="rgb(241,132,45)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="1135.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.04%)</title><rect x="99.1788%" y="1109" width="0.0373%" height="15" fill="rgb(252,69,32)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="1119.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.04%)</title><rect x="99.1788%" y="1093" width="0.0373%" height="15" fill="rgb(232,204,19)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="99.1788%" y="1077" width="0.0373%" height="15" fill="rgb(249,15,47)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="99.1788%" y="1061" width="0.0373%" height="15" fill="rgb(209,227,23)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="99.1788%" y="1045" width="0.0373%" height="15" fill="rgb(248,92,24)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="99.1788%" y="1029" width="0.0373%" height="15" fill="rgb(247,59,2)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="99.1788%" y="1013" width="0.0373%" height="15" fill="rgb(221,30,5)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="99.1788%" y="997" width="0.0373%" height="15" fill="rgb(208,108,53)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="99.1788%" y="981" width="0.0373%" height="15" fill="rgb(211,183,26)" fg:x="2657" fg:w="1"/><text x="99.4288%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.07%)</title><rect x="99.2161%" y="1109" width="0.0747%" height="15" fill="rgb(232,132,4)" fg:x="2658" fg:w="2"/><text x="99.4661%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.07%)</title><rect x="99.2161%" y="1093" width="0.0747%" height="15" fill="rgb(253,128,37)" fg:x="2658" fg:w="2"/><text x="99.4661%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (2 samples, 0.07%)</title><rect x="99.2161%" y="1077" width="0.0747%" height="15" fill="rgb(221,58,24)" fg:x="2658" fg:w="2"/><text x="99.4661%" y="1087.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (3 samples, 0.11%)</title><rect x="99.2161%" y="1141" width="0.1120%" height="15" fill="rgb(230,54,45)" fg:x="2658" fg:w="3"/><text x="99.4661%" y="1151.50"></text></g><g><title>http::header::name::parse_hdr (3 samples, 0.11%)</title><rect x="99.2161%" y="1125" width="0.1120%" height="15" fill="rgb(254,21,18)" fg:x="2658" fg:w="3"/><text x="99.4661%" y="1135.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (1 samples, 0.04%)</title><rect x="99.2908%" y="1109" width="0.0373%" height="15" fill="rgb(221,108,0)" fg:x="2660" fg:w="1"/><text x="99.5408%" y="1119.50"></text></g><g><title>http::method::Method::from_bytes (4 samples, 0.15%)</title><rect x="99.3281%" y="1141" width="0.1493%" height="15" fill="rgb(206,95,1)" fg:x="2661" fg:w="4"/><text x="99.5781%" y="1151.50"></text></g><g><title>http::uri::Uri::from_maybe_shared (3 samples, 0.11%)</title><rect x="99.4774%" y="1141" width="0.1120%" height="15" fill="rgb(237,52,5)" fg:x="2665" fg:w="3"/><text x="99.7274%" y="1151.50"></text></g><g><title>http::uri::Uri::from_shared (3 samples, 0.11%)</title><rect x="99.4774%" y="1125" width="0.1120%" height="15" fill="rgb(218,150,34)" fg:x="2665" fg:w="3"/><text x="99.7274%" y="1135.50"></text></g><g><title>http::uri::path::PathAndQuery::from_shared (3 samples, 0.11%)</title><rect x="99.4774%" y="1109" width="0.1120%" height="15" fill="rgb(235,194,28)" fg:x="2665" fg:w="3"/><text x="99.7274%" y="1119.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (23 samples, 0.86%)</title><rect x="98.9175%" y="1237" width="0.8585%" height="15" fill="rgb(245,92,18)" fg:x="2650" fg:w="23"/><text x="99.1675%" y="1247.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (23 samples, 0.86%)</title><rect x="98.9175%" y="1221" width="0.8585%" height="15" fill="rgb(253,203,53)" fg:x="2650" fg:w="23"/><text x="99.1675%" y="1231.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (23 samples, 0.86%)</title><rect x="98.9175%" y="1205" width="0.8585%" height="15" fill="rgb(249,185,47)" fg:x="2650" fg:w="23"/><text x="99.1675%" y="1215.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (23 samples, 0.86%)</title><rect x="98.9175%" y="1189" width="0.8585%" height="15" fill="rgb(252,194,52)" fg:x="2650" fg:w="23"/><text x="99.1675%" y="1199.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (23 samples, 0.86%)</title><rect x="98.9175%" y="1173" width="0.8585%" height="15" fill="rgb(210,53,36)" fg:x="2650" fg:w="23"/><text x="99.1675%" y="1183.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (23 samples, 0.86%)</title><rect x="98.9175%" y="1157" width="0.8585%" height="15" fill="rgb(237,37,25)" fg:x="2650" fg:w="23"/><text x="99.1675%" y="1167.50"></text></g><g><title>httparse::Request::parse_with_uninit_headers (5 samples, 0.19%)</title><rect x="99.5894%" y="1141" width="0.1866%" height="15" fill="rgb(242,116,27)" fg:x="2668" fg:w="5"/><text x="99.8394%" y="1151.50"></text></g><g><title>httparse::Request::parse_with_config_and_uninit_headers (5 samples, 0.19%)</title><rect x="99.5894%" y="1125" width="0.1866%" height="15" fill="rgb(213,185,26)" fg:x="2668" fg:w="5"/><text x="99.8394%" y="1135.50"></text></g><g><title>httparse::parse_headers_iter_uninit (4 samples, 0.15%)</title><rect x="99.6267%" y="1109" width="0.1493%" height="15" fill="rgb(225,204,8)" fg:x="2669" fg:w="4"/><text x="99.8767%" y="1119.50"></text></g><g><title>httparse::iter::Bytes::advance (2 samples, 0.07%)</title><rect x="99.7014%" y="1093" width="0.0747%" height="15" fill="rgb(254,111,37)" fg:x="2671" fg:w="2"/><text x="99.9514%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.11%)</title><rect x="99.7760%" y="981" width="0.1120%" height="15" fill="rgb(242,35,9)" fg:x="2673" fg:w="3"/><text x="100.0260%" y="991.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (3 samples, 0.11%)</title><rect x="99.7760%" y="965" width="0.1120%" height="15" fill="rgb(232,138,49)" fg:x="2673" fg:w="3"/><text x="100.0260%" y="975.50"></text></g><g><title>&lt;poem::endpoint::endpoint::ToDynEndpoint&lt;E&gt; as poem::endpoint::endpoint::DynEndpoint&gt;::call (1 samples, 0.04%)</title><rect x="99.8880%" y="981" width="0.0373%" height="15" fill="rgb(247,56,4)" fg:x="2676" fg:w="1"/><text x="100.1380%" y="991.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.04%)</title><rect x="99.8880%" y="965" width="0.0373%" height="15" fill="rgb(226,179,17)" fg:x="2676" fg:w="1"/><text x="100.1380%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.04%)</title><rect x="99.8880%" y="949" width="0.0373%" height="15" fill="rgb(216,163,45)" fg:x="2676" fg:w="1"/><text x="100.1380%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="99.8880%" y="933" width="0.0373%" height="15" fill="rgb(211,157,3)" fg:x="2676" fg:w="1"/><text x="100.1380%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="99.8880%" y="917" width="0.0373%" height="15" fill="rgb(234,44,20)" fg:x="2676" fg:w="1"/><text x="100.1380%" y="927.50"></text></g><g><title>all (2,679 samples, 100%)</title><rect x="0.0000%" y="1653" width="100.0000%" height="15" fill="rgb(254,138,23)" fg:x="0" fg:w="2679"/><text x="0.2500%" y="1663.50"></text></g><g><title>tokio-runtime-w (2,592 samples, 96.75%)</title><rect x="3.2475%" y="1637" width="96.7525%" height="15" fill="rgb(206,119,39)" fg:x="87" fg:w="2592"/><text x="3.4975%" y="1647.50">tokio-runtime-w</text></g><g><title>tokio::runtime::task::raw::poll (30 samples, 1.12%)</title><rect x="98.8802%" y="1621" width="1.1198%" height="15" fill="rgb(231,105,52)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1631.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (30 samples, 1.12%)</title><rect x="98.8802%" y="1605" width="1.1198%" height="15" fill="rgb(250,20,5)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1615.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (30 samples, 1.12%)</title><rect x="98.8802%" y="1589" width="1.1198%" height="15" fill="rgb(215,198,30)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1599.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (30 samples, 1.12%)</title><rect x="98.8802%" y="1573" width="1.1198%" height="15" fill="rgb(246,142,8)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1583.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 1.12%)</title><rect x="98.8802%" y="1557" width="1.1198%" height="15" fill="rgb(243,26,38)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1567.50"></text></g><g><title>std::panicking::try (30 samples, 1.12%)</title><rect x="98.8802%" y="1541" width="1.1198%" height="15" fill="rgb(205,133,28)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1551.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 1.12%)</title><rect x="98.8802%" y="1525" width="1.1198%" height="15" fill="rgb(212,34,0)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1535.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30 samples, 1.12%)</title><rect x="98.8802%" y="1509" width="1.1198%" height="15" fill="rgb(251,226,22)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1519.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (30 samples, 1.12%)</title><rect x="98.8802%" y="1493" width="1.1198%" height="15" fill="rgb(252,119,9)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1503.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (30 samples, 1.12%)</title><rect x="98.8802%" y="1477" width="1.1198%" height="15" fill="rgb(213,150,50)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1487.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (30 samples, 1.12%)</title><rect x="98.8802%" y="1461" width="1.1198%" height="15" fill="rgb(212,24,39)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1471.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (30 samples, 1.12%)</title><rect x="98.8802%" y="1445" width="1.1198%" height="15" fill="rgb(213,46,39)" fg:x="2649" fg:w="30"/><text x="99.1302%" y="1455.50"></text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}}::_{{closure}} (29 samples, 1.08%)</title><rect x="98.9175%" y="1429" width="1.0825%" height="15" fill="rgb(239,106,12)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1439.50"></text></g><g><title>poem::server::serve_connection::_{{closure}} (29 samples, 1.08%)</title><rect x="98.9175%" y="1413" width="1.0825%" height="15" fill="rgb(249,229,21)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1423.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (29 samples, 1.08%)</title><rect x="98.9175%" y="1397" width="1.0825%" height="15" fill="rgb(212,158,3)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1407.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}} (29 samples, 1.08%)</title><rect x="98.9175%" y="1381" width="1.0825%" height="15" fill="rgb(253,26,48)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1391.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (29 samples, 1.08%)</title><rect x="98.9175%" y="1365" width="1.0825%" height="15" fill="rgb(238,178,20)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (29 samples, 1.08%)</title><rect x="98.9175%" y="1349" width="1.0825%" height="15" fill="rgb(208,86,15)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1359.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (29 samples, 1.08%)</title><rect x="98.9175%" y="1333" width="1.0825%" height="15" fill="rgb(239,42,53)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1343.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (29 samples, 1.08%)</title><rect x="98.9175%" y="1317" width="1.0825%" height="15" fill="rgb(245,226,8)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1327.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (29 samples, 1.08%)</title><rect x="98.9175%" y="1301" width="1.0825%" height="15" fill="rgb(216,176,32)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1311.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (29 samples, 1.08%)</title><rect x="98.9175%" y="1285" width="1.0825%" height="15" fill="rgb(231,186,21)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1295.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (29 samples, 1.08%)</title><rect x="98.9175%" y="1269" width="1.0825%" height="15" fill="rgb(205,95,49)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1279.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (29 samples, 1.08%)</title><rect x="98.9175%" y="1253" width="1.0825%" height="15" fill="rgb(217,145,8)" fg:x="2650" fg:w="29"/><text x="99.1675%" y="1263.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (6 samples, 0.22%)</title><rect x="99.7760%" y="1237" width="0.2240%" height="15" fill="rgb(239,144,48)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1247.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (6 samples, 0.22%)</title><rect x="99.7760%" y="1221" width="0.2240%" height="15" fill="rgb(214,189,23)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1231.50"></text></g><g><title>poem::server::serve_connection::_{{closure}}::_{{closure}}::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1205" width="0.2240%" height="15" fill="rgb(229,157,17)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1215.50"></text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1189" width="0.2240%" height="15" fill="rgb(230,5,48)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1173" width="0.2240%" height="15" fill="rgb(224,156,48)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1183.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1157" width="0.2240%" height="15" fill="rgb(223,14,29)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.22%)</title><rect x="99.7760%" y="1141" width="0.2240%" height="15" fill="rgb(229,96,36)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1151.50"></text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1125" width="0.2240%" height="15" fill="rgb(231,102,53)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1135.50"></text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1109" width="0.2240%" height="15" fill="rgb(210,77,38)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1093" width="0.2240%" height="15" fill="rgb(235,131,6)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1103.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1077" width="0.2240%" height="15" fill="rgb(252,55,38)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.22%)</title><rect x="99.7760%" y="1061" width="0.2240%" height="15" fill="rgb(246,38,14)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1071.50"></text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1045" width="0.2240%" height="15" fill="rgb(242,27,5)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1029" width="0.2240%" height="15" fill="rgb(228,65,35)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="1013" width="0.2240%" height="15" fill="rgb(245,93,11)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1023.50"></text></g><g><title>&lt;dyn poem::endpoint::endpoint::DynEndpoint+Output = T as poem::endpoint::endpoint::Endpoint&gt;::call::_{{closure}} (6 samples, 0.22%)</title><rect x="99.7760%" y="997" width="0.2240%" height="15" fill="rgb(213,1,31)" fg:x="2673" fg:w="6"/><text x="100.0260%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;poem::response::Response,poem::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="99.9253%" y="981" width="0.0747%" height="15" fill="rgb(237,205,14)" fg:x="2677" fg:w="2"/><text x="100.1753%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;poem::response::Response,poem::error::Error&gt;+core::marker::Send&gt;&gt; (2 samples, 0.07%)</title><rect x="99.9253%" y="965" width="0.0747%" height="15" fill="rgb(232,118,45)" fg:x="2677" fg:w="2"/><text x="100.1753%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="99.9253%" y="949" width="0.0747%" height="15" fill="rgb(218,5,6)" fg:x="2677" fg:w="2"/><text x="100.1753%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.07%)</title><rect x="99.9253%" y="933" width="0.0747%" height="15" fill="rgb(251,87,51)" fg:x="2677" fg:w="2"/><text x="100.1753%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.07%)</title><rect x="99.9253%" y="917" width="0.0747%" height="15" fill="rgb(207,225,20)" fg:x="2677" fg:w="2"/><text x="100.1753%" y="927.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.07%)</title><rect x="99.9253%" y="901" width="0.0747%" height="15" fill="rgb(222,78,54)" fg:x="2677" fg:w="2"/><text x="100.1753%" y="911.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.07%)</title><rect x="99.9253%" y="885" width="0.0747%" height="15" fill="rgb(232,85,16)" fg:x="2677" fg:w="2"/><text x="100.1753%" y="895.50"></text></g><g><title>cfree (2 samples, 0.07%)</title><rect x="99.9253%" y="869" width="0.0747%" height="15" fill="rgb(244,25,33)" fg:x="2677" fg:w="2"/><text x="100.1753%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="99.9627%" y="853" width="0.0373%" height="15" fill="rgb(233,24,36)" fg:x="2678" fg:w="1"/><text x="100.2127%" y="863.50"></text></g></svg></svg>